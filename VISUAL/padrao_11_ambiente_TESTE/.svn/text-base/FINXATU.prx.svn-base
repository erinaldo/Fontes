#INCLUDE "PROTHEUS.CH"
#INCLUDE "FINXATU.CH"

Static lF070CM 
Static lUltiLote
Static lF040ADLE
Static lFinaleg
Static lF040URET
Static lFASLDNAT
Static cTipoCM
Static nTamNatur 
Static __lFivAbati
Static __lFiwAbati
Static __lExistFJV
Static lFWCodFil := FindFunction("FWCodFil")
STATIC lNewIrBx	:= (FindFunction("FCALCIRBX") .AND. FindFunction("FGRVSFQIR"))
Static lFinImp := FindFunction("FRaRtImp")      //Define se ha retencao de impostos PCC/IRPJ no R.A 
Static lIsIssBx := FindFunction("IsIssBx")
Static lIsEmpPub :=  FindFunction("IsEmpPub")
Static dLastPcc  := CTOD("22/06/2015")

// 17/08/2009 - Compilacao para o campo filial de 4 posicoes
// 18/08/2009 - Compilacao para o campo filial de 4 posicoes

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fA070Grv ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±        
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para atualizar a baixa efetuada			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA070Grv(lPadrao) 					                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gen‚rico 									              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA070Grv(lPadrao,lDesconto,lContabiliza,cNsNum,lExterno,dDtCredito,;
						lJuros,cArqEnt,cOcorr,nTxMoeda,lGerChqAdt,aSeqSe5,aHdlPrv,lBloqSa1)
Local nSaldo,nSalvRec
Local cNum,cPrefixo,cParcela
Local lAdiantamento := .f.
Local aBaixas     := {}
Local aTit			:= {}
Local nToler		:= 0
Local nSE1Rec := 0
Local nValClient  := 0
Local nAtraso	:= 0
Local nVlEstOri := 0
Local lf70GrSe1 := Existblock("F70GRSE1")
Local lF200GERA := Existblock("F200GERA")
Local xF200GERA
Local aCamposSE1 := {}
Local nSomaCheq := 0
Local nX := 0
Local nSaldoAtu := 0
Local lBxParc := .F.
Local nValRa := 0
Local lMoedBco	:= SuperGetMv("MV_MOEDBCO",,.F.)
//Local nMoedaBco := 0
Local lLj440Proc 	:= .F. // Se processa rotina do SIGALOJA
Local nTamSeq		:= TamSX3("E5_SEQ")[1]
Local cSequencia 	:= Replicate("0",nTamSeq)
Local lVendedor	:= !Empty(SE1->E1_VEND1) .Or. ;
							!Empty(SE1->E1_VEND2) .Or. ;
							!Empty(SE1->E1_VEND3) .Or. ;
							!Empty(SE1->E1_VEND4) .Or. ;
							!Empty(SE1->E1_VEND5) .Or. ;
							AllTrim(SE1->E1_ORIGEM) $ "FINA280|FINA460"

//Controla o Pis Cofins e Csll na baixa (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default))
Local lPccBxCr		:= If (FindFunction("FPccBxCr"),FPccBxCr(),.F.)
//Controla IRPJ na baixa
Local lIrPjBxCr		:= If (FindFunction("FIrPjBxCr"),FIrPjBxCr(),.F.)
Local nTamHist 		:= TamSX3("E1_HIST")[1] // Tamanho do campo HISTORICO
       
//Controla o tipo original do titulo originador
Local cTipoOr		:= ""
Local lAtuSldNat	:= FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")
Local lF070GerAb	:= EXISTBLOCK("F070GerAb")
Local lFinSalTit	:= ExistBlock("FinSalTit")
Local lF070GrvHis	:= ExistBlock("F070GrvHis")
Local lFin70BxIr	:= ExistBlock("Fin70BxIr")
Local lF070IRAB	:= ExistBlock("FIN70IRAB")
Local nOpcx := 0
Local nValRealiz 	:= 0

//Controle de abatimento
Local lTitpaiSE1 := (SE1->(FieldPos("E1_TITPAI")) > 0)
Local bWhile := {|| !EOF() .And. E1_FILIAL==xFilial("SE1") .And. E1_CLIENTE = cCliente	.And. E1_LOJA = cLoja .And. E1_PREFIXO=cPrefixo .And. E1_NUM == cNum .And. E1_PARCELA==cParcela }
Local nOrdTitPai:=0
Local lRaRtImp  := lFinImp .And.FRaRtImp()
Local lBQ10925	:= SuperGetMV("MV_BQ10925",,"2") == "1" .And. !lRaRtImp
Local lBruto	:= SuperGetMV("MV_BQ10925",,"2") == "1"

//.T. - Gera o titulo de ISS (se houver) na filial de destino juntamente com o titulo NF, baixando o titulo ISS na origem
//.F. - Nã gera o titulo de ISS na filial de destino, permanecendo o titulo ISS na origem em aberto. 
Local lTrfISSf  := GetNewPar("MV_TRFISSF",.T.)
Local cFilOrgTr := ""//Filial de origem do documento de ISS, processo de transferência
Local nForIss   := 1//Auxiliar para o For de busca do ISS, processo de transferência
Local nPosBx	:= 0
Local aMotBx	:= ReadMotBx()
Local lIntegTIN		:= FindFunction( "GETROTINTEG" ) .and. FindFunction("FwHasEAI")
Local lF070			:= IsInCallStack("FINA070")
Local lPropBx  := SuperGetMv("MV_PROPBX",.F.,"2") == "1"
Local aArea			:= {}	
Local aImp			:= {}
Local lJurMulDes:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local nTotJur := 0

Private lRetParc	:= .T.
Private nValToler	:=0
Private lMsErroAuto := .F. 
If Type("cFilAbat") == "U"
	Private cFilAbat := cFilAnt
EndIf 
If Type("nTotAbImp") == "U"
	Private nTotAbImp := 0
EndIf

If Type("lVlrMaior") == "U"
	Private lVlrMaior := .F.
EndIf

If Type("lVlrMaior") == "U"
	Private nVlrMaior := 0
EndIf
//Controle Numero Borderô - FINA200
If FunName() $ "FINA200" .Or. ( FunName() $ "FINA740" .And. IsInCallStack("FINA200") )
	Private cNumBor 	:= SE1->E1_NUMBOR
EndIf

// Zerar variaveis para contabilizar os impostos da lei 10925.
VALOR5 := 0
VALOR6 := 0
VALOR7 := 0            

PIS		:=0
COFINS	:=0
CSLL	:=0
IRRF	:=0


DEFAULT nTxMoeda := 0
DEFAULT lGerChqAdt := .F. // Gera cheque para Adiant ? Pergunta na baixa manual.
Default lBloqSa1 := .T.

If Funname() == "FINA070" .OR. Funname() == "FINA740"
	nMoedaBco := If(Type("nMoedaBCO") != "N", 1, nMoedaBco)
Else
	nMoedaBco := 1	
Endif

lDesconto	:= Iif(lDesconto=Nil,Iif(mv_par03==1,.T.,.F.),lDesconto)
lContabiliza:= Iif(lContabiliza=Nil,Iif(mv_par04==1,.T.,.F.),lContabiliza)
lJuros		:= Iif(lJuros == NIL, .F., lJuros )
cNsNum		:= Iif(cNsNum==NIL," ",cNsNum)
cArqEnt     := Iif(cArqEnt==Nil," ",cArqEnt)		// Oriundo do Fina200 (Arquivo Cnab)
nOtrGa      := If(Type("nOtrGa") != "N",0,nOtrGa)
nDifCambio  := IF (Type("nDifCambio") != "N",0,nDifCambio)
nAcresc     := If(Type("nAcresc") != "N",0,nAcresc)
nAcrescf    := If(Type("nAcrescf") != "N",nAcresc,nAcrescf)
nDecresc    := If(Type("nDecresc") != "N",0,nDecresc) 
nPis		:= If(Type("nPis") != "N",0,nPis) 
nCofins	    := If(Type("nCofins") != "N",0,nCofins)
nCsll	   	:= If(Type("nCsll") != "N",0,nCsll) 
nIrrf	   	:= If(Type("nIrrf") != "N",0,nIrrf) 
cOcorr      := Iif(cOcorr==Nil,"  ",cOcorr)
cModSpb		:= If (Type("cModSpb") != "C","1",cModSpb)     

If Funname() =="FINA630".and. SE1->E1_TIPO $ MVRECANT
		cPortado    := SE1->E1_PORTADO
		cBanco      := SE1->E1_PORTADO
		cAgencia    := SE1->E1_AGEDEP
		cConta      := SE1->E1_CONTA
		lGerChqAdt		:= .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Este parƒmetro informa se a fun‡„o foi chamada pelo pr¢prio Fina070	³
//³ou por outro programa externo, tal como o Fina200							³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ValType( lExterno ) # "L"
	lExterno := .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza a baixa do titulo											  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lExterno
	nValPadrao := nValRec-(nJuros+Iif(SE1->E1_MOEDA<=1,nCm,0)+nMulta-nDescont-nTotAbat+nAcresc-nDecresc-If(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0))
	nValPadrao := Round(NoRound(xMoeda(nValPadrao,1,SE1->E1_MOEDA,dBaixa,3,,SE1->E1_TXMOEDA),3),2)
	If nValPadrao < SE1->E1_SALDO
		nValpadrao -= nTotAbat
	Endif
Else
	If lRaRtImp  
		If lJurMulDes .and. nValRec < nAcresc 
			nValPadrao := nValRec
		Else
			nValPadrao := nValRec-(nJuros+Iif(SE1->E1_MOEDA<=1,nCm,0)+nMulta-nDescont-nOtrga-nTotAbat+nAcresc-nDecresc-If(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0))
		EndIf
		If nValPadrao < SE1->E1_SALDO
			nValpadrao -= nTotAbat
		Endif
	Else
		//If !FwIsInCallStack("FA450CMP")
			nValPadrao := nValRec-(nJuros+Iif(SE1->E1_MOEDA<=1,nCm,0)+nMulta-nDescont-nOtrga+nAcresc-nDecresc-If(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0))
		//Else
		//	nValPadrao := nValRec	
		//EndIf
	EndIf
Endif

If lFinSalTit
	nValPadrao += ExecBlock("FinSalTit")
Endif

nSalTit := Round(NoRound(xMoeda(SE1->E1_SALDO,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),3),2) //Converte o saldo do titulo a moeda 1.

If nSalTit == 0 .or. (lExterno .and. nSalTit > 0 .and. ( nSalTit < nValPadrao .Or. lVlrMaior) )
	//Caso o Cliente pague o titulo mais de uma vez e o titulo ja se encontrava 
	//baixado, gero um RA para informar o credito a maior em minha conta bancaria
	//e ao mesmo tempo disponibilizo o credito ao clientepara posterior devolucao ou
	//compensacao. Este processo somente sera "startado" se for num retorno 
	//CNAB (lExterno = .T.) e se for parametrizado para tal (MV_REC2TIT = "1")
	If SuperGetMv("MV_REC2TIT",,"2") == "1" .and. lExterno  
		//Gero RA no SE1 e seu movimento no SE5
		nSaldoAtu := nSalTit
		nValRa	 := IIF(lVlrMaior, nVlrMaior, nValRec)
		lBxParc	 := lVlrMaior
		//Verifico se o titulo sofreu apenas uma baixa parcial antes da recepcao do CNAB
		//Neste caso o valor da devolucao sera o valor do principal pago a maior
        If nSalTit > 0 .and. nSalTit < nValPadrao
			nValRec		:= nSaldoAtu+(nJuros+Iif(SE1->E1_MOEDA<=1,nCm,0)+nMulta-nDescont-nTotAbat+nAcresc-nDecresc)
			nValRa		:= nValPadrao - nSalTit
			nValPadrao	:= nValRec-(nJuros+Iif(SE1->E1_MOEDA<=1,nCm,0)+nMulta-nDescont-nTotAbat+nAcresc-nDecresc)
			lBxParc		:= .T.
		Endif
		For nX := 1 To fCount() 
			IF Alltrim(FieldName(nX)) $ "E1_PREFIXO#E1_NUM#E1_NATUREZ#E1_CLIENTE#E1_LOJA#E1_NOMCLI#E1_FILORIG#E1_NUMRA"
				Aadd(aCamposSE1, {FieldName(nX), FieldGet(nX)})
			Endif
		Next
	    nRecNow := SE1->(RECNO())
		nOrdNow := SE1->(IndexOrd())
		//Verifico Parcela	
		cParcRA := GetMv("MV_1DUP")
		SE1->(dbSetOrder(1))
		While SE1->(dbSeek(xFilial("SE1")+SE1->(E1_PREFIXO+E1_NUM)+cParcRA+Substr(MVRECANT,1,3)))
			cParcRa := Soma1(cParcRa)
		Enddo
		
		aTit := {}
		For nX := 1 To Len(aCamposSE1)
			If !Empty(aCamposSE1[nX][2])
				AADD(aTit , {aCamposSE1[nX][1] , aCamposSE1[nX][2] , NIL})
			Endif	
		Next
		AADD(aTit , {"E1_FILIAL"		, xFilial("SE1")							, NIL})						
		AADD(aTit , {"E1_PARCELA"	, cParcRa									, NIL})
		AADD(aTit , {"E1_TIPO"   	, Substr(MVRECANT,1,3)					, NIL})
		AADD(aTit , {"E1_PORTADO"   , cBanco									, NIL})
		AADD(aTit , {"E1_AGEDEP"    , cAgencia									, NIL})
		AADD(aTit , {"E1_CONTA"     , cConta									, NIL})
		AADD(aTit , {"E1_EMISSAO"	, dDataBase								, NIL})
		AADD(aTit , {"E1_EMIS1"		, dDataBase								, NIL})
		AADD(aTit , {"E1_VENCTO" 	, dDataBase								, NIL})
		AADD(aTit , {"E1_VENCREA"	, dDataBase								, NIL})
		AADD(aTit , {"E1_VALOR"  	, nValRa									, NIL})
		AADD(aTit , {"E1_VLCRUZ" 	, nValRa									, NIL})
		AADD(aTit , {"E1_SALDO"  	, nValRa									, NIL})
		AADD(aTit , {"E1_MOEDA"  	, 1											, NIL})
		AADD(aTit , {"E1_SITUACA"	, "0"										, NIL})
		AADD(aTit , {"E1_STATUS" 	, "A"										, NIL})
		AADD(aTit , {"E1_ORIGEM" 	, "FINA200"								, NIL})
		AADD(aTit , {"E1_FLUXO"  	, "S"										, NIL})
		AADD(aTit , {"E1_MULTNAT"  	, "2"										, NIL})
		AADD(aTit , {"E1_PROJPMS" 	, "2"										, NIL})
		If SpbInUse()
			AADD(aTit , {"E1_MODSPB" 	, "1"									, NIL})
		Endif

		//³Ponto de Entrada para tratamento de Historico no titulo de RA³
		If ExistBlock("F070HIST")
			AADD(aTit , {"E1_HIST" , PadR(ExecBlock("F070HIST",.F.,.F.,{SE1->(E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO),nRecNow}),nTamHist)  , NIL })		
		Else
			AADD(aTit , {"E1_HIST" , STR0028 , NIL }) //"Adiant.Bx.Duplicada-CNAB" 
		Endif
		
		If lF200GERA
			xF200GERA := ExecBlock("F200GERA",.F.,.F.,{nRecNow,aTit})
			If ValType(xF200GERA) == "A"
				aTit := aClone(xF200GERA)
			EndIf
		EndIf
		
		// Inclusão RA
		MSExecAuto({|x, y| FINA040(x, y)}, aTit, 3)
		
		If lMsErroAuto
		    MostraErro()
		Endif
		
		If ExistTemplate("GEMSE1Grv")
			ExecTemplate("GEMSE1Grv",.F.,.F.)
		EndIf
		
		If ExistTemplate("GEMSE5Grv")
			ExecTemplate("GEMSE5Grv",.F.,.F.)
		EndIf

		dbSelectArea("SE1")
		dbSetOrder(nOrdNow)
		dbGoto(nRecNow)
		If !lBxParc
			Return .f.
		Endif
	Else
		Return .f.
	Endif
Endif

If ExistBlock("FINAJURO")
	Execblock("FINAJURO",.F.,.F.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se saldo estava em outra moeda, caso estiver, converte valor ³
//³recebido pela taxa diaria da moeda												 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SE1->E1_MOEDA > 1 .Or. (cPaisLoc<>"BRA" .And. nMoedaBco > 1) .Or. (lMoedBco .And. SE1->E1_MOEDA != nMoedaBco)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se Taxa Moeda ‚ contratada                             ³
	//³Permite diferenca menor que 0.01 na compara‡„o...               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc <> "BRA"
		nCalc := nValEstrang+(nDescont-nMulta-nJuros-nAcresc+nDecresc+nOtrga)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Nao converte os valores no caso de compensacao entre carteiras ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(SE1->E1_IDENTEE)
			nCalc := nValEstrang+(nDescont-nMulta-nJuros-nAcresc+nDecresc)
		Else       
			// Retirado Round() para evitar diferenca de 0.01 em baixa total no caso de correcao monetaria negativa. 
			nCalc := nValestrang+xMoeda(nDescont-nMulta-nJuros-nAcresc+nDecresc+If(lPccBxCr,nPis+nCofins+nCsll,0)+Iif(lIrPjBxCr,nIrrf,0),nMoedaBco,SE1->E1_MOEDA,dBaixa,4,,nTxMoeda)
		EndIf
	Endif	
	If (SE1->E1_SALDO+SE1->E1_ACRESC-SE1->E1_DECRESC) - nCalc >= 0.01
		nSaldo := SE1->E1_SALDO-nCalc
	Else
		nSaldo := 0
	Endif
Else
	If nValPadrao < 0	
		nSaldo := SE1->E1_SALDO
	Else
		nSaldo := SE1->E1_SALDO - nValPadrao
	EndIf
		
	If Round(NoRound(nSaldo,3),2) <= 0.00999 .and. ;
		IIf (lExterno, ( IIf(GetMv("MV_ZERASE1") == "S",.T.,.F.) ),.T.)
		nSaldo := 0
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso o saldo restante  seja igual ao valor dos abatimentos,  ³
//³ considerar a baixa total do titulo.                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Str(nSaldo,16,2)=Str(nTotAbat,16,2)
	nSaldo := 0
Endif

//****Tratamento para integração do RM Classis x Protheus****
//caso a baixa seja do tipo "BOL" (bolsa de estudos) e o valor recebido seja 0
//gravo o saldo do título zerado para efetivar a baixa integral do mesmo
If FwHasEai("FINA070") .And. (AllTrim(SE1->E1_ORIGEM) $ "L|S|T" .Or. SE1->E1_IDLAN > 0)
	nPosBx := Ascan(aMotBx, {|x| AllTrim(SubStr(x,7,10)) == AllTrim(Upper(cMotBx))})
	If nPosBx > 0 
		If SubStr(aMotBx[nPosBx],1,3) == "BOL" //Baixa do tipo BOL - Bolsa de estudos
			//Zero o saldo caso a baixa seja do tipo BOL
			nSaldo := 0
		EndIf
	EndIf
EndIf

RecLock("SE1")
nSE1Rec := Recno()
Replace E1_BAIXA	  With If(E1_BAIXA <= dBaixa, dBaixa, E1_BAIXA)
Replace E1_LOTE	  With cLoteFin
Replace E1_MOVIMEN  With dBaixa
Replace E1_DESCONT  With nDescont + nDecresc
Replace E1_MULTA	  With nMulta
Replace E1_JUROS	  With nJuros + nAcrescf
If cPaisLoc == "BRA" .and. lPccBxCr 
	If !FwIsInCallStack("FA450CMP")
		nValrec += nPis + nCofins + nCsll
	EndIf  
	PIS	:=nPis
	COFINS :=nCofins
	CSLL	:= nCsll
EndIf
If cPaisLoc == "BRA" .and. lIrPjBxCr 
	nValrec += nIrrf  
	IRRF	:= nIrrf
EndIf

If lFinSalTit .and. FUNNAME()=="FINA080"
	Replace E1_VALLIQ   With nValrec + ExecBlock("FinSalTit", .F.,.F., 2)
Else
	Replace E1_VALLIQ   With nValrec
	If  (lPropBx .and. lPccBxCr) //.Or.  (lPccBxCr .AND. FwIsInCallStack("FA450CMP"))
		Replace E1_VALLIQ   With (E1_VALLIQ - (nPis + nCofins+ nCsll))
	EndIf
	If lPropBx .and. lIrPjBxCr
		Replace E1_VALLIQ   With (E1_VALLIQ - (nIrrf))
	EndIf
Endif

Replace E1_OK		  With Iif(E1_OK == cMarca,"xx",cMarca)
Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(nSaldo >= 0.01,"A","B"),"R")
If cPaisLoc == "CHI"
	IIf (SE1->(FieldPos("E1_OTRGA"))  > 0,SE1->E1_OTRGA  := nOtrga,.T.)
	IIf (SE1->(FieldPos("E1_CAMBIO")) > 0,SE1->E1_CAMBIO := SE1->E1_CAMBIO + nDifCambio,.T.)
 //	IIf (SE1->(FieldPos("E1_TXMOEDA"))  > 0 .And. Type("aTxMoedas")#"U",SE1->E1_TXMOEDA  := aTxMoedas[SE1->E1_MOEDA][2],.T.)
Else
	Replace E1_CORREC   With nCm
EndIf

If ExistTemplate("GEMSE1Grv")
	ExecTemplate("GEMSE1Grv",.F.,.F.)
EndIf

SE1->(MsUnlock())

If lAtuSldNat .And. lF070 .And. !lF070Auto
	// Nao precisa atualizar a baixa dos abatimentos, pois o valor recebido jah eh liquido dos abatimentos

	If nSaldo = 0
		nValpadrao += nTotAbat
	Endif
	
	If lBQ10925
		nValRealiz := nValRec - If(lPccBxCr,nPis+nCofins+nCsll,0) - Iif(lIrPjBxCr,nIrrf,0)
	Else
		nValRealiz := nValRec
	EndIf
	
	AtuSldNat(SE1->E1_NATUREZ, dBaixa, SE1->E1_MOEDA, "3", "R", nValRealiz, nValEstrang, If(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG,"-","+"),,FunName(),"SE1",SE1->(Recno()))	
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava um registro para cada Movimenta‡„o Banc ria 			  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG
	lAdiantamento := .t.
EndIf
nDescont := nDescont + nDecresc
nTotJur :=  nJuros
nJuros   := nJuros +nAcrescf

// Controla saldo na compensacao do cheque
If GetMv("MV_SLDBXCR") == "C"
	// Soma o total recebido em cheque
	nSomaCheq := SomaCheqCr(.F.,SE1->E1_PREFIXO, SE1->E1_NUM, SE1->E1_PARCELA, SE1->E1_TIPO, SE1->E1_CLIENTE)
Endif	
FA070Mov( lPadrao,lContabiliza,lAdiantamento,dDtCredito,@aBaixas,cArqEnt,cOcorr,nTxMoeda,nSomaCheq,aSeqSe5,@cSequencia,aHdlPrv)
If lAtuSldNat .And. lF070 .And. lF070Auto .And. lIntegTIN .And. !(SE5->E5_MOTBX == 'TIN')
	
	If nSaldo = 0
		nValpadrao += nTotAbat
	Endif
	
	nValRealiz := nValRec - If(lPccBxCr,nPis+nCofins+nCsll,0) - Iif(lIrPjBxCr,nIrrf,0)
	
	AtuSldNat(SE1->E1_NATUREZ, dBaixa, SE1->E1_MOEDA, "3", "R", nValRealiz, nValEstrang, If(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG,"-","+"),,FunName(),"SE1",SE1->(Recno()))	
Endif

dbSelectArea("SE1")
nSalvRec	:= SE1->(RecNo())
cNum	  	:= SE1->E1_NUM
cPrefixo	:= SE1->E1_PREFIXO
cParcela	:= SE1->E1_PARCELA
cCliente	:= SE1->E1_CLIENTE
cLoja   	:= SE1->E1_LOJA
cTipoOr		:= SE1->E1_TIPO
cTipo   	:= ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PTO DE ENTRADA para tratamento das datas de vencto do ISS	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF ExistBlock("F070DISS")
	ExecBlock("F070DISS",.f.,.f.)
Endif

If lPropBx .and. FindFunction("FpropCR")
	aArea	:= GetArea()
	dbSelectArea("__SE1") 
	__SE1->(dbSetOrder(1))
	__SE1->(dbSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+cTipoOr))
	aImp := FpropCR(__SE1->E1_VALOR, __SE1->E1_PIS, __SE1->E1_COFINS,__SE1->E1_CSLL, __SE1->E1_IRRF,__SE1->E1_INSS,__SE1->E1_ISS, (nValRec + nTotAbImp))
	RestArea(Aarea)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Baixar titulos de abatimento se for baixa total				  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF nSaldo == 0 .or. (lPropBx) 
	If Select("__SE1") == 0
		SumAbatRec("","","",1,"")
	Endif	
	dbSelectArea("__SE1") 
	__SE1->(dbSetOrder(2))
	__SE1->(dbSeek(xFilial("SE1")+cCliente+cLoja+cPrefixo+cNum+cParcela))
		If lTitpaiSE1     
	 		If FindFunction("OrdTitpai") .and. (nOrdTitPai:= OrdTitpai()) > 0
				__SE1-> (DbSetOrder(nOrdTitPai))
				If	DbSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+cTipoOr+cCliente+cLoja)    
					bWhile := {|| !Eof() .And. Alltrim(XFILIAL("SE1")+E1_TITPAI) == Alltrim(xFilial("SE1")+cPrefixo+cNum+cParcela+cTipoOr+cCliente+cLoja) }
				Else
					__SE1->(dbSetOrder(2))
	  				__SE1->(dbSeek(xFilial("SE1")+cCliente+cLoja+cPrefixo+cNum+cParcela))
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verificações sobre a transferência de documento com o ISS na origem ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cFilOrgTr := FilISSTran() 
				If !Empty( cFilOrgTr )
					nForIss := 2// -Somente para documentos que foram transferidos deixando o ISS na origem
				EndIf
			Endif
		Endif

	For nX := 1 To nForIss

		If nX == 2
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Alterações para efetuar a busca do ISS na filial de origem ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lTitpaiSE1 .And. nOrdTitPai == 0
				__SE1->( dbSetOrder( 2 ) )
				__SE1->(dbSeek(cFilOrgTr+cCliente+cLoja+cPrefixo+cNum+cParcela))
				bWhile := {|| !EOF() .And. E1_FILIAL==cFilOrgTr .And. E1_CLIENTE = cCliente	.And. E1_LOJA = cLoja .And. E1_PREFIXO=cPrefixo .And. E1_NUM == cNum .And. E1_PARCELA==cParcela }
			Else
				__SE1->(DbSeek(cFilOrgTr+cPrefixo+cNum+cParcela+cTipoOr+cCliente+cLoja))
				bWhile := {|| !Eof() .And. Alltrim(cFilOrgTr+E1_TITPAI) == Alltrim(cFilOrgTr+cPrefixo+cNum+cParcela+cTipoOr+cCliente+cLoja) }
			EndIf
		EndIf

		While Eval(bWhile)   
		
			If lTitpaiSE1
				If !Empty(E1_TITPAI) .and.  (Alltrim(E1_TITPAI)!=Alltrim(cPrefixo+cNum+cParcela+cTipoOr+cCliente+cLoja)) 
					DbSkip()
					Loop
				EndIf
				If E1_TIPO $ "IS-/ISS" .And. IIF(IsInCallStack("FINA630"), !lTrfISSf, .F.)
					DbSkip()
					Loop
				EndIf
			EndIf

			//Trabalha somente com o ISS da filial de origem, somente em casos de documento transferido
			If nX == 2 .And. E1_TIPO <> MVISABT
				DbSkip()
				Loop
			EndIf
			  
			IF E1_TIPO $ MVABATIM+"/"+MVIRABT+"/"+MVINABT+"/"+MVPIABT+"/"+;
				MVCFABT+"/"+MVCSABT+"/"+MVFUABT //adicionado a variável MVFUABT, pois a variável MVABATIM não está retornando FU-
				RecLock("__SE1")
				If !lPropBx 
					Replace E1_SALDO	With 0
					Replace E1_STATUS  With "B"
				Else
					Do Case
						Case E1_TIPO $ MVPIABT .and. !lPccBxCr
							Replace E1_SALDO	With (E1_SALDO - aImp[1][1])
						Case E1_TIPO $ MVCFABT .and. !lPccBxCr
							Replace E1_SALDO	With (E1_SALDO - aImp[1][2])
						Case E1_TIPO $ MVCSABT .and. !lPccBxCr
							Replace E1_SALDO	With (E1_SALDO - aImp[1][3])
						Case E1_TIPO $ MVIRABT .and. !lIrPjBxCr
							Replace E1_SALDO	With (E1_SALDO - aImp[1][4])
						Case E1_TIPO $ MVINABT 				
							Replace E1_SALDO	With (E1_SALDO - aImp[1][5])
						Case E1_TIPO $ MVISABT   				
							Replace E1_SALDO	With (E1_SALDO - aImp[1][6])	
					EndCase
					If E1_SALDO == 0
						Replace E1_STATUS  With "B"
					Else
						Replace E1_STATUS  With "A"
					EndIf	
				EndIf
				Replace E1_BAIXA	With dBaixa
				Replace E1_LOTE	With cLoteFin
				Replace E1_MOVIMEN With dBaixa
				Replace E1_SDACRES With 0
				Replace E1_SDDECRE With 0
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Gravar o titulo que baixou o AB- para evitar estornos de ³
				//³abatimentos baixados por outras rotinas. Evita que um AB-³
				//³baixado pelo FINA070 / 110 seja estornado indevidamente  ³
				//³pelo FINA330, que gera erro na composicao do saldo do    ³
				//³titulo principal com abatimento.                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SE1->(FieldPos("E1_TITPAI")) # 0
					If Empty(SE1->E1_TITPAI) .OR. (!MV_CRNEG $ SE1->E1_TITPAI .AND. !MVRECANT $ SE1->E1_TITPAI)
						Replace E1_TITPAI	With (cPrefixo + cNum + cParcela + cTipoOr + cCliente + cLoja)
					Endif
				Endif
				
				If lF070GrvHis .and. E1_TIPO $ MVIRABT
					ExecBlock("F070GrvHis",.F.,.F.)
				ENDIF
	
				If lAtuSldNat
					AtuSldNat(E1_NATUREZ, E1_BAIXA, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "-",,FunName(),"SE1",SE1->(Recno()),nOpcx)
				Endif			
	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Carrega variavies para contabilizacao dos    ³
				//³ abatimentos (impostos da lei 10925).         ³			
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If E1_TIPO == MVPIABT
					VALOR5 := E1_VALOR			
				ElseIf E1_TIPO == MVCFABT
					VALOR6 := E1_VALOR
				ElseIf E1_TIPO == MVCSABT
					VALOR7 := E1_VALOR						
				Endif	
				MsUnlock()		
			EndIF
			dbSkip()
		Enddo
	Next nX
	If lPropBx
		aArea	:= GetArea()
		dbSelectArea("SE5")
		IF SE5->E5_TIPODOC $ "VL.BA" .AND. SE5->E5_DATA == dBaixa 
			Reclock("SE5",.F.)
			If !lPccBxCr
			SE5->E5_VRETPIS	:= aImp[1][1]
			SE5->E5_VRETCOF	:= aImp[1][2]
			SE5->E5_VRETCSL	:= aImp[1][3]
			EndIf
			If !lIrPjBxCr
			SE5->E5_VRETIRF	:= aImp[1][4]
			EndIf
			SE5->E5_VRETINS	:= aImp[1][5]
			SE5->E5_VRETISS	:= aImp[1][6]
			MsUnlock()
		EndIf
		RestArea(aArea)
	EndIf
		
	If lF070GerAb
		IF SE5->E5_TIPODOC $ "VL.BA" .AND. SE5->E5_DATA == dBaixa .and. FUNNAME()=="FINA080"
			dbSelectArea("SE5")
			Reclock("SE5",.F.)
				E5_TESTE := SE1->E1_PARCELA + SE5->E5_SEQ
				E5_VRETIRF := u_F70ALTABAT()
				E5_BASEIRF := SE5->E5_VALOR  + nTotAbImp+Iif(lF070IRAB, Execblock("FIN70IRAB",.F.,.F.),0)
			MsUnlock()
			dbSelectArea("SE1")
		ENDIF
	Endif
	__SE1->(dbSetOrder(1))
ElseIf lF070GerAb

	nSaldo -= EXECBLOCK("F070GerAb",.F.,.F., {cCliente+cLoja+cPrefixo+cNum+cParcela, dBaixa , cLoteFin , cTipoOr, } )
	
Endif
dbSelectArea("SE1")
dbGoto(nSE1Rec)

IF nSaldo == 0
	If lFin70BxIr
		Execblock("Fin70BxIr", .F.,.F.)
	Endif' 
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona no registro de natureza									  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SED")
dbSeek(xFilial("SED")+SE1->E1_NATUREZ)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o Cadastro de Clientes 									  ³
//³ A pesquisa pelo SL1 e' do Loja no caso de adm <> "R$/CH"     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SA1")     
DbSetOrder(1)
If dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA)
	nValClient:=nValPadrao
	IF SE1->E1_MOEDA > 1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Caso a Moeda seja > 1, converte o valor para atualiza‡„o do  ³
		//³ cadastro do Cliente a partir do valor da moeda estrangeira   ³
		//³ convertida p/ moeda 1 na Data de Emiss„o do t¡tulo, pois pode³
		//³ ser efetuada uma baixa informando taxa contratada.           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nVlEstOri := nValEstrang-(Round(NoRound(xMoeda(nJuros+nMulta-nDescont-nOtrga,nMoedaBco,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),3),2))
		nValClient:= Round(NoRound(xMoeda(nVlEstOri,SE1->E1_MOEDA,nMoedaBco,SE1->E1_EMISSAO,3,nTxMoeda),3),2)
	Endif
	If GetMv("MV_SLDBXCR") == "C"
		nValClient := nValClient-nSomaCheq
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Para o SIGALOJA, executa a funcao de comissao por ³
	//³baixa chamada Lj440ProcB (LOJA440)                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nModulo == 12 .Or. nModulo == 72 // SIGALOJA //SIGAPHOTO
		If SuperGetMV("MV_TPCOMLJ",,"B") == "O" .AND. ComisBx( TrazCodMot(cMotBx) ) .AND. SE1->E1_COMIS1 > 0
			SE1->(lj440ProcB( Nil , Nil , .T. ))
			lLj440Proc := .T.
		EndIf
	EndIf
	If lAdiantamento
		AtuSalDup("+",nValClient,nMoedaBco,SE1->E1_TIPO,,SE1->E1_EMISSAO,,lBloqSa1)
		If GETMV("MV_TPCOMIS") == "O"  .and. ComisBx( TrazCodMot(cMotBx) ) .AND. !lLj440Proc .AND. lVendedor
			Fa440CalcB(aBaixas,lJuros,lDesconto,"FINA070","-",,,.T.,nSE1Rec)
		Endif
	ElseIf FunName() <> "FINA074" 
		AtuSalDup("-",nValClient,1,SE1->E1_TIPO,nTxMoeda,SE1->E1_EMISSAO,nCm,lBloqSa1)	
		If lBloqSa1	
	    	RecLock("SA1")
			Replace A1_NROPAG With A1_NROPAG+1  //Numero de Duplicatas
		
			nAtraso:=dBaixa-SE1->E1_VENCTO
			If nAtraso > 1
				IF Dow(SE1->E1_VENCTO) == 1 .Or. Dow(SE1->E1_VENCTO) == 7
					IF Dow(dBaixa) == 2 .and. nAtraso <= 2
						nAtraso := 0
					EndIF		
				EndIF 
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza atraso medio SA1->A1_ATR                            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If 	SE1->E1_VENCREA < dBaixa .AND. SA1->A1_ATR <> 0
			 		If SE1->E1_SALDO <> SE1->E1_VALOR
			   			SA1->A1_ATR := SA1->A1_ATR - nValRec 
			   		ElseIf SA1->A1_ATR := SA1->A1_ATR + SE1->E1_SALDO
			   			SA1->A1_ATR := SA1->A1_ATR - nValRec
			   		EndIf
			  	EndIf
			  	
			  	If SE1->E1_VENCREA < dBaixa .AND. SA1->A1_ATR == 0
			   		SA1->A1_ATR := SA1->A1_ATR + SE1->E1_SALDO
			   		SA1->A1_ATR := SA1->A1_ATR - nValRec
			 	EndIf
				nAtraso:=IIF(nAtraso<0,0,nAtraso)
				If SA1->A1_MATR < nAtraso
					Replace A1_MATR With nAtraso
				EndIf
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza Atraso M‚dio.  Revisao em 07/12/95					     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (SE1->E1_BAIXA - SE1->E1_VENCREA) > 0
				SA1->A1_PAGATR := A1_PAGATR+SE1->E1_VALLIQ   // Pagamentos Atrasados
			Endif
		
			SA1->A1_METR	 :=	(A1_METR * (A1_NROPAG-1) + (SE1->E1_BAIXA - SE1->E1_VENCREA)) / (A1_NROPAG)
			
			SA1->(MsUnlock())	// Destrava SA1 apos alteracoes...
		EndIf
		
		If GETMV("MV_TPCOMIS") == "O"  .and. ComisBx( TrazCodMot(cMotBx) ) .AND. !lLj440Proc .AND. lVendedor
			Fa440CalcB(aBaixas,lJuros,lDesconto,Iif(!empty(SE1->E1_NUMLIQ),,"FINA070"),,,,.T.,nSE1Rec)
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ PONTO DE ENTRADA 									  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("SE3FI070")
			ExecBlock('SE3FI070',.f.,.F.)
		Endif
		
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Complementa grava‡Æo da baixa tit. principal  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE1")
dbGoto(nSE1Rec)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA 									  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("SE3F070")
	ExecBlock('SE3F070',.f.,.F.)
Endif

RecLock("SE1")
Replace E1_SALDO	  With nSaldo

If nSaldo > 0 .And. nAcrescF > 0
	If nValRec < ((nTotJur+nAcrescF+nMulta)-nDescont)		
		Replace E1_SDACRES  With nAcrescF - (nValRec - ((nTotJur+nMulta)-nDescont))
	Else
		Replace E1_SDACRES  With 0			
	EndIf  	
Else
	Replace E1_SDACRES  With 0	
EndIf

Replace E1_SDDECRE  With 0
Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(E1_SALDO >= 0.01,"A","B"),"R")

nToler := GetMv("MV_TOLERPG")
If nToler > 0 .And. nSaldo > 0
	If nSaldo <= nToler
		Replace E1_DESCONT	With E1_DESCONT+nSaldo
		Replace E1_SALDO		With 0
		Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(E1_SALDO >= 0.01,"A","B"),"R")
		nDescont := E1_DESCONT
	EndIf
EndIf

If nToler > 0 .and. nSaldo < 0
	Replace E1_SALDO		With E1_SALDO+Abs(nSaldo)
	Replace E1_JUROS		With E1_JUROS+Abs(nSaldo)
	Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(E1_SALDO >= 0.01,"A","B"),"R")
	nValToler := Abs(nSaldo)
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se saldo for menor que zero, for‡a o seu zeramento pois ocorre de o u-³
//³suario realmente receber o valor em real a maior que o saldo em dolar ³
//³gerando uma cota‡„o a maior e consequente saldo negativo, indevido    ³
//³SOMENTE PARA BAIXA MANUAL.                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SE1->E1_SALDO < 0 .and. !lExterno 		// lExterno == .T. == CNAB
	Replace E1_SALDO With 0
	Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(E1_SALDO >= 0.01,"A","B"),"R")
Endif	

//Se impostos na emissão, se não for a ultima baixa e se esta calculando os impostos proporcionalmente na baixa. 
If lPropBx .and. ((!lPccBxCr .and. SE1->E1_PIS > 0) .or. (SE1->E1_IRRF > 0 .AND. !lIrPjBxCr) .OR. (SE1->E1_INSS > 0) .OR. (SE1->E1_ISS > 0)) .and. SE1->E1_SALDO > 0 
	Replace E1_SALDO with (nSaldo - (aImp[1][1] + aImp[1][2] + aImp[1][3] + aImp[1][4] + aImp[1][5] + aImp[1][6]))
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava "Nosso Numero" apenas se o campo for vazio e a variavel³
//³ possuir conte£do. A variavel  "cNsNum" vem preenchida somente³
//³ quando esta fun‡„o fa070grv for chamada pelo programa FINA200³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(cNsNum) .and. Empty(SE1->E1_NUMBCO)
	SE1->E1_NUMBCO := cNsNum
Endif
                       
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Executa funcao do PLS para gerar juros para      ³
//³descontar no mes seguinte                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Substr(SE1->E1_ORIGEM,1,3) == "PLS" .and. ;
	FindFunction("PLS510JR")
	PLS510JR()
Endif

nIss := 0
//Gravo os titulos de impostos Pis Cofins Csll quando controlados pela baixa 
// Os titulos de impostos devem ser desconsiderados quando C/C cuja moeda seja diferente da moda corrente
If cPaisLoc == "BRA" .and. lPCCBxCR .and. lRetParc  
	//Imposto PCC sempre na moeda 1
	If FindFunction( "FXMultSld" ) .AND. FXMultSld()
		If SA6->A6_MOEDA <= 1
			FGrvPccRec(@nPis,@nCofins,@nCsll,nSalvRec,.F.,lRetParc,cSequencia,"FINA070",1)
		EndIf
    Else
		FGrvPccRec(@nPis,@nCofins,@nCsll,nSalvRec,.F.,lRetParc,cSequencia,"FINA070",1)
    EndIf
Endif
If cPaisLoc == "BRA" .and. lIrPjBxCr .and. lRetParc 
	If FindFunction( "FXMultSld" ) .AND. FXMultSld()
		If SA6->A6_MOEDA <= 1
			FGrvIrRec(@nIrrf,nSalvRec,.F.,cSequencia,"FINA070",SE1->E1_MOEDA)
		EndIf
    Else
		FGrvIrRec(@nIrrf,nSalvRec,.F.,cSequencia,"FINA070",SE1->E1_MOEDA)
    EndIf
Endif         

If lf70GrSe1				// Ponto de entrada no final da baixa do titulo
	Execblock("F70GRSE1",.F.,.F.,{cOcorr})
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Executa as verificacoes e providencias do modulo ³
//³Gestao Educacional.                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If GetMV( "MV_ACATIVO" )
	FA070Aca()
Endif

//
// Template GEM - Se todos os titulos foram pagos (E1_SALDO == 0 ) deve atualizar o STATUS do contrato.
//
If ExistTemplate("GMUpdStatContr")
	ExecTemplate("GMUpdStatContr",.F.,.F.,{SE1->E1_NUM ,SE1->E1_SERIE ,SE1->E1_PREFIXO } )
EndIf

//
//Função Específica do Modulo Sigapls para atualizar Status de Guias Compradas
//
If FindFunction("PL090TITCP").and. GetNewPar("MV_PLSATIV",.F.)   
	PL090TITCP(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,"1")
EndIf
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fA070Pad ³ Autor ³ Wagner Xavier 		  ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica qual Lan‡amento Padr„o ser  sugerido para o		  ³±±
±±³			 ³ usu rio, de acordo com a situa‡„o do Titulo. 				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fa0070pad() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA070Pad()
Local cPadrao:="520"
IF SE1->E1_SITUACA $ "0FG" .Or. Empty(SE1->E1_SITUACA)     //Carteira
	cPadrao := "520"
ELSEIF SE1->E1_SITUACA $ "1H"     //Simples
	cPadrao := "521"
ELSEIF SE1->E1_SITUACA = "2"     //Descontada
	cPadrao := "522"
ELSEIF SE1->E1_SITUACA = "3"     //Caucionada
	cPadrao := "523"
ELSEIF SE1->E1_SITUACA = "4"     //Vinculada
	cPadrao := "524"
ELSEIF SE1->E1_SITUACA = "5"     //Advogado
	cPadrao := "525"
ELSEIF SE1->E1_SITUACA = "6"     //Judicial
	cPadrao := "526"
ELSEIF SE1->E1_SITUACA = "7"     //Caucao Descontada
	cPadrao := "528"
EndIF
Return cPadrao

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa070Mostr³ Autor ³ Wagner Xavier 		  ³ Data ³ 06/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se lan‡amentos cont beis ser„o mostrados ou n„o	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Fa070Mostr() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Conteudo																	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Gen‚rico																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa070Mostr()
pergunte("FIN070",.T.)
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA070Mov ³ Autor ³ Wagner Xavier 		  ³ Data ³ 06/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera‡„o da Movimenta‡„o Banc ria 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA070Mov(ExpC1)														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Hist Padrao 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA070Mov( lPadrao,lContabiliza,lAdiantamento,dDtCredito,aBaixas,cArqEnt,;
						 cOcorr, nTxMoeda,nSomaCheq,aSeqSe5,cSequencia,aHdlPrv)
Local i
Local cTpDoc		:=""
Local cAlias		:=ALIAS()
Local cHistMov		:=""
Local lSpbInUse		:= SpbinUse()
Local bCampo 
Local nX			:= 0
Local cSldBxCr		:= GetMv("MV_SLDBXCR")
Local lAcreDecre	:= .F.
Local nMoedaBco		:= 1
Local nIndexOrd		:= 0
Local nTamSeq		:= TamSX3("E5_SEQ")[1]
Local nCont			:= 0
Local lSaldoChq		:= GetMv("MV_SLDBXCR")=="C" 
Default nSomaCheq 	:= 0
Default aSeqSe5 	:= {}
Default cSequencia	:= Replicate("0",nTamSeq)
Default aHdlPrv		:= {}

nValToler := Iif(nValToler==Nil,0,nValToler)
lAdiantamento := Iif( lAdiantamento=Nil,.f.,lAdiantamento )

cArqEnt     := Iif(cArqEnt==Nil," ",cArqEnt)
cOcorr      := Iif(cOcorr==Nil,"  ",cOcorr)
cModSpb		:= If (Type("cModSpb") != "C","1",cModSpb)

If lAdiantamento
	Return .t.
EndIf

//verifica se existem os campos de valores de acrescimo e decrescimo no SE5
If SE5->(FieldPos("E5_VLACRES")) > 0 .and. SE5->(FieldPos("E5_VLDECRE")) > 0
	lAcreDecre := .T.
Endif

cSequencia := FinSeqSe5()
For i := 1 To 7
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a Movimenta‡„o Banc ria									  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If i=1
		bCampo  := { || nDescont }
		cTpDoc  :=IIF(SE1->E1_SITUACA$"27","D2","DC")
		cHistMov:=OemToAnsi( STR0002 ) //"Desconto s/Receb.Titulo"
	Elseif i=2
		bCampo  := { || nJuros }
		cTpDoc  :=IIF(SE1->E1_SITUACA$"27","J2","JR")
		cHistMov:=OemToAnsi( STR0003 ) //"Juros s/Receb.Titulo"
	Elseif i=3
		bCampo  := { || nMulta }
		cTpDoc  :=IIF(SE1->E1_SITUACA$"27","M2","MT")
		cHistMov:=OemToAnsi( STR0004 ) //"Multa s/Receb.Titulo"
	Elseif i=4
		bCampo  := { || nCM }
		cTpDoc  :=IIF(SE1->E1_SITUACA$"27","C2","CM")
		cHistMov:=OemToAnsi( STR0005 )//"Correcao Monet s/Receb.Titulo"
	Elseif i=5
		bCampo  := { ||  nValRec }
		cTpDoc  :=Iif(SE1->E1_SITUACA$"27","V2",Iif((Empty(cLoteFin).AND. !FwIsInCallStack("FA450CMP")),"VL","BA"))
		If !MovBcoBx(cMotBx,.T.) .And. !SE1->E1_SITUACA$"27"
			cTpDoc := "BA"
		Endif
		// Controla saldo na compensacao do cheque
		If cSldBxCr == "C"
			// Do valor recebido deve ser subtraido o total pago em cheque, pois o valor referente a 
			// baixa efetuada em cheque sera movimentado apenas quando o cheque for compensado.
			bCampo := { ||  nValRec-nSomaCheq }
			If Eval(bCampo) == 0
			  	 cTpDoc := "BA"
			Endif  
		Endif
		cHistMov:= Iif(Empty(cHist070),OemToAnsi(STR0006),cHist070)//"Valor recebido s/ titulo"
	Elseif i== 6
		bCampo  := { || nValToler }
		cTpDoc  := "TL"
		cHistMov:= OemToAnsi( STR0007 )//"Toler Receb. s/ Titulo"
	Elseif i== 7
		bCampo  := { || nSomaCheq }
		cTpDoc  := "BA"
	Endif
	// Grava o movimento bancario, se o campo for diferente de 0 ou se
	// for o valor recebido verifica se o valor nao foi pago totalmente em cheque,
	// para nao haver um registro do cheque e um registro com valor 0 da diferenca
	// entre o valor recebido e o valor em cheque.
	If Eval(bCampo) != 0 .Or. (i == 5 .And. (cSldBxCr != "C" .or. (Eval(bCampo) == 0 .And. nDescont > 0) ))
		If i == 7
			If Type("aCols") == "A" .And. !Empty(aCols)
				// Para cada cheque, gera um movimento bancario
				For nX := 1 To Len(aCols)
					// Se o cheque nao estiver deletado, os dados forem validos
					If !aCols[nX][Len(aCols[1])]	.And.;
						!Empty(aCols[nX][1])		.And.;
						!Empty(aCols[nX][2])		.And.;
						!Empty(aCols[nX][3])		.And.;
						!Empty(aCols[nX][4])		.And.;
						!Empty(aCols[nX][5])		.And.;
						!Empty(aCols[nX][6])		.And.;
						!Empty(aCols[nX][7])		.And.;
						!Empty(aCols[nX][8])		.And.;
						!Empty(aCols[nX][9])
						// Se o identificador de que o cheque ja foi utilizado na baixa estiver diferente de Sim, 
						// gera o movimento, devido as baixas parciais, pois nas baixas futuras esses cheques nao 
						// podem mais serem utilizados
						If (SEF->(FieldPos("EF_USADOBX")) = 0 .Or. aCols[nX][15] != "Sim")
							// Gera nova sequencia, para o caso do cancelamento apenas da baixa do valor recebido
							// em cheque nao cancelar todas as baixas
							cHistMov:= "Rec Ch-bco/ag/ch " + aCols[nX][1]+"/"+aCols[nX][2]+"/"+aCols[nX][4]
					  		bCampo := { || aCols[nX][6] } // Valor Ref. Baixa
							cSequencia := Soma1(cSequencia,nTamSeq) 
					  		Fa070GrvSe5(cBanco,cAgencia,cConta,dBaixa,Eval(bCampo),lPadrao,lContabiliza,cTpDoc,cHistMov,;
											cLoteFin,cMotBx,nValEstrang,cSequencia,lSpbInUse,cModSpb,dDtCredito,cArqEnt,;
											cOcorr,nTxMoeda,i,nJuros,nMulta,nCm,nDescont,aBaixas,,nSomaCheq)
							//Adiciona a sequencia para ser utilizado na gravacao do movimento do cheque.
							Aadd(aSeqSe5,cSequencia)
							dbSelectArea("SEF")
							SEF->(dbSetOrder(3))
							
							//>> Localizacao e marcacao do cheque. Processo de baixa.
							nIndexOrd := SEF->( IndexOrd() )
							SEF->(dbSetOrder( 1 ))
							if SEF->( MsSeek(xFilial("SEF") +;
      										aCols[nX][1]   + ; //Banco
							                aCols[nX][2]   + ; //Agencia
							                aCols[nX][3]   + ; //Conta
							                aCols[nX][4] ) )   //Numero do Cheque
								If !aCols[ nX ][ Len(aCols[ nX ]) ] .and.; //Se nao estiver deletado e ...
									SEF->(FieldPos("EF_USADOBX")) > 0       //... contem o campo EF_USADOBX.
									RecLock("SEF", .F.)
									SEF->EF_USADOBX := "S"
									SEF->EF_SEQUENC := cSequencia
								Endif	
							endif	
							SEF->( dbSetOrder( nIndexOrd ) )
							//<< Localizacao e marcacao do cheque. Processo de baixa.

						Else
							//Adiciona uma sequencia auxiliar para o cheque que está vinculado a outro título, para
							//que o array fique com a mesma quantidade do aCols na gravação dos cheques.
							Aadd(aSeqSe5,Replicate("0",nTamSeq))
						Endif
					else
						//Adiciona uma sequencia auxiliar para o cheque que está vinculado a outro título, para
						//que o array fique com a mesma quantidade do aCols na gravação dos cheques.
						Aadd(aSeqSe5,Replicate("0",nTamSeq))
					Endif
				Next
			Else
				dbSelectArea("SEF")
				SEF->(dbSetOrder(3))      
				SEF->(MsSeek(xFilial("SEF")+SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO)))
				While SEF->(!Eof()) .And.;
						SEF->(EF_FILIAL+EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO) ==;
						xFilial("SEF")+SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO)
					If (SEF->EF_FORNECE == SE1->E1_CLIENTE .Or.;
						SEF->EF_CLIENTE == SE1->E1_CLIENTE) .And.;
						!Empty(SEF->EF_NUM)
						If SEF->(FieldPos("EF_USADOBX")) = 0 .Or. SEF->EF_USADOBX != "S"
							// Gera nova sequencia, para o caso do cancelamento apenas da baixa do valor recebido
							// em cheque nao cancelar todas as baixas
							cHistMov:= "Rec Ch - bco/ag/ch " + SEF->(EF_BANCO+"/"+EF_AGENCIA+"/"+EF_NUM)
					  		bCampo := { || SEF->EF_VALORBX }
							cSequencia := Soma1(cSequencia,nTamSeq) 
					  		Fa070GrvSe5(cBanco,cAgencia,cConta,dBaixa,Eval(bCampo),lPadrao,lContabiliza,cTpDoc,cHistMov,;
											cLoteFin,cMotBx,nValEstrang,cSequencia,lSpbInUse,cModSpb,dDtCredito,cArqEnt,;
											cOcorr,nTxMoeda,i,nJuros,nMulta,nCm,nDescont,aBaixas,,nSomaCheq)
							//Adiciona a sequencia para ser utilizado na gravacao do movimento do cheque.
							Aadd(aSeqSe5,cSequencia)
							// Grava o identificador de que o cheque ja foi utilizado na baixa, devido as
							// baixas parciais, pois nas baixas futuras esses cheques nao podem mais serem utilizados
							If SEF->(FieldPos("EF_USADOBX")) > 0
								RecLock("SEF",.F.)
								SEF->EF_USADOBX := "S"           
								SEF->EF_SEQUENC := cSequencia
							Endif	
						Else
                     //Adiciona uma sequencia auxiliar para o cheque que está vinculado a outro título, para
                     //que o array fique com a mesma quantidade do aCols na gravação dos cheques.
							Aadd(aSeqSe5,Replicate("0",nTamSeq))
						Endif	
					EndIf
					SEF->(dbSkip())
				EndDo
				dbSelectArea(cAlias)
			Endif
		Else
			If AllTrim(Upper(SE1->E1_ORIGEM)) <> "FINA074" .or. (cPaisLoc$"ARG|ANG|COL|MEX|PER" .And. cTpDoc<> "CM")
				// Este tratamento é para gerar "n" vezes o lançamento bancario de acordo 
				// com acrescimo/decrescimo                 
                If i == 1 .Or. i == 2
					IF ExistBlock("F070MV1")
						aHdlAux := ExecBlock("F070MV1",.F.,.F.,{i,aBxAcr,aBxDec,cBanco,cAgencia,cConta,dBaixa,Eval(bCampo),;
							                              lPadrao,lContabiliza,cTpDoc,cHistMov,cLoteFin,cMotBx,nValEstrang,;
							                              cSequencia,lSpbInUse,cModSpb,dDtCredito,cArqEnt,cOcorr,nTxMoeda,i,;
							                              nJuros,nMulta,nCm,nDescont,aBaixas,aHdlPrv})
					    If Valtype(aHdlAux) == "A" 
							aHdlPrv	:= aClone(aHdlAux)
						EndIf	
					EndIf				
				ENDIF
				If !lSaldoChq  .OR. ( lSaldoChq .and. SomaCheqCr(.F.,SE1->E1_PREFIXO, SE1->E1_NUM, SE1->E1_PARCELA, SE1->E1_TIPO, SE1->E1_CLIENTE, .F., cSequencia ) == 0 )
					Fa070GrvSe5(cBanco,cAgencia,cConta,dBaixa,Eval(bCampo),lPadrao,lContabiliza,cTpDoc,cHistMov,;
							cLoteFin,cMotBx,nValEstrang,cSequencia,lSpbInUse,cModSpb,dDtCredito,cArqEnt,;
							cOcorr,nTxMoeda,i,nJuros,nMulta,nCm,nDescont,aBaixas,,nSomaCheq)
				Else
					Fa070GrvSe5(cBanco,cAgencia,cConta,dBaixa,Eval(bCampo),lPadrao,lContabiliza,"BA",cHistMov,;
							cLoteFin,cMotBx,nValEstrang,cSequencia,lSpbInUse,cModSpb,dDtCredito,cArqEnt,;
							cOcorr,nTxMoeda,i,nJuros,nMulta,nCm,nDescont,aBaixas,,nSomaCheq)
				Endif
			EndIf
		Endif
	EndIf
Next i
dbSetOrder( 1 )
dbSelectArea(cAlias)
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fa070GrvSe5 ³ Autor ³ Claudio D. de Souza ³ Data ³ 05.11.03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava movto bancario no SE5								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Financeiro (O SE1 deve estar posicionado antes da chamada) ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa070GrvSe5(cBanco,cAgencia,cConta,dBaixa,nValor,lPadrao,lContabiliza,cTpDoc,cHistMov,cLoteFin,;
							cMotBx,nValEstrang,cSequencia,lSpbInUse,cModSpb,dDtCredito,cArqEnt,;
							cOcorr,nTxMoeda,i,nJuros,nMulta,nCm,nDescont,aBaixas,cRecPag,nSomaCheq)

Local nRetencao := SA6->A6_RETENCAO
Local dDataDisp := SE5->E5_DATA
Local nCont := 0
Local lAcreDecre := .F. 

//Controla o Pis Cofins e Csll na baixa (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default))
Local lPccBxCr := If (FindFunction("FPccBxCr"),FPccBxCr(),.F.)
//Controla IRPJ na baixa
Local lIrPjBxCr		:= If (FindFunction("FIrPjBxCr"),FIrPjBxCr(),.F.)
Local cModRetPIS := SA1->A1_ABATIMP   
Local nVlMinImp := GetNewPar("MV_VL10925",5000)
Local lAplVlMin := .T.   
Local nBaseRet := 0  //Base de retencao                    
Local nLoop := 0

Local lFa070tit := IsInCallStack("Fa070Tit")

//639.04 Base Impostos diferenciada
Local lBaseImp	 := If(FindFunction('F040BSIMP'),F040BSIMP(2),.F.)
Local nPropPcc	 := 0 
Local lTemMovCh := .F.
Local nPropPr 	:= 0                                
Local dDataIni	:= FirstDay( SE1->E1_EMISSAO )   
Local dDataFim	:= LastDay( SE1->E1_EMISSAO ) 
Local cPrefSe1 	:= SE1->E1_PREFIXO
Local	cNumSe1   	:= SE1->E1_NUM
Local	cParcSe1 	:= SE1->E1_PARCELA
Local	cTipoSe1 	:= SE1->E1_TIPO
Local	cCfSe1	   := SE1->E1_CLIENTE
Local	cLojaSe1 	:= SE1->E1_LOJA       
Local cAliasQry 	:= ""  
Local cQuery		:=	""
Local aArea			:= GetArea()
Local aAreaSE1		:= SE1->(GetArea())
Local aAreaSFQ		:= SFQ->(GetArea())
Local nMoedaBco 	:= 0                          
Local lTpDesc		:= SE5->(FieldPos("E5_TPDESC"))	> 0 //Verifica campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)                      
Local lFINA070		:= Alltrim(FunName()) == "FINA070" .OR. FwIsInCallStack("Fin740070")
Local cDbName		:= TcGetDb()
Local lDescFULL 	:= (nDescont > 0) .and. (nValor == 0) .and. (cTpDoc == "VL") //trato baixa 100% com desconto para gerar registro do tipo VL igual a E5_VALO zerado!
Local nVrIrrf		:=	0
Local nCMIrrf		:=	0
Local lAplMinIR		:= .F.
Local lBruto	:= SuperGetMV("MV_BQ10925",,"2") == "1"

If lFINA070
	DEFAULT cTpDesc := "C"	
Endif

PRIVATE lRaRtImp  := lFinImp .And.FRaRtImp()     //Define se ha retencao de impostos PCC/IRPJ no R.A 
DEFAULT cRecPAg := "R"
DEFAULT nSomaCheq := 0

lTemMovCh := IIF( IsInCallStack("FINA070") .And. lFa070Tit, ((nValRec-nSomaCheq)==0 .And. GetMv("MV_SLDBXCR")=="C"), .f. )


nVlRetPis	:= Iif(Type("nVlRetPis") != "N",0,nVlRetPis) 
nVlRetCof	:= Iif(Type("nVlRetCof") != "N",0,nVlRetCof)
nVlRetCsl	:= Iif(Type("nVlRetCsl") != "N",0,nVlRetCsl) 

nPis		:= If(Type("nPis"   ) != "N",0,nPis) 
nCofins		:= If(Type("nCofins") != "N",0,nCofins)
nCsll	   	:= If(Type("nCsll"  ) != "N",0,nCsll) 
nIrrf	   	:= If(Type("nIrrf"  ) != "N",0,nIrrf)
nOldIrrf 	:= If(Type("nOldIrrf" ) != "N",0,nOldIrrf) 
nValRec	   	:= If(Type("nValRec") != "N",0,nValRec) 
nTotAbat	:= If(Type("nTotAbat") != "N",0,nTotAbat) 
cNumBor	:= If(Type("cNumBor") != "C",Space(6),cNumBor)

If Empty( SA1->( FieldPos( "A1_MINIRF" ) ) ) .or. ;
 (!Empty( SA1->( FieldPos( "A1_MINIRF" ) ) ) .and. SA1->A1_MINIRF == "2")
	lAplMinIR := .T.
Endif

If Type("aDadosRet") != "A" .or. Empty(aDadosRet)
	aDadosRet := Array(7)
	AFill( aDadosRet, 0 ) 
Endif	        

If lPccBxCr .and. dDataBase >= dLastPcc
	nVlMinImp	:= 0
EndIf

//verifica se existem os campos de valores de acrescimo e decrescimo no SE5
If SE5->(FieldPos("E5_VLACRES")) > 0 .and. SE5->(FieldPos("E5_VLDECRE")) > 0
	lAcreDecre := .T.
Endif

//Verificar ou nao o limite de 5000 para Pis cofins Csll
// 1 = Verifica o valor minimo de retencao
// 2 = Nao verifica o valor minimo de retencao
If !Empty( SE1->( FieldPos( "E1_APLVLMN" ) ) ) .and. SE1->E1_APLVLMN == "2"
	lAplVlMin := .F.
Endif

nBaseRet := nValRec+nPis+nCofins+nCsll+nIrrf+nDescont+nTotAbat-nJuros-nMulta

//639.04 Base Impostos diferenciada
If lBaseImp .and. SE1->E1_BASEPIS > 0
	nPropPcc := nBaseRet/SE1->E1_VALOR
	nBaseRet	:= SE1->E1_BASEPIS * nPropPcc
Endif

If FunName() == "FINA070" .And. cTpDoc <> "VL"
	If ( nValor == 0 .And. !( nTotAbat == nValTot ) ) .or. ( nValor == 0 .and. !( nDescont == nValTot ) )
		If (!lDescFULL .Or. nDescont == nValTot) .And. (TrazCodMot(cMotBx) $ "DAC" .And. cTpDoc != "BA")
			Return
		Endif
	EndIf
EndIf	
	
dbSelectArea("SA6")
SA6->( dbSeek(xFilial("SA6")+cBanco+cAgencia+cConta) )
dbSelectArea("SE5")
RecLock("SE5",.T.)
SE5->E5_FILIAL	  := xFilial("SE5")
SE5->E5_BANCO	  := cBanco
SE5->E5_AGENCIA  := cAgencia
SE5->E5_CONTA	  := cConta
SE5->E5_DATA 	  := dBaixa
If ( cPaisLoc <> "BRA" )        
	If Empty(cBanco+cAgencia+cConta) .And.  !Empty(SE1->E1_RECIBO)
	 	nMoedaBco := Max( SE1->E1_MOEDA, 1)
	Else
		nMoedaBco := Max( SA6->A6_MOEDA, 1) 
	EndIf
	
	If SE5->(FieldPos("E5_TXMOEDA"))>0 
		If Type("aTxMoedas")="A"
	   		SE5->E5_TXMOEDA := aTxMoedas[nMoedaBco][2]
	 	Else
	   		SE5->E5_TXMOEDA := nTxMoeda
	 	EndIf
 	EndIf
	SE5->E5_VALOR := xMoeda( nValor, 1, nMoedaBco,,,,SE5->E5_TXMOEDA )
	SE5->E5_MOEDA := StrZero( nMoedaBco ,2)
Else
	nMoedaBco := Max( SA6->A6_MOEDA, 1)
	If AllTrim(Type("lF070AUTO")) == "L"
		If lF070AUTO .And. (nValor - nJuros - nMulta + nDescont) == SE1->E1_VALOR .And.; 
			SE1->E1_SALDO < (nValor - nJuros - nMulta + nDescont) .And. SE1->E1_SALDO > 0
			nValor := SE1->E1_SALDO
		ElseIf (nValRec - nMulta - nJuros + nDescont) < 0 .And. cTpDoc == "JR"	//Se valor recebido não cobrir por inteiro multa/juros/descontos
			nValor := SE1->E1_JUROS + (nValRec - nJuros - nMulta + nDescont) 
		EndIf  	
	EndIf
	SE5->E5_VALOR := nValor
	SE5->E5_MOEDA := StrZero( Max( nMoedaBco , 1), 2 )
EndIf   

// Grava o valor de correção monetária no SE5 para ser visualizado na consulta
If cPaisLoc == "MEX" .And. SEL->EL_MOEDA <> "1" .And. FunNAme() == "FINA087A" 
	nTxCor:= Iif(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA, RecMoeda(SE1->E1_EMISSAO, SE1->E1_MOEDA))
	nValOrig:= xMoeda(SEL->EL_VALOR,Val(SEL->EL_MOEDA),1,,,nTxCor)       
	nValAtu:= xMoeda(SEL->EL_VALOR,Val(SEL->EL_MOEDA),1,,,SE5->E5_TXMOEDA)
	SE5->E5_VLCORRE := nValAtu - nValOrig
EndIf


SE5->E5_NATUREZ	:= SE1->E1_NATUREZ
SE5->E5_RECPAG	:= cRecPag
SE5->E5_TIPO 	:= SE1->E1_TIPO
SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
SE5->E5_TIPODOC	:= cTpDoc
SE5->E5_HISTOR	:= cHistMov
SE5->E5_LOTE	:= cLoteFin
SE5->E5_PREFIXO := SE1->E1_PREFIXO
SE5->E5_NUMERO	:= SE1->E1_NUM
SE5->E5_PARCELA	:= SE1->E1_PARCELA
SE5->E5_CLIFOR	:= SE1->E1_CLIENTE
SE5->E5_CLIENTE	:= SE1->E1_CLIENTE
SE5->E5_LOJA	:= SE1->E1_LOJA
SE5->E5_BENEF	:= SE1->E1_NOMCLI
SE5->E5_DTDIGIT	:= dDataBase
SE5->E5_MOTBX	:= TrazCodMot( cMotBx )
SE5->E5_SERREC	:= SE1->E1_SERREC
SE5->E5_ORDREC	:= SE1->E1_RECIBO
SE5->E5_FILORIG	:= SE1->E1_FILORIG//cFilAnt
                           
If lFINA070 .And. lTpDesc
	SE5->E5_TPDESC := cTpDesc
Endif


If SE1->E1_MOEDA > 1 .and. nValEstrang !=0 .and. i == 5	// somente para VL/BA
	Replace E5_VLMOED2 With nValEstrang
Else
	Replace SE5->E5_VLMOED2  With Iif(i!=4 .or. SE1->E1_MOEDA<=1,Round(xMoeda( nValor, nMoedaBco, SE1->E1_MOEDA,dbaixa,4,,Iif(nTxMoeda <> SE5->E5_TXMOEDA, nTxMoeda, SE5->E5_TXMOEDA) ),2),0)
EndIf
SE5->E5_SEQ		  := cSequencia
SE5->E5_DOCUMEN	  := If(Empty(cNumBor),"",cNumBor) // Vem do Fina200()
//	Data de disponibilizacao -> considera dias de retencao
nRetencao 		  := SA6->A6_RETENCAO
dDataDisp 		  := SE5->E5_DATA

If i==5 .and. nCM>0
	Replace E5_VLCORRE With nCM
Endif

If nRetencao > 0
	For nCont := 1 To nRetencao
		dDataDisp := DataValida(dDataDisp+1,.T.)
	Next nCont
EndIf
// Para baixas STR ou CIP eu ignoro os dias de rentencao, ja que sao on-line
If lSpbInUse
	SE5->E5_MODSPB  := cModSpb
	If cModSpb $ "1#2"
		dDataDisp := SE5->E5_DATA
	Endif
Endif
SE5->E5_DTDISPO := IIF(EMpty(dDtCredito),dDataDisp,dDtCRedito)
SE5->E5_ARQCNAB := cArqEnt
SE5->E5_CNABOC  := cOcorr
If cPaisLoc == "BRA" .And. Se1->E1_MOEDA > 1
	SE5->E5_TXMOEDA := nTxMoeda
Endif	
SE5->E5_SITCOB	 := SE1->E1_SITUACA         

// Grava valores quando o valor a receber for o mesmo que o do cheque, e a movimentação apenas quando o cheque for compensado 
If i == 7 .And. lTemMovCh
	If cPaisLoc == "BRA"
		Replace E5_VLJUROS   With nJuros
		Replace E5_VLMULTA   With nMulta                        
		Replace E5_VLDESCO   With nDescont
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava os valores agregados ao titulo no totalizador ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If i == 5		// registro totalizador

	If cPaisLoc == "BRA"
		Replace E5_VLJUROS   With nJuros
		Replace E5_VLMULTA   With nMulta                        
		Replace E5_VLDESCO   With nDescont
	Else		
		Replace E5_VLJUROS   With Round(NoRound(xMoeda( nJuros  , 1, nMoedaBco,dBaixa,3,SE5->E5_TXMOEDA),3),2)
		Replace E5_VLMULTA   With Round(NoRound(xMoeda( nMulta  , 1, nMoedaBco,dBaixa,3,SE5->E5_TXMOEDA),3),2)
		Replace E5_VLDESCO   With Round(NoRound(xMoeda( nDescont, 1, nMoedaBco,dBaixa,3,,SE5->E5_TXMOEDA),3),2)
	Endif

    If  cPaisLoc <> "MEX" .And. FunNAme() <> "FINA087A" 
    	Replace E5_VLCORRE   With nCm
	EndIf
	If lAcreDecre                  
		nAcresc     := If(Type("nAcresc") != "N",0,nAcresc)
		Replace E5_VLACRES   With Round(NoRound(xMoeda(nAcresc,SE1->E1_MOEDA,1,dBaixa,3,SE1->E1_TXMOEDA),3),2)
		Replace E5_VLDECRE   With Round(NoRound(xMoeda(SE1->E1_SDDECRE,SE1->E1_MOEDA,1,dBaixa,3,SE1->E1_TXMOEDA),3),2)
	Endif
	
	If ExistTemplate("GEMSE5Grv")
		ExecTemplate("GEMSE5Grv",.F.,.F.)
	EndIf
    IF lRaRtImp .AND. FUNNAME () == "FINA070" .and. nTotAbat<(nTotAbImp-nTotAbLiq)    
    	nPropPr:= nTotAbat/(nTotAbImp-nTotAbLiq)  
    	SE5->E5_PRINSS := SE1->E1_INSS * nPropPr 
		SE5->E5_PRISS  := SE1->E1_ISS * nPropPr     	
	Endif
    
	// GRAVACAO IRRF 
	If FwIsInCallStack('FA070TIT')
		nVrIrrf		:=	Round((xMoeda(SE1->E1_IRRF,1,SE1->E1_MOEDA,SE1->E1_EMISSAO,,,) * 100) /100,2) 
		If lIrPjBxCr	 	
			SE5->E5_VRETIRF := nVrIrrf
			If lAplMinIR .and. nIrrf+nVrIrrf < GetMv("MV_VLRETIR")  // Não atingiu o valor minimo - pendente
				SE5->E5_PRETIRF := '1'
			Else
				SE5->E5_PRETIRF := '3'				
			Endif
		Endif
	Endif 

	//PCC BAIXA CR 
	//GRAVACAO SFQ	

	If cPaisLoc == "BRA" .and. lPCCBxCR .OR. (  FindFunction( "FXMultSld" ) .AND. FXMultSld() .AND. lPCCBxCR .AND. SA6->A6_MOEDA <= 1 )
		If !FwisInCallStack("Fa450CMP")
			SE5->E5_VALOR := nValor - (nPis + nCofins + nCsll)  
		EndIf
		SE5->E5_VRETPIS := nPis
		SE5->E5_VRETCOF := nCofins
		SE5->E5_VRETCSL := nCsll                                  

		Do Case 
		Case cModRetPIS == "1" 
			If	(aDadosRet[1] + nBaseRet > nVlMinImp .or. !lAplVlMin) .And. ;
				(nPis + nCofins + nCsll > 0)
				lRetParc := .T. 

				nSavRec := SE5->( Recno() ) 
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Exclui a Marca de "pendente recolhimento" dos demais registros   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If aDadosRet[1] > 0
					If Type("lAlterImp")!="L"
						lAlterImp := .F.
					EndIf
					aRecnos := aClone( Iif(lAlterImp,aDadosRet[ 5 ],aDadosRet[ 6 ]) ) 			
					cPrefOri  := SE5->E5_PREFIXO
					cNumOri   := SE5->E5_NUMERO
					cParcOri  := SE5->E5_PARCELA
					cTipoOri  := SE5->E5_TIPO
					cCfOri    := SE5->E5_CLIFOR
					cLojaOri  := SE5->E5_LOJA
							       
					For nLoop := 1 to Len( aRecnos )
						
						SE5->( dbGoto( aRecnos[ nLoop ] ) )
							
						RecLock( "SE5", .F. ) 
						
						If !Empty(SE5->E5_PRETPIS) .And. !Empty(SE5->E5_PRETCOF) .And. !Empty(SE5->E5_PRETCSL)
							SE5->E5_PRETPIS := "2"
							SE5->E5_PRETCOF := "2"
							SE5->E5_PRETCSL := "2"
						EndIf
																		
						SE5->( MsUnlock() )

						If FindFunction("ALIASINDIC")
							If AliasIndic("SFQ") 
								If nSavRec <> aRecnos[ nLoop ] 
									dbSelectArea("SFQ")
									RecLock("SFQ",.T.)
									SFQ->FQ_FILIAL  := xFilial("SFQ")
									SFQ->FQ_ENTORI  := "E1B"
									SFQ->FQ_PREFORI := cPrefOri
									SFQ->FQ_NUMORI  := cNumOri
									SFQ->FQ_PARCORI := cParcOri
									SFQ->FQ_TIPOORI := cTipoOri										
									SFQ->FQ_CFORI   := cCfOri
									SFQ->FQ_LOJAORI := cLojaOri
									SFQ->FQ_SEQORI  := cSequencia
									
									SFQ->FQ_ENTDES  := "E1B"
									SFQ->FQ_PREFDES := SE5->E5_PREFIXO
									SFQ->FQ_NUMDES  := SE5->E5_NUMERO
									SFQ->FQ_PARCDES := SE5->E5_PARCELA                             
									SFQ->FQ_TIPODES := SE5->E5_TIPO
									SFQ->FQ_CFDES   := SE5->E5_CLIFOR
									SFQ->FQ_LOJADES := SE5->E5_LOJA
									SFQ->FQ_SEQDES  := SE5->E5_SEQ

									//Grava a filial de destino caso o campo exista
									If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
										SFQ->FQ_FILDES := SE5->E5_FILIAL 
									EndIf 											

									MsUnlock()
								Endif								
							Endif					
						Endif	
					Next nLoop 
				EndIf
		
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Retorna do ponteiro do SE1 para a parcela         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SE5->( MsGoto( nSavRec ) ) 
				Reclock( "SE5", .F. )
			Else 	                                
				If nVlRetPis + nVlRetCof + nVlRetCsl > 0
					Reclock( "SE5", .F. ) 
//					If !lRetManual
						SE5->E5_VRETPIS := nVlRetPis
						SE5->E5_VRETCOF := nVlRetCof
						SE5->E5_VRETCSL := nVlRetCsl
						SE5->E5_PRETPIS := "1"
						SE5->E5_PRETCOF := "1"
						SE5->E5_PRETCSL := "1"
//					EndIf							

					SE5->( MsUnlock() )  																								
				EndIf	
				lRetParc := .F. 
			EndIf

		Case cModRetPIS == "2" 
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Efetua a retencao                                                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nSavRec := SE5->( Recno() ) 
				
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Exclui a Marca de "pendente recolhimento" dos demais registros   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If aDadosRet[1] > 0
				aRecnos := aClone( Iif(ValType(lAlterImp)!="U" .And. lAlterImp,aDadosRet[ 5 ],aDadosRet[ 6 ]) )
		
				cPrefOri  := SE5->E5_PREFIXO
				cNumOri   := SE5->E5_NUMERO
				cParcOri  := SE5->E5_PARCELA
				cTipoOri  := SE5->E5_TIPO
				cCfOri    := SE5->E5_CLIFOR
				cLojaOri  := SE5->E5_LOJA
						
			  	For nLoop := 1 to Len( aRecnos )
					
					SE5->( dbGoto( aRecnos[ nLoop ] ) )
						
					RecLock( "SE5", .F. ) 
					
					If !Empty(SE5->E5_PRETPIS) .And. !Empty(SE5->E5_PRETCOF) .And. !Empty(SE5->E5_PRETCSL)
						SE5->E5_PRETPIS := "2"
						SE5->E5_PRETCOF := "2"
						SE5->E5_PRETCSL := "2"
					EndIf																																									
					SE5->( MsUnlock() )  																								

					If FindFunction("ALIASINDIC")
						If AliasIndic("SFQ") 
							If nSavRec <> aRecnos[ nLoop ] 
								dbSelectArea("SFQ")
								RecLock("SFQ",.T.)
								SFQ->FQ_FILIAL  := xFilial("SFQ")
								SFQ->FQ_ENTORI  := "E1B"
								SFQ->FQ_PREFORI := cPrefOri
								SFQ->FQ_NUMORI  := cNumOri
								SFQ->FQ_PARCORI := cParcOri
								SFQ->FQ_TIPOORI := cTipoOri										
								SFQ->FQ_CFORI   := cCfOri
								SFQ->FQ_LOJAORI := cLojaOri
								SFQ->FQ_SEQORI  := cSequencia
																			
								SFQ->FQ_ENTDES  := "E1B"
								SFQ->FQ_PREFDES := SE5->E5_PREFIXO
								SFQ->FQ_NUMDES  := SE5->E5_NUMERO
								SFQ->FQ_PARCDES := SE5->E5_PARCELA                             
								SFQ->FQ_TIPODES := SE5->E5_TIPO
								SFQ->FQ_CFDES   := SE5->E5_CLIFOR
								SFQ->FQ_LOJADES := SE5->E5_LOJA
								SFQ->FQ_SEQDES  := SE5->E5_SEQ											

								//Grava a filial de destino caso o campo exista
								If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
									SFQ->FQ_FILDES := SE5->E5_FILIAL 
								EndIf 											

								MsUnlock()
							Endif								
						Endif					
					Endif	
				Next nLoop 

			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Retorna do ponteiro do SE1 para a parcela         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			SE5->( MsGoto( nSavRec ) ) 
			Reclock( "SE1", .F. ) 
			lRetParc := .T.              
		Case cModRetPIS == "3" 			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava a Marca de "pendente recolhimento" dos demais registros    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
			If nVlRetPis + nVlRetCof + nVlRetCsl > 0
				Reclock( "SE5", .F. ) 
				SE5->E5_VRETPIS := nVlRetPis
				SE5->E5_VRETCOF := nVlRetCof
				SE5->E5_VRETCSL := nVlRetCsl
				SE5->E5_PRETPIS := "1"
				SE5->E5_PRETCOF := "1"
				SE5->E5_PRETCSL := "1"

				SE5->( MsUnlock() )  																								
			EndIf	
			lRetParc := .F.
		EndCase 			
	EndIf
	If lIrPjBxCr 
		FGSFQIRCR(nIrrf,nValrec,cSequencia,nDescont,nJuros,nMulta)
	EndIf
Endif
If i = 4
	Replace E5_IDENTEE	With SE1->E1_IDENTEE
Endif

SE5->( MsUnlock() ) 

If !MV_CRNEG $ SE1->E1_TIPO .And. !MV_CPNEG $ SE1->E1_TIPO
	aadd(aBaixas,{SE5->E5_MOTBX,SE5->E5_SEQ,SE5->(Recno())})
Endif

If !lIrPjBxCr .And. SE1->E1_MOEDA <> 1 .And. IsInCallStack("FINA070") .And. cPaisLoc == "BRA" .And. cTpDoc == "CM" .And. SE1->E1_IRRF>0
//Criando registro de correção monetaria do IRRF.
	cSequencia 	:= FaNxtSeqBx("SE1")  // Sequencia da baixa do adiantamento + 1
	nMoedaBco 		:= Max( MoedaBco(cBanco,cAgencia,cConta), 1)
		
	nVrIrrf		:=	Round((xMoeda(SE1->E1_IRRF,1,SE1->E1_MOEDA,SE1->E1_EMISSAO,,,) * 100) /100,2)	 	
 	nCMIrrf		:=	Round(xMoeda(nVrIrrf,SE1->E1_MOEDA,1,DDATABASE,3,NTXMOEDA) - xMoeda(nVrIrrf,SE1->E1_MOEDA,1,SE1->E1_EMISSAO),2)	 
	
	If nCMIrrf > 0
		Reclock( "SE5", .T. )
		SE5->E5_FILIAL 	:= xFilial("SE5")
		SE5->E5_NUMERO 	:= SE1->E1_NUM
		SE5->E5_PREFIXO	:= SE1->E1_PREFIXO
		SE5->E5_RECPAG 	:= "P"
		SE5->E5_TIPO		:= SE1->E1_TIPO	
		SE5->E5_PARCELA	:= SE1->E1_PARCELA		
		SE5->E5_SEQ		:= cSequencia		
		SE5->E5_BANCO	  	:= cBanco
		SE5->E5_AGENCIA  	:= cAgencia
		SE5->E5_CONTA	  	:= cConta
		SE5->E5_DATA 	  	:= dBaixa
		SE5->E5_DTDISPO 	:= IIF(EMpty(dDtCredito),dDataDisp,dDtCRedito)
		SE5->E5_MOEDA  	:= Strzero(nMoedaBco,2) 
		SE5->E5_TXMOEDA	:= nTxMoeda											
		SE5->E5_TIPODOC	:= "CM"
		SE5->E5_MOTBX		:= "NOR"	
		SE5->E5_NATUREZ	:= SE1->E1_NATUREZ
		SE5->E5_LOTE		:= cLoteFin
		SE5->E5_CLIFOR 	:= SE1->E1_CLIENTE
		SE5->E5_CLIENTE	:= SE1->E1_CLIENTE
		SE5->E5_LOJA		:= SE1->E1_LOJA
		SE5->E5_BENEF		:= SE1->E1_NOMCLI
		SE5->E5_DTDIGIT	:= dDataBase
		SE5->E5_LA			:= Iif(lPadrao.and.lContabiliza,"S","N")
		SE5->E5_HISTOR 	:= "Correcao Monetaria de IRRF"				
		SE5->E5_VALOR		:= nCMIrrf
		SE5->E5_VLMOED2	:= xMoeda(nCMIrrf,1,SA6->A6_MOEDA)
		SE5->( MsUnlock() )				
	Endif
Endif

If FunName()="FINA070" .And. lPccBxCr		
	
	#IFDEF TOP 		        
	   
	  	cAliasQry := GetNextAlias()
			
		cQuery := "SELECT E1_PREFIXO, E1_NUM, E1_PARCELA, E1_TIPO, E1_CLIENTE, E1_LOJA, E1_NUMBOR,  "
		cQuery += "E1_VALOR, E1_SABTPIS, E1_SABTCOF, E1_SABTCSL, "		
		cQuery += "R_E_C_N_O_ RECNOSE1 FROM "
		cQuery += RetSqlName( "SE1" ) + " SE1 " 
		cQuery += "WHERE " 
		cQuery += "E1_FILIAL='"    	+ xFilial("SE1")  + "' AND " 			
		cQuery += "E1_CLIENTE='"		+ cCfSe1				+ "' AND " 	
		cQuery += "E1_LOJA='"			+  cLojaSe1			+ "' AND "				 

		If cDbName $ "MSSQL"
			cQuery += "E1_PREFIXO + E1_NUM + E1_PARCELA + E1_TIPO <> '"	+  cPrefSe1+cNumSe1+cParcSe1+cTipoSe1		+ "' AND "
		Else
			cQuery += "E1_PREFIXO || E1_NUM || E1_PARCELA || E1_TIPO <> '"	+  cPrefSe1+cNumSe1+cParcSe1+cTipoSe1		+ "' AND "		
		EndIf

		cQuery += " E1_EMISSAO>= '"	+ DToS( dDataIni )      + "' AND "		
		cQuery += " E1_EMISSAO<= '"	+ DToS( dDataFim )      + "' AND " 
		cQuery += " (E1_SABTPIS > 0 OR E1_SABTCOF > 0 OR E1_SABTCSL > 0)  AND "
		cQuery += " E1_NUMBOR <> ' ' AND  "			                     
		cQuery += "D_E_L_E_T_=' '"                                             				
	
		cQuery 		:= ChangeQuery(cQuery)                 
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)
					
		If !( cAliasQRY )->( Eof()) 
			
			While !( cAliasQRY )->( Eof()) 	
					
					SE1->( dbGoto(  ( cAliasQRY )->RECNOSE1 ) )													
					
					dbSelectArea("SFQ") 
					RecLock("SFQ",.T.)
					SFQ->FQ_FILIAL  := 	xFilial("SFQ")
					SFQ->FQ_ENTORI  := 	"E1B"
					SFQ->FQ_PREFORI := 	cPrefSe1
					SFQ->FQ_NUMORI  := 	cNumSe1
					SFQ->FQ_PARCORI :=	cParcSe1
					SFQ->FQ_TIPOORI := 	cTipoSe1		
					SFQ->FQ_CFORI   := 	cCfSe1
					SFQ->FQ_LOJAORI := 	cLojaSe1								
					SFQ->FQ_SEQORI	 :=	cSequencia 	
					SFQ->FQ_ENTDES  := 	"E1B"
					SFQ->FQ_PREFDES := 	SE1->E1_PREFIXO
					SFQ->FQ_NUMDES  := 	SE1->E1_NUM
					SFQ->FQ_PARCDES := 	SE1->E1_PARCELA                             
					SFQ->FQ_TIPODES := 	SE1->E1_TIPO
					SFQ->FQ_CFDES   := 	SE1->E1_CLIENTE
					SFQ->FQ_LOJADES := 	SE1->E1_LOJA					
					SFQ->FQ_SEQDES  := 	SE5->E5_SEQ											
					MsUnlock()	                                
					
					cSequencia 	:= FaNxtSeqBx("SE1")  // Sequencia da baixa do adiantamento + 1
					nMoedaBco 	:= Max( MoedaBco(cBanco,cAgencia,cConta), 1)
						
					RecLock("SE5",.T.)
					SE5->E5_FILIAL	  	:= xFilial("SE5")
					SE5->E5_BANCO	  	:= cBanco
					SE5->E5_AGENCIA  	:= cAgencia
					SE5->E5_CONTA	  	:= cConta
					SE5->E5_DATA 	  	:= dBaixa
					SE5->E5_DTDISPO 	:= IIF(EMpty(dDtCredito),dDataDisp,dDtCRedito)
					SE5->E5_MOEDA  	:= StrZero(nMoedaBco,2)
					SE5->E5_TXMOEDA	:= nTxMoeda											
					
					SE5->E5_VALOR 		:= SE1->E1_VALOR 
					SE5->E5_VRETPIS 	:= Iif(SE1->E1_SABTPIS=0,SE1->E1_PIS,SE1->E1_SABTPIS)
					SE5->E5_VRETCOF 	:= Iif(SE1->E1_SABTCOF=0,SE1->E1_COFINS,SE1->E1_SABTCOF)
					SE5->E5_VRETCSL 	:= Iif(SE1->E1_SABTCSL=0,SE1->E1_CSLL,SE1->E1_SABTCSL)
                                    
					SE5->E5_NATUREZ	:= SE1->E1_NATUREZ
					SE5->E5_RECPAG		:= cRecPag
					SE5->E5_TIPO 		:= SE1->E1_TIPO
					SE5->E5_LA			:= Iif(lPadrao.and.lContabiliza,"S","N")
					SE5->E5_TIPODOC	:= cTpDoc
					SE5->E5_HISTOR		:= "Bx. Bord. Ac." // Registro referente a bordero criado no fina061 acumulado em outro titulo.
					SE5->E5_TIPODOC	:= cTpDoc
					SE5->E5_LOTE		:= cLoteFin
					SE5->E5_PREFIXO 	:= SE1->E1_PREFIXO
					SE5->E5_NUMERO		:= SE1->E1_NUM
					SE5->E5_PARCELA	:= SE1->E1_PARCELA
					SE5->E5_CLIFOR		:= SE1->E1_CLIENTE
					SE5->E5_CLIENTE	:= SE1->E1_CLIENTE
					SE5->E5_LOJA		:= SE1->E1_LOJA
					SE5->E5_SEQ			:= cSequencia
					SE5->E5_BENEF		:= SE1->E1_NOMCLI
					SE5->E5_DTDIGIT	:= dDataBase
					SE5->E5_MOTBX		:= TrazCodMot( cMotBx )
					SE5->E5_SERREC		:= SE1->E1_SERREC
					SE5->E5_ORDREC		:= SE1->E1_RECIBO
					SE5->E5_FILORIG	:= SE1->E1_FILORIG//cFilAnt					
					SE5->E5_PRETPIS 	:= "2"
					SE5->E5_PRETCOF 	:= "2"
					SE5->E5_PRETCSL 	:= "2"										
					MsUnlock()   
					                                            
					RecLock( "SE1", .F. ) 
					SE1->E1_SABTPIS 	:=	0
					SE1->E1_SABTCOF	:=	0
					SE1->E1_SABTCSL	:=	0		                               					
					SE1->( MsUnlock() )  																								               
			
	     			( cAliasQRY )->(Dbskip())       		
	
			Enddo                                           
		Endif			
		( cAliasQRY )->(DbCloseArea())   						
		
	#ENDIF    				
	
	#IFDEF TOP 		        	   
				   
	  	cAliasQry := GetNextAlias()
			
		cQuery := "SELECT E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, "
		cQuery += "E5_VALOR, E5_PRETPIS, E5_PRETCOF, E5_PRETCSL, E5_VRETPIS, E5_VRETCSL, E5_VRETCOF, "		
		cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
		cQuery += RetSqlName( "SE5" ) + " SE5 " 
		cQuery += "WHERE " 
		cQuery += "E5_FILIAL='"    + 		xFilial("SE5")   		+ "' AND " 			
		cQuery += "E5_CLIFOR='"		+ 		SE5->E5_CLIFOR		 	+ "' AND " 	
		cQuery += "E5_LOJA='"		+ 		SE5->E5_LOJA			+ "' AND "				
		cQuery += " E5_DATA >= '"	+ 		DToS( dDataIni )     + "' AND "		
		cQuery += " E5_DATA <= '"	+ 		DToS( dDataFim )     + "' AND " 
		cQuery += " (E5_PRETPIS = '8' AND E5_PRETCOF = '8' AND E5_PRETCSL = '8')  AND  "		
		cQuery += "D_E_L_E_T_=' '"                                             	
		
		cQuery 		:= ChangeQuery(cQuery)                 
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)
					
		If !( cAliasQRY )->( Eof()) 			
			While !( cAliasQRY )->( Eof()) 	
					
					SE5->( dbGoto(  ( cAliasQRY )->RECNOSE5 ) ) 	     			
	     			
	     			RecLock( "SE5", .F. ) 
					SE5->E5_PRETPIS 	:= "9"
					SE5->E5_PRETCOF 	:= "9"
					SE5->E5_PRETCSL 	:= "9"										
					SE5->( MsUnlock() )  																								               

	     			dbSelectArea("SFQ") 
					RecLock("SFQ",.T.)
					SFQ->FQ_FILIAL  := 	xFilial("SFQ")
					SFQ->FQ_ENTORI  := 	"E1B"
					SFQ->FQ_PREFORI := 	cPrefSe1
					SFQ->FQ_NUMORI  := 	cNumSe1
					SFQ->FQ_PARCORI :=	cParcSe1
					SFQ->FQ_TIPOORI := 	cTipoSe1		
					SFQ->FQ_CFORI   := 	cCfSe1
					SFQ->FQ_LOJAORI := 	cLojaSe1								
					SFQ->FQ_SEQORI	 :=	cSequencia 	
					SFQ->FQ_ENTDES  := 	"E1B"
					SFQ->FQ_PREFDES := 	SE5->E5_PREFIXO
					SFQ->FQ_NUMDES  := 	SE5->E5_NUMERO
					SFQ->FQ_PARCDES := 	SE5->E5_PARCELA                             
					SFQ->FQ_TIPODES := 	SE5->E5_TIPO
					SFQ->FQ_CFDES   := 	SE5->E5_CLIFOR
					SFQ->FQ_LOJADES := 	SE5->E5_LOJA					
					SFQ->FQ_SEQDES  := 	SE5->E5_SEQ											
					MsUnlock() 					
	     			
	     			( cAliasQRY )->(Dbskip())	
			Enddo                                           
		Endif			

		( cAliasQRY )->(DbCloseArea())   						
		
	#ENDIF    		

Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PTO DE ENTRADA F70E5ADT												  ³
//³ Tratamento complementar da baixa de adiantamento				  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF ExistBlock("F70E5ADT")
	ExecBlock("F70E5ADT",.f.,.f.)
Endif

If GetNewPar("MV_FATDIST","N") == "S" // Apenas quando utilizado pelo modulo de Distribuicao
	DSe5Fi070()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA			                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("SE5FI070")
	ExecBlock('SE5FI070',.f.,.F.)
Endif

RestArea(aAreaSE1)       
RestArea(aAreaSFQ)       
RestArea(aArea)
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa070ValMo³ Autor ³ Valter G. Nogueira Jr.³ Data ³ 04/03/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Consiste o motivo de baixa em rela‡„o a situa‡„o do t¡tulo  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Fa070ValMo()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Gen‚rico																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa070ValMo()

LOCAL lRet := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para o usuário fazer	a sua própria  ³
//³ validação a respeito do motivo da baixa.				   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("F070VMOT")
	lRet := ExecBlock("F070VMOT",.F.,.F.)
	Return lRet
Endif

If !(SE1->E1_SITUACA $ "0FG") .and. !MovBcoBx(cMotBx, .T.)
	lRet := .F.
EndIf

If ! lRet
	Help(" ",1,"FA070MOTINV")
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fa070estra³ Autor ³ Wilson Junior 		  ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para consistir o valor digitado em M.Forte³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA070ESTRANG() 														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
function fa070Estrang(nTxMoeda)
Local lRet := .t.
Local nSaldtit := nValEstrang-Round(xMoeda(nJuros+nMulta-nDescont+nAcresc-nDecresc,nMoedaBco,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),2)

If ExistBlock("FA070CMI")
	ExecBlock("FA070CMI",.F.,.F.)
Endif

IF Int(nSaldtit) > Int(SE1->E1_SALDO)
	lRet := .F.
Endif
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fa070Adiant ³ Autor ³ Vincius S. Barreira	 ³ Data ³ 26/10/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Processa baixa de adiantamento.										 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fa070Adiant( )																 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																		 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa070Adiant( lPadrao, lContabiliza, lGerChqAdt, aBaixas, dDtCredito , nTxMoeda )

Local nTamSeq		:= TamSX3("E5_SEQ")[1]
Local cSequencia 	:= Replicate("0",nTamSeq)
Local nRetencao
Local dDataDisp
Local nCont
Local aTipoDoc 		:= {}
Local i 			:= 0
Local lSpbInUse := SpbInUse()
Local lAcreDecre := .F.
Local nMoedaBco := Max(MoedaBco(cBanco,cAgencia,cConta),1)
Local nMoedaTit := SE1->E1_MOEDA
Local nTxMdTit  := If( cPaisLoc<>"BRA", aTxMoedas[Max(SE1->E1_MOEDA	,1)][2]	, 0 )
Local nTxMdBco  := If( cPaisLoc<>"BRA", aTxMoedas[Max(nMoedaBco		,1)][2]	, 0 )
Local nRecBA	:= 0

DEFAULT lGerChqAdt := .F.
DEFAULT aBaixas := {}
DEFAULT dDtCredito	:= CtoD("")

//verifica se existem os campos de valores de acrescimo e decrescimo no SE5
If SE5->(FieldPos("E5_VLACRES")) > 0 .and. SE5->(FieldPos("E5_VLDECRE")) > 0
	lAcreDecre := .T.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Localiza a sequencia da baixa ( CP,BA,VL,V2,LJ )				  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aTipoDoc := {"CP","BA","VL","V2"}
SE5->(dbSetOrder(2))
FOR I := 1 to Len(aTipoDoc)
	SE5->(dbSeek(xFilial("SE5") + aTipoDoc[i] + SE1->E1_PREFIXO + SE1->E1_NUM + ;
	SE1->E1_PARCELA + SE1->E1_TIPO ))
	While !SE5->(Eof())								.And. ;
		SE5->E5_FILIAL  == xFilial("SE5")		.And. ;
		SE5->E5_TIPODOC == aTipoDoc[i]     .And. ;	
		SE5->E5_PREFIXO == SE1->E1_PREFIXO .And. ;
		SE5->E5_NUMERO  == SE1->E1_NUM		.And. ;
		SE5->E5_PARCELA == SE1->E1_PARCELA .And. ;
		SE5->E5_TIPO	  == SE1->E1_TIPO
			
		If PadL(AllTrim(cSequencia),nTamSeq,"0") < PadL(AllTrim(SE5->E5_SEQ),nTamSeq,"0")
			cSequencia := SE5->E5_SEQ
		Endif
		SE5->(dbSkip())
	EndDo
Next I
If Len(AllTrim(cSequencia)) < nTamSeq
	cSequencia := PadL(Alltrim(cSequencia),nTamSeq,"0")
Endif
cSequencia := Soma1(cSequencia,nTamSeq)
SE5->(dbSetOrder(1))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Reclock( "SE5", .T. )
SE5->E5_FILIAL := xFilial("SE5")
SE5->E5_NUMERO := SE1->E1_NUM
SE5->E5_PREFIXO:= SE1->E1_PREFIXO
SE5->E5_RECPAG := "P"
SE5->E5_TIPO	:= SE1->E1_TIPO
SE5->E5_PARCELA:= SE1->E1_PARCELA
SE5->E5_TIPODOC:= Iif( (MovBcoBx(cMotBx, .T.) .or. SE1->E1_TIPO $ MVRECANT) .And. !lGerChqAdt,"VL","BA")  //Dever  ser VL, pois o saldo j  foi atualizado
SE5->E5_MOTBX	:= TrazCodMot( cMotBx )
SE5->E5_BANCO	:= cBanco
SE5->E5_AGENCIA:= cAgencia
SE5->E5_CONTA	:= cConta
SE5->E5_DATA	:= dBaixa
SE5->E5_VALOR	:= nValRec
SE5->E5_NATUREZ:= SE1->E1_NATUREZ
SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
SE5->E5_HISTOR := cHist070
SE5->E5_LOTE	:= cLoteFin
SE5->E5_CLIFOR := SE1->E1_CLIENTE
SE5->E5_CLIENTE:= SE1->E1_CLIENTE
SE5->E5_LOJA	:= SE1->E1_LOJA
SE5->E5_BENEF	:= SE1->E1_NOMCLI
SE5->E5_DTDIGIT:= dDataBase
SE5->E5_SEQ 	:= cSequencia
SE5->E5_VLJUROS := nJuros
SE5->E5_VLMULTA := nMulta
SE5->E5_VLDESCO := nDescont
SE5->E5_VLCORRE := nCm 
SE5->E5_FILORIG := SE1->E1_FILORIG
If ( cPaisLoc<>"BRA" )
 	If AllTrim(Upper(SE1->E1_ORIGEM)) <> "FINA074"
    	If nValEstrang != 0
			SE5->E5_VLMOED2	:= nValEstrang
		Else 
			SE5->E5_VLMOED2	:= nValRec	
		Endif
	Else
		SE5->E5_VLMOED2	:= nValRec
	EndIf
	SE5->E5_MOEDA	:= StrZero(nMoedaBco,2)
	If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
Else
	If SE1->E1_MOEDA>1 .And. nValEstrang != 0
		Replace SE5->E5_VLMOED2	With nValEstrang
		Replace SE5->E5_TXMOEDA	With nTxMoeda
	Else
		Replace SE5->E5_VLMOED2 With xMoeda(nValRec,1,SE1->E1_MOEDA)
	EndIf
Endif
SE5->E5_DTDISPO	:= IIF(EMpty(dDtCredito),dBaixa,dDtCRedito)
If lSpbInUse
	SE5->E5_MODSPB := "1"
Endif
nRecBA := SE5->(Recno())

//Guardo informacoes da baixa para calculo de comissao quando baixa de NCC gerada por
//liquidacao
If !(EMPTY(SE1->E1_NUMLIQ))
	aadd(aBaixas,{SE5->E5_MOTBX,SE5->E5_SEQ,SE5->(Recno())})
Endif

If lAcreDecre
	Replace E5_VLACRES   With Round(NoRound(xMoeda(SE1->E1_SDACRES,SE1->E1_MOEDA,1,dBaixa,3,SE1->E1_TXMOEDA),3),2)
	Replace E5_VLDECRE   With Round(NoRound(xMoeda(SE1->E1_SDDECRE,SE1->E1_MOEDA,1,dBaixa,3,SE1->E1_TXMOEDA),3),2)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gravação de Dados Complementares SE5 para: Recebimentos ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("FA070ADTSE5")
	ExecBlock("FA070ADTSE5",.F.,.F.)
EndIf

If ( If(cPaisLoc<>"CHI",nJuros>0,nOtrga>0) ) .And. MovBcoBx(cMotBx, .T.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Reclock( "SE5", .T. )
	SE5->E5_FILIAL := xFilial("SE5")
	SE5->E5_NUMERO := SE1->E1_NUM
	SE5->E5_PREFIXO:= SE1->E1_PREFIXO
	SE5->E5_RECPAG := "P"
	SE5->E5_TIPO	:= SE1->E1_TIPO
	SE5->E5_PARCELA:= SE1->E1_PARCELA
	SE5->E5_TIPODOC:= "JR"
	SE5->E5_MOTBX	:= "NOR"
	SE5->E5_BANCO	:= cBanco
	SE5->E5_AGENCIA:= cAgencia
	SE5->E5_CONTA	:= cConta
	SE5->E5_DATA	:= dBaixa
	If ( cPaisLoc <> "BRA" )
		SE5->E5_VALOR	:= xMoeda( nJuros+nOtrga, nMoedaTit, nMoedaBco,,, nTxMdTit, nTxMdBco )
	Else
		SE5->E5_VALOR	:= nJuros
	Endif
	SE5->E5_NATUREZ:= SE1->E1_NATUREZ
	SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
	SE5->E5_HISTOR := OemToAnsi(STR0019) //JUROS DE ADIANTAMENTO"
	SE5->E5_LOTE	:= cLoteFin
	SE5->E5_CLIFOR := SE1->E1_CLIENTE
	SE5->E5_CLIENTE := SE1->E1_CLIENTE
	SE5->E5_LOJA	:= SE1->E1_LOJA
	SE5->E5_BENEF	:= SE1->E1_NOMCLI
	SE5->E5_DTDIGIT:= dDataBase
	SE5->E5_SEQ 	:= cSequencia
	If ( cPaisLoc <> "BRA" )
		SE5->E5_VLMOED2:= nJuros+nOtrga
		If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
		SE5->E5_MOEDA := StrZero(nMoedaBco,2)
	Else
		SE5->E5_VLMOED2:= xMoeda(nJuros,1,SE1->E1_MOEDA)
	Endif
	SE5->E5_DTDISPO	:= dBaixa
	If lSpbInUse
		SE5->E5_MODSPB := "1"
	Endif   
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravação de Dados Complementares SE5 para: Juros ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA070ADTSE5")
		ExecBlock("FA070ADTSE5",.F.,.F.)
	EndIf
	
Endif

If nCM != 0 .and. MovBcoBx( cMotBx, .T. )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Reclock( "SE5", .T. )
	SE5->E5_FILIAL := xFilial("SE5")
	SE5->E5_NUMERO := SE1->E1_NUM
	SE5->E5_PREFIXO:= SE1->E1_PREFIXO
	SE5->E5_RECPAG := "P"
	SE5->E5_TIPO	:= SE1->E1_TIPO
	SE5->E5_PARCELA:= SE1->E1_PARCELA
	SE5->E5_TIPODOC:= "CM"
	SE5->E5_MOTBX	:= "NOR"
	SE5->E5_BANCO	:= cBanco
	SE5->E5_AGENCIA:= cAgencia
	SE5->E5_CONTA	:= cConta
	SE5->E5_DATA	:= dBaixa
 	SE5->E5_VALOR	:= nCm
 	SE5->E5_NATUREZ:= SE1->E1_NATUREZ
	SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
	SE5->E5_HISTOR := OemToAnsi( STR0020) //CORREC.DE ADIANTAMENTO
	SE5->E5_LOTE	:= cLoteFin
	SE5->E5_CLIFOR := SE1->E1_CLIENTE
	SE5->E5_CLIENTE := SE1->E1_CLIENTE
	SE5->E5_LOJA	:= SE1->E1_LOJA
	SE5->E5_BENEF	:= SE1->E1_NOMCLI
	SE5->E5_DTDIGIT:= dDataBase
	SE5->E5_SEQ 	:= cSequencia
	If ( cPaisLoc <> "BRA" )
		SE5->E5_VLMOED2:= xMoeda(nCM,1,SE1->E1_MOEDA,,3,,nTxMdTit) 
		If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
	  		SE5->E5_MOEDA := StrZero(nMoedaBco,2)
  		Else
			SE5->E5_VLMOED2:= xMoeda(nCM,1,SE1->E1_MOEDA)  
	Endif
	SE5->E5_DTDISPO	:= dBaixa
	If lSpbInUse
		SE5->E5_MODSPB := "1"
	Endif 
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravação de Dados Complementares SE5 para: Corr Monet ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA070ADTSE5")
		ExecBlock("FA070ADTSE5",.F.,.F.)
	EndIf
	
Endif

If nDescont > 0 .and. MovBcoBx( cMotBx, .T. )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Reclock( "SE5", .T. )
	SE5->E5_FILIAL := xFilial("SE5")
	SE5->E5_NUMERO := SE1->E1_NUM
	SE5->E5_PREFIXO:= SE1->E1_PREFIXO
	SE5->E5_RECPAG := "P"
	SE5->E5_TIPO	:= SE1->E1_TIPO
	SE5->E5_PARCELA:= SE1->E1_PARCELA
	SE5->E5_TIPODOC:= "DC"
	SE5->E5_MOTBX	:= "NOR"
	SE5->E5_BANCO	:= cBanco
	SE5->E5_AGENCIA:= cAgencia
	SE5->E5_CONTA	:= cConta
	SE5->E5_DATA	:= dBaixa
	If ( cPaisLoc <> "BRA" )
		SE5->E5_VALOR	:= xMoeda( nDescont, nMoedaTit, nMoedaBco,,, nTxMdTit, nTxMdBco )
	Else
		SE5->E5_VALOR	:= nDescont
	Endif
	SE5->E5_NATUREZ:= SE1->E1_NATUREZ
	SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
	SE5->E5_HISTOR	:= OemToAnsi( STR0021 ) //DESCONTO DE ADIANTAMENTO
	SE5->E5_LOTE	:= cLoteFin
	SE5->E5_CLIFOR := SE1->E1_CLIENTE
	SE5->E5_CLIENTE := SE1->E1_CLIENTE
	SE5->E5_LOJA	:= SE1->E1_LOJA
	SE5->E5_BENEF	:= SE1->E1_NOMCLI
	SE5->E5_DTDIGIT:= dDataBase
	SE5->E5_SEQ 	:= cSequencia
	If ( cPaisLoc <> "BRA" )
		SE5->E5_VLMOED2:= nDescont
		If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
		SE5->E5_MOEDA := StrZero(nMoedaBco,2)
	Else
		SE5->E5_VLMOED2:= xMoeda(nDescont,1,SE1->E1_MOEDA)
	Endif
	SE5->E5_DTDISPO	:= dBaixa
	If lSpbInUse
		SE5->E5_MODSPB := "1"
	Endif    
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravação de Dados Complementares SE5 para: desconto ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA070ADTSE5")
		ExecBlock("FA070ADTSE5",.F.,.F.)
	EndIf
	
Endif

If nMulta > 0 .and. MovBcoBx( cMotBx, .T. )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Reclock( "SE5", .T. )
	SE5->E5_FILIAL := xFilial("SE5")
	SE5->E5_NUMERO := SE1->E1_NUM
	SE5->E5_PREFIXO:= SE1->E1_PREFIXO
	SE5->E5_RECPAG := "P"
	SE5->E5_TIPO	:= SE1->E1_TIPO
	SE5->E5_PARCELA:= SE1->E1_PARCELA
	SE5->E5_TIPODOC:= "MT"
	SE5->E5_MOTBX	:= "NOR"
	SE5->E5_BANCO	:= cBanco
	SE5->E5_AGENCIA:= cAgencia
	SE5->E5_CONTA	:= cConta
	SE5->E5_DATA	:= dBaixa
	If ( cPaisLoc <> "BRA" )
		SE5->E5_VALOR	:= xMoeda( nMulta, nMoedaTit, nMoedaBco,,, nTxMdTit, nTxMdBco )
	Else
		SE5->E5_VALOR	:= nMulta
	Endif
	SE5->E5_NATUREZ:= SE1->E1_NATUREZ
	SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
	SE5->E5_HISTOR := OemToAnsi( STR0022 )  //MULTA DE ADIANTAMENTO
	SE5->E5_LOTE	:= cLoteFin
	SE5->E5_CLIFOR := SE1->E1_CLIENTE
	SE5->E5_CLIENTE := SE1->E1_CLIENTE
	SE5->E5_LOJA	:= SE1->E1_LOJA
	SE5->E5_BENEF	:= SE1->E1_NOMCLI
	SE5->E5_DTDIGIT:= dDataBase
	SE5->E5_SEQ 	:= cSequencia
	If ( cPaisLoc <> "BRA" )
		SE5->E5_VLMOED2:= nMulta
		If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
		SE5->E5_MOEDA := StrZero(nMoedaBco,2)
	Else
		SE5->E5_VLMOED2:= xMoeda(nMulta,1,SE1->E1_MOEDA)
	Endif
	SE5->E5_DTDISPO	:= dBaixa
	If lSpbInUse
		SE5->E5_MODSPB := "1"
	Endif      
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravação de Dados Complementares SE5 para: Multa ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA070ADTSE5")
		ExecBlock("FA070ADTSE5",.F.,.F.)
	EndIf
	
Endif

If cPaisLoc $ "ARG|ANG|COL|MEX"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gerar a Movimentacao Bancaria na 2a. Moeda.  		  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SA6->( dbSeek(xFilial("SA6")+cBanco+cAgencia+cConta) )
	If !Empty(SA6->A6_MOEDA) .and. ( SA6->A6_MOEDA != SE1->E1_MOEDA )
		Reclock( "SE5", .T. )
		SE5->E5_FILIAL := xFilial("SE5")
		SE5->E5_MOEDA  := StrZero(SA6->A6_MOEDA,2)
		SE5->E5_NUMERO := SE1->E1_NUM
		SE5->E5_PREFIXO:= SE1->E1_PREFIXO
		SE5->E5_RECPAG := "P"
		SE5->E5_TIPO	:= SE1->E1_TIPO
		SE5->E5_PARCELA:= SE1->E1_PARCELA
		SE5->E5_TIPODOC:= Iif(MovBcoBx(cMotBx, .T.),"VL","BA")  //Dever  ser VL, pois o saldo j  foi atualizado
		SE5->E5_MOTBX	:= TrazCodMot( cMotBx )
		SE5->E5_BANCO	:= cBanco
		SE5->E5_AGENCIA:= cAgencia
		SE5->E5_CONTA	:= cConta
		SE5->E5_DATA	:= dBaixa
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VALOR	:= xMoeda(nValRec,nMoedaTit,nMoedaBco,,, nTxMdTit, nTxMdBco )
		Else
			SE5->E5_VALOR	:= xMoeda(nValRec,1,SA6->A6_MOEDA)
		Endif
		SE5->E5_NATUREZ:= SE1->E1_NATUREZ
		SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
		SE5->E5_HISTOR := Iif(cPaisLoc=="BRA",OemToAnsi( STR0023 ),cHist070)		//BAIXA DE ADIANTAMENTO
		SE5->E5_LOTE	:= cLoteFin
		SE5->E5_CLIFOR := SE1->E1_CLIENTE
		SE5->E5_CLIENTE := SE1->E1_CLIENTE
		SE5->E5_LOJA	:= SE1->E1_LOJA
		SE5->E5_BENEF	:= SE1->E1_NOMCLI
		SE5->E5_DTDIGIT:= dDataBase
		SE5->E5_SEQ 	:= cSequencia
		If nValEstrang != 0
			Replace E5_VLMOED2	With nValEstrang
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
			SE5->E5_MOEDA := StrZero(nMoedaBco,2)
		Else
			Replace SE5->E5_VLMOED2  With xMoeda(nValRec,1,SA6->A6_MOEDA)
		EndIf
		nRetencao		:= SA6->A6_RETENCAO
		dDataDisp		:= SE5->E5_DATA
		If nRetencao > 0
			For nCont := 1 To nRetencao
				dDataDisp 	:= DataValida(dDataDisp+1,.T.)
			Next nCont
		End
		SE5->E5_DTDISPO	:= dDataDisp 
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: 2 moeda ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA070ADTSE5")
			ExecBlock("FA070ADTSE5",.F.,.F.)
		EndIf
		
	EndIf	
	
	If ( If(cPaisLoc<>"CHI",nJuros>0,nOtrga>0) ) .And. MovBcobX( cMotBx, .T. )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Reclock( "SE5", .T. )
		SE5->E5_FILIAL := xFilial("SE5")
		SE5->E5_MOEDA  := StrZero(SA6->A6_MOEDA,2)
		SE5->E5_NUMERO := SE1->E1_NUM
		SE5->E5_PREFIXO:= SE1->E1_PREFIXO
		SE5->E5_RECPAG := "P"
		SE5->E5_TIPO	:= SE1->E1_TIPO
		SE5->E5_PARCELA:= SE1->E1_PARCELA
		SE5->E5_TIPODOC:= "JR"
		SE5->E5_MOTBX	:= "NOR"
		SE5->E5_BANCO	:= cBanco
		SE5->E5_AGENCIA:= cAgencia
		SE5->E5_CONTA	:= cConta
		SE5->E5_DATA	:= dBaixa
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VALOR	:= xMoeda(nJuros+nOtrga,nMoedaTit,nMoedaBco,,, nTxMdTit, nTxMdBco )
		Else
			SE5->E5_VALOR	:= nJuros
		Endif
		SE5->E5_NATUREZ:= SE1->E1_NATUREZ
		SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
		SE5->E5_HISTOR := OemToAnsi( STR0019)  //JUROS DE ADIANTAMENTO"
		SE5->E5_LOTE	:= cLoteFin
		SE5->E5_CLIFOR := SE1->E1_CLIENTE
		SE5->E5_CLIENTE := SE1->E1_CLIENTE
		SE5->E5_LOJA	:= SE1->E1_LOJA
		SE5->E5_BENEF	:= SE1->E1_NOMCLI
		SE5->E5_DTDIGIT:= dDataBase
		SE5->E5_SEQ 	:= cSequencia
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VLMOED2:= nJuros+nOtrga
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
			SE5->E5_MOEDA := StrZero(nMoedaBco,2)
		Else
			SE5->E5_VLMOED2:= xMoeda(nJuros,1,SA6->A6_MOEDA)
		Endif
		nRetencao		:= SA6->A6_RETENCAO
		dDataDisp		:= SE5->E5_DATA
		If nRetencao > 0
			For nCont := 1 To nRetencao
				dDataDisp 	:= DataValida(dDataDisp+1,.T.)
			Next nCont
		Endif
		SE5->E5_DTDISPO	:= dDataDisp  
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: Juros ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA070ADTSE5")
			ExecBlock("FA070ADTSE5",.F.,.F.)
		EndIf
		
	Endif
	
	If nCM != 0 .and. MovBcoBx( cMotBx, .T. )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Reclock( "SE5", .T. )
		SE5->E5_FILIAL := xFilial("SE5")
		SE5->E5_MOEDA  := StrZero(SA6->A6_MOEDA,2)
		SE5->E5_NUMERO := SE1->E1_NUM
		SE5->E5_PREFIXO:= SE1->E1_PREFIXO
		SE5->E5_RECPAG := "P"
		SE5->E5_TIPO	:= SE1->E1_TIPO
		SE5->E5_PARCELA:= SE1->E1_PARCELA
		SE5->E5_TIPODOC:= "CM"
		SE5->E5_MOTBX	:= "NOR"
		SE5->E5_BANCO	:= cBanco
		SE5->E5_AGENCIA:= cAgencia
		SE5->E5_CONTA	:= cConta
		SE5->E5_DATA	:= dBaixa
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VALOR	:= xMoeda(nCM,nMoedaTit,nMoedaBco,,, nTxMdTit, nTxMdBco )
		Else
			SE5->E5_VALOR	:= nCM
		Endif
		SE5->E5_NATUREZ:= SE1->E1_NATUREZ
		SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
		SE5->E5_HISTOR := OemToAnsi( STR0020) //CORREC.DE ADIANTAMENTO"
		SE5->E5_LOTE	:= cLoteFin
		SE5->E5_CLIFOR := SE1->E1_CLIENTE
		SE5->E5_CLIENTE:= SE1->E1_CLIENTE
		SE5->E5_LOJA	:= SE1->E1_LOJA
		SE5->E5_BENEF	:= SE1->E1_NOMCLI
		SE5->E5_DTDIGIT:= dDataBase
		SE5->E5_SEQ 	:= cSequencia
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VLMOED2:= nCM
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
			SE5->E5_MOEDA := StrZero(nMoedaBco,2)
		Else
			SE5->E5_VLMOED2:= xMoeda(nCM,1,SA6->A6_MOEDA)
		Endif
		nRetencao		:= SA6->A6_RETENCAO
		dDataDisp		:= SE5->E5_DATA
		If nRetencao > 0
			For nCont := 1 To nRetencao
				dDataDisp := DataValida(dDataDisp+1,.T.)
			Next nCont
		Endif
		SE5->E5_DTDISPO	:= dDataDisp 
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: Correc Monet ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA070ADTSE5")
			ExecBlock("FA070ADTSE5",.F.,.F.)
		EndIf
		
	Endif
	
	If nDescont > 0 .and. MovBcoBx( cMotBx, .T. )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Reclock( "SE5", .T. )
		SE5->E5_FILIAL := xFilial("SE5")
		SE5->E5_MOEDA  := StrZero(SA6->A6_MOEDA,2)
		SE5->E5_NUMERO := SE1->E1_NUM
		SE5->E5_PREFIXO:= SE1->E1_PREFIXO
		SE5->E5_RECPAG := "P"
		SE5->E5_TIPO	:= SE1->E1_TIPO
		SE5->E5_PARCELA:= SE1->E1_PARCELA
		SE5->E5_TIPODOC:= "DC"
		SE5->E5_MOTBX	:= "NOR"
		SE5->E5_BANCO	:= cBanco
		SE5->E5_AGENCIA:= cAgencia
		SE5->E5_CONTA	:= cConta
		SE5->E5_DATA	:= dBaixa
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VALOR	:= xMoeda(nDescont,nMoedaTit,nMoedaBco,,, nTxMdTit, nTxMdBco )
		Else
			SE5->E5_VALOR	:= nDescont
		Endif
		SE5->E5_NATUREZ:= SE1->E1_NATUREZ
		SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
		SE5->E5_HISTOR := OemToAnsi( STR0021) //DESCONTO DE ADIANTAMENTO"
		SE5->E5_LOTE	:= cLoteFin
		SE5->E5_CLIFOR := SE1->E1_CLIENTE
		SE5->E5_CLIENTE:= SE1->E1_CLIENTE
		SE5->E5_LOJA	:= SE1->E1_LOJA
		SE5->E5_BENEF	:= SE1->E1_NOMCLI
		SE5->E5_DTDIGIT:= dDataBase
		SE5->E5_SEQ 	:= cSequencia
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VLMOED2:= nDescont
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
			SE5->E5_MOEDA := StrZero(nMoedaBco,2)
		Else
			SE5->E5_VLMOED2:= xMoeda(nDescont,1,SA6->A6_MOEDA)
		Endif
		nRetencao		:= SA6->A6_RETENCAO
		dDataDisp		:= SE5->E5_DATA
		If nRetencao > 0
			For nCont := 1 To nRetencao
				dDataDisp 	:= DataValida(dDataDisp+1,.T.)
			Next nCont
		Endif
		SE5->E5_DTDISPO	:= dDataDisp  
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: DC ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA070ADTSE5")
			ExecBlock("FA070ADTSE5",.F.,.F.)
		EndIf
		
	Endif
	
	If	nMulta > 0 .and. MovBcoBx( cMotBx, .T. )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera movimenta‡„o banc ria a pagar - baixa do adiantamento				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Reclock( "SE5", .T. )
		SE5->E5_FILIAL := xFilial("SE5")
		SE5->E5_MOEDA  := StrZero(SA6->A6_MOEDA,2)
		SE5->E5_NUMERO := SE1->E1_NUM
		SE5->E5_PREFIXO:= SE1->E1_PREFIXO
		SE5->E5_RECPAG := "P"
		SE5->E5_TIPO	:= SE1->E1_TIPO
		SE5->E5_PARCELA:= SE1->E1_PARCELA
		SE5->E5_TIPODOC:= "MT"
		SE5->E5_MOTBX	:= "NOR"
		SE5->E5_BANCO	:= cBanco
		SE5->E5_AGENCIA:= cAgencia
		SE5->E5_CONTA	:= cConta
		SE5->E5_DATA	:= dBaixa
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VALOR	:= xMoeda(nMulta,nMoedaTit,nMoedaBco,,, nTxMdTit, nTxMdBco )
		Else
			SE5->E5_VALOR	:= nMulta
		Endif
		SE5->E5_NATUREZ:= SE1->E1_NATUREZ
		SE5->E5_LA		:= Iif(lPadrao.and.lContabiliza,"S","N")
		SE5->E5_HISTOR := OemToAnsi(STR0022) //MULTA DE ADIANTAMENTO"
		SE5->E5_LOTE	:= cLoteFin
		SE5->E5_CLIFOR := SE1->E1_CLIENTE
		SE5->E5_CLIENTE := SE1->E1_CLIENTE
		SE5->E5_LOJA	:= SE1->E1_LOJA
		SE5->E5_BENEF	:= SE1->E1_NOMCLI
		SE5->E5_DTDIGIT:= dDataBase
		SE5->E5_SEQ 	:= cSequencia
		If ( cPaisLoc <> "BRA" )
			SE5->E5_VLMOED2:= nMulta
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=Max(nTxMdTit,nTxMdBco) ,.T. )
			SE5->E5_MOEDA := StrZero(nMoedaBco,2)
		Else
			SE5->E5_VLMOED2:= xMoeda(nMulta,1,SA6->A6_MOEDA)
		Endif
		nRetencao		:= SA6->A6_RETENCAO
		dDataDisp		:= SE5->E5_DATA
		If nRetencao > 0
			For nCont := 1 To nRetencao
				dDataDisp 	:= DataValida(dDataDisp+1,.T.)
			Next nCont
		Endif
		SE5->E5_DTDISPO	:= dDataDisp   
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: Multa ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA070ADTSE5")
			ExecBlock("FA070ADTSE5",.F.,.F.)
		EndIf
		
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se a baixa for menor que o valor adiantado emite-se um cheque para		³
//³ devolver o que sobrou, Se baixa n„o for GERAR MOVIMENTACAO BANCARIA, 	³
//³ esse cheque n„o ser  gerado, pois o valor adiantado n„o sera devolvido.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lGerChqAdt .And. nValRec > 0 .and. MovBcoBx( cMotBx,.T.) .and. ChqMotBx(cMotBx)
	RecLock("SEF",.T.)
	SEF->EF_FILIAL	:= xFilial("SEF")
	SEF->EF_BANCO	:= cBanco
	SEF->EF_AGENCIA	:= cAgencia
	SEF->EF_CONTA	:= cConta
	SEF->EF_VALOR	:= nValRec
	SEF->EF_DATA	:= dBaixa
	SEF->EF_BENEF	:= SE1->E1_NOMCLI
	SEF->EF_HIST	:= OemToAnsi( STR0008 ) + SE1->E1_HIST//"Devolucao de Adiantamento"
	SEF->EF_PREFIXO	:= SE1->E1_PREFIXO
	SEF->EF_TITULO	:= SE1->E1_NUM
	SEF->EF_PARCELA	:= SE1->E1_PARCELA
	SEF->EF_FORNECE	:= SE1->E1_CLIENTE
	SEF->EF_LOJA	:= SE1->E1_LOJA
	SEF->EF_TIPO	:= SE1->E1_TIPO
	SEF->EF_SEQUENC	:= PadL("1",TamSX3("EF_SEQUENC")[1],"0")
	SEF->EF_ORIGEM	:= "FINA070"
End
// Retorna posicionamento ao E5 tipo BA (contabilizacao)
SE5->( DbGoto( nRecBA ))
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ cPerg070 ³ Autor ³ Wagner Xavier 		  ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada carregar parƒmetros							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ cPerg070()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function cPerg070()
Pergunte("FIN070",.t.)
Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Fa170Nat ³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 11/01/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se a natureza foi cadastrada, se nao, cria.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FINA170()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAFIN                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa170Nat(cNat,cTipo,cFonte)

Local cAlias:= Alias()

dbSelectArea("SED")

If !dbSeek(xFilial("SED")+cNat) .And. !Empty(cNat)
	RecLock("SED",.T.)
	Replace ED_FILIAL 	With xFilial("SED")
	Replace ED_CODIGO		With cNat
	If cTipo == "EMP"
		If cFonte=="FINA170"
			Replace ED_DESCRIC	With STR0010  //"NATUREZA EMPRESTIMOS"
		Else
			Replace ED_DESCRIC	With STR0017  //"NATUREZA PAGTO. EMPRESTIMOS"
		Endif
	Else
		If cFonte=="FINA170"
			Replace ED_DESCRIC	With STR0011  //"NATUREZA APLICACOES"
		Else
			Replace ED_DESCRIC	With STR0018  //"NATUREZA RESGATE APLICACOES"
		Endif
	EndIF	
	Replace ED_CALCIRF	With "N"
	Replace ED_CALCISS	With "N"
	Replace ED_PERCIRF	With 0
	Replace ED_CALCINS	With "N"
	Replace ED_CALCCOF	With "N"
	Replace ED_CALCCSL	With "N"
	Replace ED_CALCPIS	With "N"    
	Replace ED_TIPO		With "2"
	MsUnlock()
EndIf		
dbSelectArea(cAlias)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fA330Grv ³ Autor ³ Valter G. Nogueira Jr.³ Data ³ 21/03/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para atualizar a baixa efetuada			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA330Grv(lPadrao) 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FinA330																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA330Grv(lPadrao,nValor,cAdiantamento,cSeq,nRegCmp,aBaixas,cOrigem,lCredito,nContab,;
						nAcresc,nDecres,aBaixaSE5,nTotAbto,aImpPcc,cSequencia,cDadosTitulo,nIrrf,ntotIrbx,nPrIss, nPrInss, lNcc, nDescP, nDescD, nIrrfParc )
                                                   
Local nSaldo		:= 0
Local nSalvRec		:= 0
Local nAtraso		:= 0
Local nTitAcres	:= SE1->E1_SDACRES		//Acrescimo do titulo principal
Local nTitDecre	:= SE1->E1_SDDECRE		//Decrescimo do titulo principal
Local nVlMinImp 	:= GetNewPar("MV_VL10925",5000)
Local lRaRtImp  := lFinImp .And.FRaRtImp() 
//Controla o Pis Cofins e Csll na baixa (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default))
Local lPccBxCr			:= If (FindFunction("FPccBxCr"),FPccBxCr(),.F.)
//Controla IRPJ na baixa
Local lIrPjBxCr		:= If (FindFunction("FIrPjBxCr"),FIrPjBxCr(),.F.)
Local lCalcIssBx 	:= GetNewPar("MV_MRETISS","1") == "2"  	//Retencao do ISS pela emissao (1) ou baixa (2) 
Local cCliente	:= ""
Local cLoja		:= ""
Local lOkTitAb	:= .F.
Local nTamSeq		:= TamSX3("E5_SEQ")[1]
Local nDecs1 	:= MsDecimais(1)
Local nVrAbat		:= 0 
Local lFina330  	:= IsInCallStack("FINA330")  
Local lCompRa		:=	.F.
//Controle de abatimento
Local lTitpaiSE1 := (SE1->(FieldPos("E1_TITPAI")) > 0)
Local cTipo := ""
Local nOrdTitPai:=0
Local bWhile := {|| !EOF() .And. E1_FILIAL==xFilial("SE1") .And. E1_PREFIXO=cPrefixo	.And.	E1_NUM==cNum .And. E1_PARCELA==cParcela .And. E1_CLIENTE==cCliente .And. E1_LOJA==cLoja}
Local cTipoAux := ""
Local xFilSE1  := SE1->E1_FILIAL 
//Impostos gerados pela rotina de Borderô de Recebimento de Imposto (FINA061).
Local nPisFina061	:=	0
Local nCofFina061	:=	0
Local nCslFina061	:=	0
Local nIrfFina061	:=	0
Local nRegSE5		:=	0
Local nOrdSE5		:=	0
Local nRegAtu		:=	0
Local nX			:=	0
Local nPosRec     := 0
Local ntitulo1	:= 0
Local ni	:= 0
Local nValBaixa	:= 0
Local aAreaSE	:= {}
Local cChave
Local nPropPCC	:= 0
Local lPropBx  := SuperGetMv("MV_PROPBX",.F.,"2") == "1"
Local aImp		:= {}

DEFAULT cOrigem		:= "  "
DEFAULT lCredito	:= .F.                                                       
DEFAULT nContab	:= 1			//1=Sim, 2=Nao
DEFAULT nAcresc	:= 0
DEFAULT nDecres	:= 0
DEFAULT aBaixaSE5	:= {}
DEFAULT nTotAbto	:= SumAbatRec(cPrefixo,cNum,cParcela,SE1->E1_MOEDA,"S",dBaixa)
DEFAULT aImpPcc	:= {0,0,0}
DEFAULT cSequencia	:= Replicate("0",nTamSeq)
DEFAULT nIrrf	:= 0     
DEFAULT	ntotIrbx:= 0    
DEFAULT nPrIss	:= 0 // Provisionamento do INSS e ISS no RA
DEFAULT nPrInss	:= 0 // Provisionamento do INSS e ISS no RA   
DEFAULT lNcc	:= .F.
DEFAULT nDescP  := 0
DEFAULT nDescD  := 0
DEFAULT nIrrfParc := 0

If dDataBase >= dLastPcc
	nVlMinImp	:= 0
EndIf

// Conversão de valores para garantir que o saldo será abatido conforme moeda do titulo
// Podemos compensar titulos de moedas diferentes, o que causa atenção nas atualizações de saldos
nValor := xMoeda(nValor,nMoeda,SE1->E1_MOEDA,,nDecs1+1,Fa330Tx2(SE1->E1_MOEDA,SE1->E1_TXMOEDA))
nVrAbat	:=	nTotAbto  
If !lNcc
	nTotAbto += iif(lPccBxCr,nPis+nCofins+nCsll,0) 
	nTotAbto -= iif(lRartImp .and. lCredito,nPis+nCofins+nCsll,0)

	nTotAbto += iif(lIrPjBxCr .and. !lCredito,nIrrf,0)

Endif

nRegSE5	:=	SE5->(Recno())
nOrdSE5	:=	SE5->(Dbsetorder())		
If SE1->E1_TIPO <> MVRECANT .AND. SE1->E1_TIPO <> MV_CRNEG .And. (lPccBxCr .Or. lIrPjBxCr)
	dbSelectArea("SE5")
	SE5->(dbSetOrder(2)) //FILIAL + TIPODOC + PREFIXO + NUMERO + PARCELA + TIPO
	If SE5->(DBSeek(xFilial("SE5")+"BA"+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO))
		While !SE5->(Eof()) .and. SE5->E5_FILIAL==xFilial("SE5") .And. ;
			SE5->E5_TIPODOC+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO=="BA"+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO		
		
			If ("FINA061" $ Subst(SE5->E5_HISTOR,1,7)) .And. SE5->E5_MOTBX $ "PCC_IRF"						
				If Alltrim(SE5->E5_MOTBX) == "PCC"
				   nPisFina061	+= SE5->E5_VRETPIS
				   nCofFina061	+=	SE5->E5_VRETCOF
				   nCslFina061	+= SE5->E5_VRETCSL
				ElseIf Alltrim(SE5->E5_MOTBX) == "IRF"
				   nIrfFina061	+= SE5->E5_VRETIRF
				Endif
			Endif					
			SE5->(DbSkip())		
	   Enddo
	Endif
Endif
SE5->(Dbgoto(nRegSE5))
SE5->(Dbsetorder(nOrdSE5))

If ((SE1->E1_SALDO + nTitAcres - nTitDecre - If((mv_par08 == 1.OR. lRaRtImp) .and. !lCredito,nTotAbto,0)) - nValor) <= 0.00999
	nSaldo:= (SE1->E1_SALDO + nTitAcres - nTitDecre - nDescP - If(((mv_par08 == 1 .AND. !lPccBxCr) .OR. lRaRtImp),nTotAbto,0) ) - nValor	// moeda do tit principal
Else
  If (nPisFina061+nCofFina061+nCslFina061+nIrfFina061)> 0 .And. mv_par08 == 2 .And. Alltrim(Upper(FunName())) == "FINA330"
		nSaldo:= SE1->E1_SALDO - (nValor - nTitAcres + nTitDecre) - nDescP   	// moeda do tit principal  
		If nSaldo > 0.009999
			nSaldo += (nPisFina061+nCofFina061+nCslFina061+nIrfFina061)
		Endif
  Else  
		nSaldo:= SE1->E1_SALDO - (nValor	 - nTitAcres + nTitDecre) - nDescP	// moeda do tit principal
		If lCredito .and. !lRartImp .and. mv_par08 == 1
			If nSaldo - ( nPis + nCofins + nCsll ) >= 0
				nSaldo-= ( nPis + nCofins + nCsll )
			EndIf
		EndIf
  Endif	
Endif    

If !lCredito .and. (!lRartimp .and. mv_par08 == 1) //.and. !lNcc
	nSaldo:= SE1->E1_SALDO - (nValor	 - nTitAcres + nTitDecre + nPrIss + nPrInss) - nDescP
	If (nSaldo > 0 .and. lIrPjBxCr) .or. lPropBx 
		nSaldo -= nIrrf
	Endif
	If (nSaldo > 0 .and. lPccBxCr) .or. lPropBx
		nSaldo -= ( nPis + nCofins + nCsll)
	Endif
	If lPropBx .and. nIss > 0 .and. nPrIss == 0
		nSaldo -= nIss
	ElseIf nSaldo > 0 .and. lCalcIssBx .and. !lPropBx
		nSaldo -= nIss
	EndIf
	// Não será usado o nTotAbto, pois o valor do ISS e INSS deverá ser considerado em todas as compensações devido ao provisionamento 
EndIf
nSaldo := Iif(nSaldo <= 0.009999,0,nSaldo)
cSeq 	:= IIf(cSeq == Nil,PadL("1",nTamSeq,"0"),cSeq)

RecLock("SE1")
Replace E1_SALDO	  With nSaldo
Replace E1_BAIXA	  With If(E1_BAIXA <= dBaixa, dBaixa, E1_BAIXA)
Replace E1_LOTE	  With cLote
Replace E1_MOVIMEN  With dBaixa
Replace E1_DESCONT  With nDescP
Replace E1_MULTA	  With 0
Replace E1_JUROS	  With 0
Replace E1_CORREC   With 0
If cPaisLoc == "BRA"
	Replace E1_VALLIQ   With xMoeda(nValor,SE1->E1_MOEDA,1,,nDecs1+1,Fa330Tx2(SE1->E1_MOEDA,0))
Else
	E1_VALLIQ   += nValor 
EndIf
Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(E1_SALDO >= 0.01,"A","B"),"R")
Replace E1_SDDECRE  With E1_SDDECRE - nTitDecre
Replace E1_SDACRES  With E1_SDACRES - nTitAcres

MsUnlock()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA NA ALTERACAO DO HISTORICO NA SE1                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "F330AHE1" )             		    
   ExecBlock("F330AHE1",.F.,.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se h  ponto de entrada 	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("FA330SE1")
	Execblock("FA330SE1",.F.,.F.)
Endif

cNumero	:= E1_NUM
cPrefixo := E1_PREFIXO
cParcela := E1_PARCELA
cCliente := E1_CLIENTE
cLoja	 := E1_LOJA
cTipoTit := ""     

nSalvRec:=RecNo()

If ! ( E1_TIPO $ MVRECANT+"/"+MV_CRNEG ) .and. nSaldo > 0
	nTotAbat := SumAbatRec(cPrefixo,cNumero,cParcela,1,"S")
Else
	nTotAbat := 0
EndIf

RecLock("SE1")
If cPaisLoc == "BRA" .and. lPccBxCr .and. !lCredito
	If dDataBase < dLastPcc
		If (if(nSaldo==0 .and. nTotAbto > nVrAbat,Str(nTotAbto-nVrAbat,16,2),Str(nSaldo,16,2))=Str(aImpPcc[1]+aImpPcc[2]+aImpPcc[3],16,2));
			.or. (nSaldo==0 .and. (Str(nTotAbto-nVrAbat,16,2))>(Str(aImpPcc[1]+aImpPcc[2]+aImpPcc[3],16,2))) 
			nPis 	:= aImpPcc[1] //entra aki para gravar na baixa tota l não proporcionaliza // analisar
			nCofins := aImpPcc[2]
			nCsll	:= aImpPcc[3]
		Else	
			If (MV_PAR08==1 .OR. lRaRtImp) .and. !lNcc
				If lRARtImp .and. !lNcc
						If Len(aTitulos) > 0
							ntitulo1 += nValor+nPis+nCofins+nCsll+nIrrf+nIss+nInss
							nPropPcc := (ntitulo1 / SE1->E1_VALOR)
						Else
							nPropPcc := nPis/SE1->E1_PIS
						EndIf
				ElseIf !lRARtImp .and. !lNcc
					If aDadosret[1] <= nVlMinImp .and. aDadosret[1] + nValor > nVlMinImp .and. lPccBxCr .and. (!lIrPjBxCr .or. SE1->E1_ISS > 0)
						If nValPis > 0 
							nPropPcc	:= nPis/SE1->E1_PIS
						Else
							nPropPcc	:= (aDadosRet[1] + nValor + nPis + nCofins + nCsll)/(nValor + nPis + nCofins + nCsll)
						EndIf
					ElseIf aDadosret[1] < nVlMinImp .and. aDadosret[1] + nValor > nVlMinImp .and. lPccBxCr 
						nPropPcc	:=  (aDadosret[1] + nValor + nTotAbto)/(nValor + nTotAbto)	
					ElseIf nValor > nVlMinImp
						nPropPcc := nValor/SE1->E1_VLCRUZ
					ElseIf aDadosret[1] <= nVlMinImp .and. aDadosret[1] + nValor <= nVlMinImp .and. lPccBxCr .and. (!lIrPjBxCr .or. SE1->E1_ISS > 0)
						nPropPcc	:= nPis/SE1->E1_PIS
					ElseIf (aDadosret[1] > nVlMinImp .and. aDadosret[1] + nValor > nVlMinImp) .and. lPccBxCr .and. (!lIrPjBxCr .or. SE1->E1_ISS > 0)
						nPropPcc := nValor/SE1->E1_VLCRUZ
					Else 
						nPropPcc := 0
					EndIf
				Else
					nPropPcc := (nValor*nTotAbto)/SE1->E1_VLCRUZ     // é aqui o ntotabto está 0 pq é NCC
					nPropPcc := (nPropPcc/nTotAbto)
				EndIf
			Else
				If !lRARtImp .and. mv_par08 == 2 .and. aDadosret[1] <= nVlMinImp .and. aDadosret[1] + nValor > nVlMinImp .and. lPccBxCr .and. (!lIrPjBxCr .or. SE1->E1_ISS > 0)
					nPropPcc := (aDadosret[1] + nValor )/(SE1->E1_VLCRUZ)
				ElseIf nValor > nVlMinImp .or. aDadosret[1] + nValor > nVlMinImp 
					nPropPcc := nValor/SE1->E1_VLCRUZ
				Else 
					nPropPcc := 0
				Endif
	        Endif
	       If Str(nSaldo,16,2)<>Str(nPis+nCofins+nCsll+nTotAbat,16,2)
				nPis		:= Round(NoRound(SE1->E1_PIS * nPropPCC,3),2)
				nCofins		:= Round(NoRound(SE1->E1_COFINS * nPropPCC,3),2)
				nCsll		:= Round(NoRound(SE1->E1_CSLL * nPropPCC,3),2)
			EndIf
			If lIrPjBxCr		
				nIrrf		:= Round(NoRound(SE1->E1_IRRF * nPropPCC,3),2)
			EndIf
			aAreaSE := GetArea()
			DbSelectArea("SFQ")
			SFQ->(dbSetOrder(1))
			For ni := 1 to Len(aTitulos)
			cChave := aTitulos[ni,1]+aTitulos[ni,2]+aTitulos[ni,3]+aTitulos[ni,4] // prefixo+numero+parcela+tipo
			If SFQ->(DbSeek(xFilial("SFQ")+'E1B'+cChave))
				While !SFQ->(Eof()) .and. FQ_PREFORI+FQ_NUMORI+FQ_PARCORI+FQ_TIPOORI == cChave
				nPis	:= nPis + SFQ->FQ_SABTPIS
				nCofins	:= nCofins + SFQ->FQ_SABTCOF
				nCsll	:= nCsll + SFQ->FQ_SABTCSL
				SFQ->(DbSkip())
				EndDo
			EndIf
			Next ni
			RestArea(aAreaSE)
			aImpPcc[1] -= nPis
			aImpPcc[2] -= nCofins
			aImpPcc[3] -= nCsll			
		Endif
    Else
    	If nPis == 0 .And.  Empty(SE1->E1_NUMBOR) .and. !lRartImp
			aPcc		:= newMinPcc(dDataBase,nValRec,SE1->E1_NATUREZ,"R",SE1->E1_CLIENTE+SE1->E1_LOJA)
			nPis		:= 	aPcc[2]
			nCofins		:=	aPcc[3]
			nCsll		:=  aPcc[4]
		EndIf
	EndIf
    If (MV_PAR08==1 .OR. lRaRtImp) .AND. !lNcc
    	nRegAtu := SE1->(Recno())
    	SE1->(DbGoTo(nRegCmp))
    	If SE1->E1_VALOR + SE1->(E1_PIS+E1_COFINS+E1_CSLL) > SE1->E1_BASEPIS
			SE1->(DbGoTo(nRegAtu))
			If lIrPjBxCr
				E1_SALDO -= nIrrf
			EndIf
		Else
			SE1->(DbGoTo(nRegAtu))
		EndIf			
	Endif
	E1_STATUS := IIF(E1_STATUS != "R","B","R")
Endif

IF (Str(nSaldo,16,2)=Str(nTotAbat,16,2) .or. Str(nSaldo,16,2)=Str(nPis+nCofins+nCsll+nTotAbat,16,2).And. mv_par08 == 1 ) .or.; 
(Str(nSaldo,16,2)=Str(SE1->(E1_PIS+E1_COFINS+E1_CSLL),16,2) .And. mv_par08 == 2 .and. lRaRtImp )
	REPLACE E1_SALDO With 0 
	Replace E1_STATUS   With IIF(E1_STATUS != "R","B","R")
EndIF


MsUnlock()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava um registro para cada Movimenta‡„o Banc ria 			  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE1")
dbGoTo(nSalvRec)
FA330Mov(lPadrao,nValor,cAdiantamento,cSeq,nRegCmp,@abaixas,cOrigem,lCredito,nContab,nAcresc,nDecres,nTitAcres,nTitDecre,aBaixaSE5,nTotAbto,@cSequencia, lNcc, nDescP, nDescD, @nIrrfParc )
dbSelectArea("SE1")
dbGoTo(nSalvRec)

If SE1->E1_TIPO $ MVRECANT .AND. lFina330
	lCompRa	:=	.T.
Endif

If ! ( SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG ) .OR. (lCompRa .AND. SE1->E1_TIPO $ MVRECANT)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Baixar titulos de abatimento se for baixa total					³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE1")
	If E1_SALDO = 0 .or. lPropBx	//.OR. ( lCompRA .And. lCredito .AND. SE1->E1_TIPO $ MVRECANT)
		If lPropBx .and. !lCredito
			If (E1_SALDO == 0 .AND. MV_PAR08 == 1) .or. lRartImp
				nImp	:= SE1->E1_PIS + SE1->E1_COFINS + SE1->E1_CSLL + SE1->E1_IRRF + SE1->E1_INSS + SE1->E1_ISS
				nVal	:= (SE1->E1_VALOR * nValor)/(SE1->E1_VALOR - nImp)
			Else
				nVal	:= nValor
			EndIf
			aImp	:= FpropCR(SE1->E1_VALOR, SE1->E1_PIS, SE1->E1_COFINS, SE1->E1_CSLL, SE1->E1_IRRF, SE1->E1_INSS, SE1->E1_ISS, nVal)
		EndIf
		cTipo:= If( lCompRA .And. lCredito, cTipoAux, SE1->E1_TIPO )
		dbSetOrder(2)
		dbSeek(xFilSE1+cCliente+cLoja+cPrefixo+cNum+cParcela)	 
		If lTitpaiSE1 
	 		If FindFunction("OrdTitpai") .and. (nOrdTitPai:= OrdTitpai()) > 0
				DbSetOrder(nOrdTitPai)
				If	DbSeek(xFilSE1+cPrefixo+cNumero+cParcela+cTipo+cCliente+cLoja)
					bWhile := {|| !Eof() .And. E1_FILIAL + Trim(E1_TITPAI) == xFilSE1+Trim(cPrefixo+cNumero+cParcela+cTipo+cCliente+cLoja) }
				Else
					dbSetOrder(2)		
					dbSeek(xFilial("SE1")+cCliente+cLoja+cPrefixo+cNum+cParcela)
				Endif
			Endif
		Endif
		
		While Eval(bWhile)                         
			If lTitpaiSE1
				If !Empty(E1_TITPAI) .and. (Alltrim(E1_TITPAI)!=Alltrim(cPrefixo+cNumero+cParcela+cTipo+cCliente+cLoja) )
					DbSkip()
					Loop
				EndIf
			EndIf        
			
			IF If(lCompRa,E1_TIPO,SE1->E1_TIPO) $ If(lPccBxCr,"COF/CSL/PIS/IR-/IN-/IS-/FE-/FB-/AB-",(MVABATIM+"/"+MVIRABT+"/"+MVINABT+"/"+MVPIABT+"/"+MVCFABT+"/"+MVCSABT)) 								

					RecLock("SE1")
					If !lPropBx 
						Replace E1_SALDO	With 0
					Else
						Do Case
							Case E1_TIPO $ MVPIABT .and. !lPccBxCr
								Replace E1_SALDO	With (E1_SALDO - aImp[1][1])
							Case E1_TIPO $ MVCFABT .and. !lPccBxCr
								Replace E1_SALDO	With (E1_SALDO - aImp[1][2])
							Case E1_TIPO $ MVCSABT .and. !lPccBxCr
								Replace E1_SALDO	With (E1_SALDO - aImp[1][3])
							Case E1_TIPO $ MVIRABT .and. !lIrPjBxCr
								Replace E1_SALDO	With (E1_SALDO - aImp[1][4]) 
							Case E1_TIPO $ MVINABT 				
								Replace E1_SALDO	With (E1_SALDO - aImp[1][5])
							Case E1_TIPO $ MVISABT   				
								Replace E1_SALDO	With (E1_SALDO - aImp[1][6])	
						EndCase
					EndIf
					Replace E1_BAIXA 	With If(E1_BAIXA <= dBaixa, dBaixa, E1_BAIXA)
					Replace E1_LOTE		With cLote
					Replace E1_MOVIMEN	With dBaixa
					Replace E1_PORTADO	With cBanco
					Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(E1_SALDO >= 0.01,"A","B"),"R")
				
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Gravar o titulo que baixou o AB- para evitar estornos de ³
					//³abatimentos baixados por outras rotinas. Evita que um AB-³
					//³baixado pelo FINA070 / 110 seja estornado indevidamente  ³
					//³pelo FINA330, que gera erro na composicao do saldo do    ³
					//³titulo principal com abatimento.                         ³
					//³Gravar SEMPRE NCC/RA para identificar a baixa do AB-     ³
					//³pela rotina FINA330										³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SE1->(FieldPos("E1_TITPAI")) # 0
						If !Empty(cDadostitulo)
							If Empty(E1_TITPAI)
								Replace E1_TITPAI	With cDadosTitulo 
							EndIf
						Else
							Replace E1_TITPAI	With ""
						Endif
					Endif
					MsUnlock()

			EndIf
			dbSelectArea( "SE1" )
			dbSkip( )
		EndDo
		DbSetOrder(1)
	EndIf
	dbGoto( nSalvRec )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona no registro de natureza 	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SED")
	dbSeek(xFilial("SED")+SE1->E1_NATUREZ)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza campo de maior atrazo no Cadastro de Clientes     		  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SA1")
	DbSetOrder(1)
	dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA)
	RecLock("SA1")
	nAtraso:=dBaixa-SE1->E1_VENCTO
	If nAtraso > 1
		IF Dow(SE1->E1_VENCTO) == 1 .Or. Dow(SE1->E1_VENCTO) == 7
			IF Dow(dBaixa) == 2 .and. nAtraso <= 2
				nAtraso := 0
			EndIF
		EndIF
		nAtraso:=IIF(nAtraso<0,0,nAtraso)
		If SA1->A1_MATR < nAtraso
			Replace A1_MATR With nAtraso
		EndIf
	Endif
	MsUnlock()
ElseIf cPaisLoc == "BRA"
	//Baixar titulos de abatimento se for baixa total do(s) título(s) selecionado(s) no array aTitulos
	dbSelectArea("SE1")
	If Funname() == "FINA330" .Or. Funname() == "FINA740"
		If MV_PAR02 == 1
			nPosRec := 20
		Else
			nPosRec := 23
		EndIf	 
	EndIf	
	For nX := 1 To Len(aTitulos)
		DbSelectArea("SE1")
		SE1->(DbGoTo(aTitulos[nX][nPosRec]))		
		xFilSE1		:= SE1->E1_FILIAL
		cNumero		:= SE1->E1_NUM
		cPrefixo 	:= SE1->E1_PREFIXO
		cParcela 	:= SE1->E1_PARCELA
		cCliente 	:= SE1->E1_CLIENTE
		cLoja	 	:= SE1->E1_LOJA
				
		If (SE1->E1_SALDO - aTitulos[nX][09]) == 0 //Baixa total	
			cTipo:= If( lCompRA .And. lCredito, cTipoAux, SE1->E1_TIPO )
			dbSetOrder(2)
			dbSeek(xFilSE1+cCliente+cLoja+cPrefixo+cNumero+cParcela) 
			If lTitpaiSE1 
		 		If FindFunction("OrdTitpai") .and. (nOrdTitPai:= OrdTitpai()) > 0
					DbSetOrder(nOrdTitPai)
					If	DbSeek(xFilSE1+cPrefixo+cNumero+cParcela+cTipo+cCliente+cLoja)
						bWhile := {|| !Eof() .And. E1_FILIAL + Trim(E1_TITPAI) == xFilSE1+Trim(cPrefixo+cNumero+cParcela+cTipo+cCliente+cLoja) }
					Else
						dbSetOrder(2)		
						dbSeek(xFilial("SE1")+cCliente+cLoja+cPrefixo+cNumero+cParcela)
					Endif
				Endif
			Endif
			
			While Eval(bWhile)                         
				If lTitpaiSE1
					If !Empty(E1_TITPAI) .and. (Alltrim(E1_TITPAI)!=Alltrim(cPrefixo+cNumero+cParcela+cTipo+cCliente+cLoja) )
						DbSkip()
						Loop
					EndIf
				EndIf        
				
				IF If(lCompRa,E1_TIPO,SE1->E1_TIPO) $ If(lPccBxCr,"COF/CSL/PIS/IR-/IN-/IS-/FE-/FB-/AB-",(MVABATIM+"/"+MVIRABT+"/"+MVINABT+"/"+MVPIABT+"/"+MVCFABT+"/"+MVCSABT)) 								
	
						RecLock("SE1")
						Replace E1_SALDO 	With 0
						Replace E1_BAIXA 	With If(E1_BAIXA <= dBaixa, dBaixa, E1_BAIXA)
						Replace E1_LOTE		With cLote
						Replace E1_MOVIMEN	With dBaixa
						Replace E1_PORTADO	With cBanco
						Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(E1_SALDO >= 0.01,"A","B"),"R")
					
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Gravar o titulo que baixou o AB- para evitar estornos de ³
						//³abatimentos baixados por outras rotinas. Evita que um AB-³
						//³baixado pelo FINA070 / 110 seja estornado indevidamente  ³
						//³pelo FINA330, que gera erro na composicao do saldo do    ³
						//³titulo principal com abatimento.                         ³
						//³Gravar SEMPRE NCC/RA para identificar a baixa do AB-     ³
						//³pela rotina FINA330										³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If SE1->(FieldPos("E1_TITPAI")) # 0
							If !Empty(cDadostitulo)
								If Empty(E1_TITPAI)
									Replace E1_TITPAI	With cDadosTitulo 
								EndIf
							Else
								Replace E1_TITPAI	With ""
							Endif
						Endif
						MsUnlock()
	
				EndIf
				dbSelectArea( "SE1" )
				dbSkip( )
			EndDo
			DbSetOrder(1)
		Else
			Loop
		EndIf
		dbGoto( nSalvRec )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona no registro de natureza 	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SED")
		dbSeek(xFilial("SED")+SE1->E1_NATUREZ)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza campo de maior atrazo no Cadastro de Clientes     		  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SA1")
		DbSetOrder(1)
		dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA)
		RecLock("SA1")
		nAtraso:=dBaixa-SE1->E1_VENCTO
		If nAtraso > 1
			IF Dow(SE1->E1_VENCTO) == 1 .Or. Dow(SE1->E1_VENCTO) == 7
				IF Dow(dBaixa) == 2 .and. nAtraso <= 2
					nAtraso := 0
				EndIF
			EndIF
			nAtraso:=IIF(nAtraso<0,0,nAtraso)
			If SA1->A1_MATR < nAtraso
				Replace A1_MATR With nAtraso
			EndIf
		Endif
		MsUnlock()
	Next nX
	SE1->(dbGoto(nSalvRec))	
EndIf
dbSelectArea("SE1")
dbSetOrder(1)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA330Mov ³ Autor ³ Valter G. Nogueira Jr.³ Data ³ 21/03/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Grava registros referentes a compensacao de titulos		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA330Mov(ExpC1,ExpN2)												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA330																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FA330Mov(lPadrao,nValor,cAdiantamento,cSeq,nRegCmp,aBaixas,cOrigem,lCredito,nContab,;
								 nAcresc,nDecres,nTitAcres,nTitDecre,aBaixaSE5,nTotAbto,cSequencia, lNcc, nDescP, nDescD, nIrrfParc )
Local nTamSeq		:= TamSX3("E5_SEQ")[1]
Local cAlias:=Alias()
LOCAL cDocOriginal := SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_LOJA
LOCAL nRecSe1 := SE1->(RecNo())
LOCAL nValorReal := 0
Local cSeqPrc 		:= Replicate("0",nTamSeq)
Local cSeqAdt 		:= Replicate("0",nTamSeq)
LOCAL nDecs1 := MsDecimais(1)
LOCAL aArea:={}
LOCAL cFilOrig
LOCAL cCliOri
LOCAL cLojaOri
LOCAL cCliAdt
LOCAL cLojaAdt
Local lImpComp := SuperGetMv("MV_IMPCMP",,"2") == "1"
Local lIsNcc	:= .F.
Local nValPis := 0
Local nValCof := 0
Local nValCSL := 0
local nRecImp := 0
//Compensacao de contas a receber, nao necessita verificar o parametro MV_BX10925
Local lPCCBaixa := (cPaisLoc == "BRA")  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

//Controla o Pis Cofins e Csll na baixa (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default))
Local lPccBxCr	:= If (FindFunction("FPccBxCr"),FPccBxCr(),.F.)

Local lRaRtImp  := lFinImp .And.FRaRtImp() 
//Controla IRPJ na baixa
Local lIrPjBxCr		:= If (FindFunction("FIrPjBxCr"),FIrPjBxCr(),.F.) 
local nPropIR :=0
local nIR	  :=0 //variavel q irá armazenar no valor proporcional do IR
Local lMultFil  := ExistBlock("SE5MTFIL") // CRIADO PARA MANIPULAR A FILIAL NO MOVIMENTO BANCARIO
Local aAreaSE5	:= {}
Local lGestao   := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )
Local nVlReal:= 0

//Impostos gerados pela rotina de Borderô de Recebimento de Imposto (FINA061).
Local	nPisFina061	:=	0
Local	nCofFina061	:=	0
Local	nCslFina061	:=	0
Local	nIrfFina061	:=	0
Local nRegSE5	:=	0
Local	nOrdSE5	:=	0
Local nPCCAnt := 0
Local lPropBx  := SuperGetMv("MV_PROPBX",.F.,"2") == "1"
Local aImp		:= {}
Local lSaldoNf	:= .F. 
Local lBq10925  := SuperGetMv("MV_BQ10925",.F.,"2") == "2"
DEFAULT lCredito := .F.
DEFAULT nContab  := 1
DEFAULT nAcresc := 0
DEFAULT nDecres := 0
DEFAULT aBaixaSE5 := {}
DEFAULT nTotAbto := 0
DEFAULT cSequencia	:= Replicate("0",nTamSeq)     
DEFAULT lNcc		:= .F.
DEFAULT nIrrfParc := 0

PRIVATE nCm := 0
PRIVATE cMotBx := "CMP"
PRIVATE l330Mov1 := ExistBlock("SE5FI330")
PRIVATE l330Mov2 := ExistBlock("SE5FI331")

//Posiciono no titulo de adiantamento
dbSelectArea("SE1")
dbSetOrder(1)
SE1->(dbGoTo(nRegCmp))
cFilOrig := SE1->E1_FILIAL
nValorReal := Round(NoRound(xMoeda(nValor,nMoeda,1,,nDecs1+1,Fa330Tx2(nMoeda,nTxMoeda)),3),nDecs1+1)
cCliAdt := SE1->E1_CLIENTE
cLojaAdt := SE1->E1_LOJA
If SE1->E1_VALOR - nValorReal == 0.01 // correção de arredondamento
	nValorReal	:= SE1->E1_VALOR
EndIf
If !lCredito
	lIsNcc := SE1->E1_TIPO $ MV_CRNEG   //Verifico se o titulo de adiantamento é um NCC
Endif

If lPropBx .and. lCredito 
	nImp	:= SE1->E1_PIS + SE1->E1_COFINS + SE1->E1_CSLL + SE1->E1_IRRF + SE1->E1_INSS + SE1->E1_ISS
	nVal	:= (SE1->E1_VALOR * nValor)/(SE1->E1_VALOR - nImp)
	If nVal <> SE1->E1_SALDO .and. !lRartImp
		nVal	:= nValor
		lSaldoNf	:= .T.
	EndIF
	aImp	:= FpropCR(SE1->E1_VALOR, SE1->E1_PIS, SE1->E1_COFINS, SE1->E1_CSLL, SE1->E1_IRRF, SE1->E1_INSS, SE1->E1_ISS, nVal)
EndIf


If cPaisLoc <> "BRA" .And. Type("aTxMoedas")#"U" .And. FunName() <> "FINA330"
	nValorReal := xMoeda(nValor,nMoeda,1,dDatabase,nDecs1+1,aTxMoedas[nMoeda][2],nDecs1)
EndIf	
cSeqAdt := FaNxtSeqBx()  // Sequencia da baixa do adiantamento + 1

SE1->(dbGoTo(nRecSe1))
cSeqPrc := FaNxtSeqBx()  // Sequencia da baixa do titulo + 1
cCliOri := SE1->E1_CLIENTE
cLojaOri := SE1->E1_LOJA
If lCredito
	lIsNcc := SE1->E1_TIPO $ MV_CRNEG   //Verifico se o titulo de adiantamento é um NCC
Endif

If lPropBx .and. lCredito .and. (!lRartImp .and. mv_par08 == 1)  .and. lSaldoNf
	SE1->E1_SALDO	+= (aImp[1][1]+aImp[1][2]+aImp[1][3]+aImp[1][4]+aImp[1][5]+aImp[1][6])
	SE1->E1_VALLIQ	-= (aImp[1][1]+aImp[1][2]+aImp[1][3]+aImp[1][4]+aImp[1][5]+aImp[1][6])
	If lPccBxCr
		SE1->E1_VALLIQ	-= (nPis+nCofins+nCsll)
		SE1->E1_SALDO	+= (nPis+nCofins+nCsll)
	EndIf
	If lIrPjBxCr
		SE1->E1_VALLIQ	-= (nIrrf)
		SE1->E1_SALDO	+= (nIrrf)
	EndIf
EndIf

cSequencia := IIf(cSeqAdt > cSeqPrc,cSeqAdt,cSeqPrc)

dbSelectArea("SE5")
dbSetOrder(1)

If nValor != 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Baixa o Principal                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("SE5",.T.)
    If IsInCallStack("FINA330")  .and. ValType(lF330SE5)!="U" .and. lF330SE5  
		Aadd(aRecSe5,SE5->(Recno()))
	Endif 
	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de Entrada para permitir a manipulação da filial no movimento bancario³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If ! lMultFil
		SE5->E5_FILIAL	:= xFilial("SE5")
	Else 
		SE5->E5_FILIAL  := ExecBlock("SE5MTFIL",.F.,.F.,cFilAnt)
	Endif
	
	SE5->E5_DATA	:= dBaixa         
	If cPaisLoc $ "BOL" .And. FunName() == "FINA330"      
		SE5->E5_VALOR 	:= nValor		
	ELSE
		SE5->E5_VALOR 	:= nValorReal
	Endif
	SE5->E5_NATUREZ	:= SE1->E1_NATUREZ
	SE5->E5_RECPAG	:= "R"
	SE5->E5_TIPO	:= SE1->E1_TIPO
	SE5->E5_LA		:= IIF(lPadrao .and. nContab == 1,"S","N")
	SE5->E5_LOTE	:= cLote
	SE5->E5_PREFIXO	:= SE1->E1_PREFIXO
	SE5->E5_NUMERO	:= SE1->E1_NUM
	SE5->E5_PARCELA	:= SE1->E1_PARCELA
	SE5->E5_CLIFOR	:= SE1->E1_CLIENTE
	SE5->E5_CLIENTE := SE1->E1_CLIENTE
	SE5->E5_LOJA	:= SE1->E1_LOJA
	SE5->E5_BENEF 	:= SE1->E1_NOMCLI
	SE5->E5_DTDIGIT	:= dDataBase
	SE5->E5_MOTBX 	:= "CMP"
	SE5->E5_DTDISPO	:= SE5->E5_DATA
	SE5->E5_SEQ		:= cSequencia
	SE5->E5_DOCUMEN	:= cAdiantamento
	SE5->E5_VLMOED2	:= Round(NoRound(xMoeda(nValor   ,nMoeda,SE1->E1_MOEDA,,3,Fa330Tx2(nMoeda,0),Fa330Tx2(SE1->E1_MOEDA,SE1->E1_TXMOEDA)),3),2) 
	SE5->E5_VLJUROS	:= Round(NoRound(xMoeda(nTitAcres,nMoeda,1            ,,3,Fa330Tx2(nMoeda,0)                            ),3),2)
	SE5->E5_VLDESCO	:= Round(NoRound(xMoeda(nTitDecre+nDescP,nMoeda,1            ,,3,Fa330Tx2(nMoeda,0)                            ),3),2)
	SE5->E5_VLDECRE	:= Round(NoRound(xMoeda(nTitDecre,nMoeda,1            ,,3,Fa330Tx2(nMoeda,0)                            ),3),2)
	SE5->E5_FILORIG	:= SE1->E1_FILORIG  
	SE5->E5_SITCOB  := SE1->E1_SITUACA
	nValEstrang		:= SE5->E5_VLMOED2
	FA070CORR(  (nValor-nAcresc+nDecres)  ,Fa330Tx2(SE1->E1_MOEDA,0))
	
	nTxMoed1		:=	nTxMoed2	:=	nValEmis	:=	nValBax	:=	nValCm:=	0
	
	nValCorCM += nCM // variavel para contabilização da CM do titulo principal (atribuirá na variavel VALOR4).
	
	SE5->E5_MOEDA := StrZero(nMoeda,2)

	// Grava o valor de correção monetária no SE5 para ser visualizado na consulta
	If cPaisLoc == "MEX" .And. SE5->E5_MOEDA <> "1" .And. FunNAme() == "FINA330"
		nTxCor:= Iif(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA, RecMoeda(SE1->E1_EMISSAO, SE1->E1_MOEDA))
		nValOrig:= Round(xMoeda(SE5->E5_VALOR,Val(SE5->E5_MOEDA),1,,,nTxCor),2)
		nValAtu:= Round(xMoeda(SE5->E5_VALOR,Val(SE5->E5_MOEDA),1,,,aTxMoedas[nMoeda][2]),2)
		SE5->E5_VLCORRE := nValAtu - nValOrig
	Else
		If cPaisLoc == "BRA" .And. SE1->E1_MOEDA > 1 .And. nValCm >0 .And. FunName()="FINA330"
			SE5->E5_VLCORRE := Round(nValCm, nDecs1)
	   	Else
			SE5->E5_VLCORRE	:= Round(nCm, nDecs1)
		Endif
	EndIf

	If lCredito
		SE5->E5_TIPODOC := "BA"
		SE5->E5_HISTOR  := OemToAnsi(STR0016) //"Baixa por Compensacao"
	Else
		SE5->E5_TIPODOC:= "CP"
		SE5->E5_HISTOR	:= OemToAnsi(If(lIsNcc,STR0047,STR0015)) //"Compensação Nota de Crédito"###"Compens. Adiantamento"
		SE5->E5_TPDESC	:= SE1->E1_TPDESC
	Endif

	If !lPccBxCr
		//Acerto valor dos impostos - Tecnofibras
		If lImpComp .and. lIsNcc .and. lPccBaixa
			nRecImp := IIF(lCredito,nRegCmp,nRecSE1)
			F330ActImp(nRecImp,nValorReal,@nValPis,@nValCof,.T.,lCredito,@nValCsl,nTotAbto)
			//Gravo Valores dos impostos no SE5 (ja locado)
			SE5->E5_VRETPIS := nValPis
			SE5->E5_VRETCOF := nValCof
			SE5->E5_VRETCSL := nValCsl
		EndIf
	EndIf
	If lPropBx .and. !lCredito
		If (SE1->E1_SALDO == 0 .AND. MV_PAR08 == 1) .or. lRartImp
			nImp	:= SE1->E1_PIS + SE1->E1_COFINS + SE1->E1_CSLL + SE1->E1_IRRF + SE1->E1_INSS + SE1->E1_ISS
			nVal	:= (SE1->E1_VALOR * SE5->E5_VALOR)/(SE1->E1_VALOR - nImp)
		Else
			nVal	:= SE5->E5_VALOR
		EndIf
		aImp	:= FpropCR(SE1->E1_VALOR, SE1->E1_PIS, SE1->E1_COFINS, SE1->E1_CSLL, SE1->E1_IRRF, SE1->E1_INSS, SE1->E1_ISS, nVal)
		If !lPccBxCr
			SE5->E5_VRETPIS := aImp[1][1]
			SE5->E5_VRETCOF := aImp[1][2]
			SE5->E5_VRETCSL := aImp[1][3]
		EndIf
		If !lIrPjBxCr
			SE5->E5_VRETIRF := aImp[1][4]
		EndIf
		SE5->E5_VRETINS := aImp[1][5]
		SE5->E5_VRETISS := aImp[1][6]
		If lPropBx .and. SE1->E1_SALDO <> 0 .and. mv_par08 == 1 
			lSaldoNf	:= .T.
			SE5->E5_VALOR	-= (aImp[1][1]+aImp[1][2]+aImp[1][3]+aImp[1][4]+aImp[1][5]+aImp[1][6])
			If lPccBxCr .and. !lRartImp
				SE5->E5_VALOR -= (nPis+nCofins+nCsll)
			EndIf
			If lIrPjBxCr .and. !lRartImp
				SE5->E5_VALOR -= (nIrrf)
			EndIf
		EndIf
	Endif			
	
	If lPropBx .and. lCredito .and. lSaldoNf .and. mv_par08 == 1
		SE5->E5_VALOR	-= (aImp[1][1]+aImp[1][2]+aImp[1][3]+aImp[1][4]+aImp[1][5]+aImp[1][6])
		If lPccBxCr .and. !lRartImp
			SE5->E5_VALOR -= (nPis+nCofins+nCsll)
		EndIf
		If lIrPjBxCr .and. !lRartImp
			SE5->E5_VALOR -= (nIrrf)
		EndIf
	EndIf
	// Grava fornecedor do titulo no movimento do PA, paraadmin	 ser utilizado no 
	// cancelamento da compensacao, quando se utiliza PA de outros fornecedores
	// para compensar.
	Replace E5_FORNADT With cCliAdt
	Replace E5_LOJAADT With cLojaAdt
	aAdd(aBaixaSE5, SE5->(Recno()) ) 

	aadd(aBaixas,{{SE5->E5_MOTBX,SE5->E5_SEQ,SE5->(Recno()),SE1->E1_TIPO,SE5->E5_DOCUMEN}})

	If l330Mov1
		ExecBlock("SE5FI330",.f.,.f.)
	EndIf
	If ( SE5->(FieldPos("E5_TXMOEDA"))>0 ) 
		If cPaisLoc == "BRA"
			Replace E5_TXMOEDA With Fa330Tx2( nMoeda, SE5->E5_VALOR/SE5->E5_VLMOED2 ) 
		ElseIf cPaisLoc == "MEX" .And.  Type("aTxMoedas")#"U"  .And. nMoeda > 1 
			Replace E5_TXMOEDA With aTxMoedas[nMoeda][2]
		Endif
	Endif
		
	//Carregando dados bancarios caso seja necessario gravar o registro da diferenca cambial.
	cBcoSE5	:=	SE5->E5_BANCO
	cAgSE5	:=	SE5->E5_AGENCIA
	cCtSE5	:=	SE5->E5_CONTA
	cLoteSE5	:=	SE5->E5_LOTE
	
	MsUnlock()

	//Verifica se o titulo já possui impostos gerados pela rotina de Borderô de Recebimento de Imposto (FINA061).
	nPisFina061	:=	0
	nCofFina061	:=	0
	nCslFina061	:=	0
	nIrfFina061	:=	0
	nRegSE5	:=	SE5->(Recno())
	nOrdSE5	:=	SE5->(Dbsetorder())		
	If SE1->E1_TIPO <> MVRECANT .AND. SE1->E1_TIPO <> MV_CRNEG .And. (lPccBxCr .Or. lIrPjBxCr) 
		dbSelectArea("SE5")
		SE5->(dbSetOrder(2)) //FILIAL + TIPODOC + PREFIXO + NUMERO + PARCELA + TIPO
		If SE5->(DBSeek(xFilial("SE5")+"BA"+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO))
			While !SE5->(Eof()) .and. SE5->E5_FILIAL==xFilial("SE5") .And. ;
				SE5->E5_TIPODOC+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO=="BA"+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO		
			
				If ("FINA061" $ Subst(SE5->E5_HISTOR,1,7)) .And. SE5->E5_MOTBX $ "PCC_IRF"						
					If Alltrim(SE5->E5_MOTBX) == "PCC"
					   nPisFina061	+= SE5->E5_VRETPIS
					   nCofFina061	+=	SE5->E5_VRETCOF
					   nCslFina061	+= SE5->E5_VRETCSL
					ElseIf Alltrim(SE5->E5_MOTBX) == "IRF"
					   nIrfFina061	+= SE5->E5_VRETIRF
					Endif
				Endif					
				SE5->(DbSkip())		
		   Enddo
		Endif
	Endif
   SE5->(Dbgoto(nRegSE5))
	SE5->(Dbsetorder(nOrdSE5))	
	/////////////////////
	// IR Baixa CR
	// Grava relacionamento no SFQ
	If cPaisLoc == "BRA" .and. lIrPjBxCr .and. !lCredito .And. !lNcc .And. nIrfFina061 == 0	
		If (if(nSaldo==0 .and. nTotAbto > nVrAbat,Str(nTotAbto-nVrAbat,16,2),Str(nSaldo,16,2))=Str(ntotIrbx,16,2)) 
			nIR := ntotIrbx
 		ElseIf SE1->E1_SALDO == 0
 			nIr := nTotIrBx
 		Elseif 	ntotIrbx>0 
 			If MV_PAR08 == 1 .And. !lRartImp
 				If SE1->E1_SALDO == nTotIrBx .Or. SE1->E1_SALDO == nTotAbto  
 					nIr := nTotIrBx
 				Else
 					nPropIR := nValor/SE1->E1_VLCRUZ
 					nIR		:= Round(NoRound(SE1->E1_IRRF * nPropIR,3),2)
 				EndIf
 			Else
				IF SE1->E1_SALDO == ntotIrbx .or. ((nValor+ntotIrbx)== SE1->E1_VLCRUZ ) /*.and. SE1->E1_SALDO==0//)*/
					nPropIR := (nValor+ntotIrbx)/SE1->E1_VLCRUZ 
					If MV_PAR08<>1 
				   		SE1->E1_SALDO-= ntotIrbx  
				 	Endif
				Else   
					If MV_PAR08==1 .and. (nValor==nSaldo .OR. (nValor+ nIrrf>=SE1->E1_SALDO))
						nPropIR := SE1->E1_SALDO/SE1->E1_VLCRUZ
					Else
						nPropIR := nValor/SE1->E1_VLCRUZ
					Endif
				EndIf
				nIR		:= Round(NoRound(SE1->E1_IRRF * nPropIR,3),2)
			EndIf
	   	Endif

		nIrrfParc := nIR
		If !lRaRtImp
			FGrvIrRec(@nIR,nRecSe1,.F.,cSequencia,"FINA070",SE1->E1_MOEDA)    
			SE1->(dbGoTo(nRecSe1))  
			FGSFQIRCR(nIR,IIF(SE1->E1_SALDO == ntotIrbx,(nValor+ntotIrbx)-nIR,(nValor-nIR)),cSequencia)   
		Endif  	
  	EndIf	 

	/////////////////////
	// PCC Baixa CR
	// Grava relacionamento no SFQ
	// Grava titulos PIS/COF/CSL no SE1
	If cPaisLoc == "BRA" .and. lPccBxCr .and. !lCredito .And. !lNcc .And. (nPisFina061+nCofFina061+nCslFina061)==0 // .and. !lRaRtImp
		//nPCCAnt := SE5->E5_VRETPIS + SE5->E5_VRETCOF + SE5->E5_VRETCSL

		IIf(FindFunction("F330GrvSFQ"),F330GrvSFQ(cSequencia,nRecSe1),.T.)

		If SE5->E5_VRETIRF > 0 .And. MV_PAR08 == 1 .And. !lRartImp .And. !lCredito .And. lIrPjBxCr
			nIrrfParc := SE5->E5_VRETIRF 
		EndIf
		
/*
		If nPCCAnt <> ( SE5->E5_VRETPIS + SE5->E5_VRETCOF + SE5->E5_VRETCSL )
			RecLock("SE5")
			SE5->E5_VALOR += SE5->E5_VRETPIS + SE5->E5_VRETCOF + SE5->E5_VRETCSL
			SE5->E5_VLMOED2 := Round(NoRound(xMoeda((SE5->E5_VLMOED2+SE5->E5_VRETPIS+SE5->E5_VRETCOF+SE5->E5_VRETCSL),nMoeda,SE1->E1_MOEDA,,3,Fa330Tx2(nMoeda,0),Fa330Tx2(SE1->E1_MOEDA,SE1->E1_TXMOEDA)),3),2)
			MsUnLock()
		EndIf*/
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //³ PONTO DE ENTRADA NA ALTERACAO DO HISTORICO NA SE5 NA INCLUSAO        ³
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock( "F330AE5I" )
	   ExecBlock("F330AE5I",.F.,.F.)
	EndIf
	
	// Grava valor da correcao no titulo, para contabilizacao
	RecLock("SE1")
  	If cPaisLoc == "BRA" .And. SE1->E1_MOEDA > 1 .And. nValCm<>0 .And. FUNNAME() $ "FINA330#FINA740"
		SE1->E1_CORREC := Round(nValCm, nDecs1)
	Else
		SE1->E1_CORREC := Round(nCm, nDecs1)
	Endif
	MsUnlock()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gravando diferenca cambial			                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SE1->E1_MOEDA > 1 .And. cPaisLoc=="BRA" .And. nCm<>0 .And. FUNNAME() $ "FINA330#FINA740"
		Reclock( "SE5", .T. )
	    If IsInCallStack("FINA330")  .and. ValType(lF330SE5)!="U" .and. lF330SE5  
			Aadd(aRecSe5,SE5->(Recno()))
		Endif 		
		SE5->E5_FILIAL		:= xFilial("SE5")
		SE5->E5_BANCO		:= cBcoSE5
		SE5->E5_AGENCIA	:= cAgSE5
		SE5->E5_CONTA		:= cCtSE5
		SE5->E5_DATA		:= dBaixa
 		SE5->E5_VALOR		:= nCm
		SE5->E5_NATUREZ	:= SE1->E1_NATUREZ
		SE5->E5_RECPAG 	:= "P"
		SE5->E5_TIPO		:= SE1->E1_TIPO
		SE5->E5_LA			:= IIF(lPadrao .and. nContab == 1,"S","N")
		SE5->E5_TIPODOC	:= "CM"		
		SE5->E5_LOTE		:= cLoteSE5
		SE5->E5_PREFIXO	:= SE1->E1_PREFIXO
		SE5->E5_NUMERO 	:= SE1->E1_NUM
		SE5->E5_PARCELA	:= SE1->E1_PARCELA
		SE5->E5_CLIFOR 	:= SE1->E1_CLIENTE
		SE5->E5_CLIENTE 	:= SE1->E1_CLIENTE
		SE5->E5_LOJA		:= SE1->E1_LOJA
		SE5->E5_BENEF		:= SE1->E1_NOMCLI
		SE5->E5_DTDIGIT	:= dDataBase	 	
		SE5->E5_MOTBX		:= "NOR"
		SE5->E5_SEQ 		:= cSequencia
  		SE5->E5_TXMOEDA  	:=	nTxMoed2
  		SE5->E5_VLMOED2	:=	xMoeda(SE5->E5_VALOR,1,SE1->E1_MOEDA,dBaixa,,,nTxMoed2)   

		If SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG
			SE5->E5_HISTOR 	:= OemToAnsi(STR0020) //CORREC.DE ADIANTAMENTO		
		Else 
			SE5->E5_HISTOR 	:= OemToAnsi(STR0005) //CORREC. MONET S/ RECEBTO		
		Endif		
		MsUnlock()		
	Endif

	// Atualizar saldo do cliente
	aArea:=GetArea()
	nVlReal:=nValorReal - nTitAcres + nTitDecre
	dbSelectArea("SA1")
	DbSetOrder(1)
	If dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA)
		RecLock("SA1")
		If lCredito  
			AtuSalDup("+",nVlReal,1,SE1->E1_TIPO,,SE1->E1_EMISSAO)
		Else
			AtuSalDup("-",nVlReal,1,SE1->E1_TIPO,,SE1->E1_EMISSAO)
	 	EndIf
		MsUnlock()
	EndIf
	RestArea(aArea)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Baixa a Compensacao                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( !Empty(cAdiantamento) )
		dbSelectArea("SE1")
		dbSetOrder(1)
		dbGoto(nRegCmp)
		RecLock("SE5",.T.)
	    If IsInCallStack("FINA330")  .and. ValType(lF330SE5)!="U" .and. lF330SE5  
			Aadd(aRecSe5,SE5->(Recno()))
		Endif 
		

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de Entrada para permitir a manipulação da filial no movimento bancario³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ! lMultFil
			SE5->E5_FILIAL  := xFilial("SE5")
		Else 
			SE5->E5_FILIAL  := ExecBlock("SE5MTFIL",.F.,.F.,cFilAnt)
		Endif                                                       
		
		SE5->E5_DATA	 := dBaixa
		If cPaisLoc $ "BOL" .And. FunName() == "FINA330"      
			SE5->E5_VALOR 	:= nValor		
		ELSE
			SE5->E5_VALOR 	:= nValorReal
		Endif
		SE5->E5_NATUREZ := SE1->E1_NATUREZ
		SE5->E5_RECPAG  := "R"
		SE5->E5_TIPO	 := SE1->E1_TIPO
		SE5->E5_LA			:= Iif(lPadrao .and. nContab == 1 ,"S","N")
		If lCredito
			SE5->E5_TIPODOC:= "CP"     
			SE5->E5_HISTOR	:= OemToAnsi(If(lIsNcc,STR0047,STR0015)) //"Compensação Nota de Crédito"###"Compens. Adiantamento"
			iF cPaisloc == "BRA"
				SE5->E5_TPDESC	:= SE1->E1_TPDESC
			EndIf	
		Else
			SE5->E5_TIPODOC := "BA"
			SE5->E5_HISTOR  := OemToAnsi(STR0016) //"Baixa por Compensacao"
		Endif


		If !lPccBxCr	
			//Acerto valor dos impostos - Tecnofibras
			If lImpComp .and. lIsNcc .and. lPccBaixa
				//Gravo Valores dos impostos no SE5 (ja locado)
				SE5->E5_VRETPIS := nValPis
				SE5->E5_VRETCOF := nValCof
				SE5->E5_VRETCSL := nValCsl		
			Endif			
		Endif   

		SE5->E5_LOTE	 := cLote
		SE5->E5_PREFIXO := SE1->E1_PREFIXO
		SE5->E5_NUMERO  := SE1->E1_NUM
		SE5->E5_PARCELA := SE1->E1_PARCELA
		SE5->E5_CLIFOR  := SE1->E1_CLIENTE
		SE5->E5_CLIENTE := SE1->E1_CLIENTE
		SE5->E5_LOJA	 := SE1->E1_LOJA
		SE5->E5_BENEF	 := SE1->E1_NOMCLI
		SE5->E5_DTDIGIT := dDataBase
		SE5->E5_MOTBX	 := "CMP"
		SE5->E5_DTDISPO := dDataBase
		SE5->E5_SEQ 	 := cSequencia
		SE5->E5_DOCUMEN := cDocOriginal
		If cPaisLoc <> "BRA"   // No Brasil, utiliza-se a taxa informada no título, em países localizados a taxa do dia
			SE5->E5_VLMOED2	:= Round(NoRound(xMoeda(nValor ,nMoeda,SE1->E1_MOEDA,,3,Fa330Tx2(nMoeda,nTxMoeda),Fa330Tx2(SE1->E1_MOEDA,nTxMoeda)),3),2) 
		Else
			SE5->E5_VLMOED2	:= Round(NoRound(xMoeda(nValor ,nMoeda,SE1->E1_MOEDA,,3,Fa330Tx2(nMoeda,nTxMoeda),Fa330Tx2(SE1->E1_MOEDA,SE1->E1_TXMOEDA)),3),2)
			If SE5->E5_VALOR - SE5->E5_VLMOED2 == 0.01 // problemas de arredondamento
				SE5->E5_VLMOED2	:= SE5->E5_VALOR
			EndIf 
		EndIf
		SE5->E5_VLJUROS	:= Round(NoRound(xMoeda(nAcresc,nMoeda,1            ,,3,Fa330Tx2(nMoeda,0)                            ),3),2)
		SE5->E5_VLDESCO	:= Round(NoRound(xMoeda(nDecres+nDescD,nMoeda,1            ,,3,Fa330Tx2(nMoeda,0)                            ),3),2)
		SE5->E5_VLDECRE	:= Round(NoRound(xMoeda(nDecres,nMoeda,1            ,,3,Fa330Tx2(nMoeda,0)                            ),3),2)
		SE5->E5_FILORIG	:= SE1->E1_FILORIG     
		SE5->E5_SITCOB  := SE1->E1_SITUACA
		nValEstrang := SE5->E5_VLMOED2
		FA070CORR( (nValor-nAcresc+nDecres) ,Fa330Tx2(SE1->E1_MOEDA,0))
	
 
		SE5->E5_MOEDA := StrZero(nMoeda,2)

		// Grava o valor de correção monetária no SE5 para ser visualizado na consulta
		If SE1->E1_MOEDA > 1 .And. FUNNAME() $ "FINA330#FINA740"
			SE5->E5_VLCORRE	:= nCm
		EndIf
		// Grava fornecedor do titulo no movimento do PA, para ser utilizado no 
		// cancelamento da compensacao, quando se utiliza PA de outros fornecedores
		// para compensar.
		Replace E5_FORNADT With cCliOri
		Replace E5_LOJAADT With cLojaOri
		aAdd(aBaixaSE5, SE5->(Recno()) ) 

		aadd(aBaixas,{{SE5->E5_MOTBX,SE5->E5_SEQ,SE5->(Recno()),SE1->E1_TIPO,SE5->E5_DOCUMEN}})

		If lPropBx .and. lSaldoNf .and. !lCredito
			SE5->E5_VALOR	-= (aImp[1][1]+aImp[1][2]+aImp[1][3]+aImp[1][4]+aImp[1][5]+aImp[1][6])
			If lPccBxCr .and. !lRartImp .and. mv_par08 == 1
				SE5->E5_VALOR -= (nPis+nCofins+nCsll)
			EndIf
			If lIrPjBxCr .and. !lRartImp .and. mv_par08 == 1
				SE5->E5_VALOR -= (nIrrf)
			EndIf
		EndIf
		
		If ( l330Mov2 )
			ExecBlock("SE5FI331",.f.,.f.)
		Endif
		If ( SE5->(FieldPos("E5_TXMOEDA"))>0 ) 
			If cPaisLoc == "BRA"
				Replace E5_TXMOEDA   With Fa330Tx2( nMoeda, SE5->E5_VALOR/SE5->E5_VLMOED2 ) 
			ElseIf cPaisLoc == "MEX" .And.  Type("aTxMoedas")#"U"  .And. nMoeda > 1 
				Replace E5_TXMOEDA With aTxMoedas[nMoeda][2]
			Endif
		Endif
		nTxMoed1	:=	nTxMoed2	:=	nValEmis	:=	nValBax	:=	nValCm:=	0

		//Carregando dados bancarios caso seja necessario gravar o registro da diferenca cambial.
		cBcoSE5	:=	SE5->E5_BANCO
		cAgSE5	:=	SE5->E5_AGENCIA
		cCtSE5	:=	SE5->E5_CONTA
		cLoteSE5	:=	SE5->E5_LOTE
		
		//Verifica se o titulo já possui impostos gerados pela rotina de Borderô de Recebimento de Imposto (FINA061).
		nPisFina061	:=	0
		nCofFina061	:=	0
		nCslFina061	:=	0
		nIrfFina061	:=	0
		nRegSE5	:=	SE5->(Recno())
		nOrdSE5	:=	SE5->(Dbsetorder())		
		If SE1->E1_TIPO <> MVRECANT .AND. SE1->E1_TIPO <> MV_CRNEG .And. lPccBxCr .And. lIrPjBxCr                                                                                               			
			dbSelectArea("SE5")
			SE5->(dbSetOrder(2)) //FILIAL + TIPODOC + PREFIXO + NUMERO + PARCELA + TIPO
			If SE5->(DBSeek(xFilial("SE5")+"BA"+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO))
				While !SE5->(Eof()) .and. SE5->E5_FILIAL==xFilial("SE5") .And. ;
					SE5->E5_TIPODOC+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO=="BA"+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO		
				
					If ("FINA061" $ Subst(SE5->E5_HISTOR,1,7)) .And. SE5->E5_MOTBX $ "PCC_IRF"						
						If Alltrim(SE5->E5_MOTBX) == "PCC"
						   nPisFina061	+= SE5->E5_VRETPIS
						   nCofFina061	+=	SE5->E5_VRETCOF
						   nCslFina061	+= SE5->E5_VRETCSL
						ElseIf Alltrim(SE5->E5_MOTBX) == "IRF"
						   nIrfFina061	+= SE5->E5_VRETIRF
						Endif
					Endif					
					SE5->(DbSkip())		
			   Enddo
			Endif
		Endif
	   SE5->(Dbgoto(nRegSE5))
		SE5->(Dbsetorder(nOrdSE5))				
		
		If lIrPjBxCr .And. lCredito .And. !lRaRtImp .and. !lNcc .And. nIrfFina061 == 0 	
			FGrvIrRec(@nIrrf,nRegCmp,.F.,cSequencia,"FINA070",SE1->E1_MOEDA)
			FGSFQIRCR(nIrrf,IIF(MV_PAR08==1,nValorReal,nValorReal-nIrrf),cSequencia)   
		EndIf	

		MsUnlock()
		aAreaSE5 := SE5->(GetArea()) //para efeito de acerto no posicio. da SE5 na contabil. 596
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gravando diferenca cambial			                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE1->E1_MOEDA > 1 .And. cPaisLoc=="BRA" .And. nCm <>0 .And. FUNNAME() $ "FINA330#FINA740"
			Reclock( "SE5", .T. )
		    If IsInCallStack("FINA330")  .and. ValType(lF330SE5)!="U" .and. lF330SE5  
				Aadd(aRecSe5,SE5->(Recno()))
			Endif 			
			SE5->E5_FILIAL	:= xFilial("SE5")
			SE5->E5_BANCO	:= cBcoSE5
			SE5->E5_AGENCIA	:= cAgSE5
			SE5->E5_CONTA	:= cCtSE5
			SE5->E5_DATA	:= dBaixa
 			SE5->E5_VALOR	:= nCm
			SE5->E5_NATUREZ	:= SE1->E1_NATUREZ
			SE5->E5_RECPAG 	:= "P"
			SE5->E5_TIPO	:= SE1->E1_TIPO
			SE5->E5_LA		:= IIF(lPadrao .and. nContab == 1,"S","N")
			SE5->E5_TIPODOC	:= "CM"		
			SE5->E5_LOTE	:= cLoteSE5
			SE5->E5_PREFIXO	:= SE1->E1_PREFIXO
			SE5->E5_NUMERO 	:= SE1->E1_NUM
			SE5->E5_PARCELA	:= SE1->E1_PARCELA
			SE5->E5_CLIFOR 	:= SE1->E1_CLIENTE
			SE5->E5_CLIENTE := SE1->E1_CLIENTE
			SE5->E5_LOJA	:= SE1->E1_LOJA
			SE5->E5_BENEF	:= SE1->E1_NOMCLI
			SE5->E5_DTDIGIT	:= dDataBase	 	
			SE5->E5_MOTBX	:= "NOR"
			SE5->E5_SEQ 	:= cSequencia
	  		SE5->E5_TXMOEDA :=	nTxMoed2
	  		SE5->E5_VLMOED2	:=	xMoeda(SE5->E5_VALOR,1,SE1->E1_MOEDA,dBaixa,,,nTxMoed2)   
		
			If SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG
				SE5->E5_HISTOR 	:= OemToAnsi(STR0020) //CORREC.DE ADIANTAMENTO
			Else
				SE5->E5_HISTOR 	:= OemToAnsi(STR0005) //CORREC. MONET S/ RECEBTO
			Endif
			MsUnlock()
		Endif

		RestArea(aAreaSE5)

		/////////////////////
		// PCC Baixa CR
		// Grava relacionamento no SFQ
		// Grava titulos PIS/COF/CSL no SE1
		If cPaisLoc == "BRA" .and. (lPccBxCr .or. lIrPjBxCr) .and. (lCredito /*.or. lRaRtImp*/) .And. !lNcc .And. (nPisFina061+nCofFina061+nCslFina061) == 0
			//nPCCAnt := SE5->E5_VRETPIS + SE5->E5_VRETCOF + SE5->E5_VRETCSL

			IIf(FindFunction("F330GrvSFQ"),F330GrvSFQ(cSequencia,nRegCmp),.T.)

			/*If nPCCAnt <> ( SE5->E5_VRETPIS + SE5->E5_VRETCOF + SE5->E5_VRETCSL )
				RecLock("SE5")
				SE5->E5_VALOR += SE5->E5_VRETPIS + SE5->E5_VRETCOF + SE5->E5_VRETCSL
				SE5->E5_VLMOED2 := Round(NoRound(xMoeda((SE5->E5_VLMOED2+SE5->E5_VRETPIS+SE5->E5_VRETCOF+SE5->E5_VRETCSL),nMoeda,SE1->E1_MOEDA,,3,Fa330Tx2(nMoeda,nTxMoeda),Fa330Tx2(SE1->E1_MOEDA,SE1->E1_TXMOEDA)),3),2)
				MsUnLock()
			EndIf*/
		Endif

		// Grava valor da correcao no titulo, para contabilizacao
		RecLock("SE1")
		If cPaisLoc == "BRA" .And. SE1->E1_MOEDA > 1 .And. nValCm <>0 .And. FUNNAME() $ "FINA330#FINA740"
			SE1->E1_CORREC := Round(nValCm, nDecs1)   
		Else
			SE1->E1_CORREC := nCm
		Endif
		MsUnlock()   	
		// Atualizar saldo do cliente
		nVlReal:=nValorReal - nAcresc + nDecres
		aArea:=GetArea()
		dbSelectArea("SA1")
		DbSetOrder(1)
		If dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA)
			RecLock("SA1")
			If lCredito  
				AtuSalDup("-",nVlReal,1,SE1->E1_TIPO,,SE1->E1_EMISSAO)
			Else
				AtuSalDup("+",nVlReal,1,SE1->E1_TIPO,,SE1->E1_EMISSAO)
			EndIf
			MsUnlock()
		EndIf
		RestArea(aArea)	
	Endif
EndIf
dbSelectArea(cAlias)
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fA340Grv ³ Autor ³ Valter G. Nogueira Jr.³ Data ³ 21/03/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para atualizar a baixa efetuada			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA340Grv(lPadrao) 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gen‚rico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fA340Grv(lPadrao,nValor,cAdiantamento,cSeq,nRegSE2,lDebito,nCont,nTxMoeda,;
						nAcresc,nDecres,aBaixaSE5,nValImpPa,cPABruto, nValse5,nPis,nCof,nCsl,nIrf,nIss,nInss)
				
Local nSaldo
Local nSalvRec
LOCAL nTotAbto := 0
Local nAtraso := 0
Local nDecs1 := MsDecimais(1)
Local nLiq    := 0
Local nTitAcres := SE2->E2_SDACRES		//Acrescimo do titulo principal
Local nTitDecre := SE2->E2_SDDECRE		//Decrescimo do titulo principal
Local lPaBruto		:= GetNewPar("MV_PABRUTO","2") == "1"  //Indica se o PA terá o valor dos impostos descontados do seu valor
Local nTamSeq		:= TamSX3("E5_SEQ")[1]
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // INSS Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )                
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )
                                                      
Local lIRPFBaixa :=IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) 				                               
Local lValPgto := SuperGetMv("MV_BP10925",.T.,"1") == "2" //1- Valor bruto da baixa parcial / 2- Valor da baixa parcial menos os impostos
Local lAluguel := SED->(FieldPos("ED_ALUGUEL")) > 0  .And. ;
						Posicione("SED",1,xFilial("SED") + SE2->E2_NATUREZ,"ED_ALUGUEL") == "1" .and. ;
						Posicione("SA2",1,xFilial("SA2") + SE2->E2_FORNECE,"A2_TIPO") == "F" .and. SA2->(FieldPos("A2_CALCIRF")) > 0 .and. ; 
						Posicione("SA2",1,xFilial("SA2") + SE2->E2_FORNECE,"A2_CALCIRF") == "2"
Local nJuros   := 0
Default cPABruto := "" 
DEFAULT lDebito := .F.
DEFAULT nCont := 1
DEFAULT nTxMoeda := 0
DEFAULT nAcresc := 0
DEFAULT nDecres := 0
DEFAULT aBaixaSE5 := {}
DEFAULT nValImpPa := 0
DEFAULT nValse5  := nValor
DEFAULT nPis:= 0 
DEFAULT nCof:= 0 
DEFAULT nCsl:= 0 
DEFAULT nIrf:= 0 
DEFAULT nIss := 0
DEFAULT nInss := 0

If lAluguel .and.  !SE2->E2_TIPO $ MVPAGANT
	If SE2->E2_VALJUR > 0
		nJuros := SE2->E2_VALJUR * (dDataBase - SE2->E2_VENCREA)
	Else
		nJuros := (SE2->E2_PORCJUR/100) * SE2->E2_SALDO 
	Endif
	If nJuros < 0
		nJuros := 0
	Endif	
Endif
If lPaBruto .and. !(SE2->E2_TIPO $ MVPAGANT)
	nValor += nValImpPa
EndIf

//Verifica se o valor do acrescimo e maior que o da baixa...
If nTitAcres > nValor                                
	nTitAcres := nValor	
Endif

nTotAbto := SumAbatPag(cPrefixo,cNum,cParcela,cFornece,SE2->E2_MOEDA,"S",dBaixa,cLoja)
If ((SE2->E2_SALDO + nJuros + nTitAcres - nTitDecre - nTotAbto) - (nValor+nPis+nCof+nCsl+nIrf+nIss + Iif(lInssBx,nInss,0))) <= 0.00999  .and. SE2->E2_TIPO <> MVPAGANT
	nSaldo:= (SE2->E2_SALDO + nJuros + nTitAcres - nTitDecre - nTotAbto) - (nValor+nPis+nCof+nCsl+nIrf+nIss + Iif(lInssBx,nInss,0))  		// moeda do tit principal
		
   If SE2->E2_SALDO  >  ((nValor - nTitAcres + nJuros + nTitDecre + nTotAbto)+ nPis+ nCof+ nCsl+ nIrf+ nIss + Iif(lInssBx,nInss,0)) .And. !lPaBruto 
     nSaldo	:=	nSaldo + (nValor+nPis+ nCof+ nCsl+ nIrf+ nIss + Iif(lInssBx,nInss,0))
   Endif
   
Elseif SE2->E2_TIPO <> MVPAGANT .and. (SE2->E2_SALDO + nTitAcres + nJuros) - nTitDecre - nValor -(nPis+nCof+nCsl+nIrf+nIss+Iif(lInssBx,nInss,0)) == 0 
	nSaldo := ((SE2->E2_SALDO + nTitAcres + nJuros) - nTitDecre - nValor) - (nPis+nCof+nCsl+nIrf+nIss+Iif(lInssBx,Inss,0))

Else
	nValor	:= Round(nValor,2)
	nSaldo := (SE2->E2_SALDO + nTitAcres + nJuros) - nTitDecre - nValor			// moeda do tit principal 
	If SE2->E2_TIPO <> MVPAGANT .And. nSaldo > 0
     If lPaBruto  
     	nSaldo	:=	nSaldo - (Iif(lPccBaixa,(nPis+nCof+nCsl),0)+ Iif(lIRPFBaixa,nIrf,0)+ nIss +Iif(lInssBx,nInss,0))
     Else
		nSaldo	:=	nSaldo - (nPis+nCof+nCsl+nIrf+nIss+nInss)
	 Endif	
	Endif  
	If SE2->E2_TIPO $ MVPAGANT .AND. lPaBruto
		nSaldo	:=	nSaldo -	(Iif(lPccBaixa,(nPis+nCof+nCsl),0)+ Iif(lIRPFBaixa,nIrf,0)+ nIss +Iif(lInssBx,nInss,0))
	EndIF
	If SE2->E2_TIPO $ MVPAGANT .and. !lIRPFBaixa .AND.  SE2->E2_IRRF + SE2->E2_PRINSS + SE2->E2_PRISS > 0
		nSaldo	:= nSaldo - SE2->E2_PRINSS - SE2->E2_PRISS
		If nSaldo == SE2->E2_VALOR .And. SE2->E2_SALDO == SE2->E2_VALOR
			nSaldo	:= nSaldo - SE2->E2_IRRF
		EndIf
	EndIf
	If SE2->E2_TIPO $ MVPAGANT .and. SE2->E2_SALDO == SE2->E2_VALOR .AND. !lValPgto
		nSaldo := nSaldo - SE2->E2_ISS
	EndIf	
Endif

nSaldo := Iif(nSaldo <= 0.009999,0,nSaldo)
nSaldo := NoRound(nSaldo,2)
cSeq := Iif(cSeq == Nil,PadL("1",nTamSeq,"0"),cSeq)
nLiq := SE2->E2_VALLIQ
//Atualiza a data de vencimento dos titulos de impostos
If !lDebito .and. cPaisLoc == "BRA"
	AltVencImp(dBaixa)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza a baixa do titulo			³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE2")
RecLock("SE2")
Replace E2_SALDO	  With nSaldo ,;
E2_BAIXA	  With Iif(E2_BAIXA<=dBaixa,dBaixa,E2_BAIXA),;
E2_LOTE	  With cLote ,;
E2_MOVIMEN  With dBaixa	 ,;
E2_DESCONT  With 0 ,;
E2_MULTA	  With 0 ,;
E2_JUROS	  With 0 ,;
E2_CORREC   With 0 


Replace 	E2_VALLIQ   With if(cPaisLoc=="BRA"	,Round(NoRound(xMoeda(nValor,SE2->E2_MOEDA,1,,4,Fa340TxMd(SE2->E2_MOEDA,nTxMoeda)),3),2);
									,nLiq+Round(xMoeda(nValor,nMoeda,1,dDatabase,nDecs1+1,aTxMoedas[nMoeda][2]),nDecs1)) 
Replace E2_SDDECRE  With E2_SDDECRE - nTitDecre
Replace E2_SDACRES  With E2_SDACRES - nTitAcres
If SE2->E2_TIPO <> MVPAGANT

	If nPis> 0
   		SE2->E2_VRETPIS	+= nPis 
   		SE2->E2_PRETPIS	:= "7"
   	Endif
	If nCsl> 0
		SE2->E2_VRETCSL	+= nCsl  
		SE2->E2_PRETCSL	:= "7"
	Endif
	If nCof> 0
		SE2->E2_VRETCOF	+= nCof  
		SE2->E2_PRETCOF	:= "7"  
	Endif
	If nIrf> 0
		SE2->E2_VRETIRF	+= nIrf    
		SE2->E2_PRETIRF	:= "7"
    EndIf  
    If nIss>0
		SE2->E2_VRETISS	+= nIss    
	Endif   
	 If lInssBx .And. nInss>0 //Inss Baixa 
	 	SE2->E2_PRETINS	:= "7"
	 	If !IsInCallStack("fA340Comp")    
			SE2->E2_VRETINS	+= nInss
		Endif	    
	Endif   	
Endif 

nSalvRec:=SE2->(RecNo())
cNumero	:= E2_NUM
cPrefixo := E2_PREFIXO
cParcela := E2_PARCELA
cTipoTit   :=""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA 									  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("F340CMP")
	ExecBlock('F340CMP',.F.,.F.)
Endif

If ! ( E2_TIPO $ MVPAGANT+"/"+MV_CPNEG )
	nTotAbat := SumAbatPag(cPrefixo,cNumero,cParcela,SE2->E2_FORNECE,1,"V",,SE2->E2_LOJA)
Else
	nTotAbat := 0
EndIf

IF Str(nSaldo,16,2)=Str(nTotAbat,16,2)
	REPLACE E2_SALDO With 0
EndIF
MsUnlock()

If lPaBruto .and. !(SE2->E2_TIPO $ MVPAGANT)
	nValor -= nValImpPa
ElseIf !lPaBruto
	If SE2->E2_TIPO $ MVPAGANT .and. ( nValor > SE5->E5_VALOR )
		nValor -= nIrf	
	ElseIf  !(SE2->E2_TIPO $ MVPAGANT)
		nValor -= nValImpPa
	EndIf	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava um registro para cada Movimenta‡„o Banc ria 			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
FA340Mov(lPadrao,nValor,cAdiantamento,cSeq,nRegSE2,lDebito,nCont,nTxMoeda,nAcresc,nDecres,nTitAcres,nTitDecre,aBaixaSE5, ,nValse5,nPis,nCof,nCsl,nIrf,nIss,nInss)
//se for PABruto gero registro para a baixa dos impostos
If lPABruto .and. nValImpPa > 0
	dbSelectArea("SE2")
	dbGoto(nSalvRec)
	FA340Mov(lPadrao,nValImpPa,cAdiantamento,cSeq,nRegSE2,lDebito,nCont,nTxMoeda,nAcresc,nDecres,nTitAcres,nTitDecre,aBaixaSE5,.T.)
EndIf

dbSelectArea("SE2")
dbGoto(nSalvRec)

If !( E2_TIPO $ MVPAGANT+"/"+MV_CPNEG )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Baixar titulos de abatimento se for baixa total				  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE2")
	If E2_SALDO == 0
		dbSetOrder(1)
		dbSeek(xFilial("SE2")+cPrefixo+cNum+cParcela)
		While !EOF() .And. E2_FILIAL==xFilial("SE2") .And. E2_PREFIXO=cPrefixo 		.And.;
								E2_NUM==cNum 			.And. E2_PARCELA==cParcela

			IF E2_FORNECE==cFornece	.And. E2_LOJA == cLoja
				IF E2_TIPO $ MVABATIM
					RecLock("SE2")
					Replace E2_SALDO	  With 0
					Replace E2_BAIXA	  With Iif(E2_BAIXA<=dBaixa,dBaixa,E2_BAIXA)
					Replace E2_LOTE	  With cLote
					Replace E2_MOVIMEN  With dBaixa
					Replace E2_PORTADO  With cBanco
					MsUnlock( )
				EndIF
			Endif
			dbSelectArea( "SE2" )
			dbSkip( )
		Enddo
	Endif
	dbGoto(nSalvRec)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona no registro de natureza		³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SED")
	dbSeek(xFilial("SED")+SE2->E2_NATUREZ)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza campo de maior atraso no Cadastro de Fornecedores		³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SA2")
	dbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA)
	RecLock("SA2")
	nAtraso:=dBaixa-SE2->E2_VENCTO
	If nAtraso > 1
		IF Dow(SE2->E2_VENCTO) == 1 .Or. Dow(SE2->E2_VENCTO) == 7
			IF Dow(dBaixa) == 2 .and. nAtraso <= 2
				nAtraso := 0
			EndIF
		EndIF
		nAtraso:=IIF(nAtraso<0,0,nAtraso)
		If SA2->A2_MATR < nAtraso
			Replace A2_MATR With nAtraso
		EndIf
	Endif
	MsUnlock()
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA340Mov ³ Autor ³ Valter G. Nogueira Jr.³ Data ³ 21/03/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera‡„o da Movimenta‡„o Banc ria 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA340Mov(ExpC1,ExpN2)									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Hist Padrao 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA340													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function FA340Mov(lPadrao,nValor,cAdiantamento,cSeq,nRegSE2,lDebito,nCont,nTxMoeda,nAcresc,nDecres,nTitAcres,nTitDecre,aBaixaSE5,lPaImp, nValse5,nPis,nCof,nCsl,nIrf,nIss,nInss)
LOCAL cAlias:=ALIAS()
LOCAL cDocOriginal := SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+SE2->E2_FORNECE+SE2->E2_LOJA
LOCAL nRecSe2 := SE2->(RecNo())
Local cForneceOri := SE2->E2_FORNECE
Local cLojaOri := SE2->E2_LOJA
LOCAL nValorReal := 0
LOCAL cFilOrig
Local nTamSeq	 := TamSX3("E5_SEQ")[1]
Local cSequencia := Replicate("0",nTamSeq)
LOCAL l340Mov1 := ExistBlock("SE5FI340")
LOCAL l340Mov2 := ExistBlock("SE5FI341")
Local nDecs1 := MsDecimais(1)
Local aDadosAdto := {}
Local cSeqPrc 	 := Replicate("0",nTamSeq)
Local cSeqAdt 	 := Replicate("0",nTamSeq)
Local nValPadrao := 0
Local lAcreDecre := .F.
Local nValorPa   := 0
Local nOrdemSE5  := SE5->(IndexOrd())
Local	nPisPa := 0
Local	nCofPa := 0
Local	nCslPa := 0
Local 	lCalcIssBx := IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" )

Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

Local lIRPFBaixa := .F.	
Local aAreaSE5	:= {}
Local cFilCred  //Variável que será alimentada com a filial do título
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )                
Local nTxProx		:=	0
Local nMoedaProx	:=	0
Local nTxContra	:=	0
Local cTipoCM := GetMV("MV_TIPOCM")
Local lE2Tpdesc	:= !Empty( SE2->( FieldPos( "E2_TPDESC" ) ) )
DEFAULT lDebito	:=	.F.
DEFAULT nCont   := 1
DEFAULT nTxMoeda := 0
DEFAULT nAcresc := 0
DEFAULT nDecres := 0
DEFAULT aBaixaSE5 := {}
DEFAULT lPAImp := .F.
DEFAULT nValse5  := nValor   
DEFAULT nPis:= 0 
DEFAULT nCof:= 0 
DEFAULT nCsl:= 0 
DEFAULT nIrf:= 0 
DEFAULT nIss := 0
DEFAULT nInss:= 0 

PRIVATE nCm := 0
PRIVATE cMotBx := "CMP"

If cPaisLoc == "BRA"
	lIRPFBaixa := Posicione("SA2",1,xfilial("SA2") + SE2->(E2_FORNECE+E2_LOJA),"A2_CALCIRF") == "2" .And. ;
           		IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
				Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S"						
Endif
If nValSE5 == Nil
	nValse5  := nValor	
Else
	If (nValSE5 > nValor) .and. lIRPFBaixa
		If nValSE5 - nValor == nIrf
			nValor += nIrf
		Endif
	Endif
EndIf
//verifica se existem os capos de valores de acrescimo e decrescimo no SE5
If SE5->(FieldPos("E5_VLACRES")) > 0 .and. SE5->(FieldPos("E5_VLDECRE")) > 0 
	lAcreDecre := .T.
Endif

cFilCred := SE2->E2_FILORIG

dbSelectArea("SE2")
dbSetOrder(1)
dbGoTo(nRegSE2)
//Quando informado o E2_FILIAL e a SE2 está compartilhada, o sistema grava a filial origem incorreta e com isso o estorno da compensação gera erro de saldos
cFilOrig := Iif( Empty( SE2->E2_FILORIG ) , SE2->E2_FILIAL , SE2->E2_FILORIG ) 
// Obtem o fornecedor do adiantamento
aDadosAdto := {	SE2->E2_NATUREZ, SE2->E2_TIPO, SE2->E2_PREFIXO, SE2->E2_NUM,;
						SE2->E2_PARCELA, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_NOMFOR,SE2->E2_MOEDA }

nValorReal := Round(NoRound(xMoeda(nValor,nMoeda,1,,3),3),2)
If SE2->E2_TIPO $ MVPAGANT
	nValorPa := SE2->E2_VALOR
	SE5->(dbSetOrder(7))
	If lPaImp .and. SE5->(MSSEEK(xFilial("SE5")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)))
		nPisPa := SE5->E5_VRETPIS
		nCofPa := SE5->E5_VRETCOF
		nCslPa := SE5->E5_VRETCSL				
	Endif
	SE5->(dbSetOrder(nOrdemSE5))
EndIf

If cPaisLoc <> "BRA" .And. Type("aTxMoedas")#"U"
	nValorReal := xMoeda(nValor,nMoeda,aDadosAdto[9],dDatabase,nDecs1+1,aTxMoedas[nMoeda][2])
ElseIf cPaisLoc == "BRA"	
	nValorReal := xMoeda(nValor,nMoeda,1,dDatabase,nDecs1+1,Fa340TxMd(nMoeda,nTxMoeda))
	If nMoeda > 1 .and. (SE2->E2_VALOR - nValorReal == -0.01 .or. SE2->E2_VALOR - nValorReal = 0.01)
		nValorReal :=  SE2->E2_VALOR
	Endif
EndIf
cSeqAdt := FaNxtSeqBx("SE2")  // Sequencia da baixa do adiantamento + 1

dbGoTo(nRecSe2)
cSeqPrc := FaNxtSeqBx("SE2")  // Sequencia da baixa do titulo + 1

cSequencia := IIf(cSeqAdt > cSeqPrc,cSeqAdt,cSeqPrc)

If SE2->E2_TIPO $ MVPAGANT
	nValorPa := SE2->E2_VALOR
	SE5->(dbSetOrder(7))
	If lPaImp .and. SE5->(MSSEEK(xFilial("SE5")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)))
		nPisPa := SE5->E5_VRETPIS
		nCofPa := SE5->E5_VRETCOF
		nCslPa := SE5->E5_VRETCSL				
	Endif
	SE5->(dbSetOrder(nOrdemSE5))
EndIf

nRegAtu	:= SE2->(Recno())
SE2->(Dbgoto(nRegSe2))
nMoedaProx	:= SE2->E2_MOEDA
nTxContra	:= SE2->E2_TXMOEDA
SE2->(Dbgoto(nRegAtu))
nTxProx	:= 0
If Len(aTxMoedas) >= nMoedaProx
	If nMoedaProx # SE2->E2_MOEDA .And. SE2->E2_MOEDA == 1 .And. SE2->E2_TIPO $ MVPAGANT .And. cPaisLoc=="BRA" //.And. aTxMoedas[nMoedaProx][2] <> aTxMoedas[nMoedaProx][4] 
		nTxProx	:=  aTxMoedas[nMoedaProx][2]
		//taxa não foi alterada no momento da baixa mas tenho que verificar se tenho taxa contratada no titulo que deve ser compensado.
		If aTxMoedas[nMoedaProx][2] == aTxMoedas[nMoedaProx][4] .And. nTxContra <> aTxMoedas[nMoedaProx][4] .And. nTxContra > 0 
			nTxProx	:= nTxContra
		Endif
	Endif
Endif
IF nValor != 0
	RecLock("SE5",.T.)                       
    If IsInCallStack("FINA340")  .and. ValType(lF340SE5)!="U" .and. lF340SE5  
		Aadd(aRecSe5,SE5->(Recno()))
	Endif 
	Replace E5_FILIAL 	With xFilial()
	Replace E5_DATA		With dBaixa
	If cPaisLoc != "BRA"
		Replace E5_VALOR	With nValSE5
	Else
		Replace E5_VALOR	With nValorReal
	EndIf
	Replace E5_NATUREZ	With SE2->E2_NATUREZ
	Replace E5_RECPAG 	With "P"
	Replace E5_TIPO		With SE2->E2_TIPO
	If lDebito
		Replace E5_TIPODOC With "BA"           
		Replace E5_HISTOR	 With OemToAnsi(STR0016) //"Baixa por Compensacao" 
	Else
		Replace E5_TIPODOC With "CP"          
		Replace E5_HISTOR  With OemToAnsi( STR0015 ) // "Compens. Adiantamento"  
		If lE2Tpdesc 
			Replace E5_TPDESC With SE2->E2_TPDESC
		EndIf 
	Endif
	// Grava fornecedor do titulo no movimento do PA, para ser utilizado no 
	// cancelamento da compensacao, quando se utiliza PA de outros fornecedores
	// para compensar.
	Replace E5_FORNADT With Left(Right(cAdiantamento,Len(SE2->(E2_FORNECE+E2_LOJA))),Len(SE2->E2_FORNECE))
	Replace E5_LOJAADT With Right(cAdiantamento,Len(SE2->E2_LOJA))

	Replace E5_LA			With IIF(lPadrao .and. nCont == 1 ,"S","N")
	Replace E5_LOTE		With cLote
	Replace E5_PREFIXO	With SE2->E2_PREFIXO
	Replace E5_NUMERO 	With SE2->E2_NUM
	Replace E5_PARCELA	With SE2->E2_PARCELA
	Replace E5_CLIFOR 	With SE2->E2_FORNECE
	Replace E5_FORNECE 	With SE2->E2_FORNECE
	Replace E5_LOJA		With SE2->E2_LOJA
	Replace E5_BENEF		With SE2->E2_NOMFOR
	Replace E5_DTDIGIT	With dDataBase
	Replace E5_MOTBX		With "CMP"
	Replace E5_DTDISPO	With SE5->E5_DATA
	Replace E5_SEQ 		With cSequencia
	Replace E5_DOCUMEN	With cAdiantamento
	If Type("aTxMoedas")#"U" .And. cPaisLoc<>"BRA"
		Replace E5_VLMOED2	With Round(NoRound(xMoeda(nValor,SE2->E2_MOEDA,nMoeda,,MsDecimais(nMoeda)+1,aTxMoedas[SE2->E2_MOEDA][2],aTxMoedas[nMoeda][2]),MsDecimais(nMoeda)+1),MsDecimais(nMoeda))
	Else
		Replace E5_VLMOED2	With Round(NoRound(xMoeda(nValor,SE2->E2_MOEDA,nMoeda,,3,If(nMoeda        == 1, Fa340TxMd(SE2->E2_MOEDA,SE2->E2_TXMOEDA),Fa340TxMd(SE2->E2_MOEDA,nTxMoeda        ));
																					 ,If(SE2->E2_MOEDA == 1, Fa340TxMd(nMoeda       ,nTxMoeda       ),Fa340TxMd(nMoeda        ,SE2->E2_TXMOEDA))),3),2)
	Endif
	Replace E5_VLJUROS	With Round(NoRound(xMoeda(nTitAcres,nMoeda,1,,3),3),2)
	Replace E5_VLDESCO	With Round(NoRound(xMoeda(nTitDecre,nMoeda,1,,3),3),2)
	// Este campo ‚ o elo de liga‡„o para compensa‡”es entre filiais
	Replace E5_FILORIG   With cFilCred
	
	If nTxProx > 0
		Replace E5_TXMOEDA   With nTxProx 			
	Else
		Replace E5_TXMOEDA   With If( (cPaisLoc=="BRA" .Or. Type("aTxMoedas")="U") .And. aTxMoedas[SE2->E2_MOEDA][2] == aTxMoedas[SE2->E2_MOEDA][4], Fa340TxMd(nMoeda,SE2->E2_TXMOEDA), aTxMoedas[nMoeda][2])
	Endif
	
	If nTxProx == 0 .And. SE2->E2_MOEDA > 1 .And. !(SE2->E2_TIPO $ MVPAGANT) .And. cPaisLoc=="BRA" //.And. aTxMoedas[nMoedaProx][2] <> aTxMoedas[nMoedaProx][4] 
		nTxProx	:= SE5->E5_TXMOEDA		
	Endif
	
	nValEstrang := SE5->E5_VLMOED2
	FA080CORR( nValor, Fa340TxMd(SE2->E2_MOEDA,SE2->E2_TXMOEDA) ) 
	If SE2->E2_MOEDA > 1 .and. SE2->E2_TXMOEDA > 0 .And. nMoeda == 1 
		nCm := 0
	EndIf
	Replace E5_VLCORRE	With nCm

	nValCorCM += nCM // variavel para contabilização da CM do titulo principal (atribuirá na variavel VALOR4).

	If lAcreDecre
		Replace E5_VLACRES   With Round(NoRound(xMoeda(nTitAcres,nMoeda,1,,3),3),2)
		Replace E5_VLDECRE   With Round(NoRound(xMoeda(nTitDecre,nMoeda,1,,3),3),2)
	Endif

	If lPaImp //Indica que se trata de baixa de imposto de PA Bruto
		SED->(MsSeek(xFilial("SED")+SE2->E2_NATUREZ))//Posiciono a Natureza
		Replace E5_PRETPIS With "5"
		Replace E5_PRETCOF With "5"
		Replace E5_PRETCSL With "5"
		Replace E5_VRETPIS With nPisPa //nValorPa * (SED->ED_PERCPIS / 100)
		Replace E5_VRETCOF With nCofPa //nValorPa * (SED->ED_PERCCOF / 100)
		Replace E5_VRETCSL With nCslPa //nValorPa * (SED->ED_PERCCSL / 100)
	Elseif nPis+nCof+nCsl+nIrf+nIss+Iif(lInssBx,nInss,0)>0  //será retornado com saldo quando a compensação usar proporcionalização
		SED->(MsSeek(xFilial("SED")+SE2->E2_NATUREZ))//Posiciono a Natureza

		If lPccBaixa
			Replace E5_PRETPIS With "7"
			Replace E5_PRETCOF With "7"
			Replace E5_PRETCSL With "7"
			Replace E5_VRETPIS With nPis 
			Replace E5_VRETCOF With nCof 
			Replace E5_VRETCSL With nCsl
		Endif  
		If nIrf>0 .AND. lIRPFBaixa
			Replace E5_PRETIRF With "7"
			Replace E5_VRETIRF With nIrf
  			Replace E5_BASEIRF With SE2->E2_BASEIRF*(nIrf/SE2->E2_IRRF)
		Endif
		If lCalcIssBx
			Replace E5_VRETISS With nIss
		Endif
		If nInss>0 .And. lInssBx //Inss Baixa
			Replace E5_PRETINS With "7"
			Replace E5_VRETINS With nInss
      Endif
	EndIf
	
	nTxMoed2 := If( cPaisLoc=="BRA" .Or. Type("aTxMoedas")="U", Fa340TxMd(nMoeda,SE2->E2_TXMOEDA), aTxMoedas[nMoeda][2])
	
	RecLock("SE5") 
	SE5->E5_MOEDA := StrZero(nMoeda,2)
	MsUnlock()

	If l340Mov1
		ExecBlock("SE5FI340",.f.,.f.)
	EndIf
	MsUnlock()
	aAdd( aBaixaSE5, SE5->(Recno()) )
	
	nValMoeda2 := E5_VLMOED2
	// Grava a correcao no SE2 para contabilizacao
	RecLock("SE2")
	SE2->E2_CORREC := nCm
	MsUnlock()
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gravando diferenca cambial			                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc=="BRA" .And. nCm <>0 .And. (FunName()=="FINA340" .or. FunName()=="FINA750" )
		Reclock( "SE5", .T. )
		SE5->E5_FILIAL		:= xFilial("SE5")
		SE5->E5_DATA		:= dBaixa
 		SE5->E5_VALOR		:= nCm
		SE5->E5_NATUREZ	:= SE2->E2_NATUREZ
		SE5->E5_RECPAG 	:= "R"
		SE5->E5_TIPO		:= SE2->E2_TIPO
		SE5->E5_LA			:= IIF(lPadrao .and. nCont == 1,"S","N")
		SE5->E5_TIPODOC	:= "CM"		
		SE5->E5_LOTE		:= cLote
		SE5->E5_PREFIXO	:= SE2->E2_PREFIXO
		SE5->E5_NUMERO 	:= SE2->E2_NUM
		SE5->E5_PARCELA	:= SE2->E2_PARCELA
		SE5->E5_CLIFOR	   := SE2->E2_FORNECE
	    SE5->E5_FORNECE 	:= SE2->E2_FORNECE
		SE5->E5_LOJA		:= SE2->E2_LOJA
		SE5->E5_BENEF		:= SE2->E2_NOMFOR
		SE5->E5_DTDIGIT	:= dDataBase	 	
		SE5->E5_MOTBX		:= "NOR"
		SE5->E5_SEQ 		:= cSequencia
  		SE5->E5_TXMOEDA  	:=	nTxMoed2
  		SE5->E5_VLMOED2	:=	xMoeda(SE5->E5_VALOR,1,SE2->E2_MOEDA,dBaixa,,,nTxMoed2)   

		If SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG
			SE5->E5_HISTOR 	:= OemToAnsi(STR0020) //CORREC.DE ADIANTAMENTO		
		Else 
			SE5->E5_HISTOR 	:= OemToAnsi(STR0005) //CORREC. MONET S/ RECEBTO		
		Endif		
		
		If l340Mov1
			ExecBlock("SE5FI340",.f.,.f.)
		EndIf
		MsUnlock()		
	Endif      

	//Atualiza dados do fornecedor
	dbSelectArea("SA2")
	If dbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA)
		RecLock("SA2")
		If SE2->E2_MOEDA > 1
			nValPadrao := Round(NoRound(xMoeda(nValorReal+nTotAbat,1,SE2->E2_MOEDA,,3,,Fa340TxMd(SE2->E2_MOEDA,SE2->E2_TXMOEDA)),3),2)
			nValPadrao := Round(NoRound(xMoeda(nValPadrao,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,3,Fa340TxMd(SE2->E2_MOEDA,SE2->E2_TXMOEDA)),3),2)
		Else
			nValPadrao := nValorReal+nTotAbat
		Endif
		IF SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG
			SA2->A2_SALDUP	+= nValPadrao
			SA2->A2_SALDUPM	+= xMoeda(nValPadrao,1,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,,,Fa340TxMd(Val(GetMv("MV_MCUSTO")),SE2->E2_TXMOEDA))
		Else
			SA2->A2_SALDUP	-= nValPadrao
			SA2->A2_SALDUPM	-= xMoeda(nValPadrao,1,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,,,Fa340TxMd(Val(GetMv("MV_MCUSTO")),SE2->E2_TXMOEDA))
		Endif
		MsUnlock()
	Endif
		
	If !Empty(cAdiantamento) .And. Len(aDadosAdto) > 0
		dbSelectArea("SE2")
		dbSetOrder(1)
		dbGoto(nRegSE2)
		RecLock("SE5",.T.)
	    If IsInCallStack("FINA340")  .and. ValType(lF340SE5)!="U" .and. lF340SE5    
			Aadd(aRecSe5,SE5->(Recno()))
		Endif 
		Replace E5_FILIAL		With xFilial("SE5")
		Replace E5_DATA		With dBaixa
		Replace E5_VALOR		With nValorReal 
		Replace E5_NATUREZ	With aDadosAdto[1]
		Replace E5_RECPAG		With "P"
		Replace E5_TIPO		With aDadosAdto[2]
		If lDebito
		  	Replace E5_TIPODOC With "CP"          
			Replace E5_HISTOR	 With OemToAnsi( STR0015 ) // "Compens. Adiantamento"
			If lE2Tpdesc
				Replace E5_TPDESC With SE2->E2_TPDESC
			EndIf
		Else
		  	Replace E5_TIPODOC	With "BA"           
		  	Replace E5_HISTOR		With OemToAnsi(STR0016) //"Baixa por Compensacao" 
		Endif
		// Grava fornecedor do titulo no movimento do PA, para ser utilizado no 
		// cancelamento da compensacao, quando se utiliza PA de outros fornecedores
		// para compensar.
		Replace E5_FORNADT With cForneceOri
		Replace E5_LOJAADT With cLojaOri

		Replace E5_LA		With IIF(lPadrao .and. nCont == 1,"S","N")
		Replace E5_PREFIXO	With aDadosAdto[3]
		Replace E5_NUMERO	With aDadosAdto[4]
		Replace E5_PARCELA	With aDadosAdto[5]
		Replace E5_CLIFOR	With aDadosAdto[6]
		Replace E5_FORNECE	With aDadosAdto[6]
		Replace E5_LOJA		With aDadosAdto[7]
		Replace E5_BENEF	With aDadosAdto[8]
		Replace E5_DTDIGIT	With dDataBase
		Replace E5_MOTBX	With "CMP"
		Replace E5_DTDISPO	With SE5->E5_DATA
		Replace E5_DOCUMEN	With cDocOriginal
		Replace E5_SEQ 		With cSequencia
		Replace E5_VLJUROS	With Round(NoRound(xMoeda(nAcresc,nMoeda,1,,3,nTxMoeda),3),2)
		Replace E5_VLDESCO	With Round(NoRound(xMoeda(nDecres,nMoeda,1,,3,nTxMoeda),3),2)
		If Type("aTxMoedas")#"U" .And. cPaisLoc <> "BRA"
			Replace E5_VLMOED2	With Round(NoRound(xMoeda(nValse5,nMoeda,aDadosAdto[9],,MsDecimais(aDadosAdto[9])+1,aTxMoedas[nMoeda][2],aTxMoedas[aDadosAdto[9]][2]),MsDecimais(aDadosAdto[9])+1),MsDecimais(aDadosAdto[9]))
	    Else
	    
			Replace E5_VLMOED2	With Round(NoRound(xMoeda(nValse5,nMoeda,SE2->E2_MOEDA,,3	,If(nMoeda        == 1, Fa340TxMd(nMoeda       ,SE2->E2_TXMOEDA),Fa340TxMd(nMoeda       ,nTxMoeda        ));
																							,If(SE2->E2_MOEDA == 1, Fa340TxMd(SE2->E2_MOEDA,nTxMoeda       ),Fa340TxMd(SE2->E2_MOEDA,SE2->E2_TXMOEDA))),3),2)
		Endif
		
		If nTxProx > 0 .And. SE2->E2_MOEDA == 1 .And. SE2->E2_TIPO $ MVPAGANT .And. cPaisLoc=="BRA" //.And. aTxMoedas[nMoedaProx][2] <> aTxMoedas[nMoedaProx][4] 
			Replace E5_TXMOEDA With nTxProx
		Else
			Replace E5_TXMOEDA   With If( (cPaisLoc=="BRA" .Or. !Empty(SE2->E2_TXMOEDA)) .And. aTxMoedas[SE2->E2_MOEDA][2] == aTxMoedas[SE2->E2_MOEDA][4], Fa340TxMd(nMoeda,SE2->E2_TXMOEDA), aTxMoedas[aDadosAdto[9]][2] )  // Taxa da moeda do titulo de adiantamento			
		Endif	
		
		nValEstrang := SE5->E5_VLMOED2
		FA080CORR(iif(cTipoCM =='O',nValEstrang,nValor),Fa340TxMd(SE2->E2_MOEDA,SE2->E2_TXMOEDA))
		If SE2->E2_MOEDA > 1 .and. SE2->E2_TXMOEDA > 0 .and. nMoeda == 1   
			nCm := 0
		EndIf
		Replace E5_VLCORRE   With nCm
		Replace E5_FILORIG   With cFilOrig

		If lAcreDecre
			Replace E5_VLACRES   With Round(NoRound(xMoeda(nAcresc,nMoeda,1,,3,nTxMoeda),3),2)
			Replace E5_VLDECRE   With Round(NoRound(xMoeda(nDecres,nMoeda,1,,3,nTxMoeda),3),2)
		Endif

		If lPaImp //Indica que se trata de baixa de imposto de PA Bruto
			SED->(MsSeek(xFilial("SED")+SE2->E2_NATUREZ))//Posiciono a Natureza
			Replace E5_PRETPIS With "5"
			Replace E5_PRETCOF With "5"
			Replace E5_PRETCSL With "5"
			Replace E5_VRETPIS With nPisPa //nValorPa * (SED->ED_PERCPIS / 100)
			Replace E5_VRETCOF With nCofPa //nValorPa * (SED->ED_PERCCOF / 100)
			Replace E5_VRETCSL With nCslPa //nValorPa * (SED->ED_PERCCSL / 100)
		Elseif nPis+nCof+nCsl+nIrf+nIss+ Iif(lInssBx,nInss,0)>0 //será retornado com saldo quando a compensação usar proporcionalização
				SED->(MsSeek(xFilial("SED")+SE2->E2_NATUREZ))//Posiciono a Natureza
			If lPccBaixa
				Replace E5_PRETPIS With "7"
				Replace E5_PRETCOF With "7"
				Replace E5_PRETCSL With "7"
				Replace E5_VRETPIS With nPis 
				Replace E5_VRETCOF With nCof 
				Replace E5_VRETCSL With nCsl
			Endif  
			If nIrf>0
				Replace E5_PRETIRF With "7"
				Replace E5_VRETIRF With nIrf
	  			Replace E5_BASEIRF With SE2->E2_BASEIRF*(nIrf/SE2->E2_IRRF)
			Endif
			If lCalcIssBx
				Replace E5_VRETISS With nIss
			Endif
			If lInssBx .And. nInss>0//Inss Baixa
				Replace E5_PRETINS With "7"
				Replace E5_VRETINS With nInss
			Endif
		EndIf

		If l340Mov2
			ExecBlock("SE5FI341",.f.,.f.)
		Endif
		MsUnlock()
		aAdd( aBaixaSE5, SE5->(Recno()) )                                       
		                                   
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gravando diferenca cambial			                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	    
    	nTxMoed2 := If( cPaisLoc=="BRA" .Or. !Empty(SE2->E2_TXMOEDA), Fa340TxMd(nMoeda,SE2->E2_TXMOEDA), aTxMoedas[aDadosAdto[9]][2] )
    			
		RecLock("SE5")    
		If cPaisLoc != "BRA"
			SE5->E5_MOEDA := StrZero(SE2->E2_MOEDA,2)
		Else
			SE5->E5_MOEDA := StrZero(nMoeda,2)
		Endif
		MsUnlock()
		aAreaSE5 := SE5->(GetArea()) //para efeito de acerto no posicio. da SE5 na contabil. 596
		If (cPaisLoc=="BRA") .And. (nCm <> 0) .And. (FUNNAME() $ "FINA340#FINA750")
			Reclock( "SE5", .T. )
			SE5->E5_FILIAL		:= xFilial("SE5")
			SE5->E5_DATA		:= dBaixa
 			SE5->E5_VALOR		:= nCm
			SE5->E5_NATUREZ	:= SE2->E2_NATUREZ
			SE5->E5_RECPAG 	:= "R"
			SE5->E5_TIPO		:= SE2->E2_TIPO
			SE5->E5_LA			:= IIF(lPadrao .and. nCont == 1,"S","N")
			SE5->E5_TIPODOC	:= "CM"		
			SE5->E5_LOTE		:= cLote
			SE5->E5_PREFIXO	:= SE2->E2_PREFIXO
			SE5->E5_NUMERO 	:= SE2->E2_NUM
			SE5->E5_PARCELA	:= SE2->E2_PARCELA
			SE5->E5_CLIFOR	   := SE2->E2_FORNECE
		    SE5->E5_FORNECE   := SE2->E2_FORNECE
			SE5->E5_LOJA		:= SE2->E2_LOJA
			SE5->E5_BENEF		:= SE2->E2_NOMFOR
			SE5->E5_DTDIGIT	:= dDataBase	 	
			SE5->E5_MOTBX		:= "NOR"
			SE5->E5_SEQ 		:= cSequencia
	  		SE5->E5_TXMOEDA  	:=	Iif(aTxMoedas[SE2->E2_MOEDA][2] != aTxMoedas[SE2->E2_MOEDA][4], aTxMoedas[aDadosAdto[9]][2], nTxMoed2 )
	  		SE5->E5_VLMOED2	:=	xMoeda(SE5->E5_VALOR,1,SE2->E2_MOEDA,dBaixa,,,nTxMoed2)   
		
			If SE2->E2_TIPO $ MVRECANT+"/"+MV_CRNEG
				SE5->E5_HISTOR 	:= OemToAnsi(STR0020) //CORREC.DE ADIANTAMENTO		
			Else 
				SE5->E5_HISTOR 	:= OemToAnsi(STR0005) //CORREC. MONET S/ RECEBTO		
			Endif		
		  
			If l340Mov2
		  		ExecBlock("SE5FI341",.f.,.f.)
	  		Endif  
			MsUnlock()	   				   
		Endif
        RestArea(aAreaSE5)
		// Grava a correcao no SE2 para contabilizacao
		RecLock("SE2")
		SE2->E2_CORREC := nCm
		MsUnlock()
		//Atualiza dados do fornecedor
		dbSelectArea("SA2")
		If dbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA)
			RecLock("SA2")
			If SE2->E2_MOEDA > 1
				nValPadrao := Round(NoRound(xMoeda(nValorReal+nTotAbat,1,SE2->E2_MOEDA,,3,Fa340TxMd(SE2->E2_MOEDA,SE2->E2_TXMOEDA)),3),2)
				nValPadrao := Round(NoRound(xMoeda(nValPadrao,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,3,Fa340TxMd(SE2->E2_MOEDA,SE2->E2_TXMOEDA)),3),2)
			Else
				nValPadrao := nValorReal+nTotAbat
			Endif
			IF SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG 
				SA2->A2_SALDUP	+= nValPadrao
				SA2->A2_SALDUPM	+= xMoeda(nValPadrao,1,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,,,Fa340TxMd(Val(GetMv("MV_MCUSTO")),SE2->E2_TXMOEDA))
			Else
				SA2->A2_SALDUP	-= nValPadrao
				SA2->A2_SALDUPM	-= xMoeda(nValPadrao,1,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,,,Fa340TxMd(Val(GetMv("MV_MCUSTO")),SE2->E2_TXMOEDA))
			Endif
			MsUnlock()
		Endif
	EndIF
EndIF
dbSelectArea(cAlias)
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fa070COrr ³ Autor ³ Pilar S. ALbaladejo   ³ Data ³ 30/01/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Sugere o valor da corr. monetaria p/ titulos <> moeda 1	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA070Corr() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÃÄÄÄÄÄÄÄÄÂÄÁÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³  DATA  ³ BOPS ³Program.³					ALTERACAO 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³03.12.97³xxxxxx³Mauricio³ Tratamento de Correcao Monetaria negativa pa-³±±
±±³        ³      ³        ³ ra titulos com moeda > 1                     ³±±
±±ÀÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa070Corr(nEstOriginal,nTxMoeda)
Local nValor1
LOCAL nBaseCorrecao := 0

Default lF070CM	:= ExistBlock("F070CM")
Default cTipoCM	:= GetMV("MV_TIPOCM")
DEFAULT nTxMoeda	:= 0

nEstOriginal := Iif(nEstOriginal==Nil,nValEstrang,nEstOriginal)

If cTipoCM == "O"		// Pelo Original (O)
	nBaseCorrecao := nEstOriginal
ELSE
	nBaseCorrecao := nValEstrang				// Pelo Total (T)
EndIf
If cPaisLoc<>"BRA"
	nCentMd1:=4
	nTxMoeda:=aTxMoedas[SE1->E1_MOEDA][2]
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o valor na moeda escolhida na data da ultima variacao   ³
//³ ou na data de emissao (caso nao tenha sofrido ainda nenhuma	  ³
//³ variacao.																		  ³
//³ Calcula o valor na moeda escolhida para a database.				  ³
//³ Subtrai um valor do outro para apurar a variacao. 				  ³
//³ A Correcao pode ser parametrizada para ser calculada pelo Origi-³
//³ nal ou pelo Total (Parametro MV_TIPOCM)           				  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If STR(nBaseCorrecao,17,2) == STR(SE1->E1_VALOR,17,2) .AND. Empty(SE1->E1_DTVARIA)
	nValor1 := SE1->E1_VLCRUZ
Else    
	If(SE1->(FieldPos("E1_TXMDCOR")>0 ) .And. !Empty(SE1->E1_TXMDCOR))
    	nValor1 := xMoeda(nBaseCorrecao,SE1->E1_MOEDA,1,Iif(Empty(SE1->E1_DTVARIA),SE1->E1_EMISSAO,SE1->E1_DTVARIA),8,SE1->E1_TXMDCOR)
    Else
		nValor1 := xMoeda(nBaseCorrecao,SE1->E1_MOEDA,1,Iif(Empty(SE1->E1_DTVARIA),SE1->E1_EMISSAO,SE1->E1_DTVARIA),8,Iif(Empty(SE1->E1_DTVARIA),SE1->E1_TXMOEDA,0))
	EndIf
Endif
If ( cPaisLoc<>"BRA" )
	nValor1:= xMoeda(nBaseCorrecao,SE1->E1_MOEDA,1,Iif(Empty(SE1->E1_DTVARIA),SE1->E1_EMISSAO,SE1->E1_DTVARIA),8,Iif(Empty(SE1->E1_DTVARIA),SE1->E1_TXMOEDA,0))  
	If Type("aTxMoedas")#"U" .AND. !( aTxMoedas == Nil )
 		nTxMoeda := aTxMoedas[SE1->E1_MOEDA][2]
 	Endif
Endif

If TrazCodMot(cMotBx) == "DEV"
	nValorM := xMoeda(nBaseCorrecao,SE1->E1_MOEDA,1,SE1->E1_EMISSAO,8,If(SE1->E1_TXMOEDA > 0 .And. SE1->E1_TXMOEDA == nTxMoeda,SE1->E1_TXMOEDA,nTxMoeda))
ELSE
	nValorM := xMoeda(nBaseCorrecao,SE1->E1_MOEDA,1,dBaixa,8,If(SE1->E1_TXMOEDA > 0 .And. SE1->E1_TXMOEDA == nTxMoeda,SE1->E1_TXMOEDA,nTxMoeda))
Endif				

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica atraves do parametro MV_CALCCM se sera calculada a cor-³
//³ recao monetaria.                                           	  ³
//³ Caso o parametro nao exista, sera assumido "S"						  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If ((Type("nMoedaBco")<>"U" .And. SE1->E1_MOEDA > 1 .And. SE1->E1_MOEDA <> nMoedaBco) .OR. ;
 	(Type("nMoedaBco")=="U" .AND. SE1->E1_MOEDA > 1 .AND. FUNNAME() $ "FINA330#FINA450#FINA740" )) .AND. ;
	IIf(cPaisLoc=="BRA", GetMv("MV_CALCCM") == "S" ,.T. )
	
	If lF070CM
		nCm := Execblock("F070CM",.F.,.F.,{nTxMoeda})
	Else
		nCM := nValorM - nValor1
	Endif
Else
	nCM := 0
Endif
Return .T.


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FA040Num	³ Autor ³ Wagner Xavier 		  ³ Data ³ 22/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se o numero da duplicata esta correto				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA040Num()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA040																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA040Num()
LOCAL lRetorna := .T., nOrder, cAlias
LOCAL nRecNo := SE1 -> (RecNo())
Local nPos := 0 
Local cTipo := ""
Local lInclTit	:= IIF(TYPE("INCLUI")<>"U",INCLUI,.F.)

If ( lF040Auto )  .AND. cPaisLoc == "EQU" .and. !lInclTit //somente para equador e se nao for inclusão
	nPos := Ascan(aAutoCab,{|x| Alltrim(x[1]) == "E1_TIPO"})
	If nPos > 0                                                                             
		cTipo := aAutoCab[nPos] [2]
	EndIf
	M->E1_PREFIXO 	:= SE1->E1_PREFIXO
	M->E1_NUM 		:= SE1->E1_NUM
	M->E1_TIPO 		:= cTipo  
	M->E1_PARCELA 	:= SE1->E1_PARCELA
	M->E1_CLIENTE	:= SE1->E1_CLIENTE
	M->E1_LOJA 		:= SE1->E1_LOJA
EndIF 
cAlias := Alias()
nOrder := IndexOrd()

#IFDEF TOP
	If IIf(Type("lF040Auto")=="U",.T.,lF040Auto==.F.)
		If (!Empty(M->E1_CLIENTE))
			If cPaisLoc $ "BRA|MEX" .and. AliasInDic("FIE")
				If Readvar() == "M->E1_CLIENTE"
					If Type("aRecnoAdt") != "U" .and. (FunName() = "MATA410" .or. FunName() = "MATA460A" .or. FunName() = "MATA460B")
						If IIf(FunName() = "MATA410" .and. Type("M->C5_CLIENTE") != "U",M->E1_CLIENTE != M->C5_CLIENTE,IIf(FunName() = "MATA460A" .and. SC5->(!Eof()),M->E1_CLIENTE != SC5->C5_CLIENTE,.F.))
							Aviso(STR0034,STR0053,{ "Ok" }) //"ATENCAO"#"Por tratar-se de título para processo de adiantamento, é obrigatório que o código do cliente seja o mesmo do 'Pedido de Venda/Documento de Saída'."
							Return(.F.)
						Endif
					Endif
				Endif
			Endif	
		Endif	
	Endif	
#ENDIF						

If ( !Empty(M->E1_CLIENTE) .And. !Empty(M->E1_LOJA) )
	If Readvar() == "M->E1_CLIENTE"

		#IFDEF TOP
			If IIf(Type("lF040Auto")=="U",.T.,lF040Auto==.F.)
				If cPaisLoc $ "BRA|MEX" .and. AliasInDic("FIE")
					If Type("aRecnoAdt") != "U" .and. (FunName() = "MATA410" .or. FunName() = "MATA460A" .or. FunName() = "MATA460B")
						If IIf((FunName() = "MATA410" .or. FunName() = "MATA460B") .and. Type("M->C5_CLIENTE") != "U" .and. Type("M->C5_LOJACLI") != "U" ,(M->E1_CLIENTE+M->E1_LOJA != M->C5_CLIENTE+M->C5_LOJACLI),IIf(FunName() = "MATA460A" .and. SC5->(!Eof()),(M->E1_CLIENTE+M->E1_LOJA != SC5->C5_CLIENTE+SC5->C5_LOJACLI),.F.))
							Aviso(STR0034,STR0053,{ "Ok" }) //"ATENCAO"#"Por tratar-se de título para processo de adiantamento, é obrigatório que o código do cliente seja o mesmo do 'Pedido de Venda/Documento de Saída'."
							Return(.F.)
						Endif
					Endif
				Endif
			Endif	
		#ENDIF						

		If ( SA1->A1_COD != M->E1_CLIENTE )
			dbSelectArea("SA1")
			dbSetOrder(1)
			dbSeek(xFilial()+M->E1_CLIENTE,.F.)
		EndIf
		M->E1_LOJA := SA1->A1_LOJA
	Else

		#IFDEF TOP
			If IIf(Type("lF040Auto")=="U",.T.,lF040Auto==.F.)
				If Readvar() == "M->E1_LOJA"
					If cPaisLoc $ "BRA|MEX" .and. AliasInDic("FIE")
						If Type("aRecnoAdt") != "U" .and. (FunName() = "MATA410" .or. FunName() = "MATA460A" .or. FunName() = "MATA460B")
							If IIf(FunName() = "MATA410" .and. Type("M->C5_CLIENTE") != "U" .and. Type("M->C5_LOJACLI") != "U" ,(M->E1_CLIENTE+M->E1_LOJA != M->C5_CLIENTE+M->C5_LOJACLI),IIf((FunName() = "MATA460A"  .or. FunName() = "MATA460B") .and. SC5->(!Eof()),(M->E1_CLIENTE+M->E1_LOJA != SC5->C5_CLIENTE+SC5->C5_LOJACLI),.F.))
								Aviso(STR0034,STR0050,{ "Ok" }) //"ATENCAO"#"Por tratar-se de título para processo de adiantamento, é obrigatório que o código do cliente e loja sejam os mesmos do 'Pedido de Venda/Documento de Saída'."
								Return(.F.)
							Endif
						Endif	
					Endif
				Endif
			Endif	
		#ENDIF						

		dbSelectArea("SA1")
		dbSetOrder(1)
		IF !dbSeek(xFilial("SA1")+M->E1_CLIENTE+M->E1_LOJA)
			lRetorna := .F.
			M->E2_LOJA := "  "
		Endif
	Endif
	lRefresh:=.T.
Endif	

If SA1->A1_MSBLQL == "1" .And. "E1_CLIENTE" $ READVAR() .And. M->E1_CLIENTE == SA1->A1_COD .And. M->E1_LOJA == SA1->A1_LOJA
	HELP(" ",1,"REGBLOQ")
	Return .F.
Endif

If !Empty(m->e1_num) .And. !Empty(m->e1_tipo)
	dbSelectArea("SE1")
	dbSetOrder(1)
	If (dbSeek(xFilial("SE1")+m->e1_prefixo+m->e1_num+m->e1_parcela+m->e1_tipo) )
		Help(" ",1,"FA040NUM")
		dbGoTo( nRecNo )
		Return .F.
	ElseIf m->e1_tipo $ MVABATIM
		If ! (dbSeek(xFilial("SE1")+m->e1_prefixo+m->e1_num+m->e1_parcela))
			Help(" ",1,"FA040TIT")
			dbGoTo( nRecNo )
			Return .f.
		End
	ElseIf m->e1_tipo $ MVRECANT
		dbSelectArea("SE5")
		dbSetOrder(7)
		If dbSeek(xFilial("SE5")+m->e1_prefixo+m->e1_num+m->e1_parcela+m->e1_tipo)
			Help(" ",1,"RA_EXISTIU")
			lRetorna := .F.
		Endif
	Else
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "E1_OCORREN" } )
		If nEndereco > 0
			nEnd1 := Val(Subs(aGets[nEndereco],1,2))
			nEnd2 := Val(Subs(aGets[nEndereco],3,1))*2
			nTam	:= Len(aTela[nEnd1][nEnd2])
			IF M->E1_TIPO $ MVABATIM+"/"+MVIRABT+"/"+MVINABT+"/"+MVPIABT+"/"+;
				MVCFABT+"/"+MVCSABT
				m->e1_ocorren := "04"
				aTela[nEnd1][nEnd2] := "04"
			Else
				m->e1_ocorren := "01"
				aTela[nEnd1][nEnd2] := "01"
			End
			lRefresh := .T.
		EndIf
		lRetorna := .T.
	EndIf
EndIf
dbSelectArea(cAlias)
dbSetOrder(nOrder)
SE1->(dbGoTo( nRecNo ))
Return lRetorna

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FA050Num	³ Autor ³ Wagner Xavier 		  ³ Data ³ 27/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se o numero da duplicata esta correto				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA050Num()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA050																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA050Num()
LOCAL lRetorna  := .T., nOrder, cAlias
LOCAL nRecNo	 := SE2->(RecNo())
Local lLoja     := .F.
Local nTamLoja  := nTamFor := nPosLoja1 := nPosLoja2 := nPosFor1 := nPosFor2 := 0
Local cChaveSe2 := ""  
Local nPos := 0 
Local cTipo := ""
Local lInclTit	:= IIF(TYPE("INCLUI")<>"U",INCLUI,.F.)

If Type("lF050Auto")=="U"
	lF050Auto:=.F.					
EndIf

If ( lF050Auto ) .And. cPaisLoc == "EQU" .AND. !lInclTit // QUANDO FOR INCLUSAO, ESTA VALIDAÇÃO NAO PODERA SER CHAMADA.
	nPos := Ascan(aAutoCab,{|x| Alltrim(x[1]) == "E2_TIPO"}) 
	If nPos > 0                                                                             
		cTipo := aAutoCab[nPos] [2]
	EndIf
	M->E2_PREFIXO 		:= SE2->E2_PREFIXO
	M->E2_NUM 				:= SE2->E2_NUM
	M->E2_TIPO 				:= cTipo  
	M->E2_PARCELA 	:= SE2->E2_PARCELA
	M->E2_FORNECE	:= SE2->E2_FORNECE
	M->E2_LOJA 				:= SE2->E2_LOJA
EndIF  

cChaveSe2 := "'" + xFilial("SE2") +"'+ M->E2_PREFIXO + M->E2_NUM + M->E2_PARCELA +" +;
							" M->E2_TIPO + M->E2_FORNECE + M->E2_LOJA"	 

nOrder := IndexOrd()
cAlias := Alias()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Em chamadas automaticas do FINA050 para inclusao eh  ³
//³necessario alimentar as variaveis do fornecedor para ³
//³validacao adequada de bloqueio do mesmo.             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(M->E2_FORNECE) .OR. Empty(M->E2_LOJA)
	If IsInCallStack("FINA050") .AND. FunName() # "FINA050" .AND. Type("lF050Auto") == "L" .AND. lf050Auto .AND. INCLUI .AND. Type("aAutoCab") # "U"
		If aScan(aAutoCab,{|x| x[1] == "E2_FORNECE"}) > 0 .AND. aScan(aAutoCab,{|x| x[1] == "E2_LOJA"}) > 0	
			M->E2_FORNECE := aAutoCab[aScan(aAutoCab,{|x| x[1] == "E2_FORNECE"})][2]
			M->E2_LOJA := aAutoCab[aScan(aAutoCab,{|x| x[1] == "E2_LOJA"})][2]
		Endif
	Endif
Endif

#IFDEF TOP
	If !lF050Auto
		If (!Empty(M->E2_FORNECE))
			If cPaisLoc $ "BRA|MEX" .and. AliasInDic("FIE") 
				If Readvar() == "M->E2_FORNECE"
					If Type("aRecnoAdt") != "U" .and. (FunName() = "MATA121" .or. FunName() = "MATA103")
						If IIf(FunName() = "MATA121" .and. Type("cA120Forn") != "U",M->E2_FORNECE != cA120Forn,IIf(FunName() = "MATA103" .and. Type("cA100For") != "U",M->E2_FORNECE != cA100For,.F.))
							Aviso(STR0034,STR0051,{ "Ok" }) //"ATENCAO"#"Por tratar-se de título para processo de adiantamento, é obrigatório que o código do fornecedor seja o mesmo do 'Pedido de Compra/Documento de Entrada'."
							Return(.F.)
						Endif
					Endif
				Endif
			Endif	
		Endif	
	Endif	
#ENDIF						

If (!Empty(M->E2_FORNECE) .And. !Empty(M->E2_LOJA))

	#IFDEF TOP
		If !lF050Auto
			If cPaisLoc $ "BRA|MEX" .and. AliasInDic("FIE")
				If Type("aRecnoAdt") != "U" .and. (FunName() = "MATA121" .or. FunName() = "MATA103")
					If Readvar() == "M->E2_FORNECE"
						If IIf(FunName() = "MATA121" .and. Type("cA120Forn") != "U" .and. Type("cA120Loj") != "U" ,(M->E2_FORNECE+M->E2_LOJA != cA120Forn+cA120Loj),IIf(FunName() = "MATA103" .and. Type("cA100For") != "U" .and. Type("cLoja") != "U",(M->E2_FORNECE+M->E2_LOJA != cA100For+cLoja),.F.))
							Aviso(STR0034,STR0051,{ "Ok" }) //"ATENCAO"#"Por tratar-se de título para processo de adiantamento, é obrigatório que o código do fornecedor seja o mesmo do 'Pedido de Compra/Documento de Entrada'."
							Return(.F.)
						Endif
					Elseif ReadVar() == "M->E2_LOJA"
						If IIf(FunName() = "MATA121" .and. Type("cA120Forn") != "U" .and. Type("cA120Loj") != "U" ,(M->E2_FORNECE+M->E2_LOJA != cA120Forn+cA120Loj),IIf(FunName() = "MATA103" .and. Type("cA100For") != "U" .and. Type("cLoja") != "U",(M->E2_FORNECE+M->E2_LOJA != cA100For+cLoja),.F.))
							Aviso(STR0034,STR0052,{ "Ok" }) //"ATENCAO"#"Por tratar-se de título para processo de adiantamento, é obrigatório que o código do fornecedor e loja sejam os mesmos do 'Pedido de Compra/Documento de Entrada'."
							Return(.F.)
						Endif
					Endif
				Endif
			Endif	
		Endif	
	#ENDIF

	dbSelectArea("SA2")
	dbSetOrder(1)
	If dbSeek(xFilial()+M->E2_FORNECE+M->E2_LOJA,.T.)
		If M->E2_LOJA != SA2->A2_LOJA .And. !Empty(M->E2_LOJA)
			Help(" ",1,"FA050NUM")
			lRetorna := .F.
		EndIf
	Else
		// Limpa o codigo da loja, se estiver editando o codigo do fornecededor e
		// a loja estiver preenchida. Isto ocorre qdo. o usu rio volta ao campo
		// com a seta.
		IF !EMPTY(M->E2_LOJA) .AND. "E2_FORNECE" $ READVAR()
			M->E2_LOJA := SPACE(LEN(M->E2_LOJA))
		ENDIF
		dbSeek(xFilial()+M->E2_FORNECE+M->E2_LOJA,.T.)
		If M->E2_LOJA != SA2->A2_LOJA .And. !Empty(M->E2_LOJA)
			Help(" ",1,"FA050NUM")
			lRetorna := .F.
		EndIf
	EndIf
Endif

If SA2->A2_MSBLQL == "1" .And. "E2_FORNECE" $ READVAR() .And. M->E2_FORNECE == SA2->A2_COD .And. M->E2_LOJA == SA2->A2_LOJA
	HELP(" ",1,"REGBLOQ")
	lRetorna := .F.
Endif                                        				

If ! Empty(m->e2_num) .and. !Empty(m->e2_tipo) .And. !Empty(m->e2_fornece) .And. !Empty(m->e2_loja)
	dbSelectArea("SE2")
	dbSetOrder(1)
	dbSeek(&cChaveSe2)
	If Found()
		If !(lF050Auto .and. ALTERA)
			Help(" ",1,"FA050NUM")
			lRetorna := .F.
		Endif
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se numera‡„o j  havia sido utilizada - PA ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If m->e2_tipo $ MVPAGANT
		DbSelectArea("SE5")
		DbSetOrder(7)
		If DbSeek(xFilial("SE5")+m->e2_prefixo+m->e2_num+m->e2_parcela+m->e2_tipo+m->e2_fornece+m->e2_loja)
			Help(" ",1,"PA_EXISTIU")
			DbSelectArea(cAlias)
			dbSetOrder(nOrder)
			Return .f.
		Endif		
		DbSelectArea("SE2")
	Endif

	If (cPaisLoc <> "PER" .And. M->E2_TIPO $ MVABATIM) .And. (cPaisLoc == "PER" .And. M->E2_TIPO $ StrTran( MVABATIM , "IR-|" , "" ))
		DbSetOrder(6)
		If ! dbSeek(xFilial("SE2") + m->e2_fornece + m->e2_loja + m->e2_prefixo +;
			m->e2_num + m->e2_parcela)
			Help(" ",1,"FA040TIT")
			DbSetOrder(1)
			dbGoTo( nRecNo )
			Return .F.
		EndIf
		DbSetOrder(1)
	EndIf
EndIf

// RFC - Validação para o Codigo de retenção da DIRF
If ( M->E2_DIRF == "1" ) .And. Empty( M->E2_CODRET )
	Help( " " , 1 , "FA050CODRET" ,, STR0033, 1, 0 ) // "Código de retenção não informado!"
	Return .F.
EndIf

dbSelectArea(cAlias)
dbSetOrder(nOrder)
If ( lLoja .And. !lRetorna )
	M->E2_LOJA := ""
	aTela[nPosLoja1][nPosLoja2] := PadL(M->E2_LOJA,nTamLoja)
EndIf
lRefresh := .T.

Return lRetorna

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FaDigiChq ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 15/10/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que abre ou n„o o get do n§ de cheque na baixa 	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FaDigiChq()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function faDigiChq()
Local lRet := .T.
// Nao habilita o numero de cheque para :
// - Adiantamento, Banco Caixa, Carteira ou Motivo igual a D‚bito em C/C
If (SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG) .or. ;
	cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1])       .or. ;
	cBanco $ GetMv("MV_CARTEIR")     .or. ;
	TrazCodMot(cMotBx) $ "DEB/DAC"   .or. ;
	! ChqMotBx(cMotBx)				   .or. ;
	(GetMv("MV_CHQBOR") == "N" .and. !Empty(SE2->E2_NUMBOR))
	lRet := .F.
Endif
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³UltiLote  ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 14/10/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Ponto de entrada para buscar n§ do ultimo lote digitado	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ UltiLote()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ultilote()
Default lUltiLote := ExistBlock("UltiLote")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA 									  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lUltiLote
	ExecBlock('UltiLote',.F.,.F.)
Endif
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ CkeckLote³ Autor ³ Wagner Xavier 		  ³ Data ³ 06/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se um lote ja existe 									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ CheckLote() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nao tem																	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CheckLote(cRecPag)
Local cAlias:=ALIAS(),lRet:=.T.
Local lBxCnab := IIf(GETMV("MV_BXCNAB")== "S",.T.,.F.)
Local cFunName := FunName()
IIF (Empty (cRecPag),"P",cRecPag)

If cFunName $ "FINA090|FINA091" .and. lBxCnab .and.((SubStr(cBco090,1,2) == "CX" .or. cBco090 $ GetMv("MV_CARTEIR"))) 
    lRet:= .T.
Elseif Empty (cLoteFin)
	lRet:= .F.
EndIF
dbSelectArea("SE5")
dbSetOrder(5)
If !Empty (cLoteFin)
	If dbSeek(xFilial("SE5")+cLoteFin)
		While !Eof() .and. AllTrim(SE5->E5_LOTE) == AllTrim(cLoteFin) .and. SE5->E5_FILIAL == xFilial()
			If SE5->E5_RECPAG == cRecPag
				Help("",1,"LOTEEXIST")
				lRet:=.F.
				Exit
			Endif
			dbSkip()
		Enddo
	Endif
Endif	
dbSetOrder(1)
dbSelectArea(cAlias)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡„o	  ³ xCxFina  ³ Autor ³ Mauricio Pequim Jr		³ Data ³ 17/11/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡„o ³ Retorna o Caixa/Agencia/Conta geral do Financeiro				³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe   ³ xCxFina()																	³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function xCxFina()
Local cCaixa
Local aCaixaRet := {}
Local cAlias := Alias()
Local nReg	 := Recno()
Local nOrdem := IndexOrd()
Local cBcoCx := CriaVar("E1_PORTADO")
Local cAgeCx := CriaVar("E1_AGEDEP")
Local cCtaCx := CriaVar("E1_CONTA")
Local lCria

cCaixa := GetMv("MV_CXFIN")

If AllTrim(ValType(cCaixa)) == "L"
	cCaixa := SuperGetMv("MV_CXFIN" , .F. , "" , SM0->M0_CODFIL)
EndIf

cBcoCx := Substr(cCaixa,1,At("/",cCaixa) - 1)
cBcoCx += Space(Len(SE1->E1_PORTADO)-Len(cBcoCx))

cAgeCx := Substr(cCaixa,At("/",cCaixa) +1 ,(Rat("/",cCaixa)-At("/",cCaixa)-1))
cAgeCx += Space(Len(SE1->E1_AGEDEP)-Len(cAgeCx))

cCtaCx := Substr(cCaixa,Rat("/",cCaixa) +1,Len(SE1->E1_CONTA))
cCtaCx += Space(Len(SE1->E1_CONTA)-Len(cCtaCx))

Aadd( aCaixaRet, cBcoCx )
Aadd( aCaixaRet, cAgeCx )
Aadd( aCaixaRet, cCtaCx )

dbSelectArea("SA6")
dbSetOrder(1)		//A6_FILIAL+A6_COD+A6_AGENCIA+A6_NUMCON
// Verifica se os dados sao validos para criacao do banco.
lCria :=	!Empty(aCaixaRet[1]) .And.;
			!Empty(aCaixaRet[2]) .And.;
			!Empty(aCaixaRet[3])
If lCria .And. !SA6->(dbSeek(xFilial("SA6")+aCaixaRet[1]+aCaixaRet[2]+aCaixaRet[3]))
	RecLock("SA6",.T.)
	SA6->A6_FILIAL	:= xFilial("SA6")
	SA6->A6_COD 	 := aCaixaRet[1]
	SA6->A6_AGENCIA := aCaixaRet[2]
	SA6->A6_NUMCON  := aCaixaRet[3]
	SA6->A6_NOME	 := "CAIXA GERAL"
	SA6->A6_NREDUZ  := "CAIXA GERAL"
	MsUnLock()
EndIf

dbSelectArea(cAlias)
dbSetOrder(nOrdem)
dbGoto(nReg)

Return aCaixaRet


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³NEWTIPCART³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 22/08/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para verificar carteira do tipo de titulo ³±±
±±³          ³ contido no arquivo SES                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ NEWTIPCART(Tipo,Carteira)											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gen‚rico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function NEWTIPCART(cTipo,cCarteira)
Local lRet := .T.
SES->(dbSetOrder(1))
If cTipo == NIL .or. cCarteira == NIL
	lRet := .F.
Elseif SES->(dbSeek(xFilial("SES")+cTipo))
	If !(SES->ES_CARTEIR $ cCarteira+"/3")
		lRet := .F.
	Endif
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Fa050GerPa  ³ Autor ³ Wagner Mobile Costa   ³ Data ³ 13/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Faz a geracao do registro na tabela SE5 ou SEF (para  geracao ³±±
±±³          ³ de cheque, de acordo com perguntas	                     	     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cPar1 = Banco tratados como carteira                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Fa050GerPa(cBancoCx)

Local nRecSE2    := SE2->(Recno())
Local nRecSE5    := 0
Local lLibCheq := IIf(GetMv("MV_LIBCHEQ") == "S", .T.,.F.)
Local cModRetPIS := GetNewPar( "MV_RT10925", "1" ) 

//1-Cria NCC/NDF referente a diferenca de impostos entre emitidos (SE2) e retidos (SE5)
//2-Nao Cria NCC/NDF, ou seja, controla a diferenca num proximo titulo
//3-Nao Controla
Local cNccRet  := SuperGetMv("MV_NCCRET",.F.,"1")

Local nDiferImp  := If (Type("nDiferImp") != "N",0,nDiferImp)
Local nVlMinImp  := GetNewPar("MV_VL10925",5000)

Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) 
Local nLoop
Local nA6_Moeda	:= 0

//Controla o Pis Cofins e Csll na baixa
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )
				 
Local lContrRet := !Empty( SE2->( FieldPos( "E2_VRETPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE2->( FieldPos( "E2_VRETCSL" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETPIS" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_PRETCOF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETCSL" ) ) )
				                      
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; //Inss Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )

Local lMoedBco	:= SuperGetMv("MV_MOEDBCO",,.F.)
Local lAplMinP := IIf( SA2->( FieldPos( "A2_MINPUB" ) ) > 0 .And. SA2->A2_MINPUB == "2",.T., .F.)
Local lEmpPub :=  IIf(lIsEmpPub, IsEmpPub(), .F.) .And. lIRPFBaixa .And. lAplMinP
Local nVlMPub	:= SuperGetMv("MV_VLMPUB" ,.T.,10)
Local lEmpGImp := .T.

Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" )
		                      
Private dBaixa	  := SE2->(CriaVar("E2_BAIXA"))

If SE2->E2_EMISSAO >= dLastPcc .And. !lEmpPub
	nVlMinImp := 0
EndIf
				 
If SE2->E2_TIPO $ MVPAGANT .and. SubStr(cBancoAdt,1,2) != "CX" .and. ;
	!(cBancoAdt $ cBancoCx )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera cheque a pagar se:                                 ³
	//³ 1. Banco nao for CX (Carteira) e docto for um PA e      ³
	//³ 2. Caso pergunta "Gera Chq p/Adiant.?" == 1 (Sim) ou    ³
	//³    Nro do Cheque for preenchido                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If mv_par05 == 1 .or. !Empty(cChequeAdt) .Or. cPaisLoc $ "ARG|ANG|COL|MEX"
		Reclock("SEF",.T.)
		SEF->EF_FILIAL 	:= xFilial()
		SEF->EF_BANCO		:= cBancoAdt
		SEF->EF_AGENCIA	:= cAgenciaAdt
		SEF->EF_CONTA		:= cNumCon
		SEF->EF_NUM 		:= cChequeAdt
        If cPaisLoc $ "ARG|BOL|ANG|COL|MEX|BRA"
			nA6_Moeda	:= Posicione("SA6",1,xFilial("SA6")+cBancoAdt+cAgenciaAdt+cNumCon,"A6_MOEDA")
			If (cPaisLoc == "BRA") .AND. (SE2->E2_MOEDA != nA6_MOEDA)
				If lMoedBco .And. M->E2_MOEDA > 1
					SEF->EF_VALOR	:= xmoeda(M->E2_VALOR, M->E2_MOEDA, SA6->A6_MOEDA,,,M->E2_TXMOEDA)
				Else
					SEF->EF_VALOR	:= SE2->E2_VLCRUZ
				EndIf
			Else
				SEF->EF_VALOR	:= SE2->E2_VALOR
			EndIf
		Else
			SEF->EF_VALOR	:= SE2->E2_VLCRUZ - SE2->E2_DECRESC + SE2->E2_ACRESC
		EndIf
		SEF->EF_DATA		:= SE2->E2_EMISSAO
		SEF->EF_BENEF		:= Iif(Empty(cBenef),SA2->A2_NOME,cBenef)
		SEF->EF_HIST		:= Iif(Empty(cHistor),SE2->E2_HIST,cHistor)
		SEF->EF_PREFIXO		:= SE2->E2_PREFIXO
		SEF->EF_TITULO 		:= SE2->E2_NUM
		SEF->EF_PARCELA		:= SE2->E2_PARCELA
		SEF->EF_FORNECE		:= SE2->E2_FORNECE
		SEF->EF_LOJA		:= SE2->E2_LOJA
		SEF->EF_TIPO		:= SE2->E2_TIPO
		SEF->EF_SEQUENC		:= PadL("1",TamSX3("EF_SEQUENC")[1],"0")
		SEF->EF_ORIGEM    	:= "FINA050"
		SEF->EF_LIBER     	:= GetMv("MV_LIBCHEQ")
		SEF->EF_FILORIG 	:= cFilAnt
		If cPaisLoc $ "ARG|ANG|COL|MEX"
			SEF->EF_VENCTO	:=	SE2->E2_VENCTO
			SEF->EF_LA		:=	"S"
			SEF->EF_CART	:=	"P"
		Endif
		MsUnlock()
		FKCOMMIT()
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Para a Versao argentina gerara um titulo CH no SE2 e nao gerara³
//³ movimentaçao bancaria ate que nao se consolide com o extrato.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(cPaisLoc $ "ARG|ANG|COL|MEX") .Or. Subs(cBancoAdt,1,2) == "CX" .or. cBancoAdt $ cBancoCx
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se for PA, gera movimenta‡„o banc ria      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SE2->E2_TIPO $ MVPAGANT
		//Parametros:
		//  lLibCheq = MV_LIBCHEQ -> Opcao para liberacao de saldo bancario 
		//                           quando da geracao de cheques antes da baixa.
		//  cBancoCX = MV_CARTEIR -> Define os codigos dos bancos que operam em carteira.
		//Perguntas:
		//  MV_PAR05   -> Gera Cheque p/Titulos de Adiantamento
		//  MV_PAR09   -> Gera Movimento s/ Num. Cheque 
		//Interface aValidGets -> FINA050
		// cChequeAdt  -> Num. do Cheque Digitado pelo Usuario
		// cBancoAdt   -> Codigo do Banco Digitado pelo Usuario
		//

		lEmpGImp := !(lEmpPub .And. lAplMinP .And. SE2->(E2_PIS+E2_COFINS+E2_CSLL+E2_IRRF) < nVlMPub )

		If (lLibCheq .and. !Empty(cChequeAdt) .and. Substr(cChequeAdt,1,1) != "*") .or.; // 1
			Substr(cBancoAdt,1,2) == "CX" .or.; // 2
			(cBancoAdt $ cBancoCx) .or.; // 3
			(lLibCheq .and. mv_par09 == 1 .and. IIf(mv_par05 == 1 .and. Empty(cChequeAdt), .F., .T.)) .or.; // 4
			(mv_par09 == 1 .and. mv_par05 == 2 .and. Empty(cChequeAdt)) .or. ;// 5
			(mv_par09 == 2 .and. mv_par05 == 2 .and. ((lIRPFBaixa .and. SE2->E2_IRRF > 0) .or.;
			(lPCCBaixa .and. SE2->E2_PIS+SE2->E2_COFINS+SE2->E2_CSLL >0) )) .and.;//6
		 	(SE2->E2_PIS+SE2->E2_COFINS+SE2->E2_CSLL+SE2->E2_IRRF > 0)//7
			

	        //  Regras para execucao
	        //   ----------------------------------------------------------------------------------------------
	        //    MV_LIBCHEQ | MV_PAR05 | MV_PAR09 | cBancoAdt(V)        | cChequeAdt(V)
	        //   ------------|----------|----------|---------------------|-------------------------------------
	        // 1     SIM     |          |          |                     | !Empty(V) .and. Substr(V,1,1) != "*"
	        // 2             |          |          | Substr(V,1,2)=="CX" |
	        // 3             |          |          | (V $ cBancoCx)      |
	        // 4     SIM     |   SIM    |   SIM    | !Empty(V)           |
	        // 4     SIM     |   NAO    |   SIM    | Empty(V)            |
	        // 5             |   NAO    |   SIM    | Empty(V)            |
	        // 6             |   NAO    |   NAO    |                     |
                  			
			RecLock("SE5",.T.)
			SE5->E5_FILIAL	:= xFilial("SE5")
			SE5->E5_BANCO		:= cBancoAdt
			SE5->E5_AGENCIA	:= cAgenciaAdt
			SE5->E5_CONTA		:= cNumCon
			
			SE5->E5_DATA		:= SE2->E2_EMISSAO
			SE5->E5_NATUREZ	:= SE2->E2_NATUREZ
			SE5->E5_RECPAG	:= "P"
			SE5->E5_TIPO		:= MVPAGANT
			//Toda inclusão de PA com movimento será marcado a flag de contabilizado
			SE5->E5_LA			:= "S"
			SE5->E5_HISTOR	:= Iif(Empty(cHistor),SE2->E2_HIST,cHistor)
			SE5->E5_BENEF		:= Iif(Empty(cBenef),SA2->A2_NOME,cBenef)
			SE5->E5_PREFIXO	:= SE2->E2_PREFIXO
			SE5->E5_NUMERO	:= SE2->E2_NUM
			SE5->E5_PARCELA	:= SE2->E2_PARCELA
			SE5->E5_CLIFOR	:= SE2->E2_FORNECE
			SE5->E5_FORNECE	:= SE2->E2_FORNECE
			SE5->E5_LOJA		:= SE2->E2_LOJA
			SE5->E5_DTDIGIT	:= dDataBase
			
			SE5->E5_DTDISPO	:= SE5->E5_DATA
			SE5->E5_VLDESCO	:= SE2->E2_DECRESC    
			SE5->E5_VLJUROS	:= SE2->E2_ACRESC
			SE5->E5_VLACRES	:= SE2->E2_ACRESC
			SE5->E5_VLDECRE	:= SE2->E2_DECRESC	
			IF !(mv_par09 == 2 .and. mv_par05 == 2) .or. !(SE2->E2_PIS+SE2->E2_COFINS+SE2->E2_CSLL+SE2->E2_IRRF > 0)
				SE5->E5_NUMCHEQ := cChequeAdt
				SE5->E5_TIPODOC	:= "PA" 
				SE5->E5_MOTBX		:= "NOR"
			Else
				SE5->E5_NUMCHEQ := ""
				SE5->E5_TIPODOC	:= "BA" 
				SE5->E5_MOTBX		:= "PCC" 
			EndIf	
						
			If SE2->(FieldPos("E2_TXMOEDA"))>0  .And. SE5->(FieldPos("E5_TXMOEDA"))>0 
		   		SE5->E5_TXMOEDA := SE2->E2_TXMOEDA
			EndIf		
			
			If SE5->(FieldPos("E5_FILORIG")) > 0
				SE5->E5_FILORIG  := If(Empty(SE5->E5_FILORIG),cFilAnt,SE5->E5_FILORIG)
			EndIf			
			
			IF !(mv_par09 == 2 .and. mv_par05 == 2) .Or. (cBancoAdt $ cBancoCx) 
				If cPaisLoc <> "BRA" 
					SA6->(DbSetOrder(1))
					SA6->(MsSeek(xFilial()+cBancoAdt+cAgenciaAdt+cNumCon))
					If( Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,SA6->A6_MOEDAP),1) )== 1
						SE5->E5_VALOR		:= SE2->E2_VLCRUZ   
						SE5->E5_VLMOED2	:= SE2->E2_VALOR
						SE5->E5_MOEDA	:= Strzero(Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,SA6->A6_MOEDAP),1),2)
					Else
						SE5->E5_VALOR		:= SE2->E2_VALOR   
						SE5->E5_VLMOED2	:= SE2->E2_VLCRUZ
						SE5->E5_MOEDA	:= Strzero(Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,SA6->A6_MOEDAP),1),2)
				   EndIf
				   
				Else
					SA6->(DbSetOrder(1))
					SA6->(DbSeek(xFilial()+cBancoAdt+cAgenciaAdt+cNumCon))
					If Max(SA6->A6_MOEDA,1) == 1
						SE5->E5_VALOR		:= SE2->E2_VLCRUZ   
						SE5->E5_VLMOED2	:= SE2->E2_VALOR
						SE5->E5_MOEDA		:= '01'
					Else
						If lMoedBco .And. M->E2_MOEDA > 1 .And. M->E2_MOEDA != SA6->A6_MOEDA
							SE5->E5_VALOR		:= xmoeda(M->E2_VALOR, M->E2_MOEDA, SA6->A6_MOEDA,,,M->E2_TXMOEDA)   
							SE5->E5_VLMOED2	:= SE2->E2_VALOR
						Else
							SE5->E5_VALOR		:= SE2->E2_VALOR   
							SE5->E5_VLMOED2	:= SE2->E2_VLCRUZ
						EndIf
						SE5->E5_MOEDA		:= Strzero(SA6->A6_MOEDA,2)
					EndIf		
				EndIf
			EndIf
			If SPBInUse()
				SE5->E5_MODSPB		:= SE2->E2_MODSPB
			Endif 
			If lIRPFBaixa
				//IRRF - BAIXA
				If lNewIrBx
					FGRVSFQIR(SE2->E2_VRETIRF,SE2->E2_BASEIRF,aRetIrf)
				Else
					SE5->E5_VRETIRF := 	SE2->E2_VRETIRF
					SE5->E5_BASEIRF := 	SE2->E2_BASEIRF	
				Endif
			Endif 
			If FwIsInCallStack("FINA050") .And. (!lCalcIssBx .Or. (lCalcIssBx .And. SE2->E2_TIPO $ MVPAGANT))
				SE5->E5_VRETISS	:= SE2->E2_ISS
			EndIf
			If lInssBx .And. (IsInCallStack("FINA050"))//Inss Baixa
				SE5->E5_VRETINS	:= nVretInss
				SE5->E5_PRETINS	:= cPretIns
			Endif
			SE5->(MsUnlock())
			//Se controla retencao, se eh PA e se mv_bx10925 = 1 (baixa), forca gerar tx's na emissao
			If lContrRet .and. lPccBaixa	
			   //Recompoe a base do titulo corrente 
				nBaseRet := SE2->(E2_VALOR+E2_PIS+E2_COFINS+E2_CSLL+E2_IRRF+E2_INSS+E2_ISS)+Iif(SE2->(FieldPos("E2_SEST")) > 0, SE2->E2_SEST, 0)
            
				RecLock("SE5",.F.)
				//Grava campos auxiliares do movimento de PA com referencia a rentecao e valor de retencao 
				SE5->E5_VRETPIS := SE2->E2_VRETPIS
				SE5->E5_VRETCOF := SE2->E2_VRETCOF
				SE5->E5_VRETCSL := SE2->E2_VRETCSL
				
				IF (mv_par09 == 2 .and. mv_par05 == 2) .And. ( SE5->(E5_VRETPIS + E5_VRETCOF + E5_VRETCSL) + If(lInssBx,SE5->E5_VRETINS,0) + SE5->E5_VRETIRF ) > 0
						SE5->E5_VALOR		:= SE5->E5_VRETPIS + SE5->E5_VRETCOF + SE5->E5_VRETCSL + If(lInssBx,SE5->E5_VRETINS,0) + SE5->E5_VRETIRF 
						SE5->E5_VLMOED2	:= SE5->E5_VRETPIS + SE5->E5_VRETCOF + SE5->E5_VRETCSL + If(lInssBx,SE5->E5_VRETINS,0) + SE5->E5_VRETIRF
						SE5->E5_MOEDA		:= Strzero(SA6->A6_MOEDA,2)
				EndIf
				SE5->(MsUnlock())		//Finaliza a gravacao iniciada no topo da geracao da PA

				Do Case 
				Case cModRetPIS == "1" 
					//Calcula a base total do fornecedor pendente para verificar 
					If aDadosRet[ 1 ] + nBaseRet	> nVlMinImp  .And. lEmpGImp
						lRetParc := .T. 
				
						//Rotina para gerar titulo de adiantamento
						If cNCCRet == "1" .and. nDiferImp < 0 
							FGerCredRt(Abs(nDiferImp),SE2->E2_MOEDA,SE5->E5_SEQ)						
						Endif			

						nRecSE5 := SE5->( Recno() ) 
							
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Exclui a Marca de "pendente recolhimento" dos demais registros   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If aDadosRet[1] > 0
							aRecnos := aClone( aDadosRet[ 6 ] ) 
					
							cPrefOri  := SE5->E5_PREFIXO
							cNumOri   := SE5->E5_NUMERO
							cParcOri  := SE5->E5_PARCELA
							cTipoOri  := SE5->E5_TIPO
							cCfOri    := SE5->E5_CLIFOR
							cLojaOri  := SE5->E5_LOJA
									
							For nLoop := 1 to Len( aRecnos )
								
								SE5->( dbGoto( aRecnos[ nLoop ] ) )
									
								RecLock( "SE5", .F. ) 
								
								SE5->E5_PRETPIS := "2"
								SE5->E5_PRETCOF := "2"
								SE5->E5_PRETCSL := "2"
							
								SE5->( MsUnlock() )  																								
		
								If FindFunction("ALIASINDIC")
									If AliasIndic("SFQ") 
										If nRecSE5 <> aRecnos[ nLoop ] 
											dbSelectArea("SFQ")
											RecLock("SFQ",.T.)
											SFQ->FQ_FILIAL  := xFilial("SFQ")
											SFQ->FQ_ENTORI  := "SE5"
											SFQ->FQ_PREFORI := cPrefOri
											SFQ->FQ_NUMORI  := cNumOri
											SFQ->FQ_PARCORI := cParcOri
											SFQ->FQ_TIPOORI := cTipoOri										
											SFQ->FQ_CFORI   := cCfOri
											SFQ->FQ_LOJAORI := cLojaOri
											SFQ->FQ_SEQORI  := Space(TamSX3("FQ_SEQORI")[1])
											
											SFQ->FQ_ENTDES  := "SE5"
											SFQ->FQ_PREFDES := SE5->E5_PREFIXO
											SFQ->FQ_NUMDES  := SE5->E5_NUMERO
											SFQ->FQ_PARCDES := SE5->E5_PARCELA                             
											SFQ->FQ_TIPODES := SE5->E5_TIPO
											SFQ->FQ_CFDES   := SE5->E5_CLIFOR
											SFQ->FQ_LOJADES := SE5->E5_LOJA
											SFQ->FQ_SEQDES  := SE5->E5_SEQ

											//Grava a filial de destino caso o campo exista
											If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
												SFQ->FQ_FILDES := SE5->E5_FILIAL 
											EndIf 											

											MsUnlock()
										Endif								
									Endif					
								Endif	
							Next nLoop 
						Endif	
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Retorna do ponteiro do SE2 para a parcela         ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						SE5->( MsGoto( nRecSE5 ) ) 
						Reclock( "SE5", .F. ) 

					Else 	
						If SE2->E2_VRETPIS + SE2->E2_VRETCOF + SE2->E2_VRETCSL + SE2->E2_IRRF > 0
							Reclock( "SE5", .F. ) 
							SE5->E5_VRETPIS := SE2->E2_VRETPIS
							SE5->E5_VRETCOF := SE2->E2_VRETCOF
							SE5->E5_VRETCSL := SE2->E2_VRETCSL
							SE5->E5_PRETPIS := "1"
							SE5->E5_PRETCOF := "1"
							SE5->E5_PRETCSL := "1"

							SE5->( MsUnlock() )  																								
						EndIf	
						lRetParc := .F. 
					EndIf

				Case cModRetPIS == "2" 
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Efetua a retencao                                                 ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nRecSE5 := SE5->( Recno() ) 
						
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Exclui a Marca de "pendente recolhimento" dos demais registros   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If aDadosRet[1] > 0
						aRecnos := aClone( aDadosRet [ 6 ] ) 
				
						cPrefOri  := SE5->E5_PREFIXO
						cNumOri   := SE5->E5_NUMERO
						cParcOri  := SE5->E5_PARCELA
						cTipoOri  := SE5->E5_TIPO
						cCfOri    := SE5->E5_CLIFOR
						cLojaOri  := SE5->E5_LOJA
								
						For nLoop := 1 to Len( aRecnos )
							
							SE5->( dbGoto( aRecnos[ nLoop ] ) )
								
							RecLock( "SE5", .F. ) 
							
							SE5->E5_PRETPIS := "2"
							SE5->E5_PRETCOF := "2"
							SE5->E5_PRETCSL := "2"

							SE5->( MsUnlock() )  																								
	
							If FindFunction("ALIASINDIC")
								If AliasIndic("SFQ") 
									If nRecSE5 <> aRecnos[ nLoop ] 
										dbSelectArea("SFQ")
										RecLock("SFQ",.T.)
										SFQ->FQ_FILIAL  := xFilial("SFQ")
										SFQ->FQ_ENTORI  := "SE5"
										SFQ->FQ_PREFORI := cPrefOri
										SFQ->FQ_NUMORI  := cNumOri
										SFQ->FQ_PARCORI := cParcOri
										SFQ->FQ_TIPOORI := cTipoOri										
										SFQ->FQ_CFORI   := cCfOri
										SFQ->FQ_LOJAORI := cLojaOri
										SFQ->FQ_SEQORI  := cSequencia
										SFQ->FQ_ENTDES  := "SE5"
										SFQ->FQ_PREFDES := SE5->E5_PREFIXO
										SFQ->FQ_NUMDES  := SE5->E5_NUMERO
										SFQ->FQ_PARCDES := SE5->E5_PARCELA                             
										SFQ->FQ_TIPODES := SE5->E5_TIPO
										SFQ->FQ_CFDES   := SE5->E5_CLIFOR
										SFQ->FQ_LOJADES := SE5->E5_LOJA
										SFQ->FQ_SEQDES  := SE5->E5_SEQ											

										//Grava a filial de destino caso o campo exista
										If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
											SFQ->FQ_FILDES := SE5->E5_FILIAL 
										EndIf 											

										MsUnlock()
									Endif								
								Endif					
							Endif	
						Next nLoop 
					Endif	
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Retorna do ponteiro do SE1 para a parcela         ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SE5->( MsGoto( nRecSE5 ) ) 
					Reclock( "SE2", .F. ) 
					lRetParc := .T. 
				Case cModRetPIS == "3" 			
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava a Marca de "pendente recolhimento" dos demais registros    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	     
					If SE2->E2_VRETPIS + SE2->E2_VRETCOF + SE2->E2_VRETCSL + SE2->E2_IRRF > 0
						Reclock( "SE5", .F. ) 
						SE5->E5_VRETPIS := SE2->E2_PIS
						SE5->E5_VRETCOF := SE2->E2_COFINS
						SE5->E5_VRETCSL := SE2->E2_CSLL
						SE5->E5_PRETPIS := "1"
						SE5->E5_PRETCOF := "1"
						SE5->E5_PRETCSL := "1"
						SE5->( MsUnlock() )  																								
					EndIf	
					lRetParc := .F.
				EndCase 			
			EndIf 					

			//Gravo os titulos de impostos Pis Cofins Csll quando controlados pela baixa
			If lContrRet .and. lPccBaixa .and. 	lRetParc .And. lEmpGImp 
				FGrvImpPcc(SE2->E2_PIS,SE2->E2_COFINS,SE2->E2_CSLL,SE2->(Recno()),.F.,lRetParc,"  ","FINA080",SE2->E2_MOEDA,,0)
			Endif
   
			//Caso controle retencao e a geracao dos tx's seja na baixa, inverto a gravacao dos campos do SE2
			If lContrRet .and. lPccBaixa 
				Reclock("SE2",.F.)    
				//Salva os valores originais dos tx's para efetuar a inversao
				SE2->E2_PIS     := SE2->E2_VRETPIS		//Valor do Pis do Titulo
				SE2->E2_COFINS  := SE2->E2_VRETCOF		//Valor do Cofins do Titulo
				SE2->E2_CSLL    := SE2->E2_VRETCSL		//Valor do Csll do Titulo
				//Se o "Vlr pendente retencao" + "Vlr Titulo" ultrapassar o "Vlr. Min. Imp.", não limpo o campo E2_VRET???.
				If aDadosRet[ 1 ] + nBaseRet	< nVlMinImp .Or. !lEmpGImp
					SE2->E2_VRETPIS := 0      		//Valor Retido do Pis no Titulo
					SE2->E2_VRETCOF := 0      		//Valor Retido do Cofins no Titulo
					SE2->E2_VRETCSL := 0				//Valor Retido do Csll no Titulo  
					If SE2->(E2_PIS+E2_COFINS+E2_CSLL) > 0
						SE2->E2_PRETCSL := SE2->E2_PRETCOF := SE2->E2_PRETPIS := "1" 	
					EndIf
				Endif
				SE2->(MsUnlock())
			Endif				
			SE5->(MsUnlock())		//Finaliza a gravacao iniciada no topo da geracao da PA
			IF SE2->E2_TIPO $ MVPAGANT 
				If !(mv_par09 == 2 .and. mv_par05 == 2)
					AtuSalBco( cBancoAdt,cAgenciaAdt,cNumCon,SE2->E2_EMISSAO,SE5->E5_VALOR,"-" )
				EndIf	
			Else
				AtuSalBco( cBancoAdt,cAgenciaAdt,cNumCon,SE2->E2_EMISSAO,IIf(RetBcoMoed(cBancoAdt,cAgenciaAdt,cNumCon) == 1,SE5->E5_VALOR,SE5->E5_VLMOED2),"-" )
			Endif
			
		Else
			If mv_par05 == 1 .and.; // Gera Cheque p/Titulos de Adiantamento
			   (mv_par09 == 1 .or. mv_par09 == 2) .and.; // Gera Movimento s/ Num. Cheque 
			   (Empty(cChequeAdt) .or.; // Num. do Cheque não Digitado pelo Usuario
			   !Empty(cChequeAdt) .And. !lLibCheq) // Necessaria Liberação do Cheque
				RecLock("SE5",.T.)
				SE5->E5_FILIAL		:= xFilial()
				SE5->E5_BANCO		:= cBancoAdt
				SE5->E5_AGENCIA	:= cAgenciaAdt
				SE5->E5_CONTA		:= cNumCon
				SE5->E5_NUMCHEQ	:= cChequeAdt
				SE5->E5_DATA		:= SE2->E2_EMISSAO
				SE5->E5_NATUREZ	:= SE2->E2_NATUREZ
				SE5->E5_RECPAG		:= "P"
				SE5->E5_TIPO		:= MVPAGANT
				SE5->E5_LA			:= "S"
				SE5->E5_TIPODOC	:= "BA"
				SE5->E5_HISTOR		:= Iif(Empty(cHistor),SE2->E2_HIST,cHistor)
				SE5->E5_BENEF		:= Iif(Empty(cBenef),SA2->A2_NOME,cBenef)
				SE5->E5_PREFIXO	:= SE2->E2_PREFIXO
				SE5->E5_NUMERO		:= SE2->E2_NUM
				SE5->E5_PARCELA	:= SE2->E2_PARCELA
				SE5->E5_CLIFOR		:= SE2->E2_FORNECE
				SE5->E5_FORNECE	:= SE2->E2_FORNECE
				SE5->E5_LOJA		:= SE2->E2_LOJA
				SE5->E5_DTDIGIT	:= dDataBase
				SE5->E5_MOTBX		:= "NOR"
				SE5->E5_DTDISPO	:= SE5->E5_DATA
				SE5->E5_VLDESCO	:= SE2->E2_DECRESC    
    			SE5->E5_VLJUROS	:= SE2->E2_ACRESC
    	   		SE5->E5_VLACRES	:= SE2->E2_ACRESC
	    	   	SE5->E5_VLDECRE	:= SE2->E2_DECRESC
		
				If cPaisLoc == "BRA"           
					SE5->E5_MOEDA	:= Strzero(Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,SA6->A6_MOEDAP),1),2)
					SE5->E5_VALOR		:= SE2->E2_VLCRUZ-SE2->E2_DECRESC+SE2->E2_ACRESC
					SE5->E5_VLMOED2	:= SE2->E2_VALOR-SE2->E2_DECRESC+SE2->E2_ACRESC
				Else
					SE5->E5_VALOR		:= SE2->E2_VALOR-SE2->E2_DECRESC+SE2->E2_ACRESC
					SE5->E5_VLMOED2	:= SE2->E2_VLCRUZ-SE2->E2_DECRESC+SE2->E2_ACRESC
				Endif   
				If lIRPFBaixa
					//IRRF - BAIXA
					If lNewIrBx
						FGRVSFQIR(SE2->E2_VRETIRF,SE2->E2_BASEIRF)
					Else
						SE5->E5_VRETIRF := 	SE2->E2_VRETIRF
						SE5->E5_BASEIRF := 	SE2->E2_BASEIRF	
					Endif
				Endif 
				If SPBInUse()
					SE5->E5_MODSPB		:= SE2->E2_MODSPB
				Endif	   
				
				If SE5->(FieldPos("E5_FILORIG")) > 0
					SE5->E5_FILORIG  := If(Empty(SE5->E5_FILORIG),cFilAnt,SE5->E5_FILORIG)
				EndIf							
			Endif	
		Endif
	Endif
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada do FA050MD5, serve p/ tratar dados ³
//³ ap¢s estarem gravados.                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF (ExistBlock("FA050MD5"))
	ExecBlock("FA050MD5",.f.,.f.)
Endif
dbSelectArea("SE2")
dbGoto( nRecSE2 )

If SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza saldo do fornecedor. PA/NDF		  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("SA2")
	SA2->A2_SALDUP -=Round(NoRound(xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,3),3),2)
	SA2->A2_SALDUPM-=Round(NoRound(xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,nMoeda,SE2->E2_EMISSAO,3),3),2)
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A050ManSe2³ Autor ³ Wagner Mobile Costa   ³ Data ³ 19/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gera titulo de contas a pagar, a partir de parametros      ³±±
±±³          ³ Usando Rotina automatica (FINA050)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A050ManSe2(ExpN1, ExpC1,ExpC2,ExpC3,ExpN2,ExpN3,ExpC4,     ³±±
±±³          ³ 	  ExpC5,ExpC6,ExpN4,ExpC7,ExpC8,ExpD1,ExpD2,ExpA1,ExpC10) ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 := Opcao que sera executada                          ³±±
±±³          ³ ExpC1 := Numero do titulo a ser gerado                     ³±±
±±³          ³ ExpC2 := Prefixo do titulo                                 ³±±
±±³          ³ ExpC3 := Tipo do titulo                                    ³±±
±±³          ³ ExpC4 := Parcela do titulo (usado em alteracao/exclusao)   ³±±
±±³          ³ ExpN2 := valor do titulo a ser gerado                      ³±±
±±³          ³ ExpN3 := valor do IRRF do titulo                           ³±±
±±³          ³ ExpC5 := codigo do fornecedor                              ³±±
±±³          ³ ExpC6 := loja do fornecedor                                ³±±
±±³          ³ ExpC7 := Natureza do titulo                                ³±±
±±³          ³ ExpN4 := numero da moeda do titulo                         ³±±
±±³          ³ ExpC8 := condicao de pagamento                             ³±±
±±³          ³ ExpC9 := nome do programa origem                           ³±±
±±³          ³ ExpD1 := Data de emissao do titulo (base calculo dias)     ³±±
±±³          ³ ExpD2 := Data de vencimento, usada caso condicao de pagame-³±±
±±³          ³          nao for passada (assumira um vencimento)          ³±±
±±³          ³ ExpA1 := Matriz com bloco de codigo p/ complentar gravacao ³±±
±±³          ³          { { Nome do Campo, Bloco de codigo p/gravacao } } ³±±
±±³          ³ ExpC10:= Filial de Debito (Uso SIGATMS)                    ³±±
±±³          ³ ExpA2 := Vetor contendo os dados bancarios utilizados para ³±± 
±±³          ³          gerar titulos de Adiantamento (Uso SIGATMS)       ³±±
±±³          ³ ExpL1 := Exibe os lancamentos contabeis ? 				  ³±±
±±³          ³ ExpL2 := Contabiliza On Line ? 							  ³±±
±±³          ³ ExpL3 := Banco											  ³±±
±±³          ³ ExpN5 := Valor do INSS Retido							  ³±±
±±³          ³ ExpCA := Titulo deve ser considerado na DIRF? (1=SIM|2=NAO)³±±
±±³          ³ ExpCB := Codigo de retencao p/ DIRF                        ³±±
±±³          ³ ExpL4 := Bloqueia o Titulo                                 ³±±
±±³          ³ ExpCC := Codigo da Operadora de Frete                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Geral                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A050ManSe2(nOpcao, cNumero, cPrefixo, cTipoTit, cParcela, nValTitulo,;
					nValIRRF, cCodForn, cLojaFor, cNatureza, nMoedTit, cCodPraz,;
					cOrigem,dEmissao, cHistorico, dVenc, aCompleG, cFilDeb, aDadosBco,; 
					lExibeLanc, lOnline , lBcoPag, nInssRet, cDirf, cCodRet, aImposto, nBasImp, lMsBlQL,cCodOpe)

Local nParcela    := 0
Local nIndice     := 0
Local nParcelas   := 0
Local aVenc       := {}
Local aGrvSe2     := {} 
Local nCompleG    := 0
Local aGravar     := {}
Local nCntFor     := 0      
Local cSeekSE5    := ''
Local lCpoBlq     := SE2->(FieldPos("E2_MSBLQL")) > 0
Local lCpoOPe     := SE2->(FieldPos("E2_CODOPE")) > 0
Local cIdCnab 	  := ''                 
Local lFINALTVC   := ExistBlock("FINALTVC")
Local aDtVenc     := {}

Default nOpcao    := 3
Default cFilDeb   := ""
Default aDadosBco := "" 
Default lBcoPag   := .T.
Default nInssRet  := 0
Default cDirf     := ""
Default cCodRet   := ""  
Default aImposto  := {} 
Default nBasImp	  := 0
Default lMsBlQL	:= .F.
Default cCodOpe	:= ""

Private lMsErroAuto := .F.
Private lInclusao

If (lInclusao := (nOpcao = 3))
	cNumero    	:= If(cNumero = Nil, GetSxENum("SE2", "E2_NUM"), cNumero)
	cPrefixo   	:= If(cPrefixo = Nil, Space(3), cPrefixo)
	cTipoTit	:= If(cTipoTit = Nil, "DP", cTipoTit)
Else
	cNumero    	:= If(cNumero = Nil, SE2->E2_NUM, cNumero)
	cPrefixo   	:= If(cPrefixo = Nil, SE2->E2_PREFIXO, cPrefixo)
	cTipoTit	:= If(cTipoTit = Nil, SE2->E2_TIPO, cTipoTit)
Endif

cParcela	  := If(cParcela = Nil, SE2->E2_PARCELA, cParcela)
cCodForn	  := If(cCodForn = Nil, SE2->E2_FORNECE, cCodForn)
cLojaFor	  := If(cLojaFor = Nil, SE2->E2_LOJA, cLojaFor)
cNatureza  := If(cNatureza = Nil, SE2->E2_NATUREZ, cNatureza)
cOrigem	  := IF(cOrigem = Nil, Space(0), cOrigem)
dEmissao	  := If(dEmissao = Nil, dDataBase, dEmissao)
cHistorico := If(cHistorico = Nil, Space(0), cHistorico)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Integracao com o Modulo de Transporte (TMS)                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If IntTms() .And. nModulo == 43
   //-- Assume o valor da parcela passada no parametro
	nParcela	:= Val(cParcela)
	cSeekSE5 := xFilial("SE5")+cPrefixo+cNumero+cParcela+cTipoTit+cCodForn+cLojaFor	
Else
	nParcela := If(lInclusao,1,Val(cParcela))
	cSeekSE5 := xFilial("SE5")+cPrefixo+cNumero+"1"+cTipoTit+cCodForn+cLojaFor	
EndIf		

If lInclusao .And. cTipoTit $ MVPAGANT		// Caso PA verifico se o numero ja existiu
	DbSelectArea("SE5")						// e proponho o proximo
	DbSetOrder(7)
	If MsSeek(cSeekSE5)
		While &(IndexKey()) = xFilial("SE5")+cPrefixo+cNumero+"1"+;
			cTipoTit+cCodForn+cLojaFor .And. ! Eof()
			cNumero := StrZero(Val(cNumero)+1,6)
			DbSkip()
			MsSeek( xFilial("SE5")+cPrefixo+cNumero+"1"+cTipoTit+cCodForn+cLojaFor)
		EndDo			
	Endif		
Endif

If lInclusao
	If cCodPraz # Nil
		aVenc := Condicao(nValTitulo,cCodPraz,,dEmissao)
		//-- Quando existir operadora sempre considera um único vencimento. Caso existam parcelas, considera somente o vencimento da 1a parcela
		If !Empty(cCodOpe)
			dVenc := aVenc[1,1]
			aVenc := { { dVenc, nValTitulo } }
		EndIf
	ElseIf dVenc != Nil
		aVenc := { { dVenc, nValTitulo } }
	Endif
Endif	

SA2 -> ( MsSeek( xFilial("SA2") + cCodForn + cLojaFor ) )

nIndice 	 := nParcela

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para alterar data de vencimento                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lFINALTVC
	aDtVenc := ExecBlock( "FINALTVC", .F., .F., { aVenc,cCodForn,cLojaFor,cCodPraz } )
	If ValType(aDtVenc) == "A" .And. !Empty(aDtVenc)
		aVenc := aClone(aDtVenc)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Integracao com o Modulo de Transporte (TMS)                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If IntTms() .And. nModulo == 43
   //-- Existem casos em que a parcela do titulo passada como parametro e' maior que 1
	nParcelas := If(lInclusao, nIndice+(Len(aVenc)-1), nIndice)
Else
	nParcelas := If(lInclusao, Len(aVenc), nIndice )
EndIf		

For nParcela := nIndice To nParcelas
	
	If ! lInclusao				 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Integracao com o Modulo de Transporte (TMS)                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	    If nModulo == 43 .And. !Empty(cFilDeb)
			SE2->(DbSetOrder(1))
			SE2->(MsSeek(cFilDeb + cPrefixo + cNumero + Str(nParcela, 1)))			    
		Else
			SE2->(DbSetOrder(1))
			SE2->(MsSeek(xFilial("SE2") + cPrefixo + cNumero + Str(nParcela, 1)))		
		EndIf	
	Endif
	
	aGravar := Array(0)
	Aadd(aGravar, If(lInclusao, SA2->A2_BANCO        			, SE2->E2_PORTADO))
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Integracao com o Modulo de Transporte (TMS)                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntTMS() .And. nModulo == 43  
	   //-- A variavel nCntFor foi criada para evitar erro de array, caso
	   //-- a Parcela do Titulo passada passada como parametro for maior que 1
		nCntFor ++
		Aadd(aGravar, If(lInclusao, aVenc[nCntFor][1]			, SE2->E2_VENCTO))
		Aadd(aGravar, If(lInclusao, DataValida(aVenc[nCntFor][1]), SE2->E2_VENCREA))
		Aadd(aGravar, If(lInclusao, aVenc[nCntFor][2], SE2->E2_VALOR))
		Aadd(aGravar, If(lInclusao, aVenc[nCntFor][2], SE2->E2_SALDO))		
	Else
		Aadd(aGravar, If(lInclusao, aVenc[nParcela][1]			, SE2->E2_VENCTO))
		Aadd(aGravar, If(lInclusao, DataValida(aVenc[nParcela][1]), SE2->E2_VENCREA))
		Aadd(aGravar, If(lInclusao, aVenc[nParcela][2], SE2->E2_VALOR))
		Aadd(aGravar, If(lInclusao, aVenc[nParcela][2], SE2->E2_SALDO))		
   EndIf
	
	If lBcoPag
		Aadd(aGravar, If(lInclusao, SA2->A2_BANCO                	, SE2->E2_BCOPAG))
	Else
		Aadd(aGravar, If(lInclusao, ''                              , SE2->E2_BCOPAG))
	EndIf
	Aadd(aGravar, If(lInclusao, dDataBase                    	, SE2->E2_EMIS1))
	Aadd(aGravar, If(lInclusao, Iif(ValType(nMoedTit)=="N",nMoedTit,Val(nMoedTit)),;
	SE2->E2_MOEDA))	                                               
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Integracao com o Modulo de Transporte (TMS)                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If IntTMS() .And. nModulo == 43  
	   //-- A variavel nCntFor foi criada para evitar erro de array, caso
	   //-- a Parcela do Titulo passada passada como parametro for maior que 1
		Aadd(aGravar, If(lInclusao, xMoeda((aVenc[nCntFor][2]),nMoedTit,1,;
								dEmissao), SE2->E2_VLCRUZ) )		
	Else
		Aadd(aGravar, If(lInclusao, xMoeda((aVenc[nParcela][2]),nMoedTit,1,;
								dEmissao), SE2->E2_VLCRUZ) )			
	EndIf

	aGrvSe2 := {}                     
	
	Aadd(aGrvSe2, 	{ "E2_PREFIXO"	, cPrefixo			, Nil })
	Aadd(aGrvSe2, 	{ "E2_NUM"		, cNumero			, Nil })
	Aadd(aGrvSe2, 	{ "E2_TIPO"		, cTipoTit			, Nil })
	Aadd(aGrvSe2,	{ "E2_NATUREZ"	, cNatureza 		, Nil })
	Aadd(aGrvSe2, 	{ "E2_PORTADO"	, aGravar[1]   		, Nil })
	Aadd(aGrvSe2, 	{ "E2_FORNECE"	, cCodForn 			, Nil })
	Aadd(aGrvSe2, 	{ "E2_LOJA"   	, cLojaFor			, Nil })
	Aadd(aGrvSe2, 	{ "E2_NOMFOR"	, SA2->A2_NREDUZ 	, Nil })
	Aadd(aGrvSe2, 	{ "E2_EMISSAO"	, dEmissao			, Nil })
	Aadd(aGrvSe2, 	{ "E2_VENCTO"	, aGravar[2]		, Nil })
	Aadd(aGrvSe2, 	{ "E2_VENCREA"	, aGravar[3]		, Nil })
	Aadd(aGrvSe2, 	{ "E2_INSSRET"	, nInssRet			, Nil })
	Aadd(aGrvSe2, 	{ "E2_VALOR"  	, aGravar[4]		, Nil })
	Aadd(aGrvSe2, 	{ "E2_SALDO"  	, aGravar[5]		, Nil })
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Integracao com o Modulo de Transporte (TMS)                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If IntTMS() .And. nModulo == 43  
		//-- A pesquisa foi incluida para nao "barrar" caso o banco nao exista.
		SA6->(dbSetOrder(1))
		If SA6->(dbSeek(xFilial('SA6')+aGravar[6]))
			Aadd(aGrvSe2,{ "E2_BCOPAG" , aGravar[6]   	, Nil })
		EndIf		
		//--Tratamento para os dados da DIRF:
		Aadd(aGrvSe2,{ "E2_DIRF"	, If(Empty(cDirf), '2', cDirf) 	, Nil })
		Aadd(aGrvSe2,{ "E2_CODRET"	, cCodRet	, Nil })
		If !Empty(aImposto)
			Aadd(aGrvSe2,{ "E2_BASECOF"	, nBasImp	, Nil })   
			Aadd(aGrvSe2,{ "E2_BASEPIS"	, nBasImp	, Nil })  
			Aadd(aGrvSe2,{ "E2_BASECSL"	, nBasImp	, Nil })    
			Aadd(aGrvSe2,{ "E2_BASEIRF"	, nBasImp	, Nil })  
			Aadd(aGrvSe2,{ "E2_BASEISS"	, nBasImp	, Nil })  
			Aadd(aGrvSe2,{ "E2_BASEINS"	, nBasImp	, Nil })     
		EndIf
	Else
		Aadd(aGrvSe2,{ "E2_BCOPAG" , aGravar[6]     	, Nil })		
	EndIf
	
	Aadd(aGrvSe2, 	{ "E2_EMIS1"  	, aGravar[7]		, Nil })
	Aadd(aGrvSe2, 	{ "E2_MOEDA"	, aGravar[8]		, Nil })
	Aadd(aGrvSe2, 	{ "E2_VLCRUZ" 	, aGravar[9]		, Nil })
	Aadd(aGrvSe2, 	{ "E2_HIST"   	, cHistorico		, Nil })
	Aadd(aGrvSe2, 	{ "E2_PARCELA"	, StrZero(nParcela, Len(SE2->E2_PARCELA)) , Nil })
	Aadd(aGrvSe2, 	{ "E2_ORIGEM" 	, cOrigem   		, Nil })
	
	If cCodPraz # Nil
		Aadd(aGrvSe2, { "E2_PORCJUR", SE4->E4_ACRSFIN, Nil  })
	Endif
	
	If !Empty( cFilDeb )
		Aadd(aGrvSe2, { "E2_FILIAL", If(!Empty(FwFilial("SE2")),cFilDeb,xFilial("SE2")), Nil  })
		Aadd(aGrvSe2, { "E2_FILDEB", cFilDeb, Nil } )
	Else
		Aadd(aGrvSe2, { "E2_FILIAL", xFilial("SE2"), Nil })
	EndIf			

	If aCompleG # Nil
		For nCompleG := 1 To Len(aCompleG)
			Aadd(aGrvSe2, { aCompleG[nCompleG][1], Eval(aCompleG[nCompleG][2]),Nil })
		Next
	Endif    
	
	If !Empty(aImposto) .And. Len(aImposto) >= 3 .And. IntTms()
		Aadd(aGrvSe2, { "E2_IRRF", aImposto[1], Nil })    
		Aadd(aGrvSe2, { "E2_SEST", aImposto[2], Nil }) 
		Aadd(aGrvSe2, { "E2_INSS", aImposto[3], Nil })
	EndIf
	If lCpoBlq
		Aadd(aGrvSe2, { "E2_MSBLQL", Iif(lMsBlQl,"1","2"), Nil } )
	EndIf
	If !Empty(cCodOpe)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
     	//³ Ponto de entrada para tratamento da variavel cIdCnab     ³
	   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cIdCnab := GetSxENum("SE2", "E2_IDCNAB","E2_IDCNAB"+cEmpAnt,11)  	
		dbSelectArea("SE2")
		aOrdSE2 := SE2->(GetArea())
		dbSetOrder(11)
		While SE2->(MsSeek(xFilial("SE2")+cIdCnab))
			If ( __lSx8 )
				ConfirmSX8()
			EndIf
			cIdCnab := GetSxENum("SE2", "E2_IDCNAB","E2_IDCNAB"+cEmpAnt,11)
		EndDo
		SE2->(RestArea(aOrdSE2))
		ConfirmSx8()
		If ExistBlock ("F240ICNB")
		  	cIdCnab := ExecBlock("F240ICNB",.F.,.F.,{cIdCnab})
		EndIf
		Aadd(aGrvSe2, { "E2_IDCNAB", cIdCnab, Nil } )
		If lCpoOpe
			Aadd(aGrvSe2, { "E2_CODOPE", cCodOPe, Nil } )
		EndIf
	EndIf		
	MsExecAuto({ | a,b,c,d,e,f,g | Fina050(a,b,c,d,e,f,g) }, aGrvSe2,, nOpcao,, aDadosBco, lExibeLanc, lOnline )
	If lMsErroAuto
		Help(" ", 1, "ERROGERACP")
		Exit
	Endif
Next		

cNumero := StrZero(Val(cNumero)+1,6)

Return ! lMsErroAuto

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A040ManSe1³ Autor ³ Wagner Mobile Costa   ³ Data ³ 20/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gera titulo de contas a receber, a partir de parametros    ³±±
±±³          ³ Usando Rotina automatica (FINA040)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A040ManSe1(ExpN1, ExpC1,ExpC2,ExpC3,ExpN2,ExpN3,ExpC4,     ³±±
±±³          ³ 			  ExpC5,ExpC6,ExpN4,ExpC7,ExpC8,ExpD1,ExpD2,ExpA1)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 := Opcao que sera executada                          ³±±
±±³          ³ ExpC1 := Numero do titulo a ser gerado                     ³±±
±±³          ³ ExpC2 := Prefixo do titulo                                 ³±±
±±³          ³ ExpC3 := Tipo do titulo                                    ³±±
±±³          ³ ExpC4 := Parcela do titulo (usado em alteracao/exclusao)   ³±±
±±³          ³ ExpN2 := valor do titulo a ser gerado                      ³±±
±±³          ³ ExpC5 := codigo do cliente                                 ³±±
±±³          ³ ExpC6 := loja do cliente                                   ³±±
±±³          ³ ExpC7 := Natureza do titulo                                ³±±
±±³          ³ ExpN3 := numero da moeda do titulo                         ³±±
±±³          ³ ExpC8 := condicao de pagamento                             ³±±
±±³          ³ ExpC9 := nome do programa origem                           ³±±
±±³          ³ ExpD1 := Data de emissao do titulo (base calculo dias)     ³±±
±±³          ³ ExpD2 := Data de vencimento, usada caso condicao de pagame-³±±
±±³          ³          nao for passada (assumira um vencimento)          ³±±
±±³          ³ ExpA1 := Matriz com bloco de codigo p/ complentar gravacao ³±±
±±³          ³          { { Nome do Campo, Bloco de codigo p/gravacao } } ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Geral                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A040ManSe1(nOpcao, cNumero, cPrefixo, cTipoTit, cParcela, nValTitulo,;
cCodCli, cLoja, cNatureza, nMoedTit, cCodPraz,;
cOrigem,dEmissao, cHistorico, dVenc, aCompleG)

Local nParcela, nIndice, nParcelas, aVenc := {}, aGrvSe1 := {}, nCompleG
Local aGravar := Array(0)
Private lMsErroAuto := .F., lInclusao

DEFAULT nOpcao := 3

If (lInclusao := (nOpcao = 3))
	cNumero    	:= If(cNumero = Nil, GetSxENum("SE1", "E1_NUM"), cNumero)
	cPrefixo   	:= If(cPrefixo = Nil, Space(3), cPrefixo)
	cTipoTit	:= If(cTipoTit = Nil, "DP", cTipoTit)
Else
	cNumero    	:= If(cNumero = Nil, SE1->E1_NUM, cNumero)
	cPrefixo   	:= If(cPrefixo = Nil, SE1->E1_PREFIXO, cPrefixo)
	cTipoTit	:= If(cTipoTit = Nil, SE1->E1_TIPO, cTipoTit)
Endif

cParcela	:= If(cParcela = Nil, SE1->E1_PARCELA, cParcela)
cCodCli 	:= If(cCodCli = Nil, SE1->E1_CLIENTE, cCodCli)
cLoja   	:= If(cLoja = Nil, SE1->E1_LOJA, cLoja)
cNatureza	:= If(cNatureza = Nil, SE1->E1_NATUREZ, cNatureza)
cOrigem		:= IF(cOrigem = Nil, Space(0), cOrigem)
dEmissao	:= If(dEmissao = Nil, dDataBase, dEmissao)
cHistorico 	:= If(cHistorico = Nil, Space(0), cHistorico)
nParcela	:= If(lInclusao, 1, Val(cParcela))

If lInclusao
	If cCodPraz # Nil
		aVenc := Condicao(nValTitulo,cCodPraz,,dEmissao)
	ElseIf ValType(dVenc) = "D"
		aVenc := { { dVenc, nValTitulo } }
	Endif
Endif	

SA1 -> ( MsSeek( xFilial("SA1") + cCodCli + cLoja ) )

nIndice 	:= nParcela
nParcelas	:= If(lInclusao, Len(aVenc), nIndice)

For nParcela := nIndice To nParcelas
	
	If ! lInclusao				
		SE1->(DbSetOrder(1))
		SE1->(MsSeek(xFilial("SE1") + cPrefixo + cNumero + Str(nParcela, 1)))
	Endif
	
	aGravar := Array(0)
	Aadd(aGravar, If(lInclusao, SA1->A1_BCO1         			, SE1->E1_PORTADO))
	Aadd(aGravar, If(lInclusao, aVenc[nParcela][1]			, SE1->E1_VENCTO))
	Aadd(aGravar, If(lInclusao, DataValida(aVenc[nParcela][1]), SE1->E1_VENCREA))
	Aadd(aGravar, If(lInclusao, aVenc[nParcela][2]            , SE1->E1_VALOR))
	Aadd(aGravar, If(lInclusao, aVenc[nParcela][2]           	, SE1->E1_SALDO))
	Aadd(aGravar, If(lInclusao, Iif(ValType(nMoedTit)=="N",nMoedTit,Val(nMoedTit)),;
	SE1->E1_MOEDA))
	Aadd(aGravar, If(lInclusao, xMoeda((aVenc[nParcela][2]),nMoedTit,1,;
	dEmissao), SE1->E1_VLCRUZ) )
	
	aGrvSe1 := { 	{ "E1_FILIAL"	, xFilial("SE1") 	, Nil },;
	{ "E1_PREFIXO"	, cPrefixo 			, Nil },;
	{ "E1_NUM"		, cNumero			, Nil },;
	{ "E1_PARCELA"	, Str(nParcela, 1) , Nil },;
	{ "E1_TIPO"		, cTipoTit			, Nil },;
	{ "E1_NATUREZ"	, cNatureza 		, Nil },;
	{ "E1_PORTADO"	, aGravar[1]   		, Nil },;
	{ "E1_CLIENTE"	, cCodCli  			, Nil },;
	{ "E1_LOJA"   	, cLoja   			, Nil },;
	{ "E1_NOMCLI"	, SA1->A1_NREDUZ 	, Nil },;
	{ "E1_EMISSAO"	, dEmissao			, Nil },;
	{ "E1_VENCTO"	, aGravar[2]		, Nil },;
	{ "E1_VENCREA"	, aGravar[3]		, Nil },;
	{ "E1_VALOR"  	, aGravar[4]		, Nil },;
	{ "E1_SALDO"  	, aGravar[5]		, Nil },;
	{ "E1_MOEDA"	, aGravar[6]		, Nil },;
	{ "E1_VLCRUZ" 	, aGravar[7] 		, Nil },;
	{ "E1_HIST"   	, cHistorico		, Nil },;
	{ "E1_ORIGEM" 	, cOrigem   		, Nil } }
	If cCodPraz # Nil
		Aadd(aGrvSe1, { "E1_PORCJUR", SE4->E4_ACRSFIN, Nil  })
	Endif
	If aCompleG # Nil
		For nCompleG := 1 To Len(aCompleG)
			Aadd(aGrvSe1, { aCompleG[nCompleG][1], Eval(aCompleG[nCompleG][2]),Nil })
		Next
	Endif
	MsExecAuto({ | x,y | Fina040(x,y) }, aGrvSe1, nOpcao)
	If lMsErroAuto
		Help(" ", 1, "ERROGERACR")
		Exit
	Endif
Next		

cNumero := StrZero(Val(cNumero)+1,6)

Return ! lMsErroAuto

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fa040Legenda³ Autor ³ Wagner Mobile Costa ³ Data ³ 22.10.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria uma janela contendo a legenda da mBrowse ou retorna a ³±±
±±³          ³ para o BROWSE                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Fina040 e Fina050                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa040Legenda(cAlias, nReg)
Local lPrjCni 	:= FindFunction("ValidaCNI") .And. ValidaCNI()

Local aLegenda := { 	{"BR_VERDE", 	STR0025 },;	//1. "Titulo em aberto"
						{"BR_AZUL", 	STR0026 },;	//2. "Baixado parcialmente"
						{"BR_VERMELHO", STR0027 },;	//3. "Titulo Baixado"   
						{"BR_PRETO", 	STR0031 },;	//4. "Titulo em Bordero"   
						{"BR_BRANCO", 	STR0032 },;	//5. "Adiantamento com saldo"
						{"BR_CINZA",	STR0048 },; //6. "Titulo baixado parcialmente e em bordero"
						{"BR_MARROM", STR0062} } 	//7. "Adiantamento de Imp. Bx. com saldo"
Local uRetorno := .T.

// Ponto de Entrada permite visualizar na legenda se um titulo de PA possue residuos de saldo.						
Local lFaLegPares := ExistBlock("FaLegPARes") .And. ExecBlock("FaLegPARes",.f.,.f.)

Default lF040ADLE := ExistBlock("F040ADLE")
Default lFinaleg	:= ExistBlock("FINALEG")
Default lF040URET := ExistBlock("F040URET")

IF lFaLegPares	.And. cAlias = "SE2"
	Aadd(aLegenda,{"BR_MARROM",STR0046})
Endif	
If lF040ADLE .And. nReg != Nil
	aLegNew := ExecBlock("F040ADLE",.F.,.F.,aLegenda)
	If ValType(aLegNew) = "A"
		aEval(aLegNew,{|J| aAdd(aLegenda,{J[1],J[2]}) })
	Endif
Endif

If lFinaleg
	uRetorno := ExecBlock("FINALEG",.F.,.F.,{nReg,cAlias})
Else
	If nReg = Nil	// Chamada direta da funcao onde nao passa, via menu Recno eh passado
		uRetorno := {}
		If cAlias = "SE1"   
		
	   		If cPaisLoc == "MEX" .And. X3Usado("ED_OPERADT")
				Aadd(aLegenda, {"BR_PINK"	,STR0054}) //7. "Adiantamento gerado por Nota Fiscal"
				Aadd(aLegenda, {"BR_LARANJA",STR0055}) //8. "Titulo com operacão de adiantamento"
			EndIf 
			
			Aadd(aLegenda, {"BR_AMARELO", STR0029}) //"Titulo Protestado"
			Aadd(uRetorno, { 'ROUND(E1_SALDO,2) = 0'													, aLegenda[3][1]				} ) //"Titulo Baixado" 
			Aadd(uRetorno, { '!Empty(E1_NUMBOR) .and.(ROUND(E1_SALDO,2) # ROUND(E1_VALOR,2))'			, aLegenda[6][1]				} ) //"Titulo baixado parcialmente e em bordero"
			Aadd(uRetorno, { 'E1_TIPO == "'+MVRECANT+'".and. ROUND(E1_SALDO,2) > 0 .And. !FXAtuTitCo()'	, aLegenda[5][1]				} ) //"Adiantamento com saldo"
			Aadd(uRetorno, { '!Empty(E1_NUMBOR)'														, aLegenda[4][1]				} ) //"Titulo em Bordero"
			Aadd(uRetorno, { 'ROUND(E1_SALDO,2) # ROUND(E1_VALOR,2) .And. !FXAtuTitCo()'				, aLegenda[2][1]				} ) //"Baixado parcialmente"
			Aadd(uRetorno, { 'ROUND(E1_SALDO,2) == ROUND(E1_VALOR,2) .and. E1_SITUACA == "F"'			, aLegenda[Len(aLegenda)][1]	} ) //"Titulo Protestado"

			If cPaisLoc == "MEX" .And. X3Usado("ED_OPERADT")
				Aadd(uRetorno, {	'E1_ORIGEM == "MATA467N" .And. ROUND(E1_SALDO,2) > 0 .And. FXAtuTitCo()'									, aLegenda[7][1] } )
				Aadd(uRetorno, {	'E1_ORIGEM == "FINA087A" .And. ROUND(E1_SALDO,2) > 0 .And. FXAtuTitCo() .And. E1_TIPO == "'+MVRECANT+'"'	, aLegenda[8][1] } )
			EndIf       
			
			If !lF040URET
				Aadd(uRetorno, { '.T.', aLegenda[1][1] } )
			Endif
		Else
			If lPrjCni
				IF !Empty(GetMv("MV_APRPAG")) .or. GetMv("MV_CTLIPAG")           
					Aadd(aLegenda, {"BR_AMARELO", STR0030}) //Titulo aguardando liberacao
					Aadd(uRetorno, { ' EMPTY(E2_DATALIB) .AND. (SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE) > GetMV("MV_VLMINPG") .AND. E2_SALDO > 0', aLegenda[Len(aLegenda)][1] } ) 
				EndIf
			Else
				IF GetMv("MV_CTLIPAG")           
					Aadd(aLegenda, {"BR_AMARELO", STR0030}) //Titulo aguardando liberacao
					Aadd(uRetorno, { ' !( SE2->E2_TIPO $ MVPAGANT ).and. EMPTY(E2_DATALIB) .AND. (SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE) > GetMV("MV_VLMINPG") .AND. E2_SALDO > 0', aLegenda[Len(aLegenda)][1] } ) 
				EndIf
			EndIf
			IF lFaLegPares
				Aadd(uRetorno, { 'E2_TIPO == "'+MVPAGANT+'" .and. ROUND(E2_SALDO,2) > 0 .And. (ROUND(E2_SALDO,2) < ROUND(E2_VALOR,2))', aLegenda[Len(aLegenda)][1] } )										
			Endif								
			Aadd(uRetorno, { 'E2_TIPO $ "INA/'+MVTXA+'" .and. ROUND(E2_SALDO,2) > 0 .And. E2_OK == "TA"  ', aLegenda[7][1] } )			
			Aadd(uRetorno, { 'E2_TIPO == "'+MVPAGANT+'" .and. ROUND(E2_SALDO,2) > 0', aLegenda[5][1] } )			
			Aadd(uRetorno, { 'ROUND(E2_SALDO,2) + ROUND(E2_SDACRES,2)  = 0', aLegenda[3][1] } )
			Aadd(uRetorno, { '!Empty(E2_NUMBOR) .and.(ROUND(E2_SALDO,2)+ ROUND(E2_SDACRES,2) # ROUND(E2_VALOR,2)+ ROUND(E2_ACRESC,2))', aLegenda[6][1] } )						
			Aadd(uRetorno, { '!Empty(E2_NUMBOR)', aLegenda[4][1] } )
			Aadd(uRetorno, { 'ROUND(E2_SALDO,2)+ ROUND(E2_SDACRES,2) # ROUND(E2_VALOR,2)+ ROUND(E2_ACRESC,2)', aLegenda[2][1] } )
			If !lF040URET
				Aadd(uRetorno, { '.T.', aLegenda[1][1] } )
			Endif
		Endif
	Else
		If cAlias = "SE1"  
			If cPaisLoc == "MEX" .And. X3Usado("ED_OPERADT")
				Aadd(aLegenda, {"BR_PINK"	,STR0054}) //7. "Adiantamento gerado por Nota Fiscal"
				Aadd(aLegenda, {"BR_LARANJA",STR0055}) //8. "Titulo com operacão de adiantamento"
			EndIf
			Aadd(aLegenda,{"BR_AMARELO", STR0029}) //"Titulo Protestado"
	    Else 
			If lPrjCni
		    	IF !Empty(GetMv("MV_APRPAG")) .or. GetMv("MV_CTLIPAG")    
		    		Aadd(aLegenda, {"BR_AMARELO",  STR0030}) //Titulo aguardando liberacao 
		    	EndIf
			Else
		    	IF GetMv("MV_CTLIPAG")    
		    		Aadd(aLegenda, {"BR_AMARELO",  STR0030}) //Titulo aguardando liberacao 
		    	EndIf
			Endif
		EndIf
		BrwLegenda(cCadastro, STR0024, aLegenda)
	Endif
Endif

If lF040URET .And. ValType(uRetorno) = "A"
	uRetNew := ExecBlock("F040URET",.F.,.F.,{uRetorno,aLegenda})
	If ValType(uRetNew) = "A"
		aEval(uRetNew,{|J| aAdd(uRetorno,{J[1],J[2]}) })
		Aadd(uRetorno, { '.T.', aLegenda[1][1] } )
	Endif
Endif

Return uRetorno

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SomaCheqCr  ³ Autor ³ Claudio D. de Souza ³ Data ³ 06.11.03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Soma o valor dos cheques recebidos                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Financeiro                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SomaCheqCr(lEstaNaBase,cPrefixo,cNum,cParcela,cTipo,cCliente,lConsUsBx,cSequencia)

Local aArea := GetArea()
Local aAreaSef := SEF->(GetArea())
Local nRet := 0
Local nX 

#IFDEF TOP
	Local cQuery
#ENDIF

DEFAULT lConsUsBx := .T.      
DEFAULT cSequencia :=""

// Se nao estiver na base ainda, soma o aCols, onde estao os cheques que serao
// cadastrados
If !lEstaNaBase .And. (Type("aCols") == "A" .And. !Empty(aCols))
	For nX := 1 To Len(aCols)
		// Se o cheque nao estiver deletado, os dados forem validos
		If !aCols[nX][Len(aCols[1])]	.And.;
			!Empty(aCols[nX][1])		.And.;
			!Empty(aCols[nX][2])		.And.;
			!Empty(aCols[nX][3])		.And.;
			!Empty(aCols[nX][4])		.And.;
			!Empty(aCols[nX][5])		.And.;
			!Empty(aCols[nX][6])		.And.;
			!Empty(aCols[nX][7])		.And.;
			!Empty(aCols[nX][8])		.And.;
			!Empty(aCols[nX][9])	
			
			// Se o identificador de que o cheque ja foi utilizado na baixa estiver como nao, devido as
			// baixas parciais, pois nas baixas futuras esses cheques nao podem mais serem utilizados
			// na geracao do movimento bancario, soma o valor do cheque
			If (SEF->(FieldPos("EF_USADOBX")) = 0 .Or. aCols[nX][15] != "Sim") .And. IIf(!Empty(cSequencia),cSequencia == aCols[nX][14],.T.)
		  		nRet += aCols[nX][6]
		  	Endif	
	  		
		Endif
	Next
Else
	#IFDEF TOP
	   cQuery := "SELECT Sum(EF_VALORBX) Soma FROM "+RetSqlName("SEF")+" WHERE "	   
	   cQuery += "EF_FILIAL='"+xFilial("SEF")+"' AND "
	   cQuery += "EF_PREFIXO='"+cPrefixo+"' AND "
		cQuery += "EF_TITULO='"+cNum+"' AND "
		cQuery += "EF_PARCELA='"+cParcela+"' AND "
		cQuery += "EF_TIPO='"+cTipo+"' AND "
		cQuery += "(EF_FORNECE='"+cCliente+"' OR "
		cQuery += " EF_CLIENTE='"+cCliente+"') AND "
		cQuery += "EF_NUM<>' ' AND "
		If lConsUsBx .and. SEF->(FieldPos("EF_USADOBX")) > 0 
			cQuery += "EF_USADOBX <>'S' AND "
		Endif     
		If !Empty(cSequencia)
			cQuery += "EF_SEQUENC='"+cSequencia+"' AND "	
		Endif     		
		cQuery += "D_E_L_E_T_<>'*'"
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"__SOMACHEQ",.T.,.T.)
		nRet := __SOMACHEQ->SOMA
		dbCloseArea()
	#ELSE
		dbSelectArea("SEF")
		SEF->(dbSetOrder(3))      
		SEF->(MsSeek(xFilial("SEF")+cPrefixo+cNum+cParcela+cTipo))
		While SEF->(!Eof()) .And.;
				SEF->(EF_FILIAL+EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO) ==;
				xFilial("SEF")+cPrefixo+cNum+cParcela+cTipo
			If (SEF->EF_FORNECE == cCliente .Or.;
				SEF->EF_CLIENTE == cCliente) .And. !Empty(SEF->EF_NUM)
				If lConsUsBx .and. SEF->(FieldPos("EF_USADOBX")) = 0 .Or. SEF->EF_USADOBX != "S"
					nRet += SEF->EF_VALORBX // Proporcionaliza o valor ref. a baixa, devido as baixas parciais
				EndIf
			Endif	
			SEF->(dbSkip())
		EndDo
	#ENDIF
Endif	
RestArea(aAreaSEF)
RestArea(aArea)
Return nRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinSeqSe5   ³ Autor ³ Claudio D. de Souza ³ Data ³ 06.11.03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Encontra a proxima sequencia para o movto bancario (CR)    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Financeiro                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinSeqSe5(cPrefixo,cNum,cParcela,cTipo)
Local i
Local aTipoDoc
Local nTamSeq		:= TamSX3("E5_SEQ")[1]
Local cSequencia 	:= Replicate("0",nTamSeq)
Local aArea		:= GetArea()
Local aAreaSe5	:= SE5->(GetArea())

DEFAULT cPrefixo	:= SE1->E1_PREFIXO
DEFAULT cNum		:= SE1->E1_NUM
DEFAULT cParcela	:= SE1->E1_PARCELA
DEFAULT cTipo		:= SE1->E1_TIPO

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Localiza a sequencia da baixa ( CP,BA,VL,V2,LJ,CH )			  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aTipoDoc := {"CP","BA","VL","V2","LJ","CH"}

If ExistBlock("FINSEQARR")
	aAux := Execblock("FINSEQARR",.F.,.F.,{aTipoDoc})
	If Valtype(aAux) == "A"
		aTipoDoc := aClone(aAux)
	EndIf
EndIf 

SE5->(dbSetOrder(2))
For i:= 1 to len(aTipoDoc)
	SE5->(MsSeek(xFilial("SE5") + aTipoDoc[i]+cPrefixo+cNum+cParcela +cTipo) )
	While !SE5->(Eof())								.And. ;
			SE5->E5_FILIAL  == xFilial("SE5")	.And. ;
			SE5->E5_TIPODOC == aTipoDoc[i]  	 	.And. ;
			SE5->E5_PREFIXO == cPrefixo		 	.And. ;
			SE5->E5_NUMERO  == cNum					.And. ;
			SE5->E5_PARCELA == cParcela			.And. ;
			SE5->E5_TIPO	 == cTipo
			
		If PadL(AllTrim(cSequencia),nTamSeq,"0") < PadL(AllTrim(SE5->E5_SEQ),nTamSeq,"0")
			cSequencia := SE5->E5_SEQ
		Endif
		SE5->(dbSkip())
	EndDo
Next
If Len(AllTrim(cSequencia)) < nTamSeq
	cSequencia := PadL(cSequencia,nTamSeq,"0")
Endif
cSequencia := Soma1(cSequencia,nTamSeq)
SE5->(RestArea(aAreaSe5))
RestArea(aArea)

Return cSequencia


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F330ActImp  ³ Autor ³Mauricio Pequim Jr.. ³ Data ³ 11.11.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Acerta valores dos impostos na compensacao CR com NCC.     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA330                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function F330ActImp(nRecSE1,nValorReal,nValPis,nValCof,lBaixa,lCredito,nValCsl,nTotAbto)

Local nProporcao := 0
Local cKeySe1 := ""
Local aArea  := GetArea()
Local nTotAbt := 0
Local nTotAbImp := 0
Local nSe5Rec := 0   

//Controle de abatimento
Local lTitpaiSE1 := (SE1->(FieldPos("E1_TITPAI")) > 0)
Local nOrdTitPai:=0
Local cTitPai	:=""
Local bWhile:= {||!EOF() .And.MsSeek(xFilial("SE1")+cKeySE1)}  

Default nValPis := 0
Default nValCof := 0
Default nValCsl := 0
Default lBaixa  := .T.

If Select("__SE1") == 0
	SumAbatRec("","","",1,"")
Endif

DbSelectArea("__SE1")
dbSetOrder(2)
dbGoto(nRecSe1)  //posiciono no titulo pai no SE1

//Verifico valor dos abatimentos antes de proporcionalizar
nTotAbImp := 0
nTotAbt  := SumAbatRec(__SE1->E1_PREFIXO,__SE1->E1_NUM,__SE1->E1_PARCELA,__SE1->E1_MOEDA,"V",dDataBase,@nTotAbImp) 
nTotAbt	 -= nTotAbImp 	

DbSelectArea("__SE1")
dbSetOrder(2)
dbGoto(nRecSe1)  //posiciono no titulo pai no SE1

nSe5Rec := SE5->( RECNO() )

aValor:=Baixas(__SE1->E1_NATUREZ,__SE1->E1_PREFIXO,__SE1->E1_NUM,__SE1->E1_PARCELA,__SE1->E1_TIPO,__SE1->E1_MOEDA,"R",__SE1->E1_CLIENTE,dDataBase,__SE1->E1_LOJA)

SE5->( dbGoto(nSE5Rec) )

nProporcao := nValorReal / (__SE1->E1_SALDO-nTotAbt+aValor[5] )

cKeySE1 := __SE1->(E1_CLIENTE+E1_LOJA+E1_PREFIXO+E1_NUM+E1_PARCELA)	  
cTitPai	:= __SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA)	 

If lBaixa
	//Se for a baixa que zera o saldo, a proporcao do imposto deverá ser igual a 1 para que seja
	//feita a compensacao correta
	If __SE1->E1_SALDO == 0
		nProporcao := 1
		nValPis := __SE1->E1_PIS
		nValCof := __SE1->E1_COFINS
		nValCsl := __SE1->E1_CSLL
	Else
		nValPis := ((__SE1->E1_PIS+aValor[14]) * nProporcao)
		nValCof := ((__SE1->E1_COFINS+aValor[15]) * nProporcao)
		nValCsl := ((__SE1->E1_CSLL+aValor[18]) * nProporcao)
	Endif
Else
	nValPis := se5->e5_vretpis
	nValCof := se5->e5_vretcof
	nValCsl := se5->e5_vretcsl
Endif

If nValPis+nValCof+nValCsl > 0
	//Acerto o valor dos impostos no titulo principal
	RecLock("__SE1")
	If lBaixa
		__SE1->E1_PIS -= nValPis
		__SE1->E1_COFINS -= nValCof
		__SE1->E1_CSLL -= nValCsl
	Else
		__SE1->E1_PIS += nValPis
		__SE1->E1_COFINS += nValCof
		__SE1->E1_CSLL += nValCsl
	Endif
	MsUnLock()
	
	//Acerto os valores dos titulos de impostos
	If lTitpaiSE1
 		If FindFunction("OrdTitpai") .and. (nOrdTitPai:= OrdTitpai()) > 0
			DbSetOrder(nOrdTitPai)
			If	DbSeek(xFilial("SE1")+cTitPai)    
			  	bWhile  := {|| !Eof() .And. Alltrim(__SE1->E1_TITPAI) == Alltrim(cTitPai)}   
			Else
				 	__SE1->(dbSetOrder(2))    
			Endif
		Endif
	Endif
	
	While Eval(bWhile)
	
	//Pis    
		If __SE1->E1_TIPO $ MVPIABT
			If lBaixa
				RecLock("__SE1")
				__SE1->E1_VALOR -= nValPis
				__SE1->E1_SALDO := __SE1->E1_VALOR
				__SE1->E1_VLCRUZ := __SE1->E1_VALOR
				MsUnlock()
			Else
				RecLock("__SE1")
				__SE1->E1_VALOR += nValPis
				__SE1->E1_SALDO := __SE1->E1_VALOR
				__SE1->E1_VLCRUZ := __SE1->E1_VALOR
				MsUnlock()
			Endif
		Endif
	
		//Cofins 
		
		If __SE1->E1_TIPO $ MVCFABT
			If lBaixa
				RecLock("__SE1")
				__SE1->E1_VALOR -= nValCof
				__SE1->E1_SALDO := __SE1->E1_VALOR
				__SE1->E1_VLCRUZ := __SE1->E1_VALOR
				MsUnlock()
			Else
				RecLock("__SE1")
				__SE1->E1_VALOR += nValCof
				__SE1->E1_SALDO := __SE1->E1_VALOR
				__SE1->E1_VLCRUZ := __SE1->E1_VALOR
				MsUnlock()
			Endif
		Endif
		
		//CSLL
		If __SE1->E1_TIPO $ MVCSABT
			If lBaixa
				RecLock("__SE1")
				__SE1->E1_VALOR -= nValCsl
				__SE1->E1_SALDO := __SE1->E1_VALOR
				__SE1->E1_VLCRUZ := __SE1->E1_VALOR
				MsUnlock()
			Else
				RecLock("__SE1")
				__SE1->E1_VALOR += nValCsl
				__SE1->E1_SALDO := __SE1->E1_VALOR
				__SE1->E1_VLCRUZ := __SE1->E1_VALOR
				MsUnlock()
			Endif
		Endif  
		__SE1->( DbSkip() )
	Enddo
EndIf

RestArea(aArea)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA340GeraNDF ³ Autor ³ Marcel Borges Ferreira³ Data ³ 04/09/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera NDF                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA340GeraNDF(ExpC1,ExpN2)                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA340                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA340GeraNDF(nRecno,nValor,cTitAdt,lExclui,lNDFPCC)

	Local aArea 		:= GetArea()
	Local aTit 			:= {}
	Local cNatur 		:= SE2->E2_NATUREZ
	Local lFA340NDFGrv 	:= ExistBlock("FA340NDFGrv") //Gravacoes complementares na NDF gerada
	Local cTitPrc		:= ''
	Local cQuery		:= ''

	Private lMsErroAuto := .F.
	
	DEFAULT lExclui := .F.
	DEFAULT lNDFPCC := .F. //Identifica que a NDF gerada possui valor complementar referente a PCC gerado
	                       //(casos em que a base to título principal é maior do que o PA, porém o valor é o mesmo)
	                       
	If lExclui
		nOpc := 5 //Cancela = 5
	Else
		nOpc := 3 //Baixa = 3
	EndIf
	
	
	
	DbSelectArea("SE2")
	dbGoTo(nRecno)
	cTitPrc := SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
	If lExclui
		cQuery := "SELECT COUNT(*) CONTNFD"
		cQuery += "FROM "+RetSqlName("SE2")+ " SE2 "
		cQuery += "WHERE "
		cQuery += "SE2.E2_FILIAL 	='"+xFilial("SE2")+"' AND "
		cQuery += "SE2.E2_PREFIXO 	= '"+SE2->E2_PREFIXO+"' AND "	
		cQuery += "SE2.E2_NUM 		= '"+SE2->E2_NUM+"' AND "
		cQuery += "SE2.E2_PARCELA 	= '"+SE2->E2_PARCELA+"' AND "
		cQuery += "SE2.E2_TIPO 		= '"+MV_CPNEG +"' AND "		   
		cQuery += "SE2.D_E_L_E_T_	=' ' "
   		
		cQuery := ChangeQuery(cQuery)
		If Select("TRBTIT")> 0		
			TRBTIT->(DbCloseArea())	
		Endif
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"TRBTIT",.T.,.T.)
		
		TRBTIT->(dbGoTop())

		If TRBTIT->CONTNFD <= 0 
			If Select("TRBTIT")> 0		
				TRBTIT->(DbCloseArea())	
			Endif			
			Return .F.
		Endif
			
		If Select("TRBTIT")> 0		
			TRBTIT->(DbCloseArea())	
		Endif
	
	Endif
	
	AADD(aTit , {"E2_FILIAL" ,xFilial("SE2")        			,NIL})	
	AADD(aTit , {"E2_PREFIXO",SE2->E2_PREFIXO        			,NIL})
	AADD(aTit , {"E2_NUM"    ,SE2->E2_NUM              		,NIL})	
	AADD(aTit , {"E2_PARCELA",SE2->E2_PARCELA       		   ,NIL})
	AADD(aTit , {"E2_TIPO"   ,MV_CPNEG                  		,NIL})
	If !lExclui
		AADD(aTit , {"E2_NATUREZ",cNatur          		      ,NIL})
	EndIf
	AADD(aTit , {"E2_FORNECE",SE2->E2_FORNECE          		,NIL})
	AADD(aTit , {"E2_LOJA"   ,SE2->E2_LOJA            	      ,NIL})
	If !lExclui
		AADD(aTit , {"E2_EMISSAO",Ddatabase                   ,NIL})
	   AADD(aTit , {"E2_VENCTO" ,Ddatabase                   ,NIL})
		AADD(aTit , {"E2_VENCREA",DataValida(Ddatabase,.T.)   ,NIL})
		AADD(aTit , {"E2_VALOR"  ,nValor                 		 ,NIL})
		AADD(aTit , {"E2_EMIS1"  ,Ddatabase                	 ,NIL})
		AADD(aTit , {"E2_VLCRUZ" ,nValor           		       ,NIL})
		AADD(aTit , {"E2_HIST"   ,"DRI"                        ,NIL})//Documento de recuperacao de imposto
		AADD(aTit , {"E2_TITADT" ,cTitadt               		 ,NIL})	
		AADD(aTit , {"E2_MULTNAT" ,"2"                  		 ,NIL})	
		AADD(aTit , {"E2_ORIGEM" ,"FINA340"               		 ,NIL})				
	EndIf

	MSExecAuto({|x, y, z| FINA050(x, y, z)}, aTit,, nOpc)
	
	If lMsErroAuto
		MostraErro()
	Else
		If lFA340NDFGrv .and. !lExclui
			Execblock("FA340NDFGrv",.F.,.F.,{cTitAdt,cTitPrc,lNDFPCC}) //Gravacoes complementares na NDF gerada
		EndIf
	EndIf
	
	RestArea(aArea)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA340BxTxPa  ³ Autor ³ Marcel Borges Ferreira³ Data ³ 04/09/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Baixa Tx de Pa                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA340BxTxPa(ExpC1,ExpN2)                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA340                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa340BxTxPa(nRecno,lCancela)
	Local aArea := GetArea()
	Local nRecnoSE2
	Private lMsErroAuto := .F.
	Default lCancela := .F.   
	
	DbSelectArea("SE2")
	nRecnoSE2 := SE2->(Recno())
	dbGoTo(nRecno)

	If lCancela
		RecLock("SE2")
		SE2->E2_TITADT := ""
		MsUnlock()	
	Else
		RecLock("SE2")
		SE2->E2_TITADT := "PCC"
		MsUnlock()
	EndIf

	dbGoTo(nRecnoSE2)
	
	RestArea(aArea)
Return .T.



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ ÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinOkDiaCTB³ Autor ³Marcelo Celi Marques   ³ Data ³ 06.06.08³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄ ÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para validação do botão OK ref ao Diario de Contabil³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Fina089, Fina565, Fina086, Fina088, Fina100, Fina560, Fina460³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/  
Function FinOkDiaCTB(cDiaCtb)

DEFAULT cDiaCtb := ""

If cPaisLoc == "PTG" .And. !Empty( cDiaCtb )

	cCodDiario := CTBAVerDia()

	If Empty( cCodDiario )
		Return(.F.)
	Endif
Endif

Return(.T.)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ FinSomaLote º Autor ³ Gustavo Henrique  º Data ³  15/09/09 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Soma Lote Financeiro com tratamento para possivel aumento  º±±
±±º          ³ do campo de 4 para 8 posicoes.                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPC1 - Numero do lote para calculo da Soma1()             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA200 / FINA300                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FinSomaLote(cLoteFin)

Local cRet		:= ""
Local nTamLote	:= TamSX3("EE_LOTE")[1]

cRet := AllTrim( cLoteFin )
cRet := Soma1( PadL( cRet, nTamLote ) )

Return cRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinProcITF ³ Autor ³Wellington A Santos    ³ Data ³ 12/11/09³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que avalia a gravacao do imposto ITF ( Peru )       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
±±³08/06/2010 * Wagner Montenegro *
±±³Inclusão do parametro cBuscaMod para verificação de Natureza sem 
±±³posicionamento no SE5.
±±³Inclusão do parametro aRecnoITF para os registrar o recno dos registros
±±³adicionados pela opção 3 usado no FINA087a para contabilização.
±±³Inclusão da Opção 8 - Preparação para contabilização usado no FINA089.
±±³Modificado o calculo do imposto para (nPAliqITF / 100).
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
±±³08/05/2013 * Mayra Camargo * llamado: TF2479
±±³Inclución de parámetros  MV_IMP4MIL y MV_AL4XMIL para cálculo de impuesto
±±³4xmil de Colombia.
±±³Si el pais es Colombia, se cambia prefijo ITF por GMF.
±±³ Aplica cambio para las rutinas FINA085a, FINA086, FINA100, FINA090 Y FINA070
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß 
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß 
/*/
Function FinProcITF( nRecnoSE5,nOpc,nBaseITF, lHeadPrv,aHdlPrv, aFlagCTB, cBuscaMod , aRecnoITF)
Local aAliasATU  := GetArea()
Local aAreaSED   := SED->( GetArea() )
Local aAreaSE5   := SE5->( GetArea() )
Local aAreaFRM	  := If(cPaisLoc$"DOM|COS",FRM->( GetArea()),NIL)
Local cProcTra	  := ''
Local cCCC       := ''
Local cCCD       := ''
Local nMoed      := ''
Local nTaxM      := ''
Local cBanco     := ''
Local cAgencia   := ''
Local cConta     := ''
Local lRet       := .F.
Local nLinLoc    := 2
Local nTotalLanc := 0
Local nHdlPrv    := 0
Local lFinITF    := ExistBlock("FinProcITF")
Local cArquivo   := ''
Local lLancPad   := .F.
Local lRetorno
Local cPadrao    := ""  //REVISAR O CODIGO ANTES DE FINALIZAR
Local cProcesso  := ''
Local nAliqITF   := 0
Local nValor     := 0
Local cPrograma := ''
Local cLote     := ''
Local nRecOpc5 := 0
Local nValITF		:= 0
Local nMinITF		:= 0
Local lDomITF		:= .F.
Local lDomDtVld	:= .F. 
Local lCalcBanc	:= .T.
Local cNatITF		:= ""
Default nRecnoSE5 := 0
Default nOpc      := 0
Default nBaseITF  := 0
Default lHeadPrv  := .F.
Default aFlagCTB  := {}
Default aHdlPrv   := {} 
Default aRecnoITF := {} 

if cPaisLoc<>"COL"
	// PERU O BOLIVIA	
		cCalcITF   := SuperGetMv("MV_CALCITF",.F.,"2")
		nPAliqITF  := SuperGetMv("MV_ALIQITF",.F.,0)
		cNatITF    := SuperGetMv("MV_NATITF",.F.,"")	
Else
//SI ES COLOMBIA
	lCalcITF   := SuperGetMv("MV_IMP4MIL",.F.,.F.)
	nPAliqITF  := SuperGetMv("MV_AL4XMIL",.F.,0)
	lCalcBanc := IIF(POSICIONE("SA6",1,xfilial("SA6")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA,"A6_IMP4MIL")=='S',.T.,.F.)			
EndIf

If Len(aHdlPrv) > 0
	cPrograma := aHdlPrv[4]
	cLote     := aHdlPrv[5]
EndIf
/* variavel nOpc
   nOpc == 1  " Valida se e o Peru, e se o parametro MV_CALCITF esta ativo. Caso positivo, verifica se os outros paramentros estao preenchidos, se nao estiverem retorna .F."
   nOpc == 2  " Valida se toda parametricao para utilizar a ITF na contabilizacao e se a natureza do movimento bancario e a da ITF
	nOpc == 3  " Realizo tentiva de incluir lancamento de imposto ITF no movimento bancario. "
	nOpc == 5  " Realizo lancamento oposto do lancamento de imposto ITF no movimento bancario "
	nOpc == 6  " Realizo estorno do lancamento de imposto ITF no movimento bancario "
	nOpc == 7  " Realizo exclusao do lancamento de imposto ITF no movimento bancario "	
	nOpc == 8  " Realizo preparação para lançamento contabil utilizado na rotina FINA089"
*/
/* formato para o array aHdlPrv
   [1] = nHdlPrv
   [2] = codigo do lancamento padrao
   [3] = Programa inicializador do lancamento
   [4] = Programa
   [5] = Lote
*/

If SE5->( Recno() ) <> nRecnoSE5
	SE5->( DbGoTo( nRecnoSE5) )
EndIf	

Default cBuscaMod :=SE5->E5_NATUREZ

If cPaisLoc $ "DOM|COS"
	If nOpc >=1 .and. nOpc <=3
		SED->(DbSetOrder(1))
		If SED->(DbSeek(xFilial("SED")+cBuscaMod))
		   FRM->(DbSetOrder(3))
		   	If (SED->ED_USO $ "24" .and.FRM->( DbSeek( xFilial("FRM")+"ITF"+Space(TamSX3("FRM_SIGLA")[1]-3)+"1"+"2"))) .OR. ;
				(SED->ED_USO $ "24" .and. FRM->(DbSeek(xFilial("FRM")+"ITF"+Space(TamSX3("FRM_SIGLA")[1]-3)+"3"+"2"))) .OR. ;
				(SED->ED_USO $ "13" .and. FRM->( DbSeek( xFilial("FRM")+"ITF"+Space(TamSX3("FRM_SIGLA")[1]-3)+"2"+"2"))) .OR. ;
				(SED->ED_USO $ "13" .and. FRM->(DbSeek(xFilial("FRM")+"ITF"+Space(TamSX3("FRM_SIGLA")[1]-3)+"3"+"2")))
		   	
	   		While !FRM->(EOF()) .and. FRM->FRM_FILIAL==xFilial("FRM") .and. FRM->FRM_SIGLA==("ITF"+Space(TamSX3("FRM_SIGLA")[1]-3))
		   		If FRM->FRM_MSBLQL <> "1" .and. FRM->FRM_BLOQ <> "1" .and. FRM->FRM_SEQ <> "000" .and. (SED->ED_USO $ "24" .and. FRM->FRM_CARTEI $ "13" .or. SED->ED_USO $ "13" .and. FRM->FRM_CARTEI $ "23") .and. FRM->FRM_INIVIG <= dDataBase .and. FRM->FRM_FIMVIG >= dDataBase
			   		lDomDtVld:=.T.
			  			Exit
			  		Else
			   		FRM->(DbSkip())
		  		   Endif
		   	Enddo
			   If lDomDtVld
			      FRN->(DbSetOrder(2))
			      If FRN->(DbSeek(xFilial("FRN")+SED->ED_CODIGO+FRM->FRM_COD+FRM->FRM_SEQ))
			      	While !FRN->(EOF()) .and. FRN->FRN_FILIAL==xFilial("FRN") .AND. FRN->FRN_CODNAT==SED->ED_CODIGO .AND. FRN->FRN_IMPOST==FRM->FRM_COD .AND. FRN->FRN_SEQ==FRM->FRM_SEQ 
			      		If FRN->FRN_MSBLQL == "2"
			      			If !Empty(FRN->FRN_CONCEP)
			      				If CCR->(DbSeek(xFilial("CCR")+FRN->FRN_CONCEP))
			      					If CCR->CCR_REDUC > 0
				      					nAliqITF := CCR->CCR_ALIQ - (CCR->CCR_ALIQ * (CCR->CCR_REDUC / 100))
			      					Else
							      		nAliqITF := CCR->CCR_ALIQ / 100
							      	Endif
						      	Else
					      			nAliqITF := FRM->FRM_ALIQ / 100
					      		Endif
					      	Else
					      		nAliqITF := FRM->FRM_ALIQ / 100
					      	Endif
					      	lDomITF:=.T.
					      	Exit
					      Endif	
					      FRN->(DbSkip())
					 	Enddo	
					Endif
				Endif
			Endif
   	Endif
   Endif
Else
	nAliqITF := nPAliqITF / 100
Endif

cCCC     := SE5->E5_CCC
cCCD     := SE5->E5_CCD
nMoed    := SE5->E5_MOEDA
nTaxM    := SE5->E5_TXMOEDA
cBanco   := SE5->E5_BANCO
cAgencia := SE5->E5_AGENCIA
cConta   := SE5->E5_CONTA
cCredito := SE5->E5_CREDITO
cDebito  := SE5->E5_DEBITO
nValor   := SE5->E5_VALOR
Begin Transaction
If nOpc == 3
	cPadrao := '56A'
	If Len(aHdlPrv) > 0
		lLancPad := VerPadrao(cPadrao)
	EndIf

	SED->( DbSetOrder(1) )

         
	If nBaseITF == 0 .And. FinProcITF( nRecnoSE5,1 ,,,,,cBuscaMod)
  		nBaseITF := SE5->E5_VALOR
  	EndIf
  	if cPaisLoc $ "BOL".And. cCalcITF == "1" .and. SA6->A6_MOEDA <> 1 .and. SA6->A6_EST <> "EX" .and. !(GetMv("MV_CXFIN") $ SA6->A6_COD)
		nBaseITF:=IIf(cPaisLoc == "BOL"  .and. cCalcITF == "1" .and. SA6->A6_MOEDA <> 1 .and. SA6->A6_EST <> "EX".and.SE5->E5_VALOR == 0,SE5->E5_VLMOED2,SE5->E5_VALOR)	   
	EndIf
	
	If Funname() $ "FINA087A"
		nBaseITF:=IIf(cPaisLoc == "BOL"  .and. cCalcITF == "1" .and. SA6->A6_MOEDA <> 1 .and. SA6->A6_EST <> "EX".and.SE5->E5_VALOR == 0,SE5->E5_VLMOED2,SE5->E5_VALOR) 
	EndIf	
	
	nValITF := Round(nBaseITF * nAliQITF,MsDecimais(Val(nMoed)))
	If nValITF > nMinITF
		cProcTra	:= Iif(Empty(SE5->E5_PROCTRA),GetSx8Num("SE5","E5_PROCTRA","E5_PROCTRA"+cEmpAnt),SE5->E5_PROCTRA)
		//Realizo a gravacao de vinculo entre os lancamentos no se5 para o caso de ser necessario excluir o movimento original e o lancamento ITF
		Reclock("SE5",.F.)
		SE5->E5_PROCTRA      := cProcTra
		SE5->( MsUnlock() )

      //Realizo a gravacao do lancamento da ITF na movimentacao bancaria
		RecLock("SE5",.T.)
		SE5->E5_FILIAL    	:= xFilial("SE5")
		SE5->E5_RECPAG    	:= "P"
		SE5->E5_HISTOR    	:= IIF(cPaisLoc<>"COL","ITF","GMF")
		SE5->E5_DTDIGIT   	:= dDataBase
		SE5->E5_DATA      	:= dDataBase
		SE5->E5_DTDISPO    	:= dDataBase
		SE5->E5_NATUREZ   	:= cNatITF
		SE5->E5_TIPO         := "TF"
		If cPaisLoc $ "BOL"
			SE5->E5_TIPODOC   	:= "IT"
		Else
			SE5->E5_TIPODOC   	:= " "
		EndIf		
		SE5->E5_MOEDA     	:= nMoed
		SE5->E5_VALOR     	:= nValITF
		SE5->E5_CCC          := cCCC
		SE5->E5_CCD          := cCCD
		SE5->E5_PROCTRA      := cProcTra
		SE5->E5_BANCO        := cBanco
		SE5->E5_AGENCIA      := cAgencia
		SE5->E5_CONTA        := cConta
		SE5->E5_CREDITO      := cCredito
		SE5->E5_DEBITO       := cDebito
		If FieldPos("E5_TXMOEDA") > 0
			SE5->E5_TXMOEDA		:= nTaxM
		EndIf
		SE5->( MsUnlock() )
        AADD(aRecnoITF,SE5->(Recno()))
		ConfirmSx8()
		//atualizo o saldo bancario reduzindo o valor da ITF
		AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, dDatabase, SE5->E5_VALOR , "-" )
		lRet := .T.
	EndIf


ElseIf nOpc == 1 //verificacao se e o sistema esta parametrizado corretamente para lancamento de ITF
	SED->( DbSetOrder(1) )
	If cPaisLoc $ "PER|DOM|COS" .And. AllTrim(cCalcITF) == "1" .And. ValType(nAliqITF) == "N"	 .And. nAliqITF > 0 .And. !Empty(cNatITF) ;
		.And. SED->( MsSeek( xFilial("SED") + cNatITF ) ) .And. SED->( MsSeek( xFilial("SED") + cBuscaMod ) ) .And. ;
		iF(cPaisLoc=="PER" .and. SED->( FieldPos("ED_CALCITF") ) > 0 .And. SED->ED_CALCITF == '1',.T., iF(lDomITF,.T.,.F.) )
		lRet := .T.
	Else
		If cPaisLoc $ "COL"	.and. lCalcITF .And. ValType(nAliqITF) == "N"	 .And. nAliqITF > 0 .and. lcalcBanc
			//MSGaLERT("entro!")
			lRet:= .T.
		Elseif Funname() <> "FINA100" .and. cPaisLoc $ "BOL".And. cCalcITF == "1" .and. SA6->A6_MOEDA <> 1 .and. SA6->A6_EST <> "EX" .and. !(GetMv("MV_CXFIN") $ SA6->A6_COD)
			lRet:= .T.
		Elseif Funname() == "FINA100" .and. cPaisLoc $ "BOL".And. cCalcITF == "1" .and. SA6->A6_EST <> "EX" .and. !(GetMv("MV_CXFIN") $ SA6->A6_COD)
			lRet:= .T.
		EndIf		
	EndIf
ElseIf nOpc == 2//verificacao para identificar se o movimento e de ITF
	If cPaisLoc $ "PER|DOM|COS|BOL" .And. AllTrim(cCalcITF) == "1" .And. ValType(nAliqITF) == "N"	 .And. nAliqITF > 0 .And. !Empty(cNatITF)
		If !Empty(AllTrim(SE5->E5_NATUREZ)) 
			lRet := AllTrim(SE5->E5_NATUREZ) == AllTrim(cNatITF)
		Else
			lRet := .T.
		EndIf
	EndIf
ElseIf nOpc == 6

	cPadrao := '56B'
	If Len(aHdlPrv) > 0
		lLancPad := VerPadrao(cPadrao)
	EndIf		
	If FinProcITF( nRecnoSE5,1 )
		If cPaisLoc $ "COL|BOL"
			nValor := NoRound(nValor * nAliQITF,MsDecimais(Val(nMoed)))
			
			SE5->(DbSetOrder(15))
			cProcesso := SE5->E5_PROCTRA
			If SE5->( MsSeek(xFilial("SE5") + cProcesso ))
				Do While SE5->( SE5->E5_FILIAL + SE5->E5_PROCTRA == xFilial("SE5") + cProcesso )
					If Alltrim(SE5->E5_TIPODOC) == Alltrim(SE5->E5_TIPODOC) .And. AllTrim(SE5->E5_NATUREZ) == AllTrim(cNatITF)
						RecLock("SE5",.F.)
						nRecOpc5 := SE5->(Recno())
						SE5->E5_SITUACA      := 'X'
						SE5->(MsUnlock())
					EndIf
					SE5->( DbSkip() )
				EndDo   
			EndIf
			
			
		End If
      //Realizo a gravacao do lancamento da ITF na movimentacao bancaria de estorno
		RecLock("SE5",.T.)
		SE5->E5_FILIAL    	:= xFilial("SE5")
		SE5->E5_RECPAG    	:= "R"
		SE5->E5_HISTOR    	:= IIF(cPaisLoc<>"COL","ITF","GMF")
		SE5->E5_DTDIGIT   	:= dDataBase
		SE5->E5_DATA      	:= dDataBase
		SE5->E5_DTDISPO     := dDataBase
		SE5->E5_NATUREZ   	:= cNatITF
		SE5->E5_TIPO         := "TF"
		If cPaisLoc $ "BOL"
			SE5->E5_TIPODOC   	:= "IT"
		Else
			SE5->E5_TIPODOC   	:= " "
		EndIf
		SE5->E5_MOEDA     	:= nMoed
		SE5->E5_VALOR     	:= nValor
		SE5->E5_PROCTRA      := cProcTra
		SE5->E5_BANCO        := cBanco
		SE5->E5_AGENCIA      := cAgencia
		SE5->E5_CONTA        := cConta
		SE5->E5_SITUACA		:= 'E'
		If FieldPos("E5_TXMOEDA") > 0
			SE5->E5_TXMOEDA	:= nTaxM
		EndIf		

		
		//lancamento invertido
		SE5->E5_CCC          := cCCC
		SE5->E5_CCD          := cCCD
		SE5->E5_CREDITO      := cDebito
		SE5->E5_DEBITO       := cCredito
		
		SE5->( MsUnlock() )
		ConfirmSx8()
		//atualizo o saldo bancario reduzindo o valor da ITF
		AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, dDatabase, SE5->E5_VALOR , "+" )
		lRet := .T.
	EndIf
ElseIf nOpc == 5
	cPadrao := '56B'
	If Len(aHdlPrv) > 0
		lLancPad := VerPadrao(cPadrao)
	EndIf		
	SE5->(DbSetOrder(15))
	cProcesso := SE5->E5_PROCTRA
	If SE5->( MsSeek(xFilial("SE5") + cProcesso ))
		Do While SE5->( SE5->E5_FILIAL + SE5->E5_PROCTRA == xFilial("SE5") + cProcesso )
			If SE5->E5_TIPODOC == Alltrim(SE5->E5_TIPODOC) .And. AllTrim(SE5->E5_NATUREZ) == AllTrim(cNatITF)
				RecLock("SE5",.F.)
				nRecOpc5 := SE5->(Recno())
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Somente na Exclusao                        ³
				//³ ----------------------------------         ³
				//³ Os valores de credito e debito sao  	   ³
				//³ invertidos para o lancamento contabil 	   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				//lancamento invertido
				SE5->E5_SITUACA      := 'C'
				SE5->E5_CCC          := cCCC
				SE5->E5_CCD          := cCCD
				SE5->E5_CREDITO      := cDebito
				SE5->E5_DEBITO       := cCredito
				SE5->(MsUnlock())
				AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, dDatabase, SE5->E5_VALOR , "+" )
				lRet := .T.
			EndIf
			SE5->( DbSkip() )
		EndDo
		If nRecOpc5>0
		   SE5->(DbGoTo(nRecOpc5))
		Endif   
	EndIf
ElseIf nOpc == 7
	cPadrao := '56B'
	If Len(aHdlPrv) > 0
		lLancPad := VerPadrao(cPadrao)
	EndIf		
	SE5->(DbSetOrder(15))
	cProcesso := SE5->E5_PROCTRA
	If SE5->( MsSeek(xFilial("SE5") + cProcesso ))
		Do While SE5->( SE5->E5_FILIAL + SE5->E5_PROCTRA == xFilial("SE5")+cProcesso )
			If SE5->E5_TIPODOC == Space(Len(SE5->E5_TIPODOC)) .And. SE5->E5_NATUREZ == cNatITF
				RecLock("SE5",.F.)
				SE5->( DbDelete() )
				SE5->( MsUnlock() )
				AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, dDatabase, SE5->E5_VALOR , "+" )
				lRet := .T.
			EndIf
			SE5->( DbSkip() )
		EndDo
	EndIf
ElseIf nOpc==8
	lRet := .T.
EndIf
If lRet .And. (nOpc == 3 .Or. nOpc == 5 .Or. nOpc == 6 .Or. nOpc == 8)
    If nOpc==8
	   cPadrao := '56A'
	   If Len(aHdlPrv) > 0
		   lLancPad := VerPadrao(cPadrao)
	   EndIf
    Endif
	// utilizo a variavel aFlagCTB para o caso em que a chamada da gravacao da ITF ja esteja dentro de uma contabilizacao
	If lLancPad
		If lHeadPrv
			nHdlPrv := HeadProva( aHdlPrv[5],;
			                       aHdlPrv[3],;
			                      substr( cUsuario, 7, 6 ),;
			                      @cArquivo )
	
			If nHdlPrv <= 0
				Help(" ",1,"A100NOPROV")
				lRet := .F.
			EndIf
		Else
			nHdlPrv := aHdlPrv[1]
		EndIf
		If Len(aHdlPrv) > 0 .And. lRet .And. Valtype(nHdlPrv) == "N" .And. nHdlPrv > 0
			nTotalLanc := nTotalLanc + DetProva( 	nHdlPrv,;
								                        cPadrao/*cPadrao*/,;
								                    cPrograma/*cPrograma*/,;
								                    cLote/*Lote*/,;
								                    @nLinLoc,;
								                    /*lExecuta*/,;
								                    /*cCriterio*/,;
								                    /*lRateio*/,;
								                    /*cChaveBusca*/,;
								                    /*aCT5*/,;
								                    /*lPosiciona*/,;
								                    @aFlagCTB,;
								                    /*aTabRecOri*/,;
								                    /*aDadosProva*/ )
	
			//+-----------------------------------------------------+
			//¦ Envia para Lancamento Contabil, se gerado arquivo   ¦
			//+-----------------------------------------------------+
		EndIf
		If lHeadPrv
			RodaProva(  nHdlPrv,	nTotalLanc )
		EndIf
	EndIf
EndIf
End Transaction
If lFinITF
	lRetorno:= ExecBlock("FINPROCITF",.F.,.F.,{nRecnoSE5,nOpc})
	If Valtype(lRetorno)== "L"
		lRet := lRetorno
	EndIf
EndIf
If cPaisLoc$"DOM|COS"
	RestArea(aAreaFRM)
Endif
RestArea( aAreaSED )
RestArea( aAreaSE5 )
RestArea( aAliasATU)
Return(lRet)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³AtuSldNat  ³ Autor ³Claudio Donizete de Souza³ Data ³ 16/04/10³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Atualiza saldo por natureza financeira                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Financeiro                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function AtuSldNat(cNatureza,;		// 1 -> Codigo da natureza em que o saldo sera atualizado
						 dData,;	// 2 -> Data em que o saldo deve ser atualizado
						 cMoeda,;	// 3 -> Codigo da moeda do saldo
						 cTipoSld,;	// 4 -> Tipo de saldo (1=Orcado, 2=Previsto, 3=Realizado)
						 cCarteira,;// 5 -> Codigo da carteira (P=Pagar, R=Receber)
						 nValor,; 	// 6 -> Valor que atualizara o saldo na moeda do saldo
 						 nVlrCor,; 	// 7 -> Valor que atualizara o saldo na moeda corrente
						 cSinal,;	// 8 -> Sinal para atualizacao (+) ou (-)
						 cPeriodo,;	// 9 -> Saldo a ser atualizado (D = Diario, M = Mensal, NIL = Ambos	(importante apenas no recalculo)
						 cOrigem,;	// 10 -> Rotina de Origem do movimento de fluxo de caixa. Ex. FUNNAME()
						 cAlias,;	// 11-> Alias onde ocorreu a movimentação de fluxo de caixa. Ex. SE2
						 nRecno,;	// 12 -> Número do registro no alias onde ocorreu a movimentação de fluxo de caixa.
						 nOpcRot,; // 13 -> Opção de manipulação da rotina de origem da chamada da função AtuSldNat()	
						 cTipoDoc,;	// 14 -> Tipo do documento E5_TIPODOC
						 nVlAbat)  // 15 -> Valor de abatimento E5_ABATI

Static lAliasInDic  := (AliasInDic("FIV") .And. AliasInDic("FIW") .And. AliasInDic("FIX") .And. AliasInDic("FIY")) // Para evitar a chamada a AliasInDic a todo momento
Local cMovFlxCxNt	:= GetNewPar("MV_FINATFN","1") // Verifica se movimenta fluxo de caixa "1" - On-line / "2" - Off-Line
Local lRet			:= .F.
Local aArea			:= GetArea()
Local aAreaFIV		:= {}
Local aAreaFIW		:= {}
Local lFASLDNAT		:= ExistBlock("FASLDNAT") // Ponto de Entrada
Local lAtuSldNat	:= .T.
Local lF022GRA		:= ExistBlock("F022GRA") // Ponto de Entrada
Local lPrjCni 		:= FindFunction("ValidaCNI") .And. ValidaCNI()
Local lAliasInDic 	:= (AliasInDic("FIV") .And. AliasInDic("FIW") .And. AliasInDic("FIX") .And. AliasInDic("FIY"))
Local lF800ATUFIV := ExistBlock("F800ATUFIV") // Ponto de Entrada
Local lIntegTIN		:= FindFunction( "GETROTINTEG" ) .and. FindFunction("FwHasEAI")
Local lTinExSE5		:= .F.
Local lGrvSld 		:= .T.

DEFAULT cPeriodo	:= "A"					// Atualizar saldo Diario e Mensal do Fluxo de Caixa por Natureza Financeira
DEFAULT cOrigem		:= FunName()			// Função de Origem da Chamada da Função AtuSldNat()
DEFAULT cAlias		:= Alias()				// Alias posicionado no momento da chamada da função AtuSldNat()
DEFAULT nRecno		:= (cAlias)->(Recno())	// Número do Recno da tabela posicionada no momento da chamada da função AtuSldNat()
DEFAULT nOpcRot		:= 0					// Modo de Edição da rotina de origem da chamada da função AtuSldNat()
DEFAULT cTipoDoc    := ""
DEFAULT cMoeda		:= '01'					// Moeda Padrão utilizada no processso
DEFAULT nVlAbat     := 0                  // Valor do Abatimento
Default lFASLDNAT		:= ExistBlock("FASLDNAT") // Ponto de Entrada
Default nTamNatur := TamSX3("FIV_NATUR")[1]  
Default __lFivAbati := FIV->(FieldPos("FIV_ABATI"))>0
Default __lFiwAbati := FIW->(FieldPos("FIW_ABATI"))>0  
Default __lExistFJV := AliasInDic("FJV")

/*
 * Se as tabelas não existirem no dicionário de dados, a atualização de saldos não é executada (Proteção)
 * E se Fluxo de Caixa somente para a localização BRASIL 
 */ 
If lPrjCni 
	aAreaFIV		:= FIV->(GetArea())
	aAreaFIW		:= FIW->(GetArea())
EndIf

If lIntegTIN .And. SE5->E5_MOTBX == 'TIN'
	lTinExSE5 := .T.
EndIf

If lAliasInDic .AND. cPaisLoc == "BRA"

	DbSelectArea("FIV")
	aAreaFIV := FIV->(GetArea())
	DbSelectArea("FIW")
	aAreaFIW := FIW->(GetArea())
	
	// Esta rotina esta disponivel apenas para ambientes TOPCONNECT
	#IFDEF TOP
	
		// Converte o codigo da moeda para facilitar as chamadas em que o codigo da moeda eh numerico, ex. Financeiro
		If EMPTY(cMoeda)
			cMoeda := '01'
		ElseIf ValType(cMoeda) != "C"
			cMoeda := StrZero(cMoeda,2)
		ElseIf Len(AllTrim(cMoeda)) < 2
			cMoeda := StrZero(VAL(cMoeda),2)  	
		Endif
	    
	    /*
	     * Formatando o parâmetro da natureza para o tamanho do campo do banco de dados para efetuar a
	     * pesquisa corretamente nos saldos do fluxo de caixa por natureza.
	     */
		cNatureza := PADR(cNatureza,nTamNatur," ")
		
		If lAliasInDic .AND. cMovFlxCxNt == "1" //.AND. (nValor >= 0 .OR. (AllTrim(cNatureza) $ "COFINS|PIS|CSLL"))
			
			/*
			 * Ponto de Entrada no processo de atualização do saldos do fluxo de caixa por natureza financeira.
			 */
			If lFASLDNAT
				lAtuSldNat := ExecBlock("FASLDNAT",.F.,.F.,{cOrigem, cAlias, nRecno, nOpcRot})
				lAtuSldNat := IIF(Valtype(lAtuSldNat) == "L", lAtuSldNat, .T.)
			EndIf
				
			If lAtuSldNat .And. !lTinExSE5
			
				/* Verifica se movimentacao possui origem nas SEs.
				   Movimentacoes avulsas relacionadas a natureza nao podem ter seu saldo gravado,
				   pois nunca existiu saldo orcado e previsto ou 
				   ja efetuaram movimentacao do saldo no momento de sua origem.
				   obs: validacao exclusiva para FINA800()
				*/
				If cOrigem == "FINA800"
					dbSelectArea("SE1")
					dbSetOrder(3)
					If !SE1->(dbSeek(xFilial("SE1") + Alltrim(cNatureza)))
						lGrvSld := .F.
					EndIf
					// Se nao encontrou na SE1, procura na SE2
					If !lGrvSld
						dbSelectArea("SE2")
						dbSetOrder(2)
						If SE2->(dbSeek(xFilial("SE2") + AllTrim(cNatureza)))
							lGrvSld := .T.
						EndIf
					EndIf
					RestArea(aAreaFIV)
				EndIf
				lRet := .T.
	
				If cPeriodo $ "A#D" .And. lGrvSld
					// Grava FIV (Movimentos diarios)
					FIV->(DbSetOrder(1)) // FIV_FILIAL+FIV_NATUR+FIV_MOEDA+FIV_TPSALD+FIV_CARTEI+DTOS(FIV_DATA)
					If FIV->(MsSeek(xFilial("FIV")+cNatureza+cMoeda+cTipoSld+cCarteira+DTOS(dData))	)
						RecLock("FIV",.F.)
					Else	
						RecLock("FIV",.T.)
						FIV->FIV_FILIAL	:= xFilial("FIV")
						FIV->FIV_NATUR		:= cNatureza
						FIV->FIV_MOEDA		:= cMoeda
						FIV->FIV_TPSALD	:= cTipoSld
						FIV->FIV_CARTEI	:= cCarteira
						FIV->FIV_DATA		:= dData
					Endif
					If cSinal == "+"
						FIV->FIV_VALOR += nValor
						If __lFivAbati 
							FIV->FIV_ABATI += nVlAbat
						Endif
					Else
						FIV->FIV_VALOR -= nValor
						If __lFivAbati
							FIV->FIV_ABATI -= nVlAbat
						Endif
					Endif
					MsUnlock()
					FIV->( dbCommit() )
					//Ponto de entraga para customização dos dados na gravação do arquivo FIV.
					If lF800ATUFIV						
						ExecBlock("F800ATUFIV",.F.,.F.)
					EndIf
				Endif
	
				If cPeriodo $ "A#M"	.And. lGrvSld		
					// Grava FIW (Saldos mensais)
					FIW->(DbSetOrder(1)) // FIW_FILIAL+FIW_NATUR+FIW_MOEDA+FIW_TPSALD+FIW_CARTEI+DTOS(FIW_DATA)
					If FIW->(MsSeek(xFilial("FIW")+cNatureza+cMoeda+cTipoSld+cCarteira+DTOS(LastDay(dData)))	)
						RecLock("FIW",.F.)
					Else	
						RecLock("FIW",.T.)
						FIW->FIW_FILIAL	:= xFilial("FIW")
						FIW->FIW_NATUR		:= cNatureza
						FIW->FIW_MOEDA		:= cMoeda
						FIW->FIW_TPSALD	:= cTipoSld
						FIW->FIW_CARTEI	:= cCarteira
						FIW->FIW_DATA		:= LastDay(dData)
					Endif
					If cSinal == "+"
						FIW->FIW_VALOR += nValor
						If !Empty( __lFiwAbati )
							FIW->FIW_ABATI += nVlAbat
						Endif
					Else
						FIW->FIW_VALOR -= nValor
						If !Empty( __lFiwAbati )
							FIW->FIW_ABATI -= nVlAbat
						Endif
					Endif
					MsUnlock()
					FIW->( dbCommit() )
				Endif
	
				If cPeriodo $ "A#D" .and. Val(cMoeda) > 1 .AND. nVlrCor > 0
						AtuSldNat(cNatureza		,;	// 1  -> Codigo da natureza em que o saldo sera atualizado
									 dData 	 	,;	// 2  -> Data em que o saldo deve ser atualizado
									 "01"  	 	,;	// 3  -> Codigo da moeda do saldo
									 cTipoSld 	,;	// 4  -> Tipo de saldo (1=Orcado, 2=Previsto, 3=Realizado)
									 cCarteira	,;	// 5  -> Codigo da carteira (P=Pagar, R=Receber)
									 nVlrCor  	,; 	// 6  -> Valor que atualizara o saldo na moeda do saldo
									 0			,; 	// 7  -> Valor que atualizara o saldo na moeda corrente
									 cSinal	 	,;	// 8  -> Sinal para atualizacao (+) ou (-)
									 cPeriodo	,;  // 9  -> Saldo a ser atualizado (D = Diario, M = Mensal, A = Ambos	(default)
									 cOrigem	,;	// 10 -> Rotina de Origem do movimento de fluxo de caixa. Ex. FUNNAME()
							 		 cAlias		,;	// 11 -> Alias onde ocorreu a movimentação de fluxo de caixa. Ex. SE2
							 		 nRecno		,;	// 12 -> Número do registro no alias onde ocorreu a movimentação de fluxo de caixa.
							 		 nOpcRot	)	// 13 -> Opção de manipulação da rotina de origem da chamada da função AtuSldNat()
				Endif
			// Atualização da FJV
			
			// Gravação dos campos padrões da FJV   
			If lPrjCni
				If __lExistFJV
	
					If cPeriodo $ "A#D"
			
						FJV->(dbSetOrder(1))
						
					    RecLock("FJV",FJV->(!dbSeek(xFilial("FJV")+cNatureza+cMoeda+cTipoSld+cCarteira+DtoS(dData))) )

							FJV->FJV_FILIAL 	:= xFilial("FJV")
							FJV->FJV_NATUR	 	:= cNatureza
							FJV->FJV_MOEDA		:= cMoeda
							FJV->FJV_TPSALD 	:= cTipoSld
							FJV->FJV_CARTEI		:= cCarteira
							FJV->FJV_DATA		:= dData
							
							If cSinal == "+"
								FJV->FJV_VALOR+=nValor
							Else
								FJV->FJV_VALOR-=nValor
							Endif
							
							FJV->FJV_ALIAS		:= cAlias
							FJV->FJV_RECNO		:= nRecno
							FJV->FJV_TPMOV		:= Iif( cSinal == '+', '1', '2' ) // cSinal "1"-ADICAO OU "2"-ESTORNO
							FJV->FJV_ORIGEM 	:= cOrigem // Rotina que gerou o movimento
							FJV->FJV_CLORIG 	:= RetOriAli(cAlias , cCarteira, Alltrim(cOrigem), cTipoDoc ) // ( cAlias, cCarteira ) 
						MsUnLock()  
						FJV->( dbCommit() )
	
						// Ponto de entrada para dados complementares
						If lF022GRA
						    ExecBlock("F022GRA",.F.,.F.,{ cNatureza, dData, cMoeda, cAlias  })
						Endif
		            Endif					
				Endif	
			EndIf
   		Endif	
	Endif 
	
	// Restauro a area anterior, se esta nao estava em branco
	If !Empty(cAlias)
		DbSelectArea(cAlias)
	Endif
	
#ENDIF
RestArea(aAreaFIW)
RestArea(aAreaFIV)
RestArea(aArea)
EndIf
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³RetSldNat  ³ Autor ³Claudio Donizete de Souza³ Data ³ 26/04/10³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Retorna o saldo de uma determinada natureza financeira       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Financeiro                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function RetSldNat(cNatureza,;	// -> Codigo da natureza que se deseja o saldo
						 dData,;			// -> Data em que se deseja o saldo
						 cMoeda,;		// -> Codigo da moeda que se deseja o saldo
						 cTipoSld,;		// -> Tipo do saldo desejado (1=Orçado, 2=Previsto, 3=Realizado)
						 cCarteira)		// -> Codigo da carteira desejada (P=Pagar, R=Receber)

Local dUltDiaAnt := (FirstDay(dData)-1)
Local nRet := 0

FIW->(DbSetOrder(1)) // FIW_FILIAL+FIW_NATUR+FIW_MOEDA+FIW_TPSALD+FIW_CARTEI+DTOS(FIW_DATA)
If FIW->(MsSeek(xFilial("FIW")+cNatureza+cMoeda+cTipoSld+cCarteira+DTOS(LastDay(dUltDiaAnt))))
	While FIW->(!Eof()) .And.;
			FIW->FIW_FILIAL == xFilial("FIW") .And.;
			FIW_NATUR 	== cNatureza 	.And.;
			FIW_MOEDA 	== cMoeda 		.And.;
			FIW_TPSALD	== cTipoSld 	.And.;
			FIW_CARTEI	== cCarteira	.And.;
			FIW_DATA		<= dData
		nRet += FIW->FIW_VALOR
		FIW->(DbSkip())
	End
Endif

Return nRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³RetMovNat  ³ Autor ³Claudio Donizete de Souza³ Data ³ 26/04/10³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Retorna o movimento de uma determinada natureza financeira   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Financeiro                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function RetMovNat(cNatureza,;	// -> Codigo da natureza que se deseja o saldo
						 dData,;			// -> Data em que se deseja o saldo
						 cMoeda,;		// -> Codigo da moeda que se deseja o saldo
						 cTipoSld,;		// -> Tipo do saldo desejado (1=Orçado, 2=Previsto, 3=Realizado)
						 cCarteira)		// -> Codigo da carteira desejada (P=Pagar, R=Receber)

Local nRet := 0

FIV->(DbSetOrder(1)) // FIV_FILIAL+FIV_NATUR+FIV_MOEDA+FIV_TPSALD+FIV_CARTEI+DTOS(FIV_DATA)
If FIV->(MsSeek(xFilial("FIV")+cNatureza+cMoeda+cTipoSld+cCarteira+DTOS(dData)))
	nRet := FIV->FIV_VALOR
Endif

Return nRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FBxLotAut	 ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 11/05/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Baixa Automatica em lotes                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FBxLotAut(ExpC1,ExpA2,ExpC3,ExpC4,ExpC5,ExpC6,ExpC7,Exp8)      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias (SE1 ou SE2)                                     ³±±
±±³          ³ ExpA2 = Array contendo o Recno dos arquivos a serem baixados   ³±±
±±³          ³ ExpC3 = Banco para baixa                                       ³±±
±±³          ³ ExpC4 = Agencia para Baixa                                     ³±±
±±³          ³ ExpC5 = Conta para Baixa                                       ³±±
±±³          ³ ExpC6 = Cheque para Baixa                                      ³±±
±±³          ³ ExpC7 = Lote para agrupamento das baixas (loteFin)             ³±±
±±³          ³ ExpC8 = Natureza do movimento bancario (C.Pagar)	            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ GENERICO                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FBxLotAut(cAlias,aRecnos,cBanco,cAgencia,cConta,cCheque,cLoteFin,cNatureza,dBaixa)

Local aTitulos := {}
Local aOrdSE5	:= {}
Local lRet		:= .T.
Local oIPC			:= nil	// Objeto controlador de MultThreads
Local nThreads		:= SuperGetMv( "MV_BLATHD" , .T. , 1 )	// Limite de 20 Threads permitidas
Local cChave		:= "FBXLOTAUT_THRD"
Local i				:= 0
Local nCont			:= 0
Local aRecnosAux := {} 
Local nLote		:= SuperGetMv( "MV_BLALOT" , .T. , 50 )	// Quantidade de registros por lote
Local dBKPDTBase	:= dDataBase	// Copia para restaurar no final
Local lBAixaVenc    := .F.
PRIVATE lMSHelpAuto := .T.
PRIVATE lMsErroAuto := .F. 

DEFAULT cAlias		:= ""
DEFAULT aRecnos	:= {} 
DEFAULT cBanco		:= ""
DEFAULT cAgencia	:= ""
DEFAULT cConta		:= ""
DEFAULT cCheque	:= ""
DEFAULT cLoteFin	:= ""
DEFAULT cNatureza	:= ""
DEFAULT dBaixa		:= dDatabase

If IsInCallStack("FINA910") .and. Type("LUSEFIFDTCRED") == "L" .AND. lUseFIFDtCred 
	//se deve gravar a data de credito na E1_BAIXA
	lBAixaVenc := .T.	
EndIf

nThreads := If( (nThreads > 20) , 20 , nThreads )	
//Gero numeracao automatica de lote
If Empty(cLoteFin)
	cLoteFin := GetSxENum("SE5","E5_LOTE","E5_LOTE"+cEmpAnt,5)
	dbSelectArea("SE5")
	aOrdSE5 := SE5->(GetArea())
	dbSetOrder(5)
	While SE5->(MsSeek(xFilial("SE5")+cLoteFin))
		If ( __lSx8 )
			ConfirmSX8()
		EndIf
		cLoteFin := GetSxENum("SE5","E5_LOTE","E5_LOTE"+cEmpAnt,5)
	EndDo
	RestArea(aOrdSE5)
Endif

cBanco	:= PADR(cBanco,TAMSX3("A6_COD")[1])
cAgencia := PADR(cAgencia,TAMSX3("A6_AGENCIA")[1])
cConta	:= PADR(cConta,TAMSX3("A6_NUMCON")[1])
cCheque	:= PADR(cCheque,TAMSX3("EF_NUM")[1])
cNatureza:= PADR(cNatureza,TAMSX3("ED_CODIGO")[1])

SED->(dbSetOrder(1))

//Verifico informacoes para processo
If Empty(cAlias) .or. Empty(cBanco) .or. Empty(cAgencia) .or. Empty(cConta) 
	Help(" ",1,"BXLTAUT1",,STR0049, 1, 0 )		//"Informações incorretas não permitem a baixa automática em lote. Verifique as informações passadas para a função FBXLOTAUT()"
	lRet		:= .F.
ElseIf !CarregaSa6(@cBanco,@cAgencia,@cConta,.T.,,.T.)
	lRet		:= .F.
ElseIf Empty(aRecnos)
	Help(" ",1,"RECNO")
	lRet		:= .F.
ElseIf !Empty(cNatureza) .and. !ExistCpo("SED",cNatureza,,"Natureza Informada não Existe.")
	lRet		:= .F.
ElseIf !Empty(cCheque) .and. cAlias == "SE2" .and. !(FVerCheq(cBanco,cAgencia,cConta,cCheque))
	lRet		:= .F.
Else
	aTitulos := {aRecnos,cBanco,cAgencia,cConta,cCheque,cLoteFin,cNatureza,dBaixa,lBAixaVenc}
	VALOR := 0

	If cAlias == "SE1"
		If nThreads > 1 .And. IIF(Funname() $ "FINA910", Round(len(aRecnos)/nThreads, 2) >= 100, .T.) 
			If !LockByName( cChave, .F. , .F. )
				Help( " " ,1, cChave ,, "Outro usuario está usando a rotina " ,1, 0 )
		    Else
				// Objeto controlador de Threads
				oIPC := FWIPCWait():New( "FINA110" , 10000 )
				oIPC:SetThreads( nThreads )
				oIPC:SetEnvironment( cEmpAnt , cFilAnt )
				oIPC:Start( "FINA110" )	// Funcao para a Thread 
				Sleep( 600 )
				// Abertura de Threads
				ProcRegua( Len( aRecnos ) )
				
				For i := 1 To Len( aRecnos )
					IncProc()
					nCont++
					aAdd(aRecnosAux, aRecnos[i])
					If nCont > nLote  
						
						oIPC:Go( 3 , {aRecnosAux,cBanco,cAgencia,cConta,cCheque,cLoteFin,cNatureza,dBaixa,lBAixaVenc},.T. )
						aRecnosAux := {}
						nCont := 0
					EndIf
				Next i
				If len(aRecnosAux) > 0                                                                        
					oIPC:Go( 3 , {aRecnosAux,cBanco,cAgencia,cConta,cCheque,cLoteFin,cNatureza,dBaixa,lBAixaVenc},.T. )
				EndIf	
				// Fechamento das Threads
				oIPC:Stop()	//Metodo aguarda o encerramento de todas as threads antes de retornar o controle.
				FreeObj(oIPC) 
				oIpc := nil   
				UnLockByName( cChave, .F. , .F. )
			EndIf
		Else
			FINA110( 3 , aTitulos )		
		EndIf
	Else		
		FINA090( 3 , aTitulos )
	Endif	
Endif

If lMsErroAuto
	MOSTRAERRO() 
	RollBackSx8()
	lRet := .F.
EndIf

lMSHelpAuto := .F.
lMsErroAuto := .F. 
//volta a database
dDataBase := dBKPDTBase
Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FVerCheq  ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 13/05/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida cheque informado.se digitado e diferente de '*'      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³FVerCheq()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FVerCheq(cBanco,cAgencia,cConta,cCheque )
Local lRet    := .t.
                       
lRet := VldUser("EF_NUM") // Chama a validacao de usuario
If lRet .And. !Empty(cCheque) .And. Substr(cCheque,1,1) # "*"
	SEF->(dbSetOrder(1))
	If SEF->( (dbSeek( xFilial("SEF") + cBanco + cAgencia + cConta + cCheque ) ) )
		Help( " ",1,"F090Cheq" )
		lRet := .f.
	Endif
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RetBcoMoedºAutor  ³ Pedro Pereira Lima º Data ³  30/12/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna a moeda do banco passado como parâmetro            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Genereico                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function RetBcoMoed(cBanco,cAgencia,cConta)
Local aArea     := GetArea()
Local aAreaSA6  := SA6->(GetArea())
Local aAreaSE8  := SE8->(GetArea())
Local nMoedaBco := 1

dbSelectArea("SA6")
dbSetOrder(1)
If dbSeek(xFilial("SA6") + cBanco + cAgencia + cConta)
	nMoedaBco := Max(SA6->A6_MOEDA,1)
Else
	nMoedaBco := 1
EndIf		

RestArea(aAreaSE8)
RestArea(aAreaSA6)
RestArea(aArea)

Return nMoedaBco

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RetOriAli ºAutor  ³ Totvs              º Data ³  28/11/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o FJV_CLORIG para o Alias informado.               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Genereico                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RetOriAli( cAlias, cCarteira, cOrigem, cTipoDoc )                   
Local cRet := ''
cAlias := Alltrim(cAlias)

/*
"	TITR = Títulos a receber
"	TITP = Títulos a pagar
"	COMV = Comissão de vendas
"	APL  = Transações referentes a Aplicações 
"   EMP  = Transações referentes a Empréstimos
"   MVBR = Movimentação bancaria a Receber
"   MVBP = Movimentação bancaria a Pagar
*/
   
/* condiçoes abaixo foram feitas conforme a ultima versao do fonte do sourcesafe DATA: 02/12/2011*/
Do case
   Case cAlias == 'SE1' // Titulos a Receber
       cRet := 'TITR'   

   Case cAlias == "SEV" .AND. cCarteira == "R"   //Titulos a Receber Multinatureza
	   cRet := 'TITR'
                        
   Case cAlias == 'SE2' // Titulos a Pagar
       cRet := 'TITP'  
                       
                       
   Case cAlias == 'SEV' .AND. cCarteira == "P" // Titulos a Pagar Multinatureza
       cRet := 'TITP' 
   
   Case cAlias == 'SE3' // Comissoes de vendas
       cRet := 'COMV'

   Case cAlias == 'SEH' .AND. cCarteira == 'P' // Aplicacao 
       cRet := 'APL'

   Case cAlias == 'SE5' .AND. cCarteira == 'P' .AND. ( cOrigem == 'FINA171' .OR. cTipoDoc == 'AP' )//Aplicacao com FINA171 SE5
       cRet := 'APL'

   Case cAlias == 'SEH' .AND. cCarteira == 'R' .AND. ( cOrigem == 'FINA181' .OR. cTipoDoc == 'AP' )// Resgaste da Aplicacao -- Testado porem com o parametro cAlias o valor "SE5" em vez de "SEH"
       cRet := 'APL'
  
   Case cAlias == 'SEH' .AND. cCarteira == 'R'  //Emprestimo 
       cRet := 'EMP' 

   Case cAlias == 'SE5' .AND. cCarteira == 'R' .AND. ( cOrigem == 'FINA171' .OR. cTipoDoc == 'EP' )//Emprestimo com Fina171 SE5
       cRet := 'EMP' 
   
   Case cAlias == 'SE5' .AND. cCarteira == 'P' .AND. ( cOrigem == 'FINA181' .OR. cTipoDoc == 'EP' )//Resgate do emprestimo
       cRet := 'EMP' 
   
   Case cAlias == 'SE5' .AND. cCarteira == 'R' // Movimento bancario a Receber
       cRet := 'MVBR'

   Case cAlias == 'SE5' .AND. cCarteira == 'P'  // Movimento Bancario a Pagar
       cRet := 'MVBP'
   
   OtherWise
       cRet := 'NIDENTIF'
       
End Case

Return cRet   

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FXAtuTitCoºAutor  ³Microsiga           º Data ³  02/07/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Define se o titulo é de adiantamento para compensacao      º±±
±±º          ³ Manejo de Anticipo                                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAFIN - MEXICO                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FXAtuTitCo()
Local aArea	:= GetArea()
Local lRet	:= .F.

If cPaisLoc == "MEX" .And. X3Usado("ED_OPERADT")
	If GetAdvFVal("SED","ED_OPERADT",XFilial("SED")+SE1->E1_NATUREZ,1,"") == "1"
		lRet := .T.
	EndIf
EndIf

RestArea(aArea)

Return lRet

//-------------------------------------------------------------------
/*/ {Protheus.doc} FINMsgCnab
Função para validação dos campos de mensagem para CNAB (Tabela SEE)

@sample FINMsgCnab()
@author Mauricio Pequim Jr
@since 15/05/13
@version 1.0

@return lRet	Fórmula válida ou não
/*/
//-------------------------------------------------------------------
Function FINMsgCnab()
Local xResult	:= NIL
Local cForm		:= &(ReadVar())
Local lRet		:=.T. 
Local aRetSyntax:= {}
Local cLine		:= ""
local lExec		:= .T.
Local bBlock	:= {||.T.}
Local nPos		:= 0

aRetSyntax := ParAnalise(cForm)	// Analise estrutural de sintaxe

IF !Empty(aRetSyntax[1])
	Help(" ",1,"ERROFORM",,OemToAnsi( STR0056 + aRetSyntax[1]),1,0) // Estrutura Inconsistente : 
	lRet := .f.
Endif

If lRet
	For nPos := 1 to len(aRetSyntax[2])
		cLine	:= upper(aRetSyntax[2][nPos])
		If "M->" $ cLine .or. "m->" $ cLine
			lExec := .F.		
		Endif
	Next nX
	
	If lExec
		bBlock := ErrorBlock( { |e| ChecErro(e) } )
		BEGIN SEQUENCE
			xResult := &cForm
		RECOVER
			lRet := .F.
		END SEQUENCE
		ErrorBlock(bBlock)
	Endif
Endif

Return lRet


//------------------------------------------------------------------------------------------------------------------------
/*/ {Protheus.doc} ParAnalise
Função static auxiliar da validação dos campos de mensagem para CNAB (Tabela SEE)
Valida a sintaxe da fórmula digitada.

@sample ParAnalise(cTexto)
@author Mauricio Pequim Jr
@since 15/05/13
@version 1.0

@param cTexto		Expresão ou fórmula a ser validada
@return aVetor		Vetor [1] cStack -> Se preenchido, indica qual caracter na estrutura não está  coerente com a mesma.
					Vetor [2] aParam -> Array com os textos correspondentes dentro das estruturas.
/*/
//------------------------------------------------------------------------------------------------------------------------
Static Function ParAnalise(cTexto)

Local cStack:=""  , cAspas:=""
Local aSepFunc:={"()","[]","{}"}, aParam:={}
Local nPosAt:=1 , uLastPar:=1 , cPosAtual
Local uAbre , uFecha , cSeparador:=","

// Arranca os caracteres da esquerda se forem 'espa‡o' ou 'TAB'
While left(cTexto,1)==" " .or. left(cTexto,1)==chr(9)
   cTexto:=right(cTexto,len(cTexto)-1)
EndDo
While nPosAt<=len(cTexto)
   cPosAtual:=substr(cTexto,nPosAt,1)
   If cPosAtual==chr(34) .or. cPosAtual==chr(39)	// Achou "ASPAS"
		cAspas:=If(empty(cAspas),cPosAtual,If(cAspas == cPosAtual,"",cAspas))
   Endif
   If empty(cAspas)			// Apenas analiza a estrutura caso nao esteja entre aspas
      uAbre :=ascan(aSepFunc,{|_v|  left(_v,1) == cPosAtual})
      uFecha:=ascan(aSepFunc,{|_v| right(_v,1) == cPosAtual})
      If uAbre+uFecha>0		// Abriu ou Fechou uma estrutura
         If uAbre>0	// Abriu uma estrutura ! Acrescenta no STACK
            If !empty(substr(cTexto,uLastPar,nPosAt-uLastPar))
               aadd(aParam,substr(cTexto,uLastPar,nPosAt-uLastPar))
            Endif
	         uLastPar:=nPosAt+1	 ; cStack:=cStack+cPosAtual
         Else			// Fechou uma estrutura : Checa o STACK
            If right(cStack,1)==Left(aSepFunc[uFecha],1)	// Se fechou certo, tira do Stack
               cStack:=left(cStack,len(cStack)-1)
				Else	// Estrutura fechada incorretamente
					cStack:=right(aSepFunc[uFecha],1)
					EXIT
            Endif
            If !empty(substr(cTexto,uLastPar,nPosAt-uLastPar))
               aadd(aParam,substr(cTexto,uLastPar,nPosAt-uLastPar))
            Endif
	         uLastPar:=nPosAt+1
         Endif
      Else	// Verifica separador
			If cPosAtual==cSeparador
            aadd(aParam,substr(cTexto,uLastPar,nPosAt-uLastPar))
            uLastPar:=nPosAt+1
         Endif
      Endif
   Endif
	nPosAt++
EndDo
IF !empty(cTexto) .and. len(aParam) == 0
	aadd(aParam,alltrim(cTexto))
Endif
cStack+=if(empty(cAspas),"",cAspas)
Return {cStack,aParam}


//---------------------------------------------------------------------------------------------------------
/*/ {Protheus.doc} FMsgCnab
Função para macroexecução do conteúdo dos campos de mensagem do chab (Tabela SEE):
EE_FORMEN1, EE_FORMEN2, EE_FOREXT1, EE_FOREXT2

@sample FMsgCnab(cCampo)
@author Mauricio Pequim Jr
@since 15/05/13
@version 1.0

@param cCampo	Nome do campo a ser macroexecutado
@return cTexto	Texto resultante da macroexecução do campo
/*/
//---------------------------------------------------------------------------------------------------------
Function FMsgCnab(cCampo)

Local cRet		:= "" 
Local aRetSyntax:= {}

DEFAULT cCampo := ""

aRetSyntax := ParAnalise(cCampo)	// Analise estrutural de sintaxe

IF Empty(aRetSyntax[1])
	
	bBlock := ErrorBlock( { |e| ChecErro(e) } )
	BEGIN SEQUENCE
		cRet := &cCampo
	RECOVER
		cRet := STR0057  //"Falha de configuração. Verifique configuração da mensagem."
	END SEQUENCE
	ErrorBlock(bBlock)
Else
	cRet := STR0057  //"Falha de configuração. Verifique configuração da mensagem."
Endif

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FilISSTran ºAutor  ³ Daniel Mendes     º Data ³  08/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna a filial de origem do ISS, caso o mesmo não tenha  º±±
±±º          ³ sido transferido junto com os demais impostos              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FilISSTran()
Local cFilRetIss := ""
Local aArea      := GetArea()
Local aAreaSE6   := SE6->(GetArea())
Local aAreaSE1   := SE1->(GetArea())
Local lTrfISSf   := GetNewPar( "MV_TRFISSF" , .T. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Busca origem do titulo baixado se foi originado pelo FINA630  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If "FINA630" $ SE1->E1_ORIGEM .And. !lTrfISSf
	DbSelectArea("SE6")
	SE6->(DbSetOrder(4))

	If SE6->(DbSeek(xFilial("SE1")+SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO)))
		While !SE6->(Eof()) .And. SE6->(E6_FILIAL+E6_PREFIXO+E6_NUM+E6_PARCELA+E6_TIPO) == SE1->(E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO)
			cFilRetIss := IIf( SE6->E6_SITSOL == "2" , SE6->E6_FILORIG , "" )
			SE6->(dbSkip())
		EndDo
	EndIf

	RestArea( aAreaSE1 )
	RestArea( aAreaSE6 )
	RestArea( aArea    )
EndIf

Return cFilRetIss

//-------------------------------------------------------------------
/*/{Protheus.doc}IsEmpPub
Programa p/ verificar o minimo de irrf e pcc esta configurado 
corretamente para empresas publicas.
@author Caique Bispo Ferreira
@since  19/02/2015
/*/
//-------------------------------------------------------------------

Function IsEmpPub()

Local lRet := .F.
Local lEmpPub := SuperGetMv("MV_ISPPUBL" ,.T.,"2") == "1"
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  
Local nVlMinPCC := SuperGetMv("MV_VL10925" ,.T.,5000)
Local nVlMinIR := SuperGetMv("MV_VLRETIR" ,.T.,10)

If lEmpPub .And. lPCCBaixa .And. nVlMinPCC == 0 .And. nVlMinIR == 0
	lRet := .T.
EndIf

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc}fCRetCal
Programa p/ calcular data vencimento de Impostos.

@param nTipo 
	1 - diario
	2 - Semanal add 3 dias.
	3 - Decendio add 3 dias.
	4 - Até o ultima dia da Quinzena SubSequente
	5 - Até Dia 20 do mês subsequente
	6 - Até o Décimo quinto dia util do mês subsequente

@param dEmissao -

@author Marjorie
@since  26/02/15
/*/
//-------------------------------------------------------------------
Function fCRetCal(nTipo,dEmissao)

Local nNextMes 	:= 0
Local dData 		:= CtoD("//")
Local nI 			:= 1

Default dEmissao := dDatabase
Default nTipo := 0

dData 				:= dEmissao
nNextMes 			:= Month(dData) + 1

If nTipo == 1
	//na data de ocorrência
	dData	:= dData
	
ElseIf nTipo == 2
	//Semanal add 3 dias.
	For nI:=1 To 7
		If Dow( dData ) = 1
			Exit
		End
		dData++
	Next nI
	
ElseIf nTipo == 3
	//Decendio add 3 dias.
	If Day(dData) >= 1 .And. Day(dData) <= 10
		dData := CTOD("11/"+StrZero(Month(dData),2)+"/"+Str(Year(dData)))  
	ElseIf Day(dData) >= 11 .And. Day(dData) <= 20 
		dData := CTOD("21/"+StrZero(Month(dData),2)+"/"+Str(Year(dData)))  
	Else 
		dData := CTOD("01/"+If(nNextMes==13,"01",StrZero(nNextMes,2))+"/"+;
					Str(If(nNextMes==13,Year(dData)+1,Year(dData))))			
	EndIf
	
ElseIf nTipo == 4
	//Até o ultima dia da Quinzena SubSequente
	If Day(dData) <= 15
		dData := CTOD("01/"+;  //dia
		Iif(nNextMes==13,"01",StrZero(nNextMes,2))+"/"+; //mes
			Substr(Str(Iif(nNextMes==13,Year(dData)+1,Year(dData))),2))    //ano
	Else                         
		dData := CTOD("16/"+;  //dia
		Iif(nNextMes==13,"01",StrZero(nNextMes,2))+"/"+; //mes
			Substr(Str(Iif(nNextMes==13,Year(dData)+1,Year(dData))),2))    //ano
	
	EndIf
	dData -= 1
	
ElseIf nTipo == 5
	//Até Dia 20 do mês subsequente
	dData := CTOD("20/"+Iif(nNextMes==13,"01",StrZero(nNextMes,2))+"/";
			+Substr(Str(Iif(nNextMes==13,Year(dData)+1,Year(dData))),2))
ElseIf nTipo == 6
	//Até o décimo quinto dia util do mês subsequente
	dData := CTOD("15/"+;  //dia
		Iif(nNextMes==13,"01",StrZero(nNextMes,2))+"/"+; //mes
			Substr(Str(Iif(nNextMes==13,Year(dData)+1,Year(dData))),2))    //ano
EndIf


//Valida Data Valida 
If nTipo == 5 .Or. nTipo == 4 .Or. nTipo == 6
	//Subtrai dia
	While .T.
		If DataValida(dData,.T.) == dData
			Exit
		Else
			dData -= 1
		Endif
	Enddo

ElseIf nTipo == 2 .Or. nTipo == 3
	//Adiciona 3 dias.
	nI := 1
	While nI <= 3 
		If DataValida(dData,.T.) == dData
			If nI < 3
				dData += 1
			EndIf
			nI +=1
		Else
			dData += 1
		Endif
	EndDo	
EndIf 

Return dData

//-------------------------------------------------------------------
/*/{Protheus.doc} IsIssBx
Programa p/ verificar se o Iss está na baixa.

@author TOTVS S/A
@since  08/04/15
/*/
//-------------------------------------------------------------------
Function IsIssBx(cCart)

Local lCalcIssBx := .F.
Local aGetTab	:= getArea()
Default cCart := "P"

DbSelectArea("SE5")

If SE5->( FieldPos( "E5_VRETISS" ) ) > 0  .And. SE5->( FieldPos( "E5_PRETIRF" ) ) > 0
	If cCart == "P"
		DbSelectArea("SE2")
		If SE2->( FieldPos("E2_SEQBX")) > 0 .And. SE2->( FieldPos("E2_TRETISS")) > 0  .And. SE5->(FieldPos("E5_VRETIRF")) >0
			lCalcIssBx := SuperGetMv("MV_MRETISS",.F.,"1") == "2" //Retencao do ISS pela emissao (1) ou baixa (2)
		EndIf
	EndIf
EndIf

RestArea(aGetTab)

Return lCalcIssBx

//-------------------------------------------------------------------
/*/{Protheus.doc} FpropCR
Proporcionaliza os valores dos impostos conforme passado nos parâmetros.

@author TOTVS S/A
@since  07/04/15
/*/
//-------------------------------------------------------------------
Function FpropCR(nE1Val, nVlPis, nVlCof, nVlCsl, nVlIr, nVlIns, nVlIs, nVlRec) //MYT
Local lPropBx  := SuperGetMv("MV_PROPBX",.F.,"2") == "1"
Local lPccBxCr		:= If (FindFunction("FPccBxCr"),FPccBxCr(),.F.) //Controla o Pis Cofins e Csll na baixa (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default))
Local lIrPjBxCr	:= If (FindFunction("FIrPjBxCr"),FIrPjBxCr(),.F.) //Controla IRPJ na baixa
Local nImpPis	:= 0
Local nImpCof	:= 0
Local nImpCsl	:= 0
Local nImpIrf	:= 0
Local nImpIns	:= 0
Local nImpIss	:= 0
Local aImp		:= {}

Default nE1Val	:= SE1->E1_VALOR
Default nVlPis	:= 0
Default nVlCof	:= 0
Default nVlCsl	:= 0
Default nVlIr	:= 0
Default nVlIns	:= 0
Default nVlIs	:= 0
Default nVlRec	:= 0

If lPropBx
	If !lPccBxCr .and. nVlPis > 0 
		nImpPis	:= (nVlPis * nVlRec / nE1Val)
	ElseIf lPccBxCr
		nImpPis	:= 0
	EndIf
	If !lPccBxCr .and. nVlCof > 0  
		nImpCof	:= (nVlCof * nVlRec / nE1Val)
	ElseIf lPccBxCr
		nImpCof	:= 0
	EndIf
	If !lPccBxCr .and. nVlCsl > 0 
		nImpCsl	:= (nVlCsl * nVlRec / nE1Val)
	ElseIf lPccBxCr
		nImpCsl	:= 0
	EndIf
	If !lIrPjBxCr .and. nVlIr > 0
		nImpIrf	:= (nVlIr * nVlRec / nE1Val)
	ElseIf lIrPjBxCr
		nImpIrf	:= 0
	EndIf
	If nVlIns > 0 
		nImpIns	:= (nVlIns * nVlRec / nE1Val)
	Else
		nImpIns	:= 0
	EndIf
	If nVlIs > 0 
		nImpIss	:= (nVlIs * nVlRec / nE1Val)
	Else
		nImpIss	:= 0
	EndIf	
EndIf

Aadd(aImp,{ nImpPis, nImpCof, nImpCsl, nImpIrf, nImpIns, nImpIss})

Return(aImp)

