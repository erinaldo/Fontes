#INCLUDE "FINA200.CH"
#include "fileio.ch"
#Include "PROTHEUS.CH"

Static __nExeProc := 0
Static lFWCodFil  := FindFunction("FWCodFil")
Static lFuncPCCBx := FindFunction("FPccBxCr")
STATIC lFindIrBx  := FindFunction("FIrPjBxCr")
Static dRefPCC := CTOD("22/06/2015")

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FinA200  ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorno da comunica‡„o banc ria - Receber                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FinA200()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³			ATUALIZACOES SOFRIDAS                              			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Claudio   	³13/07/00³xxxxxx³ Retirar todas as chamadas a WriteSx2    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FinA200(nPosArotina) 
Local lPanelFin := If (FindFunction("IsPanelFin"),IsPanelFin(),.F.)
Local lPergunte := .F.
Local aAreaCnab
Private lF200Cus  := ExistBlock("F200CUS") //Novo ponto de Entrada
Private cStProc := ""
Private aTit  
Private	cTipoBx  := ""
Private cArqCfg  := ""
Private nVlrcnab := 0
Private lMVCNABImp := GetNewPar("MV_CNABIMP",.F.)
Private lMVGlosa   := GetNewPar("MV_GLOSA",.F.) 

// Permite que o fina200 seja chamado mais de uma vez pelo schedule
__nExeProc  := 0

// Retorno Automatico via Job
// parametro que controla execucao via Job utilizado para pontos de entrada que nao tem como passar o parametro
Private lExecJob := ExecSchedule()

if lExecJob
	nPosArotina := 3 // recebe arquivo
Endif

Private cPerg	:= "AFI200"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza ajustes no grupo de perguntas ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX1(cPerg)

/*
 ___________________________________
| Perguntas:						|
| __________________________________|
|									|
| 01	Mostra Lanc Contab ?		|
| 02	Aglut Lancamentos ?			|
| 03	Atualiza Moedas por ?		|
| 04	Arquivo de Entrada ?		|
| 05	Arquivo de Config ?			|
| 06	Codigo do Banco ?			|
| 07	Codigo da Agencia ?			|
| 08	Codigo da Conta ?			|
| 09	Codigo da Sub-Conta ?		|
| 10	Abate Desc Comissao ?		|
| 11	Contabiliza On Line ?		|
| 12	Configuracao CNAB ?			|
| 13	Processa Filial?			|
| 14	Contabiliza Transferencia ?	|
| 15	Considera Dias de Retencao ?|
|___________________________________|
*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lPanelFin .and. ! lExecJob         // Retorno Automatico via Job - parametro que controla execucao via Job
	lPergunte := PergInPanel(cPerg,.T.)
Else
	if lExecJob    // Retorno Automatico via Job - parametro que controla execucao via Job
		Pergunte(cPerg,.F.,Nil,Nil,Nil,.F.)  // carrega as perguntas que foram atualizadas pelo FINA205
		lPergunte := .T.
	Else
		lPergunte := pergunte(cPerg,.T.)
	Endif
Endif

If !lPergunte
	Return
Endif
MV_PAR04 := UPPER(MV_PAR04)

PRIVATE cLotefin 	:= Space(TamSX3("EE_LOTE")[1]),nTotAbat := 0,cConta := " "
PRIVATE nHdlBco		:= 0,nHdlConf := 0,nSeq := 0 ,cMotBx := "NOR"
PRIVATE nValEstrang := 0
PRIVATE cMarca 		:= GetMark()
PRIVATE aRotina 	:= MenuDef()
PRIVATE VALOR  		:= 0
PRIVATE nHdlPrv 	:= 0
PRIVATE nOtrGa		:= 0
PRIVATE nTotAGer	:= 0
PRIVATE ABATIMENTO 	:= 0
Private lOracle		:= "ORACLE"$Upper(TCGetDB())

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de baixas ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cCadastro := OemToAnsi(STR0006)  //"Comunica‡„o Banc ria-Retorno"

DEFAULT nPosArotina := 0

If nPosArotina > 0
	dbSelectArea('SE1')
	bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPosArotina,2 ] + "(a,b,c,d,e) }" )
	Eval( bBlock, Alias(), (Alias())->(Recno()),nPosArotina,lExecJob) // Retorno Automatico via Job - parametro que controla execucao via Job
Else
	mBrowse( 6, 1,22,75,"SE1")
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fecha os Arquivos ASCII ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
FCLOSE(nHdlBco)
FCLOSE(nHdlConf)

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fA200Ger ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Comunicacao Bancaria - Retorno                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA200Ger()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FinA200                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa200gera(cAlias)
__nExeProc++

// Como esta rotina eh chamada duas vezes pela mBrowse, controlar
// as chamadas para nao ocorrer duplo processamento
If (__nExeProc%2)==0
	Return .T.
Endif

Processa({|lEnd| fa200Ger(cAlias)})  // Chamada com regua

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fA200Gera³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Comunicacao Bancaria - Retorno                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA200Ger()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FinA200                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA200Ger(cAlias)
Local lPosNum  :=.f.,lPosData:=.f.,lPosMot  :=.f.
Local lPosDesp :=.f.,lPosDesc:=.f.,lPosAbat :=.f.
Local lPosPrin :=.f.,lPosJuro:=.f.,lPosMult :=.f.
Local lPosOcor :=.f.,lPosTipo:=.f.,lPosOutrD:= .F.
Local lPosCC   :=.f.,lPosDtCC:=.f.,lPosNsNum:=.f.
Local cArqConf,cArqEnt,xBuffer
Local lDesconto,lContabiliza
Local cData
Local cPosNsNum , nLenNsNum
Local lUmHelp 	:= .F.
Local cTabela 	:= "17"
Local lPadrao 	:= .f.
Local lBaixou 	:= .F.
Local nSavRecno	:= Recno()
Local nPos
Local aTabela 	:= {}
Local lRecicl	:= GetMv("MV_RECICL")
Local lNaoExiste:= .F.
Local cIndex	:= " "
LOCAL lFina200 	:= ExistBlock("FINA200" )
LOCAL l200Pos  	:= ExistBlock("FA200POS" )
LOCAL lT200Pos 	:= ExistTemplate("FA200POS" )
LOCAL lFa200Fil	:= ExistBlock("FA200FIL")
LOCAL lFa200F1 	:= ExistBlock("FA200F1" )
LOCAL lF200Tit 	:= ExistBlock("F200TIT" )
LOCAL lF200Fim 	:= ExistBlock("F200FIM" )
LOCAL lTF200Fim := ExistTemplate("F200FIM" )
LOCAL lF200Var 	:= ExistBlock("F200VAR" )
LOCAL lF200Avl 	:= ExistBlock("F200AVL" )
LOCAL l200Fil  	:= .F.
LOCAL lFirst	:= .F.
Local cMotBan	:= Space(10)				// motivo da ocorrencia no banco
Local nCont, cMotivo, lSai := .f.
Local aLeitura 	:= {}
Local lFa200_02 := ExistBlock("FA200_02")
Local aValores 	:= {}
LOCAL lBxCnab  	:= GetMv("MV_BXCNAB") == "S"
LOCAL cNomeArq
LOCAL aCampos  	:= {}
Local lAchouTit	:= .F.
Local nX 		:= 0
Local nRegSE5 	:= 0
Local lPosDtVc 	:= .F.
Local nLenDtVc
Local cPosDtVc
Local lF200ABAT := ExistBlock("F200ABAT")
Local lFI0InDic := AliasInDic("FI0")
Local nLastLn	:= 0
Local nUltLinProc := 1
Local lReproc 	:= .T.
Local cTrailler
Local cIdArq
Local nLinRead	:= 0
Local nRegEmp	:= SM0->(Recno())
Local lF200PORT := ExistBlock("F200PORT")
Local lAltPort 	:= .T.
Local nTotAbImp := 0
Local cFilOrig  := cFilAnt	// Salva a filial para garantir que nao seja alterada em customizacao
Local lNewIndice:= FaVerInd()  //Verifica a existencia dos indices de IDCNAB sem filial
Local nTamPre	:= TamSX3("E1_PREFIXO")[1]
Local nTamNum	:= TamSX3("E1_NUM")[1]
Local nTamPar	:= TamSX3("E1_PARCELA")[1]
Local nTamTit	:= nTamPre+nTamNum+nTamPar
Local aArqConf	:= {}		// Atributos do arquivo de configuracao
// Local lCtbExcl	:= !Empty(xFilial("CT2"))
Local lProcessa := .T.   
Local nValTot	:= 0

Local lAltera   := Iif(IsBlind(), .F. , ALTERA)

//--- Tratamento Gestao Corporativa
Local lGestao   := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
//
Local cFilFwSE1 := IIF( lGestao .And. FindFunction("FwFilial"), FwFilial("SE1") , xFilial("SE1") )
//
Local cFilFwCT2 := IIF( lGestao .And. FindFunction("FwFilial"), FwFilial("CT2") , xFilial("CT2") )
//
Local lCtbExcl	:= !Empty( cFilFwCT2 )

Local lMulNatBx := SuperGetMV("MV_MULNATB",.F.,.F.)
Local lJurComis := (mv_par16 == 1)
Local nExit := 0
Local nValImp	:= 0     
Local nValLiq	:= 0  
Local lRet		:= .T.
Local lTtMes 	:= .F.
Local lCustodia := .F.
Local nTotImp := 0
Local nValRec2	:= 0
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")

Local lPccBxCr	:= If (lFuncPCCBx,FPccBxCr(),.F.) //Controla o Pis Cofins e Csll na Baixa
Local lIrPjBxCr	:= If (lFindIrBx,FIrPjBxCr(),.F.) //Controla IRPJ na Baixa
Local lBxTotal	:= .F.

If ExistBlock("F200CNAB")
	lBxCnab:=ExecBlock("F200CNAB",.F.,.F.,{lBxCnab,cAlias})
EndIf

nHdlBco   	:= 0
nHdlConf   	:= 0
nSeq       	:= 0
cMotBx     	:= "NOR"
nTotAGer   	:= 0
nTotDesp   	:= 0 // Total de Despesas para uso com MV_BXCNAB
nTotOutD   	:= 0 // Total de outras despesas para uso com MV_BXCNAB
nTotValCC   := 0 // Total de outros creditos para uso com MV_BXCNAB
nValEstrang := 0
VALOR    	:= 0
nHdlPrv  	:= 0
ABATIMENTO  := 0

Private cBanco
Private cAgencia
Private cConta
Private cHist070
Private lAut:=.f.,nTotAbat := 0
Private cArquivo
Private dDataCred
Private dBaixa
Private lBAIXCNAB := .F.
Private lCabec := .f.
Private nHdlCNAB := 0
Private cPadrao
Private nTotal := 0
Private cModSpb := "1"  // Informado apenas para nao dar problemas nas rotinas de baixa
Private nAcresc
Private nDecresc
Private aFlagCTB		:= {}
Private lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Private nLidos,nLenNum,nLenData,nLenDesp,nLenDesc,nLenAbat,nLenMot, nTamDet
Private nLenPrin,nLenJuro,nLenMult,nLenOcor,nLenTipo,nLenCC,nLenDtCC, nLenOutrD
Private cPosNum,cPosData,cPosDesp,cPosDesc,cPosAbat,cPosPrin,cPosJuro,cPosMult
Private cPosOcor,cPosTipo,cPosCC,cPosDtCC,cPosMot, cPosOutrD

If lMVCNABImp
	// variáveis usadas pela TotMes
	PRIVATE aDadosRef	:= Array(7)
	PRIVATE aDadosRet	:= Array(7)
	AFill( aDadosRef, 0 )
	AFill( aDadosRet, 0 )
EndIf
PRIVATE nPis := nCofins	:= nCsll	:= nIrrf	:= nParciais	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Deleta Chave Unica do Arquivo Log de Detalhes do CNAB        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX2()

// Se existir o arquivo de LOG, forca sua abertura antes do inicio da transacao
If lFI0InDic
	DbSelectArea("FI0")
	DbSelectArea("FI1")
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona no Banco indicado                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cBanco  := mv_par06
cAgencia:= mv_par07
cConta  := mv_par08
cSubCta := mv_par09
lDigita := IIF(mv_par01==1,.T.,.F.)
lAglut  := IIF(mv_par02==1,.T.,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe inidce IDCNAB para multiplas filiais ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If mv_par13 == 2

	If !lNewIndice

		// Não foi encontrado o índice por IDCNAB sem Filial. ### Executar o compatibizador do ambiente Financeiro (U_UPDFIN).
		PutHelp( "PNOIDCNAB",	{"Não foi encontrado o índice por IDCNAB", "sem Filial."},;
								{"The index IDCNAB without Branch not found." },;
								{"No encontro el indice por IDCNAB sin", "Sucursal."} )

		PutHelp( "SNOIDCNAB",	{"Executar o compatibizador do ambiente", "Financeiro (U_UPDFIN)."},;
								{"Run the compatibility Financial ", "(U_UPDFIN)." },;
								{"Ejecutar el compatibilizador del entorno", "Financeiro (U_UPDFIN)."} )

		Help( "  ", 1, "NOIDCNAB" )


		// Retorno Automatico via Job
		if ExecSchedule()
			Aadd(aMsgSch, STR0016) // "Não foi encontrado o índice por IDCNAB sem Filial. Executar o compatibizador do ambiente Financeiro (U_UPDFIN)."
		Endif

		Return .F.

	Else

		If lCtbExcl
			// A Contabilidade está em modo exclusivo e foi solicitado o processamento de todas as filiais.
			// Neste caso, o sistema não realiza a contabilização on-line. Confirma mesmo assim?
			if ! ExecSchedule() // Retorno Automatico via Job - parametro que controla execucao via Job
				If ! MsgYesNo( STR0015, STR0012 )
					Return .F.
				Endif
			EndIf
		EndIf
	EndIf

EndIf

dbSelectArea("SA6")
DbSetOrder(1)
SA6->( dbSeek(xFilial("SA6")+cBanco+cAgencia+cConta) )

dbSelectArea("SEE")
DbSetOrder(1)
SEE->( dbSeek(xFilial("SEE")+cBanco+cAgencia+cConta+cSubCta) )
If !SEE->( found() )
	Help(" ",1,"PAR150")

	// Retorno Automatico via Job
	if ExecSchedule()
		Aadd(aMsgSch, STR0017+cBanco+"  "+STR0018+cAgencia+"  "+STR0019+cConta+"  "+STR0020+cSubCta) // "Parametros de Bancos nao encontrados para o Banco:" # "Agencia:" # "Conta:" # "Sub-Conta:"
   Endif

	Return .F.
Endif

If lBxCnab // Baixar arquivo recebidos pelo CNAB aglutinando os valores
	If Empty(SEE->EE_LOTE)
		cLoteFin := StrZero( 1, TamSX3("EE_LOTE")[1] )
	Else
		cLoteFin := If (FindFunction("FinSomaLote"),FinSomaLote(SEE->EE_LOTE),Soma1(SEE->EE_LOTE))
	EndIf
EndIf
nTamDet := Iif( Empty (SEE->EE_NRBYTES), 400 , SEE->EE_NRBYTES )
nTamDet	+= 2  // ajusta tamanho do detalhe para ler o CR+LF
cTabela := Iif( Empty(SEE->EE_TABELA), "17" , SEE->EE_TABELA )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a tabela existe           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SX5" )
If !SX5->( dbSeek( cFilial + cTabela ) )
	Help(" ",1,"PAR150")

	// Retorno Automatico via Job
	if ExecSchedule()
		Aadd(aMsgSch, STR0021) // "Tabela 17 nao localizada no arquivo de tabelas SX5"
   Endif

   Return .F.
Endif

//Altero banco da baixa pelo portador ?
If lF200PORT
	lAltPort := ExecBlock("F200PORT",.F.,.F.)
Endif

While !SX5->(Eof()) .and. SX5->X5_TABELA == cTabela
	AADD(aTabela,{Alltrim(X5Descri()),AllTrim(SX5->X5_CHAVE)})
	SX5->(dbSkip( ))
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica o numero do Lote                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cLote
dbSelectArea("SX5")
dbSeek(cFilial+"09FIN")
cLote := Substr(X5Descri(),1,4)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se ‚ um EXECBLOCK e caso sendo, executa-o							³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If At(UPPER("EXEC"),X5Descri()) > 0
	cLote := &(X5Descri())
Endif

If ( MV_PAR12 == 1 )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Abre arquivo de configuracao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cArqConf:=mv_par05
	IF !FILE(cArqConf)
		Help(" ",1,"NOARQPAR")

		// Retorno Automatico via Job
		if ExecSchedule()
			Conout(STR0022+cArqConf+STR0023) // "Arquivo de configuracao " # " nao localizado."
			Aadd(aMsgSch, STR0022+cArqConf+STR0023) // "Arquivo de configuracao " # " nao localizado."
      Endif

		Return .F.
	Else
		nHdlConf:=FOPEN(cArqConf,0+64)
	EndIF

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Lˆ arquivo de configuracao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nLidos:=0
	FSEEK(nHdlConf,0,0)
	nTamArq:=FSEEK(nHdlConf,0,2)
	FSEEK(nHdlConf,0,0)

	While nLidos <= nTamArq

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o tipo de qual registro foi lido ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		xBuffer:=Space(85)
		FREAD(nHdlConf,@xBuffer,85)
		IF SubStr(xBuffer,1,1) == CHR(1)
			nLidos+=85
			Loop
		EndIF
		IF SubStr(xBuffer,1,1) == CHR(3)
			nLidos+=85
			Exit
		EndIF

		IF !lPosNum
			cPosNum:=Substr(xBuffer,17,10)
			nLenNum:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosNum:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosData
			cPosData:=Substr(xBuffer,17,10)
			nLenData:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosData:=.t.
			nLidos+=85
			Loop
		End
		IF !lPosDesp
			cPosDesp:=Substr(xBuffer,17,10)
			nLenDesp:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosDesp:=.t.
			nLidos+=85
			Loop
		End
		IF !lPosDesc
			cPosDesc:=Substr(xBuffer,17,10)
			nLenDesc:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosDesc:=.t.
			nLidos+=85
			Loop
		End
		IF !lPosAbat
			cPosAbat:=Substr(xBuffer,17,10)
			nLenAbat:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosAbat:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosPrin
			cPosPrin:=Substr(xBuffer,17,10)
			nLenPrin:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosPrin:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosJuro
			cPosJuro:=Substr(xBuffer,17,10)
			nLenJuro:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosJuro:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosMult
			cPosMult:=Substr(xBuffer,17,10)
			nLenMult:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosMult:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosOcor
			cPosOcor:=Substr(xBuffer,17,10)
			nLenOcor:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosOcor:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosTipo
			cPosTipo:=Substr(xBuffer,17,10)
			nLenTipo:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosTipo:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosOutrD
			cPosOutrD:=Substr(xBuffer,17,10)
			nLenOutrD:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosOutrD:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosCC
			cPosCC:=Substr(xBuffer,17,10)
			nLenCC:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosCC:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosDtCc
			cPosDtCc:=Substr(xBuffer,17,10)
			nLenDtCc:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosDtCc:=.t.
			nLidos+=85
			Loop
		EndIF
		IF !lPosNsNum
			cPosNsNum := Substr(xBuffer,17,10)
			nLenNsNum := 1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosNsNum := .t.
			nLidos += 85
			Loop
		EndIF
		IF !lPosMot									// codigo do motivo da ocorrencia
			cPosMot:=Substr(xBuffer,17,10)
			nLenMot:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosMot:=.t.
			nLidos+=85
			Loop
		EndIF
		If !lPosDtVc
			cPosDtVc:=Substr(xBuffer,17,10)
			nLenDtVc:=1+Int(Val(Substr(xBuffer,20,3)))-Int(Val(Substr(xBuffer,17,3)))
			lPosDtVc:=.t.
			nLidos+=85
			Loop
		Endif
	EndDo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ fecha arquivo de configuracao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Fclose(nHdlConf)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Abre arquivo enviado pelo banco ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cArqEnt:=mv_par04


IF !FILE(cArqEnt)
	Help(" ",1,"NOARQENT")

	// Retorno Automatico via Job
	if ExecSchedule()
		Aadd(aMsgSch, STR0024+cArqEnt+STR0023) // "Arquivo de entrada " # " nao localizado."
   Endif

	Return .F.
Else
	nHdlBco:=FOPEN(cArqEnt,0+64)
EndIF

If lRecicl
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Filtra o arquivo por E1_NUMBCO - caso exista reciclagem      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE1")
	cIndex	:= CriaTrab(nil,.f.)
	cChave	:= IndexKey()
	IndRegua("SE1",cIndex,"E1_FILIAL+E1_NUMBCO",,Fa200ChecF(),OemToAnsi(STR0009))  //"Selecionando Registros..."
	nIndex 	:= RetIndex("SE1")
	dbSelectArea("SE1")
	#IFNDEF TOP
		dbSetIndex(cIndex+OrdBagExt())
	#ENDIF
	dbSetOrder(nIndex+1)

	dbGoTop()
	IF BOF() .and. EOF()
		Help(" ",1,"RECNO")

		// Retorno Automatico via Job
		if ExecSchedule()
			Aadd(aMsgSch, STR0025)  // "Nao foram localizados registros na tabela SE1."
      Endif

		Return
	EndIf
EndIf

// Se nao tiver o arquivo de LOG no dicionario, verifica se o arquivo ja foi processado anteriormente
If ! lFI0InDic
	If !(Chk200File())
		Return .F.
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Chama a SumAbatRec antes do Controle de transa‡Æo para abrir o alias ³
//³ auxiliar __SE1																		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Cria Alias __SE1 caso não exista
If Select("__SE1") == 0
	SumAbatRec( "", "", "", 1, "")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera arquivo de Trabalho                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aCampos,{"FILMOV","C",IIf( lFWCodFil, FWGETTAMFILIAL, 2 ),0})
AADD(aCampos,{"DATAC","D",08,0})
AADD(aCampos,{"TOTAL","N",17,2})

// para evitar abortar por area ja existente
if Select("TRB") > 0
	TRB->( dbCloseArea())
Endif
cNomeArq:=CriaTrab(aCampos)
dbUseArea( .T., __cRDDNTTS, cNomeArq, "TRB", if(.F. .Or. .F., !.F., NIL), .F. )
IndRegua("TRB",cNomeArq,"FILMOV+Dtos(DATAC)",,,"")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Lˆ arquivo enviado pelo banco ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nLidos:=0
FSEEK(nHdlBco,0,0)
nTamArq:=FSEEK(nHdlBco,0,2)
FSEEK(nHdlBco,0,0)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desenha o cursor e o salva para poder moviment -lo ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcRegua( nTamArq/nTamDet , 24 )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega atributos do arquivo de configuracao                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aArqConf := Directory(MV_PAR05)

lFirst := .F.
nTotAger := 0
nCtDesp := 0
nCtOutCrd := 0

// Se existir o arquivo de LOG, grava as informacoes pertinentes, referente ao cabecalho do arquivo
// Para futuro reprocessamento se preciso for.
If lFI0InDic
	cTrailler := LeTrailler(nHdlBco) // Obtem o Trailler do Arquivo para gerar o CheckSum
	cIdArq	 := Str(MsCrc32(cTrailler),10) // Fa200ChkSum(cTrailler) // Gera o CheckSum
	lReproc	 := Fa200GrvLog(1, cArqEnt, cBanco, cAgencia, cConta, @nUltLinProc,,,,cIdArq)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PcoIniLan("000004")
PcoIniLan("000007")

Do While lReproc .And. nLidos <= nTamArq
	IncProc()
	nLastLn ++
	// Se tiver o arquivo de LOG, avanca ate a proxima linha, apos a ultima processada
	If lFI0InDic
		If nLastLn < nUltLinProc
			If lBxCnab
				xBuffer:=Space(nTamDet)
				FREAD(nHdlBco,@xBuffer,nTamDet)

				LoadVlBx( nHdlBco, xBuffer, nTamDet, @nValtot, @nTotDesp, @nTotOutD, @nTotValCc, @nTotAGer,,lBxCnab)
				nLidos+=nTamDet
			Else
				// Avanca uma linha do arquivo retorno
				nLidos+=nTamDet
				fReadLn(nHdlBco,,(nTamDet)) // Posiciona proxima linha
			Endif
			Loop
		Endif
		// Grava a ultima linha lida do arquivo
		FI0->(RecLock("FI0"))
		FI0->FI0_LASTLN	:= nLastLn
		MsUnlock()
	Endif

	nDespes :=0
	nDescont:=0
	nAbatim :=0
	nValRec :=0
	nJuros  :=0
	nMulta  :=0
	nValCc  :=0
	nCM     :=0
	nOutrDesp :=0
	lBaixou	:= .F.
	lBAIXCNAB := .F.
	lBxTotal := .F.

	// Template GEM
	nCm1     := 0
	nProRata := 0

	cFilAnt := cFilOrig					// sempre restaura a filial original

	If ( MV_PAR12 == 1 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tipo qual registro foi lido ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		xBuffer:=Space(nTamDet)
		FREAD(nHdlBco,@xBuffer,nTamDet)

		If lF200Cus
			lCustodia := ExecBlock("F200CUS",.f.,.f.,xBuffer) //podendo ser retornado .T. (Verdadeiro )ou .F. (Falso)	   
		EndIF	
		IF SubStr(xBuffer,1,1) $ "0#A"
			If !lCustodia
				nLidos+=nTamDet
				Loop
			EndIF
		EndIF
		IF SubStr(xBuffer,1,1) $ "1#F#J#7#2" .or. lCustodia
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Lˆ os valores do arquivo Retorno ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cNumTit :=Substr(xBuffer,Int(Val(Substr(cPosNum, 1,3))),nLenNum )
			cData   :=Substr(xBuffer,Int(Val(Substr(cPosData,1,3))),nLenData)
			cData   :=ChangDate(cData,SEE->EE_TIPODAT)
			dBaixa  :=Ctod(Substr(cData,1,2)+"/"+Substr(cData,3,2)+"/"+Substr(cData,5,2),"ddmmyy")
			cTipo   :=Substr(xBuffer,Int(Val(Substr(cPosTipo, 1,3))),nLenTipo )
			cTipo   := Iif(Empty(cTipo),"NF ",cTipo)		// Bradesco
			cNsNum  := " "
			cEspecie:= "   "
			dDataCred := Ctod("//")
			dDtVc := Ctod("//")
			IF !Empty(cPosDesp)
				nDespes:=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosDesp,1,3))),nLenDesp))/100,2)
			EndIF
			IF !Empty(cPosDesc)
				nDescont:=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosDesc,1,3))),nLenDesc))/100,2)
			EndIF
			IF !Empty(cPosAbat)
				nAbatim:=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosAbat,1,3))),nLenAbat))/100,2)
			EndIF
			IF !Empty(cPosPrin)
				nValRec :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosPrin,1,3))),nLenPrin))/100,2)
			EndIF
			IF !Empty(cPosJuro)
				nJuros  :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosJuro,1,3))),nLenJuro))/100,2)
			EndIF
			IF !Empty(cPosMult)
				nMulta  :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosMult,1,3))),nLenMult))/100,2)
			EndIF
			IF !Empty(cPosOutrd)
				nOutrDesp  :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosOutrd,1,3))),nLenOutrd))/100,2)
			EndIF
			IF !Empty(cPosCc)
				nValCc :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosCc,1,3))),nLenCc))/100,2)
			EndIF
			IF !Empty(cPosDtCc)
				cData  :=Substr(xBuffer,Int(Val(Substr(cPosDtCc,1,3))),nLenDtCc)
				cData    := ChangDate(cData,SEE->EE_TIPODAT)
				dDataCred:=Ctod(Substr(cData,1,2)+"/"+Substr(cData,3,2)+"/"+Substr(cData,5,2),"ddmmyy")
				dDataUser:=dDataCred
			End
			IF !Empty(cPosNsNum)
				cNsNum  :=Substr(xBuffer,Int(Val(Substr(cPosNsNum,1,3))),nLenNsNum)
			End
			If nLenOcor == 2
				cOcorr  :=Substr(xBuffer,Int(Val(Substr(cPosOcor,1,3))),nLenOcor) + " "
			Else
				cOcorr  :=Substr(xBuffer,Int(Val(Substr(cPosOcor,1,3))),nLenOcor)
			EndIf
			If !Empty(cPosMot)
				cMotBan:=Substr(xBuffer,Int(Val(Substr(cPosMot,1,3))),nLenMot)
			EndIf
			IF !Empty(cPosDtVc)
				cDtVc :=Substr(xBuffer,Int(Val(Substr(cPosDtVc,1,3))),nLenDtVc)
				cDtVc := ChangDate(cDtVc,SEE->EE_TIPODAT)
				dDtVc :=Ctod(Substr(cDtVc,1,2)+"/"+Substr(cDtVc,3,2)+"/"+Substr(cDtVc,5,2),"ddmmyy")
			EndIf


			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ o array aValores ir  permitir ³
			//³ que qualquer exce‡„o ou neces-³
			//³ sidade seja tratado no ponto  ³
			//³ de entrada em PARAMIXB        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			// Estrutura de aValores
			//	Numero do T¡tulo	- 01
			//	data da Baixa		- 02
			// Tipo do T¡tulo		- 03
			// Nosso Numero			- 04
			// Valor da Despesa		- 05
			// Valor do Desconto	- 06
			// Valor do Abatiment	- 07
			// Valor Recebido    	- 08
			// Juros				- 09
			// Multa				- 10
			// Outras Despesas		- 11
			// Valor do Credito		- 12
			// Data Credito			- 13
			// Ocorrencia			- 14
			// Motivo da Baixa 		- 15
			// Linha Inteira		- 16
			// Data de Vencto	   	- 17

			aValores := ( { cNumTit, dBaixa, cTipo, cNsNum, nDespes, nDescont, nAbatim, nValRec, nJuros, nMulta, nOutrDesp, nValCc, dDataCred, cOcorr, cMotBan, xBuffer,dDtVc,{} })

			If ExistBlock("200GEMBX")
				ExecBlock("200GEMBX", .F., .F., {aValores})
			EndIf

			// Template GEM
			If lF200Var
				ExecBlock("F200VAR",.F.,.F.,{aValores})
			ElseIf ExistTemplate("GEMBaixa")
				ExecTemplate("GEMBaixa",.F.,.F.,)
			Endif

			If Empty(cNumTit)
				nLidos += nTamDet
				Loop
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica especie do titulo    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nPos := Ascan(aTabela, {|aVal|aVal[1] == Substr(cTipo,1,2)})
			If nPos != 0
				cEspecie := aTabela[nPos][2]
			Else
				cEspecie	:= "  "
			EndIf
			If cEspecie $ MVABATIM			// Nao lˆ titulo de abatimento
				nLidos += nTamDet
				Loop
			Endif
		Else
			nLidos += nTamDet
			Loop
		Endif
	Else
		If Valtype(MV_PAR05)=="C"
			cArqCfg := MV_PAR05
		Endif 
		aLeitura := ReadCnab2(nHdlBco,cArqCfg,nTamDet,aArqConf,@nLinRead)
		cNumTit  := SubStr(aLeitura[1],1,nTamTit)
		cData    := aLeitura[04]
		cData    := ChangDate(cData,SEE->EE_TIPODAT)
		dBaixa   := Ctod(Substr(cData,1,2)+"/"+Substr(cData,3,2)+"/"+Substr(cData,5,2),"ddmmyy")
		cTipo    := aLeitura[02]
		cTipo    := Iif(Empty(cTipo),"NF ",cTipo)		// Bradesco
		cNsNum   := aLeitura[11]
		nDespes  := aLeitura[06]
		nDescont := aLeitura[07]
		nAbatim  := aLeitura[08]
		nValRec  := aLeitura[05]
		nJuros   := aLeitura[09]
		nMulta   := aLeitura[10]
		cOcorr   := PadR(aLeitura[03],3)
		nValOutrD:= aLeitura[12]
		nValCC   := aLeitura[13]
		cData    := aLeitura[14]
		cData    := ChangDate(cData,SEE->EE_TIPODAT)
		dDataCred:= Ctod(Substr(cData,1,2)+"/"+Substr(cData,3,2)+"/"+Substr(cData,5,2),"ddmmyy")
		dDataUser:= dDataCred
		cMotBan  := aLeitura[15]
		xBuffer  := aLeitura[17] // Segmentos concatenados
		aBuffer  := aLeitura[19] // Segmentos separados
		dDtVc		:= CTOD("//")

		aValores := ( { cNumTit, dBaixa, cTipo, cNsNum, nDespes, nDescont, nAbatim, nValRec, nJuros, nMulta, nVaLOutrD, nValCc, dDataCred, cOcorr, cMotBan, xBuffer, dDtVc, aBuffer })

		If ExistBlock("200GEMBX")
  			ExecBlock("200GEMBX", .F., .F., {aValores})
		EndIf

		// Template GEM
		If lF200Var
			ExecBlock("F200VAR",.F.,.F.,{aValores})
		ElseIf ExistTemplate("GEMBaixa")
			ExecTemplate("GEMBaixa",.F.,.F.,)
		Endif

		If Empty(cNumTit)
			nLidos += nTamDet
			Loop
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica especie do titulo    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPos := Ascan(aTabela, {|aVal|aVal[1] == Alltrim(Substr(cTipo,1,3))})
		If nPos != 0
			cEspecie := aTabela[nPos][2]
		Else
			cEspecie	:= "  "
		EndIf
		If cEspecie $ MVABATIM			// Nao lˆ titulo de abatimento
			Loop
		EndIf
	EndIf
	If lF200Avl .And. !ExecBlock("F200AVL",.F.,.F.,{aValores} )
		Loop
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica codigo da ocorrencia ³
	//³ ¡ndice: Filial+banco+cod banco³
	//³ +tipo                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SEB")
	dbSetOrder(1)
	If !(dbSeek(xFilial("SEB")+mv_par06+cOcorr+"R"))
		Help(" ",1,"FA200OCORR",,mv_par06+"-"+cOcorr+"R",4,1)

		// Retorno Automatico via Job
		if ExecSchedule()
			Aadd(aMsgSch, STR0026+mv_par06+" "+cOcorr+STR0027) // "Ocorrencia " # " nao localizada na tabela SEB."
		Endif
	Endif
	lHelp 		:= .F.
	lNaoExiste  := .F.				// Verifica se registro de reciclagem existe no SE1
	If lT200pos
		ExecTemplate("FA200POS",.F.,.F.,{aValores})
	Endif
	If l200pos
		Execblock("FA200POS",.F.,.F.,{aValores})
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe o titulo no SE1. Caso este titulo nao seja ³
	//³ localizado, passa-se para a proxima linha do arquivo retorno. ³
	//³ O texto do help sera' mostrado apenas uma vez, tendo em vista ³
	//³ a possibilidade de existirem muitos titulos de outras filiais.³
	//³ OBS: Sera verificado inicialmente se nao existe outra chave   ³
	//³ igual para tipos de titulo diferentes.                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE1")
	IF ExistBlock("FA200SEB")
		lProcessa := ExecBlock("FA200SEB",.F.,.F.)
		lProcessa := IIF(ValType(lProcessa) != "L",.T., lProcessa)
	ENDIF

	IF lProcessa
		If SEB->EB_OCORR != "39"		// cod 39 -> indica reciclagem
			SE1->(dbSetOrder(1))
			lAchouTit := .F.

			If lFa200Fil
				l200Fil := .T.
				Execblock("FA200FIL",.F.,.F.,aValores)
			Else

				If (mv_par13 == 2 .And. lNewIndice) .And. !Empty( cFilFwSE1 )
					//Busca por IdCnab (sem filial)
					SE1->(dbSetOrder(19)) // IdCnab
					If SE1->(MsSeek(Substr(cNumTit,1,10)))
						cFilAnt	:= SE1->E1_FILIAL
						If lCtbExcl
							mv_par11 := 2  //Desligo contabilizacao on-line
						Endif
					Endif
				Else
					//Busca por IdCnab
					SE1->(dbSetOrder(16)) // Filial+IdCnab
					SE1->(MsSeek(xFilial("SE1")+	Substr(cNumTit,1,10)))
				Endif

				//Se nao achou, utiliza metodo antigo (titulo)
				If SE1->(!Found())
					SE1->(dbSetOrder(1))
					// Busca por chave antiga como retornado pelo banco
					If dbSeek(xFilial("SE1")+Substr(cNumTit,1,nTamTit)+cEspecie)
						lAchouTit := .T.
						nPos   := 1
					Endif

					While !lAchouTit
						// Busca por chave antiga
						dbSetOrder(1)
						If !dbSeek(xFilial("SE1")+Pad(cNumTit,nTamTit)+cEspecie)
							nPos := Ascan(aTabela, {|aVal|aVal[1] == Substr(cTipo,1,2)},nPos+1)
							If nPos != 0
								cEspecie := aTabela[nPos][2]
							Else
								Exit
							Endif
						Else
							lAchouTit := .T.
						Endif
					Enddo

					If !lAchouTit
						// Busca por chave antiga adaptada para o tamanho de 9 posicoes para numero de NF
			  			// Isto ocorre quando titulo foi enviado com 6 posicoes para numero de NF e retornou com o
			   			// campo ja atualizado para 9 posicoes
						cNumTit := SubStr(cNumTit,1,nTamPre)+Padr(Substr(cNumtit,4,6),nTamNum)+SubStr(cNumTit,10,nTamPar)
						If !Empty(cNumTit) .And. dbSeek(xFilial("SE1")+Substr(cNumTit,1,nTamTit))
							cEspecie := SE1->E1_TIPO
							lAchouTit := .T.
							nPos   := 1
		    			Endif


						While !lAchouTit
							// Busca por chave antiga
							dbSetOrder(1)
							If !dbSeek(xFilial("SE1")+Pad(cNumTit,nTamTit)+cEspecie)
								nPos := Ascan(aTabela, {|aVal|aVal[1] == Substr(cTipo,1,2)},nPos+1)
								If nPos != 0
									cEspecie := aTabela[nPos][2]
								Else
									Exit
								Endif
							Else
								lAchouTit := .T.
							Endif
						Enddo
					Endif
				Else
					nPos := 1
				Endif

				If nPos == 0
					lHelp := .T.
				EndIF
				If !lUmHelp .And. lHelp
					Help(" ",1,"NOESPECIE",,cNumTit+" "+cEspecie,5,1)
					lUmHelp := .T.

					// Retorno Automatico via Job
					if ExecSchedule()
						Aadd(aMsgSch, STR0028+cEspecie+STR0029+cNumTit) // "Especie " # " nao localizada para o titulo "
					Endif
				Endif
			EndIf
		Else
			If lRecicl
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Mesmo que nao exista o registro no SE1, ele ser  criado no 	³
				//³ arquivo de reclicagem                                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSetOrder(nIndex+1)
				If !dbSeek(xFilial("SE1")+cNsNum)
					If !lFirst
						Fa200Recic()				// Abre arquivo de reciclagem
						lFirst := .T.
					EndIf
					Fa200GrRec(cNsNum)
					lNaoExiste := .T.				// Registro nao existente no SE1 -> portanto nao deve gravar nada no SE1!!
				Endif
			Else			//  uma rejeicao porem o registro nao foi cadastrado no SE1
				Help(" ",1,"NOESPECIE",,cNumTit+" "+cEspecie,5,1)
				lNaoExiste := .T.

				// Retorno Automatico via Job
				if ExecSchedule()
					Aadd(aMsgSch, STR0028+cEspecie+STR0029+cNumTit) // "Especie " # " nao localizada para o titulo "
				Endif
			EndIf
		EndIF
	ENDIF

	BEGIN TRANSACTION

	// Retorno Automatico via Job
	// controla o status para emissao do relatorio de processamento
	if ExecSchedule()
		cStProc := ""
		if lNaoExiste
			cStProc := STR0030 // "Titulo Inexistente"
	     	Aadd(aFa205R,{cNumTit,"", "", dBaixa,	0, nValRec, cStProc })
		Elseif lHelp
			if SE1->E1_SALDO = 0
				cStProc := STR0031 // "Baixado anteriormente"
			Else
				cStProc := STR0032 // "Titulo com Erro"
			Endif
		Endif
	Endif

	If !lHelp .And. !lNaoExiste
		// Retorno Automatico via Job
		// controla o status para emissao do relatorio de processamento do FINA205
		if ExecSchedule() .and. SE1->E1_SALDO = 0
			cStProc := STR0031 // "Baixado anteriormente"
		Endif

		lSai := .f.
		IF SEB->EB_OCORR $ "03ü15ü16ü17ü40ü41ü42ü52ü53"		//Registro rejeitado
			// Retorno Automatico via Job
			// controla o status para emissao do relatorio de processamento do FINA205
			if ExecSchedule()
				cStProc := STR0033 // "Entrada confirmada"
			Endif

			For nCont := 1 To Len(cMotBan) Step 2
				cMotivo := Substr(cMotBan,nCont,2)
				If fa200Rejei(cMotivo,cOcorr)
					lSai := .T.
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Trata tarifas da retirada do titulo do banco	³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			      If lBxCnab
			      	nTotDesp += nDespes
					nTotOutD += nOutrDesp
			      Else
						IF nDespes > 0 .or. nOutrDesp > 0		//Tarifas diversas
							Fa200Tarifa()
						Endif
					Endif
					Exit
				EndIf
			Next nCont
			If lSai .And. ( MV_PAR12 == 1 )
				nLidos += nTamDet
			Endif
		Endif

		If !lSai
			IF SEB->EB_OCORR $ "06ü07ü08ü36ü37ü38ü39"		//Baixa do Titulo
				cPadrao:=fA070Pad()
				lPadrao:=VerPadrao(cPadrao)
				lContabiliza:= Iif(mv_par11==1,.T.,.F.)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Monta Contabilizacao.         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !lCabec .and. lPadrao .and. lContabiliza
					nHdlPrv := HeadProva( cLote,;
					                      "FINA200",;
					                      substr( cUsuario, 7, 6 ),;
					                      @cArquivo )
					nHdlCNAB := nHdlPrv
					lCabec := .T.
				End
				nValEstrang := SE1->E1_SALDO
				lDesconto   := Iif(mv_par10==1,.T.,.F.)

				nTotAbImp	:= 0
				nTotAbat	:= SumAbatRec(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA, SE1->E1_MOEDA,"S",dBaixa,@nTotAbImp)
				ABATIMENTO 	:= nTotAbat
				
				If lAltPort
					cBanco      := Iif(Empty(SE1->E1_PORTADO) .Or. Alltrim(SE1->E1_PORTADO) == ".",MV_PAR06,SE1->E1_PORTADO)
					cAgencia    := Iif(Empty(SE1->E1_AGEDEP) .Or. Alltrim(SE1->E1_AGEDEP) == ".",MV_PAR07,SE1->E1_AGEDEP)
					cConta      := Iif(Empty(SE1->E1_CONTA) .Or. Alltrim(SE1->E1_CONTA) == ".",MV_PAR08,SE1->E1_CONTA)
				Endif

				cHist070    := OemToAnsi(STR0010)  //"Valor recebido s/ Titulo"

				//Ponto de entrada para tratamento de abatimento e desconto que voltam na mesma posicao
				//Bradesco
				If lF200ABAT
					ExecBlock("F200ABAT",.F.,.F.)
				Endif

				SA6->(DbSetOrder(1))
				SA6->(MSSeek(xFilial("SA6")+cBanco+cAgencia+cConta))

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se a despesa est     ³
				//³ descontada do valor principal ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SEE->EE_DESPCRD == "S"
					nValRec := nValRec+nDespes + nOutrDesp - nValCC
				EndIf
				// Calcula a data de credito, se esta estiver vazia
				If dDataCred == Nil .Or. Empty(dDataCred)
					dDataCred := dBaixa // Assume a data da baixa
					For nX := 1 To SA6->A6_Retenca // Para todos os dias de retencao
															 // valida a data

						// O calculo eh feito desta forma, pois os dias de retencao
						// sao dias uteis, e se fosse apenas somado dDataCred+A6_Retenca
						// nao sera verdadeiro quando a data for em uma quinta-feira, por
						// exemplo e, tiver 2 dias de retencao.
						dDataCred := DataValida(dDataCred+1,.T.)
					Next
				EndIf
				dDataUser := dDataCred
				If dDataCred > dBaixa
					cModSpb := "3"   // COMPE
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Possibilita alterar algumas das  ³
				//³ vari veis utilizadas pelo CNAB.  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				If lFina200
					aValores[8] := nValRec
					ExecBlock("FINA200",.F.,.F., { aValores, nTotAbat, nTotAbImp } )
				Endif

				// Serao usadas na Fa070Grv para gravar a baixa do titulo, considerando os acrescimos e decrescimos
				nAcresc     := Round(NoRound(xMoeda(SE1->E1_SDACRES,SE1->E1_MOEDA,1,dBaixa,3),3),2)
				nDecresc    := Round(NoRound(xMoeda(SE1->E1_SDDECRE,SE1->E1_MOEDA,1,dBaixa,3),3),2)

				nDescont 	:= nDescont - nDecresc
				nJuros		:= nJuros - nAcresc

				If cPaisLoc == "BRA" 
					If lMVCNABImp
						aTit := {} 
						lMsErroAuto := .F.
						nOldValRec  := SE1->E1_VALOR 
						aAreaCnab := GetArea()
						dbSelectArea("SA1")
						SA1->( dbSetOrder(1) )
						dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA)
						RestArea(aAreaCnab)
                        nValLiq := (SE1->E1_VALOR) - (SE1->( E1_PIS + E1_COFINS + E1_CSLL + E1_IRRF ) )  // Valor liquido do título
                        nValImp := SE1->( E1_PIS + E1_COFINS + E1_CSLL + E1_IRRF + E1_ISS + E1_INSS )
                        
                       	nValRec := nValRec - nJuros + nDescont - nMulta - nAcresc + nDecresc
	                        	
						// Recomposição dos valores dos IMPOSTOS para baixa.
						nValRec		:= F200VALREC(dBaixa,nValRec,,nTotAbImp)
						nVlrCNAB	:= SE1->E1_VALOR

                        If lPccBxCr
	                        If dBaixa < dRefPCC
	                        	nValRec2 	:= nValRec
	                        	F070TotMes(dBaixa,.T.)
	                        	
		                        If aDadosRet[2] + aDadosRet[3] + aDadosRet[4] + nValImp + nValRec2 == SE1->E1_SALDO
		                         	nTotImp 	:= aDadosRet[2] + aDadosRet[3] + aDadosRet[4] + nValImp
		                         	nValRec := nValRec2
		                        Else
		                        	nValRec := nValRec2
		                        EndIf
	                        
			                    If nValImp + nValRec != SE1->E1_VALOR // se baixa parcial                  
									If SE1->E1_SALDO - nValRec <> 0
										If nValRec + nTotImp != SE1->E1_SALDO
											// Regra de três para achar o valor da soma dos impostos na baixa parcial
											nValImp = ( nValRec * (SE1->( E1_PIS + E1_COFINS + E1_CSLL + E1_IRRF ) ) ) / nValLiq
										Else
											lTtMes := .T.
										EndIf
									Endif
								Endif
								
								If !lTtMes
							   		nVlrcnab := SE1->( E1_VALOR -  ( E1_PIS + E1_COFINS + E1_CSLL + E1_IRRF + E1_ISS + E1_INSS ) )
							   	Else
							   		nVlrcnab := SE1->E1_VALOR - nTotImp
							   	EndIf
							EndIf
						EndIf
										
						Do Case
							Case nValRec == 0
								lRet := .F.							
							Case nValRec == nVlrcnab
								cTipoBx := "Baixa Total por CNAB"	
							Case nValRec - nValImp == nVlrcnab 		// Caso o cliente pague o valor bruto do título ao invés do líquido
								cTipoBx := "Baixa Total por CNAB"														
								nValRec -= Iif(dBaixa < dRefPCC, nValImp, 0)
							Case nValRec + nValImp < nVlrcnab					
						   		If lMVGlosa 
							   		cTipoBx := "Baixa com Glosa por CNAB"
							   	Else
							   		cTipoBx := "Baixa parcial por CNAB"							   									   	
							   	Endif
						 	Case nValRec + nValImp > nVlrcnab 
						   		cTipoBx := "Baixa Total a mais por CNAB"				 	
						EndCase 
						
						If dBaixa < dRefPCC
							If !lTtMes
								If SE1->E1_SALDO - nValRec <> 0
									nValRec := Round(NoRound(nValRec+nValImp,2),2)
								EndIf
							ElseIf SE1->E1_SALDO - nValRec <> 0
								nValRec := Round(NoRound(nValRec+nTotImp,2),2)
							EndIf
						EndIf

						If lRet
							AADD( aTit, { "E1_PREFIXO" 	, SE1->E1_PREFIXO	, Nil } )	// 01
							AADD( aTit, { "E1_NUM"     	, SE1->E1_NUM		, Nil } )	// 02
							AADD( aTit, { "E1_PARCELA" 	, SE1->E1_PARCELA	, Nil } )	// 03
							AADD( aTit, { "E1_TIPO"    	, SE1->E1_TIPO		, Nil } )	// 04
							AADD( aTit, { "AUTMOTBX"  	, "NOR"				, Nil } )	// 05
							AADD( aTit, { "AUTDTBAIXA"	, dBaixa			, Nil } )	// 06
							AADD( aTit, { "AUTDTCREDITO", dDataCred			, Nil } )	// 07
							AADD( aTit, { "AUTHIST"   	, cTipoBx		   	, Nil } )	// 08
							AADD( aTit, { "AUTVALREC"  	, nValRec			, Nil } )	// 09	
							AADD( aTit, { "AUTJUROS"  	, nJuros			, Nil } )	// 10
							AADD( aTit, { "AUTDESCONT" 	, nDescont			, Nil } )	// 11
							AADD( aTit, { "AUTMULTA" 	, nMulta			, Nil } )	// 12
							AADD( aTit, { "AUTACRESC" 	, nAcresc			, Nil } )	// 13
							AADD( aTit, { "AUTDECRESC" 	, nDecresc			, Nil } )	// 14							
		
							MSExecAuto({|x, y| FINA070(x, y)}, aTit, 3)
					
							If  lMsErroAuto
								MOSTRAERRO()     
								DisarmTransaction()
								lBaixou := .F.
							Else
								lBaixou := lBAIXCNAB
							EndIf
							
							// recarrega os mv_parx da rotina fina200, pois foi alterado no fina070
							pergunte(cPerg,.F.)								
							
							//Reposicionar SA6 em caso de desposicionamento pelo FINA070 - MSEXECAUTO
							SA6->(DbSetOrder(1))
							SA6->(MSSeek(xFilial("SA6")+cBanco+cAgencia+cConta))
							
						Endif
					Else
						lBaixou:=fA070Grv(lPadrao,lDesconto,lContabiliza,cNsNum,.T.,dDataCred,lJurComis,cArqEnt,SEB->EB_OCORR)
					Endif
                Else
					lBaixou:=fA070Grv(lPadrao,lDesconto,lContabiliza,cNsNum,.T.,dDataCred,lJurComis,cArqEnt,SEB->EB_OCORR)                
                Endif

				// evitando problemas de processamento
				if ExecSchedule()
					Sleep(500)
				Endif

				If lBaixou

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica se trata Rateio Multi-Natureza na Baixa CNAB  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lMulNatBx .And. MV_MULNATR .And. SE1->E1_MULTNAT == "1"
						
						//Variaveis para uso na funcao MultNatC
						nTotLtEZ  := 0
						lOK		  := .F. 
						aColsSEV  := {}
					    aGrvLctPco := {	{"000004","09","FINA200"}, ;
							   			{"000004","10","FINA200"}  }
						
						MultNatB("SE1",.F.,"1",@lOk,@aColsSEV,.T.,.T.)
						If lOk
							MultNatC( "SE1" /*cAlias*/,;
										@nHdlPrv /*@nHdlPrv*/,;
										@nTotal /*@nTotal*/,;
										@cArquivo /*@cArquivo*/,;
										lContabiliza /*lContabiliza*/,;
										.T. /*lBxLote*/,;
										"1" /*cReplica*/,;
										nTotLtEZ /*nTotLtEZ*/,;
										lOk /*lOk*/,;
										aColsSEV /*aCols*/,;
										.T. /*lBaixou*/,;
										aGrvLctPco /*aGrvLctPco*/,;
										lUsaFlag /*lUsaFlag*/,;
										@aFlagCTB /*@aFlagCTB*/	)
						Endif 
					Endif

					// Retorno Automatico via Job
					// controla o status para emissao do relatorio de processamento do FINA205
					if ExecSchedule()
						cStProc := "Baixado Ok"
					Endif

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cFilAnt := SE1->E1_FILIAL
					If SE1->E1_SITUACA == "0"	// Carteira
						PcoDetLan("000004","01","FINA070")
					ElseIf SE1->E1_SITUACA == "1"	// Simples
						PcoDetLan("000004","02","FINA070")
					ElseIf SE1->E1_SITUACA == "2"	// Descontada
						PcoDetLan("000004","03","FINA070")
					ElseIf SE1->E1_SITUACA == "4"	// Vinculada
						PcoDetLan("000004","04","FINA070")
					ElseIf SE1->E1_SITUACA == "5"	// c/Advogado
						PcoDetLan("000004","05","FINA070")
					ElseIf SE1->E1_SITUACA == "6"	// Judicial
						PcoDetLan("000004","06","FINA070")
					ElseIf SE1->E1_SITUACA == "7"	// Caucionada Descontada
						PcoDetLan("000004","08","FINA070")
					EndIf
					cFilAnt := cFilOrig 

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Integracao Protheus X RM Classis Net (RM Sistemas)³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					if GetNewPar("MV_RMCLASS", .F.)
						//Replica a baixa do titulo para o RM Classis Net (RM Sistemas)
						ClsProcBx(SE1->(Recno()),'1',"FIN200")
					endif

					nTotAGer+=nValRec

					//Para baixa totalizadora somente gravo o movimento de titulos que
					//nao estejam em carteira descontada (2 ou 7) pois este movimento bancario
					//já foi gerado no momento da transferencia ou montagem do bordero
					IF !(SE1->E1_SITUACA $ "2/7")
						dbSelectArea("TRB")
						If !(dbSeek(xFilial("SE5")+Dtos(dDataCred)))
							Reclock("TRB",.T.)
							Replace FILMOV With xFilial("SE5")
							Replace DATAC With dDataCred
						Else
							Reclock("TRB",.F.)
						Endif
						Replace TOTAL WITH TOTAL + nValRec
						MsUnlock()
					Endif
				Else
					LoadVlBx( nHdlBco, xBuffer, nTamDet, @nValtot, nTotDesp, @nTotOutD, @nTotValCc, @nTotAGer,aLeitura, lBxCnab)
					cStProc := "Problemas na Baixa"
				Endif

				If lBxCnab
					nTotValCc += nValCC
				Else
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava Outros Cr‚ditos, se houver valor                 ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If nValcc > 0
						fa200Outros()
					Endif
				Endif

				If lCabec .and. lPadrao .and. lContabiliza .and. lBaixou
					nTotal += DetProva( nHdlPrv,;
					                    cPadrao,;
					                    "FINA200" /*cPrograma*/,;
					                    cLote,;
					                    /*nLinha*/,;
					                    /*lExecuta*/,;
					                    /*cCriterio*/,;
					                    /*lRateio*/,;
					                    /*cChaveBusca*/,;
					                    /*aCT5*/,;
					                    /*lPosiciona*/,;
					                    @aFlagCTB,;
					                    /*aTabRecOri*/,;
					                    /*aDadosProva*/ )
				Endif


				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Credito em C.Corrente -> gera ³
				//³ arquivo de reciclagem         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SEB->EB_OCORR $ "39"
					If lRecicl
						If !lFirst
							Fa200Recic()
							lFirst := .T.
						EndIf
						Fa200GrRec(cNsNum)
						dbSelectArea("SE1")
						RecLock("SE1")
						Replace E1_OCORREN With "02"
						MsUnlock()
					EndIf
				EndIf
			Endif

		    If lBxCnab
		      	nTotDesp += nDespes
				nTotOutD += nOutrDesp
			Else
				IF nDespes > 0 .or. nOutrDesp > 0		//Tarifas diversas
					Fa200Tarifa()
				Endif
			Endif

			If SEB->EB_OCORR == "02"			// Confirma‡„o
				RecLock("SE1")
				SE1->E1_OCORREN := "01"
				If Empty(SE1->E1_NUMBCO)
					SE1->E1_NUMBCO  := cNsNUM
				EndIf
				MsUnLock()
				If lFa200_02
					ExecBlock("FA200_02",.f.,.f.)
				Endif
			Endif

			//Grava alteracao da data de vencto quando for o caso
			If SEB->EB_OCORR $ "14" .and. !Empty(dDtVc)  //Alteracao de Vencto
				RecLock("SE1")
				Replace SE1->E1_VENCTO With dDtVc
				Replace SE1->E1_VENCREA With DataValida(dDtVc,.T.)
				MsUnlock()
			Endif

       		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Trecho incluido para integração e-commerce          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If  lBaixou .And. FindFunction("LJ861EC02") .And. FindFunction("LJ861EC01")
			    If  LJ861EC01(SE1->E1_NUM, SE1->E1_PREFIXO, .T./*PrecisaTerPedido*/)
				    LJ861EC02(SE1->E1_NUM, SE1->E1_PREFIXO)
			    EndIf		
			EndIf
					
			// Retorno Automatico via Job
			// armazena os dados do titulo para emissao de relatorio de processamento
			if ExecSchedule()
				If lBaixou
		      		Aadd(aFa205R,{SE1->E1_NUM,		SE1->E1_CLIENTE, 	SE1->E1_LOJA, dDataCred,	SE1->E1_VALOR, nValRec, "Baixado ok" })
		      	Else
			     	Aadd(aFa205R,{SE1->E1_NUM,		SE1->E1_CLIENTE, 	SE1->E1_LOJA, dDataCred,	SE1->E1_VALOR, nValRec, cStProc })
				Endif
	     	Endif

			//Instrucao de alteracao de carteira de cobrança
			IF SEB->EB_OCORR $ "90#91#93#94#95#96#9F#9G#9H"
				F200TRFCOB(SEB->EB_OCORR,cBanco,cAgencia,cConta)
			Endif

		EndIf
	
	Endif 
	// evitando problemas de processamento
	If ExecSchedule()
		Sleep(500)
	Endif

	END TRANSACTION

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Integracao protheus X tin	³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ  
	//Chama a integração apenas se a baixa foi realizada
	If !lSai .And. lBaixou
		If FindFunction("GETROTINTEG") 
		    ALTERA:=.T.
			FwIntegDef( 'FINA070' )
			ALTERA:= lAltera
		Endif
	Endif

	If !lSai

		// Avanca uma linha do arquivo retorno
		If MV_PAR12 == 2
			nLidos  += nLinRead*nTamDet
			nLastLn += nLinRead - 1//Soma a quantidade de linhas que foi multiplicada pelo nTamDet e subtrai a linha atual
		Else
			nLidos+= nTamDet
		EndIf

		nLinRead := 0
		
		// Se baixou o titulo e existir o arquivo de LOG, grava as informacoes pertinentes
		// Para futuro reprocessamento se preciso for.
		If lBaixou .And. lFI0InDic
			Fa200GrvLog(2, cArqEnt, cBanco, cAgencia, cConta, nLastLn,If(Empty(SE1->E1_IDCNAB), SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO), SE1->E1_IDCNAB), SEB->EB_REFBAN, SEB->EB_OCORR, cIdArq )
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Possibilita alterar algumas das  ³
		//³ vari veis utilizadas pelo CNAB.  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lF200Tit
			ExecBlock("F200TIT",.F.,.F.)
		Endif

	EndIf

Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a gravacao dos lancamentos do SIGAPCO ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PcoFinLan("000004")


If lCabec .and. lPadrao .and. lContabiliza
	dbSelectArea("SE1")
	dbGoBottom()
	dbSkip()
	VALOR := nTotAger
	ABATIMENTO := 0
	//nTotal+=DetProva(nHdlPrv,cPadrao,"FINA200",cLote)
	nTotal += DetProva( nHdlPrv,;
	                    cPadrao,;
	                    "FINA200" /*cPrograma*/,;
	                    cLote,;
	                    /*nLinha*/,;
	                    /*lExecuta*/,;
	                    /*cCriterio*/,;
	                    /*lRateio*/,;
	                    /*cChaveBusca*/,;
	                    /*aCT5*/,;
	                    /*lPosiciona*/,;
	                    @aFlagCTB,;
	                    /*aTabRecOri*/,;
	                    /*aDadosProva*/ )


Endif

If l200Fil .and. lfa200F1
	Execblock("FA200F1",.f.,.f.)
Endif

If lTF200Fim
	ExecTemplate("F200FIM",.f.,.f.)
Endif
If lF200Fim
	Execblock("F200FIM",.f.,.f.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava no SEE o n£mero do £ltimo lote recebido e gera ³
//³ movimentacao bancaria											³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(cLoteFin) .and. lBxCnab
	RecLock("SEE",.F.)
	SEE->EE_LOTE := cLoteFin
	MsUnLock()
	If TRB->(Reccount()) > 0
		dbSelectArea("TRB")
		dbGoTop()
		While !Eof()
			cFilAnt := TRB->FILMOV
			Reclock( "SE5" , .T. )
			SE5->E5_FILIAL := xFilial("SE5")
			SE5->E5_DATA   := TRB->DATAC
		 	SE5->E5_VALOR  := (TRB->TOTAL + nValtot)
			SE5->E5_RECPAG := "R"
			SE5->E5_DTDIGIT:= TRB->DATAC
			SE5->E5_BANCO  := cBanco
			SE5->E5_AGENCIA:= cAgencia
			SE5->E5_CONTA  := cConta
			SE5->E5_DTDISPO:= TRB->DATAC
			SE5->E5_LOTE   := cLoteFin
			SE5->E5_HISTOR := STR0011 + " " + cLoteFin // "Baixa por Retorno CNAB / Lote :"
			SE5->E5_LA     := "S" //Esse movimento não deve ser contabilizado
			If SpbInUse()
				SE5->E5_MODSPB := "1"
			Endif
			MsUnlock()

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gravacao complementar dos dados da baixa aglutinada  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("F200BXAG")
				Execblock("F200BXAG",.f.,.f.)
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza saldo bancario.      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			AtuSalBco(cBanco,cAgencia,cConta,SE5->E5_DATA,SE5->E5_VALOR,"+")
			dbSelectArea("TRB")
			dbSkip()
		Enddo
	Endif
	If nTotDesp > 0 .Or. nTotOutD > 0
		Fa200Tarifa(nTotDesp, nTotOutD)
	Endif
	If nTotValCC > 0
		fa200Outros(nTotValCC)
	Endif
EndIf

cFilAnt := cFilOrig					// sempre restaura a filial original

//Contabilizo totalizador das despesas bancárias e outros creditos
If !lBxCnab

	VALOR2 := nCtDesp
	VALOR3 := nCtOutCrd

	dbSelectArea("SE5")
	nRegSE5 := SE5->(Recno())
	dbGoBottom()
	dbSkip()

	lPadrao:=VerPadrao("562")		// Movimentacao Banc ria a Pagar
	lContabiliza:= Iif(mv_par11==1,.T.,.F.)

	If !lCabec .and. lPadrao .and. lContabiliza
		nHdlPrv := HeadProva( cLote,;
		                      "FINA200",;
		                      substr( cUsuario, 7, 6 ),;
		                      @cArquivo )
		lCabec := .T.
	Endif

	If lCabec .and. lPadrao .and. lContabiliza
		//Total de Despesas e Outras despesas
		nTotal += DetProva( nHdlPrv,;
		                    "562",;
		                    "FINA200" /*cPrograma*/,;
		                    cLote,;
		                    /*nLinha*/,;
		                    /*lExecuta*/,;
		                    /*cCriterio*/,;
		                    /*lRateio*/,;
		                    /*cChaveBusca*/,;
		                    /*aCT5*/,;
		                    /*lPosiciona*/,;
		                    @aFlagCTB,;
		                    /*aTabRecOri*/,;
		                    /*aDadosProva*/ )

		//Total de Outros Créditos
		nTotal += DetProva( nHdlPrv,;
		                    "563",;
		                    "FINA200" /*cPrograma*/,;
		                    cLote,;
		                    /*nLinha*/,;
		                    /*lExecuta*/,;
		                    /*cCriterio*/,;
		                    /*lRateio*/,;
		                    /*cChaveBusca*/,;
		                    /*aCT5*/,;
		                    /*lPosiciona*/,;
		                    @aFlagCTB,;
		                    /*aTabRecOri*/,;
		                    /*aDadosProva*/ )
	Endif

	PCODetLan("000007","11","FINA200")

	VALOR2 := VALOR3 := 0
	dbSelectArea("SE5")
	dbGoto(nRegSE5)
Endif

IF lCabec .and. nTotal > 0
	RodaProva(  nHdlPrv,;
				nTotal )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia para Lancamento Contabil                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cA100Incl( cArquivo,;
	           nHdlPrv,;
	           3 /*nOpcx*/,;
	           cLote,;
	           lDigita,;
	           lAglut,;
	           /*cOnLine*/,;
	           /*dData*/,;
	           /*dReproc*/,;
	           @aFlagCTB,;
	           /*aDadosProva*/,;
	           /*aDiario*/ )

	aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
Endif

PcoFinLan("000007")

If lRecicl

	If lFirst
		dbSelectArea("cTemp")
		dbCloseArea()
	Endif
	If cIndex != " "
		RetIndex("SE1")
		Set Filter To
		FErase (cIndex+OrdBagExt())
	EndIf
Endif

dbSelectArea("TRB")
dbCloseArea()
if ExecSchedule()
	Sleep(2000)
Endif
Ferase(cNomeArq+GetDBExtension())         // Elimina arquivos de Trabalho
Ferase(cNomeArq+OrdBagExt())	 			   // Elimina arquivos de Trabalho

VALOR := 0
ABATIMENTO := 0

SM0->(dbGoTo(nRegEmp))
cFilAnt := IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL )

dbSelectArea( "SE1" )
dbSetOrder(1)
dbGoTo( nSavRecno )
If ExistBlock("F200IMP")
	ExecBlock("F200IMP",.F.,.F.)
Endif

Return .F.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fA200Par  ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Aciona parametros do Programa                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA200Par()
Pergunte( cPerg )
MV_PAR04 := UPPER(MV_PAR04)
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fA200Rejei³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Trata titulo rejeitado.                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa200Rejei                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa200Rejei(cMotivo,cOcorr)
Local cAlias 	:= Alias()
Local lRet 		:= .F.
Local lPadrao	:= .f.
Local cNumBor 	:= " "
Private cSituant:= "0"									// Private para permitir condicionamento para contabilização

Default cOcorr := ""

dbSelectArea("SEB")
dbSetOrder(1)
// Procura pela chave completa->filial+banco+ocorrencia+tipo+motivo banco
If dbSeek(xFilial("SEB")+mv_par06+cOcorr+"R"+cMotivo)
	IF SEB->EB_MOTSIS == "01" .OR. EMPTY(SEB->EB_MOTSIS)	// Titulo protestado ou nao pago
		dbSelectArea("SEA")											// Retorna p/ carteira
		dbSetOrder(1)
		If dbSeek(xFilial("SEA")+SE1->E1_NUMBOR+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO)
			Reclock( "SEA" , .F. , .T.)
			SEA->(dbDelete( ))
			MsUnlock()
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ PONTO DE ENTRADA FA280RE2                                     ³
		//³ Tratamento de dados de titulo rejeitado antes de "zerar" os 	³
		//³ dados do mesmo.                                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA200RE2")
			Execblock("FA200RE2",.F.,.F.)
		Endif
		cSituant := SE1->E1_SITUACA
		cNumBor := SE1->E1_NUMBOR
		Reclock( "SE1" )
		SE1->E1_SITUACA := "0"
		SE1->E1_PORTADO := Space(Len(SE1->E1_PORTADO) )
		SE1->E1_AGEDEP  := Space(Len(SE1->E1_AGEDEP ) )
		SE1->E1_CONTA   := Space(Len(SE1->E1_CONTA  ) )
		SE1->E1_DATABOR := CtoD ( "" )
		SE1->E1_NUMBOR  := Space(Len(SE1->E1_NUMBOR ) )
		SE1->E1_NUMBCO  := Space(Len(SE1->E1_NUMBCO ) )
		SE1->E1_OCORREN := "01"
		lRet := .T.
		MsUnlock()
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Integracao TIN x PROTHEUS							³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If FWHasEAI("FINA055",.F.,,.T.) .And. AllTrim(SE1->E1_ORIGEM) == "FINI055" .And. lRet
			FwIntegDef("FINA040B")
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Efetua a contabilizacao da transferencia para carteira, caso   ³
		//³exista este lancamento padrao, pois se nao for feito neste mo- ³
		//³mento nao havera registro da rejeicao.                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lPadrao:=VerPadrao("540")
		If !lCabec .and. lPadrao
			nHdlPrv := HeadProva( cLote,;
			                      "FINA200",;
			                      substr( cUsuario, 7, 6 ),;
			                      @cArquivo )

			lCabec := .T.
		Endif

		If lCabec .and. lPadrao
			nTotal += DetProva( nHdlPrv,;
			                    "540",;
			                    "FINA200" /*cPrograma*/,;
			                    cLote,;
			                    /*nLinha*/,;
			                    /*lExecuta*/,;
			                    /*cCriterio*/,;
			                    /*lRateio*/,;
			                    /*cChaveBusca*/,;
			                    /*aCT5*/,;
			                    /*lPosiciona*/,;
			                    @aFlagCTB,;
			                    /*aTabRecOri*/,;
			                    /*aDadosProva*/ )

			// Forca a contabilizacao da rejeicao on-line pois nao e registrada
			// a transferencia para a carteira
			lDigita := .T.
		Endif

		If cSituAnt == "2"			//  'Se cobranca descontada e rejeita gera um movimento a pagar"
			Reclock("SE5", .T. )
			Replace E5_FILIAL     With xFilial()
			Replace E5_BANCO      With cBanco
			Replace E5_AGENCIA    With cAgencia
			Replace E5_CONTA      With cConta
			Replace E5_VALOR      With nValrec
			Replace E5_HISTOR     With "EST. " + cNumBor+" "+SE1->E1_PREFIXO+" "+SE1->E1_NUM+" "+SE1->E1_PARCELA+" "+SE1->E1_TIPO
			Replace E5_VLMOED2    With nValrec
			Replace E5_RECPAG     With "P"
			Replace E5_DATA       With dBaixa
			Replace E5_DTDIGIT    With dDataBase
			Replace E5_DTDISPO    With dBaixa
			If SpbInUse()
				SE5->E5_MODSPB := "1"
			Endif
			MsUnlock()
			AtuSalBco(cBanco,cAgencia,cConta,SE5->E5_DATA,SE5->E5_VALOR,"-")

			lPadrao:=VerPadrao("562")
			If !lCabec .and. lPadrao
				nHdlPrv := HeadProva( cLote,;
				                      "FINA200",;
				                      substr( cUsuario, 7, 6 ),;
				                      @cArquivo )
				lCabec := .T.
			Endif

			If lCabec .and. lPadrao

				If lUsaFlag // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, { "E5_LA", "S", "SE5", SE5->( RecNo() ), 0, 0, 0} )
				EndIf

				nTotal += DetProva( nHdlPrv,;
				                    "562",;
				                    "FINA200" /*cPrograma*/,;
				                    cLote,;
				                    /*nLinha*/,;
				                    /*lExecuta*/,;
				                    /*cCriterio*/,;
				                    /*lRateio*/,;
				                    /*cChaveBusca*/,;
				                    /*aCT5*/,;
				                    /*lPosiciona*/,;
				                    @aFlagCTB,;
				                    /*aTabRecOri*/,;
				                    /*aDadosProva*/ )

				If LanceiCtb .And. !lUsaFlag
					RecLock( "SE5", .F. )
					SE5->E5_LA := "S"
					SE5->( MsUnlock() )
				EndIf

				// Forca a contabilizacao da rejeicao on-line pois nao e registrada
				// a transferencia para a carteira
				lDigita := .T.
			Endif
		EndIf
   Endif

	//DDA - Debito Direto Autorizado
	If Alltrim(cOcorr) $ "53/52"
		Reclock("SE1")
		SE1->E1_OCORREN := cOcorr
		MsUnlock()
	Endif

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA FA280REJ                                     ³
//³ Tratamento de dados de titulo rejeitado                     	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("FA200REJ")
	Execblock("FA200REJ",.F.,.F.)
Endif
MsUnlock()
dbSelectArea( cAlias )
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fA200Tarif³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Trata uma determinada tarifa.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa200Tarifa( )                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa200Tarifa(nTotDesp, nTotOutD)

Local cAlias := Alias()
Local lPadrao
Local lContabiliza
Local cNat
Local lSpbInUse := SpbInUse()
Local nX := 0

nDespes   := If(nTotDesp == Nil, nDespes  , nTotDesp)
nOutrDesp := If(nTotOutD == Nil, nOutrDesp, nTotOutD)

If nDespes == 0 .and. nOutrDesp == 0
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula a data de credito, se esta estiver vazia			³
//³ Se aplica apenas nos casos de confirma‡Æo de entrada do	³
//³ titulo e tenha lancamento de Despesas Banc rias, pois 	³
//³ nas ocorrencias de baixa, essa data ja estara calculada ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If dDataCred == Nil .Or. Empty(dDataCred)
	dDataCred := If(!Empty(dBaixa),dBaixa,SE5->E5_DATA)  // Assume a data da baixa ou a data do movimento totalizador
	dBaixa := If(!Empty(dBaixa),dBaixa,SE5->E5_DATA)
	For nX := 1 To Sa6->A6_Retenca // Para todos os dias de retencao
											 // valida a data
			// O calculo eh feito desta forma, pois os dias de retencao
			// sao dias uteis, e se fosse apenas somado dDataCred+A6_Retenca
			// nao sera verdadeiro quando a data for em uma quinta-feira, por
			// exemplo e, tiver 2 dias de retencao.
		dDataCred := DataValida(dDataCred+1,.T.)
	Next
EndIf

If nDespes > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera registro na movimenta‡„o ³
	//³ bancaria.                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNat := &(GetMv("MV_NATDPBC"))
	Reclock( "SE5" , .T. )
	SE5 -> E5_FILIAL := xFilial()
	SE5 -> E5_DATA   := dBaixa
	SE5 -> E5_VALOR  := nDespes
	SE5 -> E5_NATUREZ:= Iif(!Empty(cNat) .Or. nTotDesp # Nil,cNat,SE1 -> E1_NATUREZ)
	SE5 -> E5_RECPAG := "P"
	SE5 -> E5_DTDIGIT:= dDataBase
	SE5 -> E5_BANCO  := SA6 -> A6_COD
	SE5 -> E5_AGENCIA:= SA6 -> A6_AGENCIA
	SE5 -> E5_CONTA  := SA6 -> A6_NUMCON
	SE5 -> E5_DTDISPO:= dDataCred
	SE5 -> E5_TIPODOC:= "DB"		// Despesas Banc rias
	SE5 -> E5_MOTBX  := "NOR"		// Normal
	If nTotDesp # Nil
		SE5->E5_LOTE   := cLoteFin
		SE5->E5_HISTOR := STR0011 + " " + cLoteFin // "Baixa por Retorno CNAB / Lote :"
	Else
		SE5 -> E5_PREFIXO:= SE1 -> E1_PREFIXO
		SE5 -> E5_NUMERO := SE1 -> E1_NUM
		SE5 -> E5_PARCELA:= SE1 -> E1_PARCELA
		SE5 -> E5_TIPO   := SE1 -> E1_TIPO
		SE5 -> E5_CLIFOR := SE1 -> E1_CLIENTE
		SE5 -> E5_LOJA   := SE1 -> E1_LOJA
		SE5 -> E5_HISTOR := SEB -> EB_DESCRI
	Endif
	If lSpbInUse
		SE5->E5_MODSPB := "1"
	Endif

	MsUnlock()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ PONTO DE ENTRADA F200DB1                                    ³
	//³ Serve para tratamento complementar das despesas bancarias.  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ExistBlock("F200DB1")
		ExecBlock("F200DB1",.F.,.F.)
	Endif

	AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DATA,SE5->E5_VALOR,"-")

	lPadrao:=VerPadrao("562")		// Movimentacao Banc ria a Pagar
	lContabiliza:= Iif(mv_par11==1,.T.,.F.)

	If !lCabec .and. lPadrao .and. lContabiliza
		nHdlPrv := HeadProva( cLote,;
		                      "FINA200",;
		                      substr( cUsuario, 7, 6 ),;
		                      @cArquivo )

		lCabec := .T.
	Endif

	dbSelectArea("SE5")

	If lCabec .and. lPadrao .and. lContabiliza

		If lUsaFlag // Armazena em aFlagCTB para atualizar no modulo Contabil
			aAdd( aFlagCTB, { "E5_LA", "S", "SE5", SE5->( RecNo() ), 0, 0, 0} )
		EndIf

		nTotal += DetProva( nHdlPrv,;
		                    "562",;
		                    "FINA200" /*cPrograma*/,;
		                    cLote,;
		                    /*nLinha*/,;
		                    /*lExecuta*/,;
		                    /*cCriterio*/,;
		                    /*lRateio*/,;
		                    /*cChaveBusca*/,;
		                    /*aCT5*/,;
		                    /*lPosiciona*/,;
		                    @aFlagCTB,;
		                    /*aTabRecOri*/,;
		                    /*aDadosProva*/ )

		If LanceiCtb .And. !lUsaFlag
			RecLock( "SE5", .F. )
			SE5->E5_LA := "S"
			SE5->( MsUnlock() )
		EndIf

	Endif
	nCtDesp += nDespes
Endif

If nOutrDesp > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera registro na movimenta‡„o ³
	//³ bancaria.                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNat := &(GetMv("MV_NATDPBC"))
	Reclock( "SE5" , .T. )
	SE5 -> E5_FILIAL := xFilial()
	SE5 -> E5_DATA   := dBaixa
	SE5 -> E5_VALOR  := nOutrDesp
	SE5 -> E5_NATUREZ:= Iif(!Empty(cNat) .Or. nTotOutD # Nil,cNat,SE1 -> E1_NATUREZ)
	SE5 -> E5_RECPAG := "P"
	SE5 -> E5_DTDIGIT:= dDataBase
	SE5 -> E5_DTDISPO:= dDataCred
	SE5 -> E5_TIPODOC:= "OD"		//Outras Despesas
	SE5 -> E5_MOTBX  := "NOR"		//Normal
	If nTotOutD # Nil
		SE5->E5_LOTE    := cLoteFin
		SE5->E5_HISTOR  := STR0011 + " " + cLoteFin // "Baixa por Retorno CNAB / Lote :"
		SE5->E5_BANCO   := SA6 -> A6_COD
		SE5->E5_AGENCIA := SA6 -> A6_AGENCIA
		SE5->E5_CONTA   := SA6 -> A6_NUMCON
	Else
		SE5 -> E5_PREFIXO:= SE1 -> E1_PREFIXO
		SE5 -> E5_NUMERO := SE1 -> E1_NUM
		SE5 -> E5_PARCELA:= SE1 -> E1_PARCELA
		SE5 -> E5_TIPO   := SE1 -> E1_TIPO
		SE5 -> E5_CLIFOR := SE1 -> E1_CLIENTE
		SE5 -> E5_LOJA   := SE1 -> E1_LOJA
		SE5 -> E5_HISTOR := SEB -> EB_DESCRI
		SE5 -> E5_BANCO  := SE1 -> E1_PORTADO
		SE5 -> E5_AGENCIA:= SE1 -> E1_AGEDEP
		SE5 -> E5_CONTA  := SE1 -> E1_CONTA
	Endif
	If lSpbInUse
		SE5->E5_MODSPB := "1"
	Endif

	MsUnlock()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ PONTO DE ENTRADA F200DB2                                    ³
	//³ Serve para tratamento complementar de outras despesas.      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ExistBlock("F200DB2")
		ExecBlock("F200DB2",.F.,.F.)
	Endif

	AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DATA,SE5->E5_VALOR,"-")

	lPadrao:=VerPadrao("562")		// Movimentacao Banc ria a Pagar
	lContabiliza:= Iif(mv_par11==1,.T.,.F.)

	If !lCabec .and. lPadrao .and. lContabiliza
		nHdlPrv := HeadProva( cLote,;
		                      "FINA200",;
		                      substr( cUsuario, 7, 6 ),;
		                      @cArquivo )

		lCabec := .T.
	Endif

	dbSelectArea("SE5")
	If lCabec .and. lPadrao .and. lContabiliza

		If lUsaFlag // Armazena em aFlagCTB para atualizar no modulo Contabil
			aAdd( aFlagCTB, { "E5_LA", "S", "SE5", SE5->( RecNo() ), 0, 0, 0} )
		EndIf

		nTotal += DetProva( nHdlPrv,;
		                    "562",;
		                    "FINA200" /*cPrograma*/,;
		                    cLote,;
		                    /*nLinha*/,;
		                    /*lExecuta*/,;
		                    /*cCriterio*/,;
		                    /*lRateio*/,;
		                    /*cChaveBusca*/,;
		                    /*aCT5*/,;
		                    /*lPosiciona*/,;
		                    @aFlagCTB,;
		                    /*aTabRecOri*/,;
		                    /*aDadosProva*/ )

		If LanceiCtb .And. !lUsaFlag
			RecLock( "SE5", .F. )
			SE5->E5_LA := "S"
			SE5->( MsUnlock() )
		EndIf

	Endif
	nCtDesp += nOutrDesp
Endif
dbSelectArea(cAlias)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fA200Outro³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Trata uma determinada tarifa.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa200Tarifa( )                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa200Outros( nTotValcc )
Local cAlias:= Alias()
Local cNat
Local nX	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera registro na movimenta‡„o ³
//³ bancaria.                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

nValCC := If(nTotValCC = Nil, nValCC, nTotValCC)

If nValCC = 0
	Return .T.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula a data de credito, se esta estiver vazia			³
//³ Se aplica apenas nos casos de confirma‡Æo de entrada do	³
//³ titulo e tenha lancamento de Despesas Banc rias, pois 	³
//³ nas ocorrencias de baixa, essa data ja estara calculada ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If dDataCred == Nil .Or. Empty(dDataCred)
	dDataCred := If(!Empty(dBaixa),dBaixa,SE5->E5_DATA)  // Assume a data da baixa ou a data do movimento totalizador
	dBaixa := If(!Empty(dBaixa),dBaixa,SE5->E5_DATA)
	For nX := 1 To Sa6->A6_Retenca // Para todos os dias de retencao
											 // valida a data
			// O calculo eh feito desta forma, pois os dias de retencao
			// sao dias uteis, e se fosse apenas somado dDataCred+A6_Retenca
			// nao sera verdadeiro quando a data for em uma quinta-feira, por
			// exemplo e, tiver 2 dias de retencao.
		dDataCred := DataValida(dDataCred+1,.T.)
	Next
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera registro na movimenta‡„o ³
//³ bancaria.                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cNat := &(GetMv("MV_NATDPBC"))
Reclock( "SE5" , .T. )
SE5->E5_FILIAL := xFilial()
SE5->E5_DATA   := dBaixa
SE5->E5_VALOR  := nValcc
SE5->E5_TIPODOC:= "DB"		//Outros Cr‚ditos
SE5->E5_NATUREZ:= Iif(!Empty(cNat) .Or. nTotValCC # Nil,cNat,SE1 -> E1_NATUREZ)
SE5->E5_RECPAG := "R"
SE5->E5_DTDIGIT:= dDataBase
SE5->E5_BANCO  := SA6->A6_COD
SE5->E5_AGENCIA:= SA6->A6_AGENCIA
SE5->E5_CONTA  := SA6->A6_NUMCON
SE5->E5_DTDISPO:= dDataCred
SE5->E5_MOTBX  := "NOR"	// Normal
If nTotValCC # Nil
	SE5->E5_LOTE    := cLoteFin
	SE5->E5_HISTOR  := STR0011 + " " + cLoteFin // "Baixa por Retorno CNAB / Lote :"
Else
	SE5->E5_PREFIXO:= SE1->E1_PREFIXO
	SE5->E5_NUMERO := SE1->E1_NUM
	SE5->E5_PARCELA:= SE1->E1_PARCELA
	SE5->E5_TIPO   := SE1->E1_TIPO
	SE5->E5_CLIFOR := SE1->E1_CLIENTE
	SE5->E5_LOJA   := SE1->E1_LOJA
	SE5->E5_HISTOR := SEB->EB_DESCRI
Endif
If SpbInUse()
	SE5->E5_MODSPB := "1"
Endif

MsUnlock()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA F200OCR                                    ³
//³ Serve para tratamento complementar de outros creditos.      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF ExistBlock("F200OCR")
	ExecBlock("F200OCR",.F.,.F.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza saldo bancario.      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AtuSalBco(cBanco,cAgencia,cConta,dBaixa,nValcc,"+")

lPadrao:=VerPadrao("563")		// Movimentacao Banc ria a Receber
lContabiliza:= Iif(mv_par11==1,.T.,.F.)

If !lCabec .and. lPadrao .and. lContabiliza
	nHdlPrv := HeadProva( cLote,;
	                      "FINA200",;
	                      substr( cUsuario, 7, 6 ),;
	                      @cArquivo )

	lCabec := .T.
Endif

dbSelectArea("SE5")

If lCabec .and. lPadrao .and. lContabiliza
	If lUsaFlag // Armazena em aFlagCTB para atualizar no modulo Contabil
		aAdd( aFlagCTB, { "E5_LA", "S", "SE5", SE5->( RecNo() ), 0, 0, 0} )
	EndIf
	nTotal += DetProva( nHdlPrv,;
	                    "563",;
	                    "FINA200" /*cPrograma*/,;
	                    cLote,;
	                    /*nLinha*/,;
	                    /*lExecuta*/,;
	                    /*cCriterio*/,;
	                    /*lRateio*/,;
	                    /*cChaveBusca*/,;
	                    /*aCT5*/,;
	                    /*lPosiciona*/,;
	                    @aFlagCTB,;
	                    /*aTabRecOri*/,;
	                    /*aDadosProva*/ )
	If LanceiCtb .And. !lUsaFlag
		RecLock( "SE5", .F. )
		SE5->E5_LA := "S"
		SE5->( MsUnlock() )
	EndIf
Endif
nCtOutCrd := nValcc
dbSelectArea( cAlias )
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fa200Recic³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 22/05/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Cria o arquivo de reciclagem                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa200Recic( )	                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa200Recic()
Local nTempNnum := TamSX3("E1_NUMBCO")[1]
Local cDbf , aCampos
cDbf := "RECICL" + SubStr(cNumEmp,1,2)

If !File(cDbf+GetDBExtension())
	aCampos:={ {"FILIAL  ","C",IIf( lFWCodFil, FWGETTAMFILIAL, 2 ),0},;
              {"NOSSONUM","C",nTempNnum,0}}
	If (Select("cTemp") <> 0 )
		dbSelectArea ( "cTemp" )
		dbCloseArea ()
	Endif
	dbCreate(cDbf,aCampos)
   dbUseArea(.T.,,cDbf,"cTemp",NIL,.F.)
Endif

dbUseArea(.T.,,cDbf,"cTemp",NIL,.F.)
IndRegua("cTemp",cDbf,"FILIAL+NOSSONUM",,,OemToAnsi(STR0009))  //"Selecionando Registros..."
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fa200GrRec³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 22/05/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Grava registros no arquivo de reciclagem                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa200GrRec( )	                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa200GrRec(cNsNum)
Local cAlias := Alias()
dbSelectArea("cTemp")
If !dbSeek(xFilial("SE1")+cNsNum)
	RecLock("cTemp",.T.)
	Replace FILIAL		With xFilial("SE1")
	Replace NOSSONUM 	With cNsNum
	MsUnlock()
EndIf
dbSelectArea(cAlias)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa200ChecF³ Autor ³ Pilar S Albaladejo    ³ Data ³ 22/05/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Retorna Expresao para Indice Condicional					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Fa200ChecF() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Generico													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA200ChecF()
Local cFiltro := ""
cFiltro := 'E1_FILIAL == "'+xFilial("SE1")+'" .And. E1_SALDO > 0'
Return cFiltro

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Chk200File³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 24/11/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Checa se arquivo de TB j  foi processado anteriormente	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Chk200File()  											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Fina200													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Chk200File()
LOCAL cFile := "TB"+cNumEmp+".VRF"
LOCAL lRet	:= .F.
LOCAL aFiles:= {}
LOCAL cString
LOCAL nTam
LOCAL nHdlFile

If !FILE(cFile)
	nHdlFile := fCreate(cFile)
ELSE
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Tenta abrir o arquivo em modo exclusivo e Leitura/Gravacao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While (nHdlFile := fOpen(cFile,FO_READWRITE+FO_EXCLUSIVE))==-1 .AND. ;
			if(ExecSchedule(),.T.,MsgYesNo( STR0013+cNumEmp+STR0014, STR0012 )) // Retorno Automatico via Job - parametro que controla execucao via Job
	Enddo
Endif

If nHdlFile > 0

	nTam := TamSx1("AFI200","04")[1] // Tamanho do parametro
	xBuffer := SPACE(nTam)
	// Le o arquivo e adiciona na matriz
	While fReadLn(nHdlFile,@xBuffer,nTam)
		Aadd(aFiles, Trim(xBuffer))
	Enddo

	If ASCAN(aFiles,Trim(MV_PAR04)) > 0
		Help(" ",1,"CHK200FILE")       // Arquivo de Trans.Banc. j  processado

		// Retorno Automatico via Job
		if ExecSchedule()
			Aadd(aMsgSch, STR0024+cFile+STR0034) // "Arquivo de entrada " # " processado anteriormente."
      Endif
	Else
		fSeek(nHdlFile,0,2) // Posiciona no final do arquivo
		cString := Alltrim(mv_par04)+Chr(13)+Chr(10)
		fWrite(nHdlFile,cString)	// Grava nome do arquivo a ser processado
		lRet := .T.
	endif
	fClose (nHdlFile)
Else
   Help(" ", 1, "CHK200ERRO") // Erro na leitura do arquivo de entrada

	// Retorno Automatico via Job
	if ExecSchedule()
		Aadd(aMsgSch, STR0035+cFile) // "Erro na abertura/leitura do Arquivo "
   Endif
EndIf
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa200GrvLog³ Autor ³ Claudio Donizete      ³ Data ³ 25/07/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Grava LOG de processamento do arquivo retorno				   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Fa200GrvLog   											   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Fina200													   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Fa200GrvLog(nTipo, cArquivo, cBanco, cAgencia, cConta, nLastLn, cIdTit,;
									 cOcoBco, cOcoSis, cIdArq)
Local cSeq := "00"
Local lRet := .T.
Local nLastRec
Local cBarra	:= If(isSrvUnix(),"/","\")
Local nBarra 	:= Rat(cBarra,cArquivo)
Local aUsuario

// Obtem o nome do arquivo apenas, desprezando o path
cArquivo := If(nBarra > 0, SubStr(cArquivo,nBarra+1), cArquivo)
cIdArq := VercIdArq(cIdArq, cArquivo) //verifica se o ID já foi usado anteriormente

If nTipo == 1 // Cabecalho
	// Se o arquivo ja foi processado, a ultima linha sera a ultima
	// gravada no arquivo
	If FI0->(MsSeek(xFilial("FI0")+Pad(cIdArq,Len(FI0_IDARQ))+cBanco+cAgencia+cConta))
		While FI0->(FI0_FILIAL+Pad(FI0_IDARQ,Len(FI0_IDARQ))+FI0_BCO+FI0_AGE+FI0_CTA) == xFilial("FI0")+Pad(cIdArq,Len(FI0->FI0_IDARQ))+cBanco+cAgencia+cConta
			nLastLn	:= FI0->FI0_LASTLN
			cSeq	  	:= FI0->FI0_SEQ
			nLastRec := FI0->(Recno())
			FI0->(DbSkip())
		End
		FI0->(MsGoto(nLastRec))
		PswOrder(1)
	
		// caso de usuario excluido estava dando errorlog
		if PswSeek(FI0->FI0_USU)
			aUsuario := PswRet()
			cNomeUsuario := Alltrim(aUsuario[1][2])
		Else
			cNomeUsuario := FI0->FI0_USU
		Endif
		// se estiver em modo Job nao apresenta a mensagem e sempre reprocessa
		lRet := (ExecSchedule() .or. ApMsgYesNo("Arquivo retorno já processado anteriormente em " +;
								 DTOC(FI0->FI0_DTPRC) + " às " + FI0->FI0_HRPRC + Chr(13)+Chr(10)+;
								 "Processado com o nome : " + AllTrim(FI0->FI0_ARQ)+ Chr(13)+Chr(10)+ ;
								 "Usuário que processou : " + cNomeUsuario+ Chr(13)+Chr(10)+;
								 "A ultima linha lida do arquivo foi: " +	Transform(FI0->FI0_LASTLN, "")+ Chr(13)+Chr(10) +;
								 "O arquivo já foi processado " + Str(Val(FI0->FI0_SEQ),3) +;
								 If(Val(FI0->FI0_SEQ)<=1," vez", " vezes")+". Deseja  reprocessá-lo?"))
	
		// Retorno Automatico via Job
		if ExecSchedule()
			Aadd(aMsgSch, "Arquivo retorno já processado anteriormente em " +;
							DTOC(FI0->FI0_DTPRC) + " às " + FI0->FI0_HRPRC +;
							". Processado com o nome : " + AllTrim(FI0->FI0_ARQ)+ ;
						 	". A ultima linha lida do arquivo foi: " + Transform(FI0->FI0_LASTLN, "")+;
						 	". Verifique.")
			lRet := .F.
		Endif
	EndIf
	If lRet
		RecLock("FI0", .T.)
		FI0->FI0_FILIAL	:= xFilial("FI0")
		FI0->FI0_ARQ		:= cArquivo
		FI0->FI0_IDARQ		:= cIdArq
		FI0->FI0_DTPRC		:= dDataBase
		FI0->FI0_HRPRC		:= Left(Time(), 6) // Grava a HH:MM do processamento
		FI0->FI0_BCO		:= cBanco
		FI0->FI0_AGE		:= cAgencia
		FI0->FI0_CTA		:= cConta
		FI0->FI0_USU		:= RetCodUsr()
		FI0->FI0_LASTLN		:= nLastLn
		FI0->FI0_SEQ		:= Soma1(cSeq)
		FI0->( Dbunlock())
		FKCOMMIT()
	Endif
Elseif nTipo == 2 // Detalhe dos titulos processados
	RecLock("FI1", .T.)
	FI1->FI1_FILIAL		:= xFilial("FI1")
	FI1->FI1_IDARQ		:= cIdArq
	FI1->FI1_IDTIT		:= cIdTit
	FI1->FI1_OCORB		:= cOcoBco
	FI1->FI1_OCORS		:= cOcoSis
	If FI1->(FieldPos("FI1_SEQ")) > 0
		FI1->FI1_SEQ	:= FI0->FI0_SEQ
	Endif
	FI1->( Dbunlock())
	FKCOMMIT()
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³LeTrailler | Autor ³ Claudio Donizete      ³ Data ³ 18/08/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Le as ultimas linhas do arquivo texto para gerar checksum		|±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³LeTrailler(nHdlBco)										   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Fina200													   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function LeTrailler(nHdlBco)
Local cRet		:= ""
Local cBuffer	:= Space(402)
Local nOffSet	:= fSeek(nHdlBco,0,FS_RELATIVE) // Sera utilizado para retornar o ponteiro do arquivo a posicao original
Local nTamArq	:= fSeek(nHdlBco,0,FS_END) // Obtem o tamanho do arquivo

fSeek(nHdlBco,-804,FS_END) // Volta 804 bytes para compor o CheckSum

// Le o arquivo ate final
While fReadLn(nHdlBco,@cBuffer,402)
	cRet += cBuffer
End

fSeek(nHdlBco,nOffSet,FS_SET) // Retorna o ponteiro para a posicao original

Return cRet+Transform(nTamArq,"")

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa200ChkSum| Autor ³ Claudio Donizete      ³ Data ³ 18/08/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Retorna sequencia numerica a partir da string enviada		   |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Fa200ChkSum(cBuffer)											³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Fina200													   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa200ChkSum(cBuffer)
Local nX
Local nCheck	:= 0
Local nLen		:= Len(cBuffer)
Local nPeso		:= 9
Local nDgVrf

For nX := 1 To nLen
	// Para cada byte da string, sera atribuido um peso (iniciando de 9 ate 2)
	nCheck += (Asc(SubStr(cBuffer,nX,1)) * nPeso)
	nPeso--
	If nPeso == 2
		nPeso := 9
	Endif
Next

// Calcula digito verificador para checksum
nDgVrf := ((nCheck + nX) % 11)
nDgVrf := If(nDgVrf > 9 .Or. nDgVrf == 0, 1, nDgVrf)

Return AllTrim(Transform(nCheck,"")) + Transform(nDgVrf,"")

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ AjustaSX2    ³ Autor ³ Ricardo A. Canteras	³ Data ³ 07/08/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajusta campos do SX2                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AjustaSx2( )                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T.                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA200                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
STATIC Function AjustaSx2()

Local aArea := GetArea()

DbSelectArea("SX2")
DbSetOrder(1)

//Procura e deleta chave unica do arquivo log de detalhes cnab
If MsSeek("FI1")
	If !Empty(X2_UNICO)
		RecLock("SX2",.F.)
		Replace X2_UNICO   With ""
		MsUnlock()
	Endif
Endif

RestArea(aArea)

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ AjustaSX1 º Autor ³ Gustavo Henrique  º Data ³  16/02/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Realizar ajustes nos grupos de pergunta do dicionario SX1  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPC1 - Nome do grupo de perguntas utilizado.              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Retorno CNAB a Receber                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC Function AjustaSX1(cPerg)

Local aHelpPor, aHelpSpa, aHelpEng

// Alteração de pergunta "Abate Desc. Comiss. ?"
SX1->( dbSetOrder( 1 ) )
If SX1->( dbSeek( PadR( cPerg, Len( X1_GRUPO ) )+"10" ) )
	SX1->(Reclock("SX1",.F.))
		//Português
		SX1->X1_PERGUNT := STR0036 // 'Abate Desc/Decres Comiss.?'
		//Espanhol
		SX1->X1_PERSPA  := STR0036
		//Ingles
		SX1->X1_PERENG  := STR0036
	SX1->(MsUnlock())

	//Ajusta Help
	aHelpPor := {STR0038,STR0040}
	aHelpSpa := {STR0038,STR0040}
	aHelpEng := {STR0038,STR0040}

	PutSX1Help("P."+cPerg+"10.",aHelpPor,aHelpEng,aHelpSpa)
EndIf

// Inclusão de pergunta "Processa Filial?"
SX1->( dbSetOrder( 1 ) )

If !SX1->( dbSeek( PadR( cPerg, Len( X1_GRUPO 	) ) + "13" ) )

	PutSx1( cPerg, "13","Processa Filial?","¿Processa Sucursal?","Processa Branch?","mv_chD","N",1,0,1,"C","","","","",;
		"mv_par13","Filial Atual","Sucursal Atual","Actual Branch","","Todas Filiais","Todas Sucursais","All Branchs","","","","","","","","","",,,,".AFI20013.")

	aHelpPor := {}
	aHelpSpa := {}
	aHelpEng := {}

	Aadd(aHelpPor,{	"Indicar se o processamento de retorno",;
					"deve considerar somente os títulos da",;
					"Filial Atual ou os títulos de Todas as",;
					"Filiais, se utilizado o recurso IDCNAB.",;
					"Na opção Todas as Filiais, se a",;
					"contabilidade estiver em modo exclusivo, ",;
					"a contabilização deve ser realizada em",;
					"modo off-line." })

	Aadd(aHelpSpa,{	"Indicar si el proceso de retorno",;
					"considerará únicamente los títulos",;
					"de la Sucursal actual o los títulos de",;
					"Todas las sucursales, si utilizar lo",;
					"recurso IDCNAB. En la opción Todas",;
					"las Sucursales, si la contabilidad ",;
					"estuviera en modo exclusivo, la ",;
					"contabilizacion debe hacerse en modo ",;
					"off-line." })

	Aadd(aHelpEng,{	"Indicates if the receipt transaction",;
					"have to consider only the bills of ",;
					"current branch or all branchs, if used",;
					"resource IDCNAB. If you select all",;
					"branchs and the accounting is in ",;
					"exclusive mode, you have to use the",;
					"off-line accounting routine." })

	PutHelp("P.AFI20013.",aHelpPor[1],aHelpEng[1],aHelpSpa[1])

EndIf

If !SX1->( dbSeek( PadR( cPerg, Len( X1_GRUPO 	) ) + "14" ) )

	PutSx1( cPerg, "14","Contabiliza Transferência?","Contabiliza Transferencia ","Account Transfer ?","mv_chE","N",1,0,2,"C","","","","",;
		"mv_par14","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",,,,".FIN06003.")

Endif

If !SX1->( dbSeek( PadR( cPerg, Len( X1_GRUPO 	) ) + "15" ) )

	PutSx1( cPerg, "15","Considera Retencão Bancaria ?","Considera Retencion Bancaria ","Consider Bank Retention ?","mv_chF","N",1,0,2,"C","","","","",;
		"mv_par15","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",,,,".FIN06010.")

Endif

If !SX1->( dbSeek( PadR( cPerg, Len( X1_GRUPO 	) ) + "16" ) )

	aHelpPor := {}
	aHelpSpa := {}
	aHelpEng := {}

	PutSx1( cPerg, "16","Cons.Juros Comissão ?","¿Considera Intereses Comision?","Cons.Commiss.Interest ?","MV_CHG","N",1,0,2,"C","","","","",;
		"mv_par16","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",,,,".AFI20016.")
		

	Aadd(aHelpPor,"Indica se deve ser considerado o valor ")
	Aadd(aHelpPor," dos juros no cálculo da comissão.")

	Aadd(aHelpSpa,"Indica si se debe considerar el valor ")
	Aadd(aHelpSpa," de los intereses en el calculo de ")
	Aadd(aHelpSpa," la comision. ")

	Aadd(aHelpEng,"Indicates if the value of interests ")
	Aadd(aHelpEng," must be considered when calculating ")
	Aadd(aHelpEng," the commission.")
						
	PutHelp("P.AFI20016.",aHelpPor,aHelpEng,aHelpSpa)						

Else
	// Alteração de pergunta "Cons.Juros Comissao ?"
	SX1->(Reclock("SX1",.F.))
		//Português
		SX1->X1_PERGUNT := STR0037 // 'Cons.Juros/Acres Comissao?'
		//Espanhol
		SX1->X1_PERSPA  := STR0037
		//Ingles
		SX1->X1_PERENG  := STR0037
	SX1->(MsUnlock())

	//Ajusta Help
	aHelpPor := {STR0039,STR0040}
	aHelpSpa := {STR0039,STR0040}
	aHelpEng := {STR0039,STR0040}

	PutSX1Help("P."+cPerg+"16.",aHelpPor,aHelpEng,aHelpSpa)
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³23/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados     	  ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Local aRotina:= { {OemToAnsi(STR0001) ,"fA200Par" , 0 , 1},;  // "Parametros"
                    {OemToAnsi(STR0002) ,"AxVisual" , 0 , 2},;  // "Visualizar"
                    {OemToAnsi(STR0003) ,"fA200Gera", 0 , 3} }  // "Receber Arquivo"
Return(aRotina)



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA200T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 31.03.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA200                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA200T(aParam)
	cRotinaExec := "FINA200"
	ReCreateBrow("SE1",FinWindow)
	FinA200(aParam[1])
	ReCreateBrow("SE1",FinWindow)

	dbSelectArea("SE1")

	INCLUI := .F.
	ALTERA := .F.

Return .T.


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F200TrfCob ³ Autor ³ Mauricio Pequim Jr.  ³ Data ³ 31.03.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gravação das transferencias dos titulos                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA200                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function F200TrfCob(cOcorr,cBanco,cAgencia,cConta)

Local aArea		:= GetArea()
Local nJ		:= 0
Local cPadrao2	:="540"
Local cChavEA	:= xFilial("SEA")+E1_NUMBOR+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO
Local cSituAnt  := SE1->E1_SITUACA
Local lPadrao2	:= .F.
Local lContabiliza := Iif(mv_par11==1,.T.,.F.)
Local cSituacao := "0"
Local l060SEA   := ExistBlock("F060SEA")

DEFAULT cOcorr  := ""
DEFAULT cBanco	:= ""
DEFAULT cAgencia:= ""
DEFAULT cConta	:= ""

If !Empty (cOcorr)

	//Obtenho a nova situacao do titulo
	cSituacao := SUBSTR(cOcorr,2,1)

	//Alteracao para Cobrança Protesto (6) ou Carteira Protesto (F)
	//Atualiza numero de titulos protestados
	IF cSituacao $ "6F" .and. !(cSituAnt $ "6F")
		dbSelectArea("SA1")
		If (dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
			Reclock("SA1")
			SA1->A1_TITPROT := A1_TITPROT+1
			SA1->A1_DTULTIT := dDataBase
			MsUnlock()
		Endif
		dbSelectArea("SE1")
	Endif

	//Alteracao da Cobrança Protesto(6) ou Carteira Protesto(F) para Carteira(0) ou Carteira Acordo(G)
	IF cSituacao $ "0G" .and. SE1->E1_SITUACA $ "6F"
		dbSelectArea("SA1")
		If (dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
			Reclock("SA1")
			SA1->A1_TITPROT := A1_TITPROT-1
			MsUnlock( )
		Endif
		dbSelectArea("SE1")
	Endif

	IF cSituacao $ "12347H" .and. cSituacao != cSituAnt
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza data vencto real c/reten‡„o Banc ria³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		// Se possuir retencao bancaria, grava a data de vencimento
		IF mv_par15 == 1 .And. nRetencao>0
			dBase	:=	SE1->E1_VENCREA
			For nj:=1 To nRetencao
				dBase := DataValida(dBase+1,.T.)
			Next nj
			Reclock("SE1")
			SE1->E1_VENCREA := dBase
			MsUnlock()
			// Atualiza tambem os registros agregados
			F060AtuAgre()
		EndIF
	EndIF

	IF cSituacao $ "0FG" .and. cSituAnt $ "12347H"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza data vencto real s/reten‡„o Banc ria³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		// Se considera retencao bancaria
		If mv_par15 == 1
			Reclock("SE1")
			SE1->E1_VENCREA := DataValida(E1_VENCORI,.T.)
			If SE1->E1_VENCREA < SE1->E1_VENCTO
				SE1->E1_VENCREA := DataValida(E1_VENCTO,.T.)
			Endif
			MsUnlock()
			// Atualiza tambem os registros agregados
			F060AtuAgre()
		EndIF
	Endif

	// Banco vazio, contabiliza anterior
	If Empty(cBanco)
		dbSelectArea("SA6")
		dbSeek(xFilial()+SE1->E1_PORTADO+SE1->E1_AGEDEP+SE1->E1_CONTA)
	Else
		dbSelectArea("SA6")
		dbSeek(xFilial()+cBanco+cAgencia+cConta)
	Endif

	FKCOMMIT()

	// Guardo portador anterior, para possivel utilizacao no LP
	VAR_IXB			 := SE1->E1_PORTADO



	If cSituacao $ "0FG"

		//Atualizo dados do titulo
		RecLock("SE1")
		SE1->E1_PORTADO := ""
		SE1->E1_AGEDEP  := ""
		SE1->E1_SITUACA := cSituacao
		SE1->E1_NUMBCO  := ""
		SE1->E1_MOVIMEN := dDataBase
		SE1->E1_CONTA	 := ""
		If cSituacao != cSituAnt .And. !Empty(SE1->E1_NUMBOR)
			SE1->E1_NUMBOR := " "
			SE1->E1_DATABOR:= Ctod("  /  /  ")
		EndIf
		FKCOMMIT()

		//Excluo do bordero (SEA) se o titulo voltou para carteira
		dbSelectArea("SEA")
		If dbSeek(cChavEA)
			RecLock("SEA",.F.,.T.)
			dbDelete()
			MsUnlock()
			SX2->(MsUnlock())
		Endif

	Else

		//Atualizo dados do titulo
		RecLock("SE1")
		SE1->E1_PORTADO := cBanco
		SE1->E1_AGEDEP  := cAgencia
		SE1->E1_SITUACA := cSituacao
		SE1->E1_NUMBCO  := cNsNum
		SE1->E1_MOVIMEN := dDataBase
		SE1->E1_CONTA	:= cConta
		FKCOMMIT()

		//Incluo no SEA se o titulo foi para cobranca
		dbSelectArea("SEA")
		If !dbSeek(cChavEA)
			RecLock("SEA",.T.)
		Else
			RecLock("SEA")
		EndIf
		SEA->EA_FILIAL  := xFilial("SEA")
		SEA->EA_DATABOR := dDataBase
		SEA->EA_PORTADO := cBanco
		SEA->EA_AGEDEP  := cAgencia
		SEA->EA_NUMCON  := cConta
		SEA->EA_SITUACA := cSituacao
		SEA->EA_NUM 	:= SE1->E1_NUM
		SEA->EA_PARCELA := SE1->E1_PARCELA
		SEA->EA_PREFIXO := SE1->E1_PREFIXO
		SEA->EA_TIPO	:= SE1->E1_TIPO
		SEA->EA_CART	:= "R"
		SEA->EA_SITUANT := cSituant
		SEA->EA_FILORIG := SE1->E1_FILIAL
		If l060SEA
			ExecBlock("F060SEA",.f.,.f.)
		Endif
		SEA->(MsUnlock())
	Endif
	FKCOMMIT()

	//Contabiliza Transferencias
	If lContabiliza .and. cSituant != SE1->E1_SITUACA
		IF cSituacao $ "0FG" 		//Carteira, Carteira Protesto e Carteira Acordo
			cPadrao:="540"
		ElseIf cSituacao $ "1H"		//Simples e Cartorio
			cPadrao:="541"
		ElseIf cSituacao == "3"		//Caucionada
			cPadrao:="543"
		ElseIf cSituacao == "4"		//Vinculada
			cPadrao:="544"
		ElseIf cSituacao == "5"		//Advogado
			cPadrao:="545"
		ElseIf cSituacao == "6"		//Judicial
			cPadrao:="546"
		EndIf

		//A situacao do titulo mudou de uma cobrança para outra sem passar pela carteira
		If !(cSituacao $ "0FG") .and. !(cSituant  $ "0FG")
			lPadrao2:=VerPadrao(cPadrao2)
		Endif

		lPadrao:=VerPadrao(cPadrao)
		STRLCTPAD := cSituant   // Disponibiliza a situacao anterior para ser utilizada no LP
		VALOR  := 0					// para contabilizar o total descontado (PRIVATE)
		VALOR2 := 0			 		// Saldo dos titulo para contabilizacao da diferenca

		If lPadrao .and. mv_par14 == 1
			If !lCabec
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Inicializa Lancamento Contabil                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nHdlPrv := HeadProva( cLote,;
					                      "FINA200" /*cPrograma*/,;
					                      Substr( cUsuario, 7, 6 ),;
					                      @cArquivo )
				lCabec := .T.
			Endif

			If lCabec
				//Quando existe mudança de situacao de cobranca sem que o titulo passe pela Carteira (Situacao 0)
				//Contabilizo movimento Cobrança -> Carteira
				If lPadrao2
					nTotal += DetProva( nHdlPrv,;
				                    cPadrao2,;
				                    "FINA200" /*cPrograma*/,;
				                    cLote,;
				                    /*nLinha*/,;
				                    /*lExecuta*/,;
				                    /*cCriterio*/,;
				                    /*lRateio*/,;
				                    /*cChaveBusca*/,;
				                    /*aCT5*/,;
				                    /*lPosiciona*/,;
				                    /*@aFlagCTB*/,;
				                    /*aTabRecOri*/,;
				                    /*aDadosProva*/ )
				Endif

				//Contabilizo movimento Carteira -> Cobrança
				nTotal += DetProva( nHdlPrv,;
				                    cPadrao,;
				                    "FINA200" /*cPrograma*/,;
				                    cLote,;
				                    /*nLinha*/,;
				                    /*lExecuta*/,;
				                    /*cCriterio*/,;
				                    /*lRateio*/,;
				                    /*cChaveBusca*/,;
				                    /*aCT5*/,;
				                    /*lPosiciona*/,;
				                    /*@aFlagCTB*/,;
				                    /*aTabRecOri*/,;
				                    /*aDadosProva*/ )
			Endif
		Endif
	EndIf

Endif

RestArea(aArea)


Return


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ExecSchedule³ Autor ³ Aldo Barbosa dos Santos      ³01/07/11³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Retorna se o programa esta sendo executado via schedule     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ExecSchedule()
Local lRetorno := .T.

lRetorno := IsBlind()

Return( lRetorno )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³LoadVlBx    ³ Autor ³ Controladoria                ³01/07/11³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function LoadVlBx( nHdlBco, xBuffer, nTamDet, nValtot, nTotDesp, nTotOutD, nTotValCc, nTotAGer,aLeitura, lBxCnab)
Local aArea		:= GetArea()
Local cOcorr	:= ''
Local cMotBan	:= ''

Local nCont		:= 0
Local nDespes	:= 0
Local nValrec	:= 0
Local nOutrDesp	:= 0
Local nValCc	:= 0   
LOCAL aArqConf 	:= Directory(MV_PAR05)
Local lCustodia := .F.
Local lSai		:= .F.

Default aLeitura := {}
Default lBxCnab	:= GetMv("MV_BXCNAB") == "S"
If !Empty(cArqCfg) .and. ValType(MV_PAR05) == "N"
	MV_PAR05 := AllTrim(cArqCfg) 
Endif                            

aArqConf 	:= Directory(MV_PAR05)

If MV_PAR12 == 1 // modelo do CNAB (Modelo1 # Modelo2)

	If lF200Cus
		lCustodia := ExecBlock("F200CUS") //podendo ser retornado .T. (Verdadeiro )ou .F. (Falso)
	EndIF
	IF SubStr(xBuffer,1,1) $ "1#F#J#7#2" .or. lCustodia
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Lˆ os valores do arquivo Retorno ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF !Empty(cPosDesp)
			nDespes:=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosDesp,1,3))),nLenDesp))/100,2)
		EndIF
		IF !Empty(cPosPrin)
			nValrec :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosPrin,1,3))),nLenPrin))/100,2)
		EndIF
		IF !Empty(cPosOutrd)
			nOutrDesp  :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosOutrd,1,3))),nLenOutrd))/100,2)
		EndIF
		IF !Empty(cPosCc)
			nValCc :=Round(Val(Substr(xBuffer,Int(Val(Substr(cPosCc,1,3))),nLenCc))/100,2)
		EndIF
		If nLenOcor == 2
			cOcorr  :=Substr(xBuffer,Int(Val(Substr(cPosOcor,1,3))),nLenOcor) + " "
		Else
			cOcorr  :=Substr(xBuffer,Int(Val(Substr(cPosOcor,1,3))),nLenOcor)
		EndIf
		If !Empty(cPosMot)
			cMotBan:=Substr(xBuffer,Int(Val(Substr(cPosMot,1,3))),nLenMot)
		EndIf
		
	Endif
Else
	If Len(aLeitura) == 0
		aLeitura := ReadCnab2(nHdlBco,MV_PAR05,nTamDet,aArqConf)
	EndIf
	nDespes  := aLeitura[06]
	nValRec  := aLeitura[05]
	nValCC   := aLeitura[13]
	cOcorr   := PadR(aLeitura[03],3)
	cMotBan  := aLeitura[15]
Endif

If !Empty(cOcorr)
	dbSelectArea("SEB")
	dbSetOrder(1)
	If !(dbSeek(xFilial("SEB")+mv_par06+cOcorr+"R"))
		Help(" ",1,"FA200OCORR",,mv_par06+"-"+cOcorr+"R",4,1)
		
		// Retorno Automatico via Job
		if ExecSchedule()
			Aadd(aMsgSch, STR0026+mv_par06+" "+cOcorr+STR0027) // "Ocorrencia " # " nao localizada na tabela SEB."
		Endif
	Endif
	
	IF SEB->EB_OCORR $ "03ü15ü16ü17ü40ü41ü42ü52ü53"		//Registro rejeitado
		For nCont := 1 To Len(cMotBan) Step 2
			cMotivo := Substr(cMotBan,nCont,2)
			If fa200Rejei(cMotivo,cOcorr)
				lSai := .T.
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Trata tarifas da retirada do titulo do banco	³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lBxCnab
					nTotDesp += nDespes
					nTotOutD += nOutrDesp
				Endif
				Exit
			EndIf
		Next nCont
		
	EndIf
	
	If !lSai
		If SEB->EB_OCORR $ "06ü07ü08ü36ü37ü38ü39"		//Baixa do Titulo  
			DbSelectArea( "FI1" )
			DbSetOrder(1)
			FI1->(dbSeek(xFilial("FI1")+ SE1->E1_NUM ))
				If SE1->E1_NUM == FI1->FI1_IDTIT
					nValtot 	+= nValrec+If(SEE->EE_DESPCRD == "S",nDespes + nOutrDesp - nValCC,0)
				EndIf
			nTotDesp 	+= nDespes
			nTotOutD 	+= nOutrDesp
			nTotValCc 	+= nValCC
			nTotAGer	+= nValrec+If(SEE->EE_DESPCRD == "S",nDespes + nOutrDesp - nValCC,0)
		EndIf
	Endif
Endif

RestArea( aArea )

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³VercIdArq³ Autor ³ Rodrigo Alexandre de Oliveira   ³10/02/15³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Retorna a Próxima numeração válida para o cIdArq            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function VercIdArq(cIdArq, cArquivo)

Local cQuery		:= ""
Local aArea		:= GetArea()
Local aAreaFI0	:= FI0->(GetArea())
Local cAliasQry 	:= GetNextAlias()

#IFDEFTOP

cQuery := "select FI0_ARQ, FI0_IDARQ "
cQuery += " from "  + RetSqlName("FI0") + " FI0 "
cQuery += " where FI0_IDARQ = '" +  PadL(cIdArq,Len(FI0->FI0_IDARQ)) + "' "
cQuery += " and D_E_L_E_T_ = '' "
cQuery += " group by FI0_ARQ, FI0_IDARQ "

cQuery := ChangeQuery(cQuery)
	
dbUseArea( .T. , "TOPCONN" , TcGenQry(,,cQuery) , "cAliasQry" , .T. , .T. )

If !Empty(cAliasQry->FI0_IDARQ)

	While Alltrim(cAliasQry->FI0_ARQ) != Alltrim(cArquivo) .And. cAliasQry->(!Eof())
		
		cIdArq := PadL(Soma1(Alltrim(cIdArq)),Len(FI0->FI0_IDARQ))
		
		DbSelectArea("FI0")
		DbSetOrder(2)
		If MsSeek(xFilial("FI0") + cBanco + cAgencia + cConta + Pad(cArquivo,Len(FI0->FI0_ARQ)))
			If AllTrim(cIdArq) == AllTrim(FI0->FI0_IDARQ)
				cAliasQry->(DbSkip())
				Loop
			ElseIf Val(FI0->FI0_IDARQ) > Val(cIdArq) 
				Loop
			Else
				cAliasQry->(DbSkip())
				Loop
			End
		Else 
			cAliasQry->(DbSkip())
			Loop
		End
		DbSkip()
	EndDo
EndIf
cAliasQry->(DbCloseArea())

#ENDIF
	
RestArea(aArea)
RestArea(aAreaFI0)

Return( cIdArq )

//-------------------------------------------------------------------
/*/{Protheus.doc}F200VALREC
Cálculo do valor recebido de forma BRUTA, no caso de retenção
de impostos (MV_CNABIMP), para processamento da BAIXA pelo FINA070.

@param dRef - Data de Referencia 
@param nValRec - Valor Recebido 
@param lBxTotal - Baixa total 
@param nTotAbImp - Total de IMPOSTOS na emissão. 
 
@return nValRet - Retorna o Valor Recebido BRUTO c/ impostos.

@author Leonardo Castro
@since  03/08/2015
/*/
//-------------------------------------------------------------------

Function F200VALREC(dRef,nValRec,lBxTotal,nTotAbImp)

Local aArea			:= GetArea()
Local aAreaSA1		:= SA1->(GetArea("SA1"))
Local aAreaSED		:= SED->(GetArea("SED"))
Local nValRet		:= 0
Local nPercCalc		:= 0

Local lPccBxCr	:= If (lFuncPCCBx,FPccBxCr(),.F.) //Controla o Pis Cofins e Csll na Baixa
Local lIrPjBxCr	:= If (lFindIrBx,FIrPjBxCr(),.F.) //Controla IRPJ na Baixa

Default dRef		:= dDataBase
Default nValRec		:= 0
Default lBxTotal	:= .T.
Default nTotAbImp	:= 0

nValRet := nValRec

If dRef >= cToD("22/06/2015")

	DbSelectArea("SA1")
	SA1->(DbSetOrder(1))
	SA1->(DbSeek(xFilial("SA1")+SE1->E1_CLIENTE))
	
	DbSelectArea("SED")
	SED->(DbSetOrder(1))
	SED->(DbSeek(xFilial("SED")+SE1->E1_NATUREZ))
	
	//Monto PERCENTUAL de calculo de impostos na baixa.
	nPercCalc	:= IIF(lPccBxCr, SED->(ED_PERCPIS + ED_PERCCOF + ED_PERCCSL), 0 )
	nPercCalc	+= IIF(lIrPjBxCr, IIF(SED->ED_PERCIRF > 0, SED->ED_PERCIRF, GetMV("MV_ALIQIRF")) , 0 )

	/* Neste momento sera feita a recomposição do valor recebido */ 

	// BAIXA TOTAL
	If lBxTotal
		
		nValRet += nTotAbImp

		If lPccBxCr .And. SE1->(E1_PIS + E1_COFINS + E1_CSLL) > 0
			nValRet += SE1->( E1_PIS + E1_COFINS + E1_CSLL )
		EndIf
		
		If lIrPjBxCr .And. SE1->E1_IRRF > 0
			nValRet += SE1->E1_IRRF
		EndIf
	
	// BAIXA RESIDUAL (ZERA SALDO)
	ElseIf SE1->E1_SALDO == Round( (nValRet + nTotAbImp) / ( 1 - (nPercCalc/100) ) , 2 )
		
		nValRet := SE1->E1_SALDO
	
	// BAIXA PARCIAL
	Else

		nValRet := Round( (nValRet) / ( 1 - (nPercCalc/100) ) , 2 )

	EndIf
	
EndIf

RestArea(aAreaSED)
RestArea(aAreaSA1)
RestArea(aArea)

Return nValRet
