#INCLUDE "ERROR.CH"

#DEFINE PESQ_SAY  10
#DEFINE PESQ_GET  70
#DEFINE PESQ_TOP  5
#DEFINE PESQ_SKIP 15

Static __lPointSB6
Static oGets,__cLineOK, oGetDados, nCount, __nOpcx
Static __lFirstXE
Static __aKeys
//Statics da AtuSalDup
Static nMCusto
Static cTiposLC
Static __lSemServer
Static __lCleaned := .f.

Static __SpecialKey	:= NIL
Static __HasFunType

#include "protheus.ch"
#include "MATXATU.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ AxVisual ³ Autor ³ Jorge Queiroz         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa generico para visualizacao 		                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ AxVisual(ExpC1,ExpN1,ExpN2,ExpA1,ExpN3,ExpC1)              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³			 ³ ExpN2 = Numero do registro                                 ³±±
±±³			 ³ ExpN3 = Numero da opcao selecionada                        ³±±
±±³			 ³ ExpA4 = Array com os campos a serem mostrados              ³±±
±±³			 ³ ExpN5 = Coluna a ser impressa uma determinada mensagem	  ³±±
±±³			 ³ ExpC6 = Mensagem a ser impressa                            ³±±
±±³			 ³ ExpC7 = Funcao a ser executada antes de entrar na tela	  ³±±
±±³			 ³ ExpA8 = Array com os botoes da EnchoiceBar            	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static FUNCTION AxVisual(cAlias,nReg,nOpc,aAcho,nColMens,cMensagem,cFunc,aButtons,lMaximized)

Local aArea    := GetArea()
Local aPosEnch := {}
Local nOpcA    := 3
Local cCpoFil  := PrefixoCpo(cAlias)+"_FILIAL"
Local cMemo    := ""
LOcal nX       := 0
Local oDlg    
Local lVirtual:=.F. // Qdo .F. carrega inicializador padrao nos campos virtuais
Local nTop
Local nLeft
Local nBottom
Local nRight

Private Altera :=.F.
Private Inclui :=.F.
Private aTELA[0][0]
Private aGETS[0]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VerIfica se esta' vizualizando um registro da mesma filial            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea(cAlias)
If (cAlias)->(FieldPos(cCpoFil))==0 .Or. (cAlias)->(FieldGet(FieldPos(cCpoFil))) == xFilial(cAlias)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta a entrada de dados do arquivo						     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RegToMemory(cAlias, .F., .F. )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa variaveis para campos Memos Virtuais						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("aMemos")=="A"
		For nX := 1 To Len(aMemos)
			cMemo := aMemos[nX][2]
			If ExistIni(cMemo)
				&cMemo := InitPad(SX3->X3_RELACAO)
			Else
				&cMemo := ""
			EndIf
		Next nX
	EndIf
	If cFunc != NIL
		lVirtual:=.T.
		&cFunc.()
	EndIf

	If SetMDIChild()
		oMainWnd:ReadClientCoors()
		nTop := 40
		nLeft := 30 
		nBottom := oMainWnd:nBottom-80
		nRight := oMainWnd:nRight-70		
	Else
		nTop := 135
		nLeft := 0
		nBottom := TranslateBottom(.T.,28)
		nRight := 632
	EndIf

	DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd

	If lMaximized <> NIL
		oDlg:lMaximized := lMaximized
	EndIf

	aPosEnch := {,,(oDlg:nClientHeight - 4)/2,}  // ocupa todo o  espaço da janela

	If nColMens != NIL
		EnChoice( cAlias, nReg, nOpc ,,,,aAcho,aPosEnch,,,nColMens,cMensagem,,,,lVirtual)
	Else
		EnChoice( cAlias, nReg, nOpc ,,,,aAcho,aPosEnch,,,,,,,,lVirtual)
	EndIf

	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpcA := 1,oDlg:End()},{|| nOpcA := 2,oDlg:End()},,aButtons)
Else
	Help(" ",1,"A000FI")
	nOpcA := 3
EndIf
RestArea(aArea)
Return(nOpcA)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ AxAltera ³ Autor ³ Jorge Queiroz 	    ³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa generico para alteracao 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpN1 := AxAltera(ExpC1,ExpN2,ExpN3,ExpA1,ExpA2)			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³			 ³ ExpN2 = Numero do registro                                 ³±±
±±³			 ³ ExpN3 = Numero da opcao selecionada                        ³±±
±±³			 ³ ExpA4 = Array com os campos a serem mostrados              ³±±
±±³			 ³ ExpN5 = Coluna a ser impressa uma determinada mensagem	  ³±±
±±³			 ³ ExpC6 = Mensagem a ser impressa                            ³±±
±±³			 ³ ExpC7 = Funcao de validacao para confirmacao dos dados	  ³±±
±±³			 ³ ExpC8 = Funcao a ser chamada durante a transacao           ³±±
±±³			 ³ ExpC9 = Funcao a ser chamada antes da interface            ³±±
±±³			 ³ ExpAA = Array com os botoes da EnchoiceBar            	  ³±±
±±³			 ³ ExpAB = Array de codeblock de execucao                	  ³±±
±±³			 ³ ExpAC = Array da rotina automatica                    	  ³±±
±±³			 ³ ExpLD = Carrega os campos virtuais? (.T.=Sim/.F.=Nao		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AxAltera(cAlias,nReg,nOpc,aAcho,aCpos,nColMens,cMensagem,cTudoOk,cTransact,cFunc,aButtons,aParam,aAuto,lVirtual,lMaximized)

Local aArea    := GetArea(cAlias)
Local aPosEnch := {}
Local bCampo   := {|nCPO| Field(nCPO) }
Local bOk      := Nil
Local bOk2     := {|| .T.}
Local cCpoFil  := PrefixoCpo(cAlias)+"_FILIAL"
Local cMemo    := ""
Local nOpcA    := 0
Local nX       := 0
Local oDlg
Local nTop
Local nLeft
Local nBottom
Local nRight
Local cAliasMemo
Local bEndDlg := {|lOk| lOk:=oDlg:End(), nOpcA:=1, lOk}

Private aTELA[0][0]
Private aGETS[0]

DEFAULT lVirtual:= .F.
DEFAULT cTudoOk := ".T."
DEFAULT nReg    := (cAlias)->(RecNO())
DEFAULT bOk := &("{|| "+cTudoOk+"}")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Processamento de codeblock de validacao de confirmacao            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aParam)
	bOk2 := aParam[2]
EndIf	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VerIfica se esta' alterando um registro da mesma filial               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea(cAlias)
If (cAlias)->(FieldPos(cCpoFil))==0 .Or. (cAlias)->(FieldGet(FieldPos(cCpoFil))) == xFilial(cAlias)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta a entrada de dados do arquivo						     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If SoftLock(cAlias)
		RegToMemory(cAlias,.F.,lVirtual)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa variaveis para campos Memos Virtuais		 			  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Type("aMemos")=="A"
			For nX:=1 to Len(aMemos)
				cMemo := aMemos[nX][2]
				If ExistIni(cMemo)
					&cMemo := InitPad(SX3->X3_RELACAO)
				Else
					&cMemo := ""
				EndIf
			Next nX
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa variaveis para campos Memos Virtuais		 			  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( ValType( cFunc ) == 'C' )
		    If ( !("(" $ cFunc) )
			   cFunc+= "()"
			EndIf
			&cFunc
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processamento de codeblock de antes da interface                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(aParam)
			Eval(aParam[1],nOpc)
		EndIf		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Envia para processamento dos Gets				   	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If aAuto == Nil

			If SetMDIChild()
				oMainWnd:ReadClientCoors()
				nTop := 40
				nLeft := 30 
				nBottom := oMainWnd:nBottom-80
				nRight := oMainWnd:nRight-70		
			Else
				nTop := 135
				nLeft := 0
				nBottom := TranslateBottom(.T.,28)
				nRight := 632
			EndIf
			
			// Build com correção no tratamento dos controles pendentes na dialog ao executar o método End()
			If GetBuild() >= "7.00.060302P" 
				bEndDlg := {|lOk| If(lOk:=oDlg:End(),nOpcA:=1,nOpcA:=3), lOk}
			EndIf

			DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd	

			If lMaximized <> NIL
				oDlg:lMaximized := lMaximized
			EndIf

			aPosEnch := {,,(oDlg:nClientHeight - 4)/2,}
			If nColMens != Nil
				nOpcA := EnChoice( cAlias, nReg, nOpc, ,"CRA",oemtoansi(STR0004),aAcho,aPosEnch,aCpos,,nColMens,cMensagem,cTudoOk,,lVirtual ) //"Quanto …s altera‡”es?"
			Else
				nOpcA:=EnChoice( cAlias, nReg, nOpc, ,"CRA",oemtoansi(STR0004),aAcho,aPosEnch,aCpos,,,,cTudoOk,,lVirtual) //"Quanto …s altera‡”es?"
			EndIf
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| IIf(Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc),Eval(bEndDlg),(nOpcA:=3,.F.))},{|| nOpcA := 3,oDlg:End()},,aButtons,nReg,cAlias)
		Else
			If EnchAuto(cAlias,aAuto,{|| Obrigatorio(aGets,aTela) .And. Eval(bOk).And.Eval(bOk2,nOpc)},nOpc,aCpos)
				nOpcA := 1
			EndIf
		EndIf
		(cAlias)->(MsGoTo(nReg))
		If nOpcA == 1
			Begin Transaction
				RecLock(cAlias,.F.)
				For nX := 1 TO FCount()
					FieldPut(nX,M->&(EVAL(bCampo,nX)))
				Next nX
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Grava os campos Memos Virtuais					  				  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If Type("aMemos") == "A"
					For nX := 1 to Len(aMemos)
						cVar := aMemos[nX][2]
						cVar1:= aMemos[nX][1]
//Incluído parametro com o nome da tabela de memos => para módulo APT
						cAliasMemo := If(len(aMemos[nX]) == 3,aMemos[nX][3],Nil)
						MSMM(&cVar1,TamSx3(aMemos[nX][2])[1],,&cVar,1,,,cAlias,aMemos[nX][1],cAliasMemo)
					Next nX
				EndIf
				If cTransact != Nil
					If !("("$cTransact)
						cTransact+="()"
					EndIf
					&cTransact
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Processamento de codeblock dentro da transacao                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty(aParam)
					Eval(aParam[3],nOpc)
				EndIf				
			End Transaction
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Processamento de codeblock fora da transacao                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(aParam)
				Eval(aParam[4],nOpc)
			EndIf					
		EndIf		
	Else
		nOpcA := 3
	EndIf
Else
	Help(" ",1,"A000FI")
	nOpcA := 3
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade dos dados                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MsUnLockAll()
RestArea(aArea)
Return(nOpcA)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ AxInclui ³ Autor ³ Jorge Queiroz 	    ³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa generico para iclusao							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void AxInclui(ExpC1,ExpN1,ExpN2,ExpA1,ExpC2) 			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³			 ³ ExpN2 = Numero do registro                                 ³±±
±±³			 ³ ExpN3 = Numero da opcao selecionada                        ³±±
±±³			 ³ ExpA4 = Array com os campos a serem mostrados              ³±±
±±³			 ³ ExpC5 = Funcao de validacao para confirmacao dos dados	  ³±±
±±³			 ³ ExpL6 = Controle da CondPad                                ³±±
±±³			 ³ ExpC7 = Funcao a ser chamada durante a transacao           ³±±
±±³			 ³ ExpA8 = Array com os botoes da EnchoiceBar            	  ³±±
±±³			 ³ ExpA9 = Array de codeblock de execucao                	  ³±±
±±³			 ³ ExpAA = Array da rotina automatica                    	  ³±±
±±³			 ³ ExpAB = Inicializa os campos virtuais?                    	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AxInclui(cAlias,nReg,nOpc,aAcho,cFunc,aCpos,cTudoOk,lF3,cTransact,aButtons,aParam,aAuto,lVirtual,lMaximized)

Local aArea    := GetArea(cAlias)
Local aCRA     := { oemtoansi(STR0001),oemtoansi(STR0002),oemtoansi(STR0003) }//"Confirma" ### "Redigita" ### "Abandona"
Local aSvRot   := Nil
Local aPosEnch := {}
Local cMemo    := ""
Local nX       := 0
Local nOpcA    := 0
Local nLenSX8  := GetSX8Len()
Local bCampo   := {|nCPO| Field(nCPO) }
Local bOk      := Nil
Local bOk2     := {|| .T.}
Local oDlg
Local nTop
Local nLeft
Local nBottom
Local nRight
Local cAliasMemo
Local bEndDlg := {|lOk| lOk:=oDlg:End(), nOpcA:=1, lOk}

Private aTELA[0][0]
Private aGETS[0]

DEFAULT cTudoOk := ".T."
DEFAULT bOk     := &("{|| "+cTudoOk+"}")
DEFAULT lF3     := .F.
DEFAULT lVirtual:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Processamento de codeblock de validacao de confirmacao            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aParam)
	bOk2 := aParam[2]
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo							 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpc == Nil
	nOpc := 3
	If Type("aRotina") == "A"
		aSvRot := aClone(aRotina)
	EndIf
	Private aRotina := { { " "," ",0,1 } ,{ " "," ",0,2 },{ " "," ",0,3 } }
EndIf
RegToMemory(cAlias, .T., lVirtual )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa variaveis para campos Memos Virtuais (GILSON)			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type("aMemos")=="A"
	For nX :=1 To Len(aMemos)
		cMemo := aMemos[nX][2]
		If ExistIni(cMemo)
			&cMemo := InitPad(SX3->X3_RELACAO)
		Else
			&cMemo := ""
		EndIf
	Next nX
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcoes executadas antes da chamada da Enchoice      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cFunc != NIL
	&cFunc.()
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Processamento de codeblock de antes da interface                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aParam)
	Eval(aParam[1],nOpc)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia para processamento dos Gets					 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aAuto == Nil

	If SetMDIChild()
		oMainWnd:ReadClientCoors()
		nTop := 40
		nLeft := 30 
		nBottom := oMainWnd:nBottom-80
		nRight := oMainWnd:nRight-70		
	Else
		nTop := 135
		nLeft := 0
		nBottom := TranslateBottom(.T.,28)
		nRight := 632
	EndIf
	
	// Build com correção no tratamento dos controles pendentes na dialog ao executar o método End()
	If GetBuild() >= "7.00.060302P" 
		bEndDlg := {|lOk| If(lOk:=oDlg:End(),nOpcA:=1,nOpcA:=3), lOk}
	EndIf

	DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd

	If lMaximized <> NIL
		oDlg:lMaximized := lMaximized
	EndIf

	aPosEnch := {,,(oDlg:nClientHeight - 4)/2,}
	EnChoice( cAlias, nReg, nOpc, aCRA,"CRA",oemtoansi(STR0005),aAcho, aPosEnch , aCpos, , , ,cTudoOk,,lF3,lVirtual) //"Quanto … inclus„o?"
	If lF3  // Esta na conpad, desabilita o trigger por execblock
		SetEntryPoint(.f.)
	EndIf
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| If(Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc),Eval(bEndDlg),(nOpcA:=3,.f.))},{|| nOpcA := 3,oDlg:End()},,aButtons)
Else
	If EnchAuto(cAlias,aAuto,{|| Obrigatorio(aGets,aTela).And.Eval(bOk).And.Eval(bOk2,nOpc)},nOpc,aCpos)
		nOpcA := 1
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gravacao da enchoice                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcA == 1
	Begin Transaction
		RecLock(cAlias,.T.)
		For nX := 1 TO FCount()
			If "_FILIAL"$FieldName(nX)
				FieldPut(nX,xFilial(cAlias))
			Else
				FieldPut(nX,M->&(EVAL(bCampo,nX)))
			EndIf
		Next nX
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava os campos Memos Virtuais         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Type("aMemos") == "A"
			For nX := 1 to Len(aMemos)
				cVar := aMemos[nX][2]
//Incluído parametro com o nome da tabela de memos => para módulo APT
				cAliasMemo := If(len(aMemos[nX]) == 3,aMemos[nX][3],Nil)
				MSMM(,TamSx3(aMemos[nX][2])[1],,&cVar,1,,,cAlias,aMemos[nX][1],cAliasMemo)
			Next nX
		EndIf
		While ( GetSX8Len() > nLenSX8 )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Confirma a numeracao com a verificacao do numero gravado ativado  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			ConfirmSx8()
		EndDo
		If cTransact != Nil
			If !("("$cTransact)
				cTransact+="()"
			EndIf
			&cTransact
		EndIf		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processamento de codeblock dentro da transacao                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(aParam)
			Eval(aParam[3],nOpc)
		EndIf		
	End Transaction
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento de codeblock fora da transacao                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(aParam)
		Eval(aParam[4],nOpc)
	EndIf
Else
	While ( GetSX8Len() > nLenSX8 )
		RollBackSX8()
	EndDo
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade dos dados                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aSvRot != Nil
	aRotina := aClone(aSvRot)
EndIf
RestArea(aArea)
lRefresh := .T.
Return(nOpcA)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Obrigatori³ Autor ³ Jorge Queiroz 		³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ VerIfica se todos os campos obrigatorios foram digitados.  ³±±
±±³			 ³ 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpL1 := Obrigatori(ExpA1,ExpA2) 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = Retorna .F. se algum campo obrigatorio esta vazio  ³±±
±±³			 ³ ExpA1 = Array com os campos a serem verIficados 			  ³±±
±±³			 ³ ExpA2 = Array com os titulos da tela						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  Obrigatorio(aGets,aTela,tObg,lShow)
Local i,n,bCampo,x,y, cText := "", cByte
#ifdef ENGLISH
	Local aPos := {"First","Second","Third","Fourth","Fifth","Sixth","Seventh","Eighth","Ninth","Last"}
	Local cFold := "Folder"
#else
	#ifdef SPANISH
		Local aPos := {"Primera","Segunda","Tercera","Cuarta","Quinta","Sexta","Septima","Octava","Novena","Ultima"}
		Local cFold := "Carpeta"
	#else
		Local aPos := {"Primeira","Segunda","Terceira","Quarta","Quinta","Sexta","Setima","Oitava","Nona","Ultima"}
		Local cFold := "Pasta"
	#endif
#endif

DEFAULT lShow := .T.

bCampo := {|nCPO| Field(nCPO) }
tObg:=""
FOR i:=1 TO LEN(aGETS)
	If SubStr(aGETS[i],25,1) == "T" .AND. Empty(M->&(SubStr(aGETS[i],9,10)))
		AchaATELA(@x,@y,i,aTela)
		If x*y > 0
			tObg:=tObg+aTELA[x][y]
			If Empty(ctext)
				cByte := Subs(aGets[i],27,1)
				If cByte == " "
					cText := Subs(aTela[x,y],1,18)
				ElseIf cByte$"123456789"
					cText := Subs(aTela[x,y],1,18)+" -> "+aPos[Val(cByte)]+" "+cFold
				Else
					cText := Subs(aTela[x,y],1,18)+" -> "+aPos[10]+" "+cFold
				EndIf
			EndIf
		Else
			tObg := "VV"
		EndIf
	EndIf
	
NEXT i

cText := cText + Space(50-Len(cText))

If LEN(tObg) > 0
	If lShow
		Help(1," ","OBRIGAT",,cText,3,0)
	EndIf
	Return .F.
EndIf
Return .T.

Static Function AchaAtela(x,y,i,aTELA)
Local ni, nJ:= 0
For ni:=1 to Len(aTela)
	If !Empty(aTela[ni,1])
		nJ++
	EndIf
	If nJ == i
		x := ni
		y := 1
		Return Nil
	EndIf
	If !Empty(aTela[ni,3])
		nJ++
	EndIf
	If nJ == i
		x := ni
		y := 3
		Return Nil
	EndIf
Next
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AxPesqui	³ Autor ³ Jorge Queiroz 		³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pesquisas genericas										  ³±±
±±³			 ³ 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ AxPesqui()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AxPesqui()
Local oDlg, oCbx, cOrd, oBigGet
Local nSavReg, cAlias, ni, nj
Local cCpofil, dCampo
Local nOrd    := 1
Local lSeek   := .F.
Local aLista  := {}
Local bSav12  := SetKey(VK_F12)
Local cCampo  := Space(40)

Local lDetail := .F.
Local lUseDetail := .F.
Local aAllLista
Local oDetail
Local aMyOrd	:= {}
Local aScroll	:= {}
Local lSeeAll   := GetBrwSeeMode()
Local aPesqVar  := {}
Local cVar
Local bBloco
Local cMsg := ""

Private aOrd     := {}

/*/
aLista
[1] := F3
[2] := tipo
[3] := tamanho
[4] := decimais
[5] := titulo
/*/

SetKey(VK_F12,{|| NIL})

cAlias := Alias()
DbSelectArea(cAlias)
cCpofil := PrefixoCpo(cAlias)+"_FILIAL"
nSavReg := Recno()

If cCpofil $ Indexkey()	.and. !lSeeAll
	If &cCpofil!=cFilial
		DbSeek(cFilial)
	Endif
Else
	DbGoTop()
EndIf

If Eof()
	Help(" ",1,"A000FI")
	SetKey(VK_F12,bSav12)
	Return 3
EndIf

If nSavReg!=Recno()
	DbGoTo(nSavReg)
Endif

AxPesqOrd(cAlias,@aMyOrd,@lUseDetail,lSeeAll)

nOrd := 1
cOrd := aOrd[1]
For nI := 1 To Len(aOrd)
	aOrd[nI] := OemToAnsi(aOrd[nI])
Next

If IndexOrd() > Len(aOrd)
	cOrd := 1 //aOrd[Len(aOrd)]
	nOrd := 1 //Len(aOrd)
ElseIf IndexOrd() <= 1
	cOrd := aOrd[1]
	nOrd := 1
Else
	cOrd := aOrd[IndexOrd()]
	nOrd := IndexOrd()
EndIf

If lUseDetail .and. !PesqList(cAlias,lSeeAll,@aPesqVar,@aAllLista,@cMsg)
	Help(,,"PESQLIST",,STR0048+cMsg+STR0049,1,1)	//"O campo "###" não foi encontrado no Didionário de Campos (SX3)"
	Return 0
EndIf

DEFINE MSDIALOG oDlg FROM 00,00 TO 100,490 PIXEL TITLE OemToAnsi(STR0010) //"Pesquisa"

@05,05 COMBOBOX oCBX VAR cOrd ITEMS aOrd SIZE 206,36 PIXEL OF oDlg FONT oDlg:oFont

@22,05 MSGET oBigGet VAR cCampo SIZE 206,10 PIXEL

DEFINE SBUTTON FROM 05,215 TYPE 1 OF oDlg ENABLE ACTION (lSeek := .T.,oDlg:End())
DEFINE SBUTTON FROM 20,215 TYPE 2 OF oDlg ENABLE ACTION oDlg:End()

If ( lUseDetail )
	DEFINE SBUTTON oDetail FROM 35,215 TYPE 5 OF oDlg ENABLE ONSTOP STR0032 ACTION (lDetail := PesqDetail(lDetail,@oDlg,@aScroll,@oBigGet,nOrd))	//"Detalhes"

	For ni := 1 To Len(aAllLista)
		Aadd(aScroll,NIL)
		@22,05 SCROLLBOX aScroll[ni] VERTICAL SIZE 84,205 BORDER
		aScroll[ni]:Hide()

		For nj := 1 To Len(aAllLista[ni])
			cVar := "aPesqVar["+StrZero(ni,2)+"]["+StrZero(nj,2)+"]"
			bBloco  := &("{ | u | If( PCount() == 0, "+cVar+","+cVar+" := u)}")
			PesqInit(aAllLista[ni],aScroll[ni],nj,bBloco,cVar)
		Next
	Next
	
	oCbx:bChange := {|| PesqChange(@nOrd,oCbx:nAt,@aLista,cAlias,@aAllLista,@aScroll,@lDetail,@oDetail,@oDlg,@oBigGet)}
	aLista := Aclone(aAllLista[nOrd])
Else
	oCbx:bChange := {|| nOrd := oCbx:nAt}
EndIf

ACTIVATE MSDIALOG oDlg CENTERED

If ( lSeek )
	AxPesqSeek(cAlias,lDetail,cCampo,aLista,aMyOrd,nOrd,lSeeAll,aPesqVar)
	SetKey(VK_F12,bSav12)
Else
	SetKey(VK_F12,bSav12)
	Return 0
EndIf

Return 1

Static Function  AxPesqSeek(cAlias,lDetail,cCampo,aLista,aMyOrd,nOrd,lSeeAll,aPesqVar)
Local nReg
Local nChave  := 1
Local cFil    := ""
Local cCpofil := PrefixoCpo(cAlias)+"_FILIAL"
Local aFils	  := {}
Local nI

DbSelectArea(cAlias)
If ( lDetail )
	cCampo := ""
	For nI := 1 To Len(aPesqVar[nOrd])
		If ( aLista[nI][2] == "C" .And. (Len(cCampo) <> aLista[nI][3]) )
			cCampo += Subs(aPesqVar[nOrd][nI],1,aLista[nI][3])
		ElseIf ( aLista[nI][2] == "D" )
			cCampo += Dtos(aPesqVar[nOrd][nI])
		ElseIf ( aLista[nI][2] == "N" )
			cCampo += Str(aPesqVar[nOrd][nI],aLista[nI][3],aLista[nI][4])
		Else
			cCampo += aPesqVar[nOrd][nI]
		EndIf
	Next
EndIf
cCampo := Trim(cCampo)
nReg := Recno()
SET SOFTSEEK ON
DbSetOrder(aMyOrd[nOrd, 1])
If cCpofil $ IndexKey()  //Procura pela filial
	cFil := cFilial
	nChave := 11
EndIf

If !lDetail .and. (("DTOS" $ Upper(IndexKey(nOrd))) .Or. ("DTOC" $ Upper(IndexKey(nOrd)))) .And. cAlias != "SM2"
	If ( lSeeAll )
		cCampo := Subs(cCampo, 1, 2) + ConvData(IndexKey(nOrd), Subs(cCampo, 3 ))
	Else
		cCampo := ConvData(IndexKey(nOrd), cCampo)
	EndIf
EndIf

If Subs(cAlias,1,3) == "SM2"
	dCampo:=Ctod(AllTrim(cCampo))
	DbSeek(dCampo)

ElseIf !(cCpofil $ IndexKey()) .or. !aMyOrd[nOrd, 2] .or. lSeeAll
	DbSeek(cCampo)
	
	If ( lSeeAll )
		aFils	:= GetBrwFils()
		cFil	:= &cCpoFil
		
		// Testa se o usuario pode ver a filial encontrada.
		// Se não puder posiciona na proxima filial valida para o usuário, se não puder vai para EOF
		
		If ( AScan(aFils, cFil ) == 0 )
			If ( (nI:=AScan(aFils, {|x| x > cFil} )) == 0 )
				DbSeek(chr(255))
			Else
				DbSeek(aFils[nI])
			EndIf
		EndIf
		
	EndIf
	
Else
	DbSeek(cFilial+cCampo)
	If Subs(&(IndexKey()),1,2) != cFilial	 // IR Para EOF
		DbSeek(chr(255))
	EndIf
EndIf

If Eof()
	DbGoTo(nReg)
	Help(" ",1,"PESQ01")
EndIf
SET SOFTSEEK OFF
lRefresh := .t.
Return

Static Function  AxPesqOrd(cAlias,aMyOrd,lUseDetail,lSeeAll,aRetOrd)
Local aTemp := {}
Local cIndice
Local nI

If Type("aOrd") == "U"
	Private aOrd := {}
EndIf

If !(cAlias $ "SX6/SX9/SX7")
	PesqOrd(cAlias,@aMyOrd, lSeeAll)
	
	If ( ValType(aMyOrd[1]) != 'A' )
	
		aTemp	:= AClone(aMyOrd)
		aMyOrd	:= {}
		
		For nI := 1 To Len(aTemp)
			Aadd( aMyOrd, { nI, aTemp [nI] } )	
		Next
		
	EndIf
	
	lUseDetail := .T.
ElseIf cAlias == "SX7"
	cIndice	:= OemToAnsi(STR0043) // " Campo+Sequencia"
	Aadd(aOrd," "+cIndice)
	AADD(aMyOrd, { 1, .T. } )
	lUseDetail := .F.
ElseIf cAlias == "SX6"
	cIndice	:= OemToAnsi(STR0006) // " Filial+Parametro"
	Aadd(aOrd," "+cIndice)
	AADD(aMyOrd, { 1, .T. } )
	lUseDetail := .F.
Else
	cIndice	 := OemToAnsi(STR0007) //" Dominio+C.Dominio"
	Aadd(aOrd," "+cIndice)
	AADD(aMyOrd, { 1, .T. } )	
	lUseDetail := .F.
EndIf

aRetOrd := aOrd
Return

Static Function  PesqChange(nOrd,nAt,aLista,cAlias,aAllLista,aScroll,lDetail,oDetail,oDlg,oBigGet)

If nOrd <> nAt .and. aAllLista <> NIL
	aLista := Aclone(aAllLista[nAt])	
	aScroll[nOrd]:Hide()

	If Empty(aLista)
			lDetail := .T.
			lDetail := PesqDetail(lDetail,@oDlg,@oScroll,@oBigGet)
			oDetail:Disable()
	Else
		oDetail:Enable()
		EndIf
	
	If lDetail
		aScroll[nAt]:Show()
	EndIf
	nOrd := nAt
EndIf
Return NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ ExistIni ³ Autor ³ Ary Medeiros			³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ VerIfica se campo tem inicializador padrao				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ ExpL1 := ExistIni(ExpC2)									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = Retorna .t. se existir							  ³±±
±±³			 ³ ExpC2 = Campo a ser verIficado							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  ExistIni(cCpo,lPosSX3)

DEFAULT lPosSX3 := .T.

If lPOSSX3
	SX3->(dbSetOrder(2))
	SX3->(MsSeek(cCpo)) 
	SX3->(dbSetOrder(1))
EndIf

Return(!Empty(GetSx3Cache(cCpo,"X3_RELACAO")))

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ InitPad	³ Autor ³ Ary Medeiros		    ³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Inicializa campo de acordo com formula pre-definida		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ InitPad(ExpC1) 											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Formula a ser executada							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  InitPad(xForm,cTitulo)

Local bBlock:=ErrorBlock()
Local bErro := errorBlock( { |e| InitErr(e) } )
Local xRet

DEFAULT cTitulo := X3Titulo()

If STR0011$xForm //"FORMULA"
	If !('"'$xForm)
		xForm := Substr(xForm,1,8)+'"'+Substr(xForm,9,3)+'")'
	EndIf
EndIf

BEGIN SEQUENCE
xRet := &xForm
End SEQUENCE
ErrorBlock(bBlock)
//If "FORMULA"$xForm
If xRet == nil
	HELP(" ",1,"INITERR",, cTitulo,4,2)
EndIf
//EndIf
Return xRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ InitErr	³ Autor ³ Ary Medeiros			  ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Controle de Erro no Inicializador padrao						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ InitErr(ExpO1) 														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = Objeto Error 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  InitErr(e)
If ( e:genCode == EG_ZERODIV )
	Return (0)
EndIf
If (e:GenCode == EG_NOALIAS)
	#ifndef PROG
		Chkfile(e:Operation)
		Return
	#else
		Alert("Vou abrir o " +e:Operation )
		Chkfile(e:Operation)
		Return
	#endif
EndIf
If e:gencode > 0
	Tone(3000,1)
	HELP(" ",1,"INITERR",, X3Titulo(),4,2)
	BREAK
EndIf

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ ProxReg	³ Autor ³ Ary Medeiros			  ³ Data ³		     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna ultimo registro incrementado						     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpC1 := ProxReg(ExpN2,ExpN3,ExpN4) 						     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Retorna Registro incrementado							  ³±±
±±³			 ³ ExpN2 = Incremento													  ³±±
±±³			 ³ ExpN3 = Posicoes utilizadas										  ³±±
±±³			 ³ ExpN4 = Indice Utilizado											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  ProxReg(nInc,nPos,nIndice)
Local cSavAlias := Alias(), nSavRec
Local cRet := ""
Local nOrdem:=IndexOrd()
nIndice := Iif(nIndice==NIL,1,nIndice)

nSavRec := RecNo()
DbSetOrder(nIndice)
Set SoftSeek On
DbSeek(SubStr(cFilial,1,1)+Chr(ASC(Substr(cFilial,2,1))+1))
Set SoftSeek Off
DbSkip(-1)
cRet := &(SX3->X3_CAMPO)
If SX3->X3_TIPO == "N" .or. SX3->X3_TIPO == "D"
	cRet += nInc
ElseIf SX3->X3_TIPO == "C"
	cRet := StrZero(Val(cRet)+nInc,If(nPos > SX3->X3_TAMANHO,SX3->X3_TAMANHO,nPos))
	cRet := cRet+Space(SX3->X3_TAMANHO-Len(cRet))
EndIf
DbSetOrder(nOrdem)
DbGoTo(nSavRec)
Return cRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FuncAMoeda³ Autor ³ Wagner Xavier 	     ³ Data ³ 16/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Devolve um array com o valor do titulo em ate 5 moedas.	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpA1 := FuncAMoeda(ExpD1,ExpN1,ExpN2) 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array que sera devolvido com os 5 valores			  ³±±
±±³			 ³ ExpD1 = Data utilizada como referencia 						  ³±±
±±³			 ³ ExpN1 = Valor utilizado como referencia					     ³±±
±±³			 ³ ExpN2 = Moeda em que o titulo se encontra 					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA040																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  FuncAMoeda(dData,nValor,nMoeda)
Local cAlias:=ALIAS(),aValores[5],nBase:=0,cCampo
nMoeda:=Iif((nMoeda=NIL .Or. nMoeda==0),1,nMoeda)

DbSelectArea("SM2")
Set SoftSeek On
DbSeek(dData)
Set SoftSeek Off
AFILL(aValores,0)

If nMoeda==1
	aValores[1]:=nValor
	aValores[2]:=nValor/SM2->M2_MOEDA2
	aValores[3]:=nValor/SM2->M2_MOEDA3
	aValores[4]:=nValor/SM2->M2_MOEDA4
	aValores[5]:=nValor/SM2->M2_MOEDA5
Else
	cSuf :=Str(nMoeda,1)
	cCampo:= "M2_MOEDA"+cSuf
	//  nBase:=nValor*SM2->M2_MOEDA&cSuf
	nBase:= nValor * FieldGet( FieldPos( cCampo ) )
	aValores[1]:=nBase/1
	aValores[2]:=nBase/SM2->M2_MOEDA2
	aValores[3]:=nBase/SM2->M2_MOEDA3
	aValores[4]:=nBase/SM2->M2_MOEDA4
	aValores[5]:=nBase/SM2->M2_MOEDA5
EndIf
DbSelectArea(cAlias)
Return aValores

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³RunTrigger³ Autor ³ Ary Medeiros			  ³ Data ³ 31/08/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Executa Gatilhos Primarios e Armazena Estrangeiros 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ RunTrigger(ExpN1) 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 := Tipo (1-Enchoice 2-GetDados 3-F3						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

/*/
Static Function  RunTrigger(nTipo,nLin,cMacro,oObj,cField)
Local cSavAlias := Alias()
Local nSavRec
Local cCpo := If(cField == NIL,SX3->X3_CAMPO,cField)
Local cResult, nElem, nSavOrd, cSeek
Local bErro
Local nPos := 0,cCompVal:=""
Local aGetsTrigger
If Type("lNoDetect") == "L"
	bErro := ErrorBlock({ |e| TriggerErr(e,SX7->X7_CAMPO,SX7->X7_SEQUENC,lNoDetect)})
Else
	bErro := ErrorBlock({ |e| TriggerErr(e,SX7->X7_CAMPO,SX7->X7_SEQUENC,.f.)})
EndIf
DbSelectArea("SX7")
nSavRec := Recno()
DbSeek(cCpo)
BEGIN SEQUENCE
While X7_CAMPO == cCpo
	If !Empty(X7_CONDIC)
		If !(&(X7_CONDIC))
			DbSkip()
			Loop
		EndIf
	EndIf
	If X7_Tipo ==	"P"
		If X7_SEEK=="S"
			DbSelectArea(X7_ALIAS)
			nSavOrd := IndexOrd()
			DbSetOrder(SX7->X7_ORDEM)
			DbSeek(&(If(nTipo == 2,TriggerClear(SX7->X7_CHAVE,nLin,cSavAlias),SX7->X7_CHAVE)))
			DbSetOrder(nSavOrd)
			DbSelectArea("SX7")
		EndIf
		If nTipo == 1 .or. nTipo ==	3
			cResult := &(X7_REGRA)
			cMacro := "M->"+X7_CDOMIN
			If ValType(cResult) == "C"
				cResult	:= TriggerSize(X7_CDOMIN,cResult)
				&cMacro := cResult
			Else
				&cMacro := cResult
				cResult := TriggerPict(X7_CDOMIN,cResult)
			EndIf
			If nTipo == 1
				If Type("__cInternet") == "C" .and. __cInternet == "AUTOMATICO" .or. ValType(oObj) <> "O"
					aGetsTrigger := aGets
					aTelaTrigger := aTela
				Else
					aGetsTrigger := oObj:aGets
					aTelaTrigger := oObj:aTela
				EndIf
				If ((nElem := ASCAN(aGetsTrigger,{ |x| Substr(x,9,10) == Substr(cMacro,4)})) # 0)
					If ASC(SubStr(aGetsTrigger[nElem],1,1)) > 64
						cCompVal := Str(ASC(SubStr(aGetsTrigger[nElem],1,1))-55,2)+SubStr(aGetsTrigger[nElem],2,1)
						nPos := Val(cCompVal)
					Else
						nPos := Val(SubStr(aGetsTrigger[nElem],1,2))
					EndIf
					aTelaTrigger[nPos][Val(SubStr(aGetsTrigger[nElem],3,1))+If(Substr(aGetsTrigger[nElem],3,1)=="1",1,2)] := cResult
				EndIf
			Else
				If ((nElem := ASCAN(aGets2,{|x| Substr(x,9,10) == Substr(cMacro,4)})) # 0)
					aTela2[nElem,2] := cResult
				EndIf
			EndIf
		ElseIf nTipo == 2
			cResult := &(TriggerClear(X7_REGRA,nLin,cSavAlias))
			nElem := ASCAN(aHeader,{|x| PADR(x[2],10) == PADR(X7_CDOMIN,10)})
			If nElem > 0
				If ValType(cResult) == "C"
					If Type("aCols") # "U"
						aCols[nLin,nElem] := TriggerSize(X7_CDOMIN,cResult)
					Else
						// p/ GetDadDB
						nElem := (cSavAlias)->(FieldPos(SX7->X7_CDOMIN))
						If nElem > 0
							(cSavAlias)->( FieldPut( nElem,TriggerSize(SX7->X7_CDOMIN,cResult) ) )
						EndIf
					EndIf
				Else
					If Type("aCols") # "U"
						aCols[nLin,nElem] := cResult //TriggerPict(X7_CDOMIN,cResult)
					Else
						// p/ GetDadDB
						nElem := (cSavAlias)->(FieldPos(SX7->X7_CDOMIN))
						If nElem > 0
							(cSavAlias)->(FieldPut(nElem,cResult))
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
		lRefresh := .t.
	ElseIf X7_TIPO == "X"
		DbSelectArea(X7_ALIAS)
		nSavOrd := IndexOrd()
		DbSetOrder(SX7->X7_ORDEM)
		DbSeek(&(SX7->X7_CHAVE))
		DbSetOrder(nSavOrd)
		DbSelectArea("SX7")
	Else
		nElem := ASCAN(aTrigger,{ |aX| aX[1] == X7_CAMPO .and. aX[2]==X7_SEQUENC .and.	aX[5] == nLin })
		If SX7->X7_SEEK=="S"
			DbSelectArea(SX7->X7_ALIAS)
			cSeek := &(If(nTipo == 2,TriggerClear(SX7->X7_CHAVE,nLin,cSavAlias),SX7->X7_CHAVE))
			DbSeek(cSeek)
			DbSelectArea("SX7")
		Else
			cSeek :=""
		EndIf
		If nTipo == 1
			cResult := &(X7_REGRA)
		Else
			cResult := &(TriggerClear(X7_REGRA,nLin,cSavAlias))
		EndIf
		If nElem == 0
			AADD(aTrigger,{SX7->X7_CAMPO,SX7->X7_SEQUENC,cResult,cSeek,nLin})
		Else
			aTrigger[nElem] := {SX7->X7_CAMPO,SX7->X7_SEQUENC,cResult,cSeek,nLin}
		EndIf
	EndIf
	DbSkip()
End
End SEQUENCE
DbGoTo(nSavRec)
DbSelectArea(cSavAlias)
ErrorBlock(bErro)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ TriggerSize ³ Autor ³ Ary Medeiros		  ³ Data ³ 31/08/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna Conteudo do campo com tamanho correto				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ TriggerSize(ExpC1,ExpC2)											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Campo															  ³±±
±±³			 ³ ExpC2 = Conteudo														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  TriggerSize(cCpo,cContem)
Local cSavAlias := Alias(), nSavRec,nSavOrd

DbSelectArea("SX3")
nSavRec := Recno()
nSavOrd := IndexOrd()
DbSetOrder(2)
DbSeek(cCpo)
cContem := RTrim(cContem) + Space(X3_TAMANHO-Len(RTrim(cContem)))
DbSetOrder(nSavOrd)
DbGoTo(nSavRec)
DbSelectArea(cSavAlias)
Return cContem

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ExistTrigger³ Autor ³ Ary Medeiros	     ³ Data ³ 01/09/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ VerIfica a existencia de gatilho para um campo				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExistTrigger(ExpC1)													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nome do Campo a VerIficar											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  ExistTrigger(cCpo)
Local cSavAlias:= Alias()
Local nSavOrd , lRet := .f.
IF Select("SX3") > 0
	DbSelectArea("SX3")
	nSavOrd := IndexOrd()
	DbSetOrder(2)
	DbSeek(cCpo)
	If X3_TRIGGER == "S"
		lRet := .t.
	EndIf
	DbSetOrder(nSavOrd)
	DbSelectArea(cSavAlias)
Endif	
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ EvalTrigger³ Autor ³ Ary Medeiros		  ³ Data ³ 02/09/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Avalia Gatilhos Estrangeiros										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ EvalTrigger()															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  EvalTrigger()
Local cSavAlias := Alias()
Local i,cResult, nSavOrd
Local bErro := ErrorBlock({ |e| TriggerErr(e,SX7->X7_CAMPO,SX7->X7_SEQUENC)})
EvalGeneric()
DbSelectArea("SX7")
For i := 1 to Len(aTrigger)
	DbSeek(aTrigger[i,1]+aTrigger[i,2])
	BEGIN SEQUENCE
	If X7_TIPO = "E"
		DbSelectArea(X7_ALIAS)
		If SX7->X7_SEEK=="S"
			nSavOrd := IndexOrd()
			DbSetOrder(SX7->X7_ORDEM)
			DbSeek(aTrigger[i,4])
			DbSetOrder(nSavOrd)
		EndIf
		RecLock(SX7->X7_ALIAS,.F.)
		Replace &(SX7->X7_CDOMIN) with aTrigger[i,3]
		//dbUnLock()
		DbSelectArea("SX7")
	EndIf
	End SEQUENCE
Next i
aTrigger := {}
ErrorBlock(bErro)
DbSelectArea(cSavAlias)
Return nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ TriggerErr ³ Autor ³ Ary Medeiros		  ³ Data ³ 02/09/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Tratamento de Erro para os Gatilhos 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ TriggerErr()								 						     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gatilhos 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  TriggerErr(e,cCampo,cSeq,lReturn)
If e:gencode > 0
	If ( Type("__cInternet") == "C" .and. __cInternet == "AUTOMATICO" )
		AutoGRLog(oemtoansi(STR0030)+cCampo+chr(10)+chr(13)+e:Description,OemToAnsi(STR0013)) //"Erro no Gatilho : " ### "Inconsistˆncia"
	Else
		MSGSTOP(oemtoansi(STR0030)+cCampo+" "+OemToAnsi(STR0047)+cSeq+chr(10)+chr(13)+e:Description,OemToAnsi(STR0013)) //"Erro no Gatilho : " ### "Inconsistˆncia"
	EndIf
	BREAK
EndIf

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ TriggerPict ³ Autor ³ Ary Medeiros	     ³ Data ³ 31/08/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna Conteudo do campo transformado pela picure 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ TriggerPict(ExpC1)													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Campo															  ³±±
±±³			 ³ ExpC2 = Conteudo														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 										  	  					  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  TriggerPict(cCpo,cContem)
Local cSavAlias := Alias(), nSavRec,nSavOrd

DbSelectArea("SX3")
nSavRec := Recno()
nSavOrd := IndexOrd()
DbSetOrder(2)
DbSeek(cCpo)
cContem := Transform(cContem,Trim(X3_PICTURE))
DbSetOrder(nSavOrd)
DbGoTo(nSavRec)
DbSelectArea(cSavAlias)
Return cContem

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ TriggerClear³ Autor ³ Ary Medeiros	     ³ Data ³ 31/08/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Substitui "M->" por conteudo do array aTela                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function TriggerClear(cExpr,nLin,cAliasOld)

Local cStr
Local aPos
Local nIni
Local nEnd
Local nElem
Local xCampo
Local cSub

cExpr := UPPER(cExpr)
While "M->"$cExpr
	nIni := At("M->",cExpr)+3
	cSub := Substr(cExpr,nIni,Len(cExpr))
	aPos := {}
	If ( "!" $ cSub )
		AADD(aPos,At("!",cSub))
	EndIf
	If ( "$" $ cSub )
		AADD(aPos,At("$",cSub))
	EndIf
	If ( "%" $ cSub )
		AADD(aPos,At("%",cSub))
	EndIf
	If ( "^" $ cSub )
		AADD(aPos,At("^",cSub))
	EndIf
	If ( ")" $ cSub )
		AADD(aPos,At(")",cSub))
	EndIf
	If ( "-" $ cSub )
		AADD(aPos,At("-",cSub))
	EndIf
	If ( "+" $ cSub )
		AADD(aPos,At("+",cSub))
	EndIf
	If ( "*" $ cSub )
		AADD(aPos,At("*",cSub))
	EndIf
	If ( "/" $ cSub )
		AADD(aPos,At("/",cSub))
	EndIf
	If ( " " $ cSub )
		AADD(aPos,At(" ",cSub))
	EndIf
	If ( "," $ cSub )
		AADD(aPos,At(",",cSub))
	EndIf
	If ( "<" $ cSub )
		AADD(aPos,At("<",cSub))
	EndIf
	If ( ">" $ cSub )
		AADD(aPos,At(">",cSub))
	EndIf
	If ( "=" $ cSub )
		AADD(aPos,At("=",cSub))
	EndIf
	If ( Len(aPos) == 0 )
		nEnd := Len(cSub)
	Else
		aPos := aSort(aPos)
		nEnd := aPos[1]
	EndIf
	cCpo	:= Substr(cExpr,nIni,nEnd-1)
	nElem := ASCAN(aHeader,{|x| AllTrim(x[2]) == AllTrim(Upper(cCpo))})
	If ( nElem == 0 )
		cExpr := Substr(cExpr,1,nIni-4)+"m"+Subs(cExpr,nIni-2)
	Else
		If ( Type("aCols") # "U" )
			cExpr := Substr(cExpr,1,nIni-4)+"aCols["+AllTrim(Str(nLin))+","+AllTrim(Str(nElem))+"]"+Substr(cSub,nEnd,Len(cSub))
		Else
			cExpr := Substr(cExpr,1,nIni-4)+cAliasOld+"->(FieldGet("+AllTrim(Str(nElem))+"))"+Substr(cSub,nEnd,Len(cSub))
		EndIf
	EndIf
End
Return( cExpr )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ CriaVar	³ Autor ³ Wagner Xavier         ³ Data ³ 03.02.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Cria uma variavel de acordo com Dicion rio de Dados.		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ CriaVar( ExpC1,ExpC2 )					                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 : Nome do campo dicion rio 						  ³±±
±±³			 ³ ExpL1 : Se ser  considerado inicializador padr„o			  ³±±
±±³			 ³ ExpC2 : Lado para inicializa‡„o padr„o                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gen‚rico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  CriaVar( cCampo, lInitPad, cLado, lCriaPub )

Local aArea     := GetArea()
Local aAreaSX3  := SX3->(GetArea())
Local cTipo
Local nTamanho
Local xConteudo
Local lInicializador

DEFAULT lCriaPub := .T.
DEFAULT cLado    := "L"
DEFAULT lInitPad := .T.

If At( ">", cCampo ) != 0
	cCampo := AllTrim(SubStr( cCampo, 1+At( ">", cCampo) , 10 ) )
EndIf
cCampo := PadR(cCampo,10)
cTipo     := GetSx3Cache(cCampo,"X3_TIPO")
nTamanho  := GetSx3Cache(cCampo,"X3_TAMANHO")

If cTipo == Nil
	Help(" ", 1, "NOCPOSX3",,"Field -> "+cCampo,5,0)
	RestArea(aAreaSX3)
	RestArea(aArea)
	Return("")
EndIf

Do Case
	Case cTipo == "C"
		xConteudo := Space( nTamanho )
	Case cTipo == "N"
		xConteudo :=	0
	Case cTipo == "D"
		xConteudo := CtoD("  /  /  ")
	Case cTipo == "L"
		xConteudo := .F.
	Case cTipo == "M"
		xConteudo := ""
EndCase
If lInitPad
	lInicializador := ExistIni( cCampo , .F.)
	If lInicializador
		xConteudo := InitPad( GetSx3Cache(cCampo,"X3_RELACAO") , cCampo )
		If cTipo == "C"
			xConteudo += Space( nTamanho - Len ( xConteudo ) )
			Do Case
				Case cLado == "L"
					xConteudo := PadL( xConteudo, nTamanho )
				Case cLado == "C"
					xConteudo := PadC( xConteudo, nTamanho )
				OtherWise
					xConteudo := PadR( xConteudo, nTamanho )
			EndCase
		EndIf
	EndIf
EndIf
If GetSx3Cache(cCampo,"X3_CONTEXT") == "V"
	cVar := 'M->'+cCampo
	If lCriaPub
		Public &cVar := xConteudo
	EndIf
EndIf
RestArea(aAreaSX3)
RestArea(aArea)
Return(xConteudo)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FA050TabIR³ Autor ³ Wagner Xavier 	     ³ Data ³ 05/03/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula valor do IRRF, se fornecedor for pessoa fisica 	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA050TabIr()															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA050																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  Fa050TabIr( nValTitulo )
Local nValor:=0,nHdlIrf,nBytes:=0,nTamArq,aTabela:={},lTabela:=.f.,i

nHdlIrf:=FOPEN("SIGAADV.IRF",64)
If nHdlIrf<0
	Help(" ",1,"TABIRRF")
	Return 0
EndIf

nTamArq:=FSEEK(nHdlIrf,0,2)
FSEEK(nHdlIrf,0,0)			 // Volta para inicio do arquivo

While nBytes<nTamArq
	xBuffer:=Space(40)
	FREAD(nHdlIrf,@xBuffer,40)
	AADD(aTabela,{Val(SubStr(xBuffer,1,15)),Val(SubStr(xBuffer,17,6)),Val(SubStr(xBuffer,24,15))})
	nBytes+=40
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Este If Len(atabela) == 4 foi colocado pois o txt gravado pelo  ³
	//³ windows dava uma dIferen‡a no registro do End of file, gerando  ³
	//³ uma linha a mais no arquivo TXT.										  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len( aTabela ) == 4
		Exit
	EndIf
End

nValor := 0

For i = 1 to Len(aTabela)
	If !lTabela
		If nValTitulo<=aTabela[i][1] .or. i = Len(aTabela)
			nValor:=(nValTitulo*Iif(aTabela[i][2]>0,aTabela[i][2],0)/100)-aTabela[i][3]
			lTabela:=.T.
		EndIf
	EndIf
Next

FCLOSE(nHdlIrf)
nValor := IIF(nValor<0,0,nValor)
Return(nValor)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AtuaSB6	³ Autor ³ Gilson do Nascimento  ³ Data ³ 20/04/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Atualiza arquivo de Saldos De/Em Poder de Terceiros (SB6)  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aArray := AtuaSB6(ExprC1,ExprC2,ExprA1,ExprA2) 		        ³±±
±±³			 ³ ExprC1 := TES											              ³±±
±±³			 ³ ExprC2 := Chave de Pesquisa no SB6						        ³±±
±±³			 ³ ExprA1 := Array dos Campos Ref. ao SD1 ou SD2			     ³±±
±±³			 ³ ExprA2 := Array dos Custos para Este Item 				     ³±±
±±³			 ³ ExprC3 := Tipo da Nota									           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AtuaSB6(cTes,cChave,aCpoSD,aCustoSB6,cTipo)
Local cAliasAnt:=alias(),nQTD,nTotQtd
Local nSaldo := 0, aSaldo:= Array(2)
Afill(aSaldo,0)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona no arquivo de TES para este item				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SF4")
DbSeek(xFilial()+cTes)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava arquivo de Saldo Em/De Poder de Terceiros			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SF4->F4_PODER3 != "N"
	
	DbSelectArea("SB6")
	DbSetOrder(3)
	DbSeek(xFilial()+cChave)
	
	If SF4->F4_PODER3=="R"
		AGravaSB6(cTes,aCustoSB6,cTipo,aCpoSD)
		Replace B6_IDENT	With aCpoSD[17]
		Replace B6_SALDO	With aCpoSD[12]
		If B6_SALDO <=0
			Replace B6_ATEnd With "S"
		EndIf
		cSB6Ant := B6_IDENT
		__lPointSB6 := Iif(__lPointSB6==Nil,(ExistBlock("SB6GRAVA")),__lPointSB6)
		If __lPointSB6
			ExecBlock("SB6GRAVA",.f.,.f.)
		EndIf
		MsUnlock()
		
	ElseIf SF4->F4_PODER3=="D"
		
		nQtd	  := 0
		nTotQtd := 0
		While !Eof() .And. ;
			xFilial()+cChave == B6_FILIAL+B6_IDENT+B6_PRODUTO
			nSaldo := B6_SALDO
			If nSaldo <= 0
				DbSkip()
				Loop
			EndIf
			
			If (aCpoSD[12] - nTotQtd) <= 0
				Exit
			EndIf
			
			If nSaldo <= (aCpoSD[12] - nTotQtd)
				nQtd := nSaldo
			Else
				nQtd := aCpoSD[12] - nQtd
			EndIf
			
			nTotQtd := nTotQtd +  nQtd
			
			RecLock("SB6",.F.)
			
			If B6_QULIB > 0				  // A Entrada nao pode estornar o B6_QULIB
				Replace		B6_QULIB 	With B6_QULIB - nQtd
			EndIf
			Replace B6_SALDO With B6_SALDO - nQtd
			Replace B6_UENT	With dDataBase
			
			If B6_SALDO <= 0
				Replace B6_ATEnd With "S"
			EndIf
			
			MsUnlock()
			
			If SF4->F4_ESTOQUE=="S"
				aCustoSB6[1] := B6_CUSTO1	* (nQtd / B6_QUANT)
				aCustoSB6[2] := B6_CUSTO2	* (nQtd / B6_QUANT)
				aCustoSB6[3] := B6_CUSTO3	* (nQtd / B6_QUANT)
				aCustoSB6[4] := B6_CUSTO4	* (nQtd / B6_QUANT)
				aCustoSB6[5] := B6_CUSTO5	* (nQtd / B6_QUANT)
			EndIf
			
			nRegSB6:= Recno()
			cSB6Ant	 := B6_IDENT
			aCpoSD[6] := B6_TIPO
			
			AGravaSB6(cTes,aCustoSB6,cTipo,aCpoSD)						// Grava Item Devolucao no SB6
			Replace B6_IDENT	With cSB6Ant
			__lPointSB6 := Iif(__lPointSB6==Nil,(ExistBlock("SB6GRAVA")),__lPointSB6)
			If __lPointSB6
				ExecBlock("SB6GRAVA",.f.,.f.)
			EndIf
			MsUnlock()
			
			DbGoTo(nRegSB6)
			
			DbSkip()
			Loop
		End
	EndIf
EndIf
DbSelectArea(cAliasAnt)
Return(aCustoSB6)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³A040DupRec³Autor  ³ Ary Medeiros			  ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualizacao de titulos a receber, gerando todos os dados	  ³±±
±±³			 ³complementares a uma implantacao de titulo.                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³A040DupRec( cOrigem )                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ cOrigem := Programa que originou o titulo                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ DATA     ³ BOPS ³Prograd.³ALTERACAO                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³02/06/05  ³080020³Marcos  ³Os campos A1_VACUM e A1_NROCOM nao devem ser³±±
±±³          ³      ³        ³gravados qdo o modulo for o loja e o        ³±±
±±³          ³      ³        ³ cliente = cliente padrao.                  ³±±
±±³01/06/06  ³100688³Norbert ³Os campos A1_VACUM e A1_NROCOM tambem nao   ³±±
±±³          ³      ³        ³serao gravados se a rotina foi chamada pelo ³±±
±±³          ³      ³        ³RPC do FrontLoja.                           ³±±
±±³16/01/06  ³117063³Marcio  ³Correcao na busca da administradora         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  A040DupRec( cOrigem,lUpDate, nValTot, lAbate, lGerAbtISS, lAtuSalDup, nTotISS, cRecIss )

Local nOpca,nSavRec,nValForte:=0,nIss:=0,nIrrf:=0
Local cParcela,cCliente,cLoja,dEmissao,dVencto,dVencRea,lDigita,i
Local cPrefixo,cNum,cTipoE1,dVenISS,dVenFun,nMoeda:=SE1->E1_MOEDA
Local nSalvCli := 0,cNatur
Local dNextDay
Local nMCusto  := 0
Local cNatureza := ""
Local nCntFor
Local nInss := 0
Local nTamData := 0
Local nPis := 0
Local nCofins := 0
Local nCsll := 0
Local nDiaUtil    := 0
Local nDia        := 0
Local nVRetISS    := 0
Local cLA         := SE1->E1_LA
Local cFatura     := SE1->E1_FATURA
Local lM040Se1    := Existblock("M040SE1")
Local lM040CSSR   := ExistBlock("M040CSSR")
Local cMunIss		:= ''
Local lAbateuPIS  := .F. 
Local lAbateuCOF  := .F. 
Local lAbateuCSLL := .F. 
Local lAbateuIRF  := .F. 
Local lContrAbat  := !Empty( SE1->( FieldPos( "E1_SABTPIS" ) ) ) .And. !Empty( SE1->( FieldPos( "E1_SABTCOF" ) ) ) .And. !Empty( SE1->( FieldPos( "E1_SABTCSL" ) ) ) 
Local lCtrAbatIRF := !Empty( SE1->( FieldPos( "E1_SABTIRF" ) ))
LOCAL lAtuAcum    := .T.	// Verifica se deve alterar os campos A1_VACUM e A1_NROCOM qdo modulo for o loja 	
Local nMinRetIR := SuperGetMV("MV_VLRETIR")
Local xMinRetIR := 0
Local cLojaIrf := Padr( "00", Len( SE2->E2_LOJA ) ) 
Local cParcIRF := ""
Local nZ := 0
Local lLojaCartao := .F.	// Indica se eh rotina chamada pelo modulo sigaloja e se forma de pagamento eh cartao.
Local lVcAntIss := (SuperGetMV("MV_ANTVISS",.T.,"2") == "1")  //Antecipa ou nao o vencimento do ISS em caso de vencimento em dia nao util
Local dVencRIss := CTOD("//")
Local nMinRetISS := SuperGetMv("MV_VRETISS",.T.,0)
Local nFetHab	:= 0
Local lCalcFet	:= ( FindFunction("MaCalcFet") .And. MaCalcFet() )

DEFAULT lGerAbtISS := .T. 
DEFAULT lAbate     := .T. 
DEFAULT lAtuSalDup := .T.
DEFAULT nTotISS    := SE1->E1_ISS
DEFAULT cRecISS :=	""


cOrigem := Iif(cOrigem==NIL,Space(8),cOrigem)

lAltera:=.F.
lUpDate:=If( (lUpDate == NIL),.T.,lUpDate )

If Upper(subs(cOrigem,1,3)) == "LOJ"
	If ALLTRIM( SE1->E1_TIPO)  $ "CC;VA;CO;CD;FI"		// Cartao Credito, Vales, Convenio, Cartao de Debito, Financiamento Proprio
		lLojaCartao := .T.
	Endif
Endif

DbSelectArea("SA1")
DbSetOrder(1)
Do Case
	Case lLojaCartao .AND. SL1->L1_TIPO <> "P"	
		DbSeek(cFilial + SF2->F2_CLIENTE + SF2->F2_LOJA)			
	Case lLojaCartao
		DbSeek(cFilial + SL1->L1_CLIENTE + SL1->L1_LOJA)
OtherWise
	DbSeek(cFilial + SE1->E1_CLIENTE + SE1->E1_LOJA)
EndCase

	
If Empty(cRecISS)
	cRecISS := SA1->A1_RECISS
EndIf

nSalvCli := RecNo()
If SA1->(FieldPos("A1_MUNIC")) > 0 .And. !Empty(SA1->A1_MUNIC)
   cMunISS := SA1->A1_MUNIC
Else
   cMunIss := SuperGetMV("MV_MUNIC")
EndIf

// Verifica se aplica-se o valor mínimo de retecao do Ir pode ser retido
If	(!Empty(SA1->( FieldPos( "A1_MINIRF" ) ) ) .and. SA1->A1_MINIRF == "2")
	nMinRetIR := 0
Endif

If SE1->(FieldPos("E1_FORNISS"))<>0
	cMunISS := IIF(!Empty(SE1->E1_FORNISS),SE1->E1_FORNISS,cMunISS)
EndIf

//Ponto de entrada para tratamento do valor minimo para IRRF.
If ExistBlock("F040MIRF")
	xMinRetIR := 0
	xMinRetIR := Execblock("F040MIRF",.F.,.F.,{SA2->A2_COD,SA2->A2_LOJA})
	nMinRetIR := If(ValType(xMinRetIR)=="N",xMinRetIR,nMinRetIR)
EndIf

If ExistBlock("F040MISS")
	nMinRetISS := Execblock("F040MISS",.F.,.F.,{cMunISS})
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza Contas a Receber 				   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SE1")
RecLock("SE1",.F.)
If cPaisLoc == "BRA"
	If ( SE1->E1_IRRF <= nMinRetIR ) .And. Len(Alltrim(SA1->A1_CGC)) == 14 // Verifica se o Ir pode ser retido
		SE1->E1_IRRF	:= 0							 // Valor menor que MV_VLRETIR e' dispensado de recolhimento
	EndIf
	If ( SE1->E1_INSS < SuperGetMV("MV_VLRETIN") ) 	// VerIfica se o Inss pode ser retido
		SE1->E1_INSS := 0								 		// Valor menor que MV_VLRETIN e' dispensado de recolhimento
	EndIf
	If ( SE1->E1_COFINS <= SuperGetMV("MV_VRETCOF")  ) // VerIfica se o Cofins pode ser retido
		SE1->E1_COFINS	:= 0							 // Valor menor que MV_VRETCOF e' dispensado de recolhimento
	EndIf
	If ( SE1->E1_PIS <= SuperGetMV("MV_VRETPIS")  ) // VerIfica se o Pis pode ser retido
		SE1->E1_PIS	:= 0							 // Valor menor que MV_VRETPIS e' dispensado de recolhimento
	EndIf
	If ( SE1->E1_CSLL <= SuperGetMV("MV_VRETCSL")  ) // VerIfica se o Csll pode ser retido
		SE1->E1_CSLL	:= 0							 // Valor menor que MV_VRETCSL e' dispensado de recolhimento
	EndIf
	// Se o cliente abate o ISS, gera abatimento. Senao, gera titulo para pagamento do tributo.
	If cRecISS == "1" .And. GetNewPar("MV_DESCISS",.F.)
		If lGerAbtISS
			If SE1->(FieldPos("E1_VRETISS")) > 0
				SomaTitISS("SE1",SE1->E1_CLIENTE,SE1->E1_LOJA,SE1->E1_VENCREA,@nTotISS,@nVRetISS)
				If ((SE1->(FieldPos("E1_FRETISS"))>0 .And. SE1->E1_FRETISS=="1") .Or.;	//Se a opcao no cadastro de clientes existir e estiver como 1=Considera Valor Minimo, respeito o tratamento padrao.
					(SE1->(FieldPos("E1_FRETISS"))>0 .And. SE1->E1_FRETISS=="2" .And. SuperGetMv ("MV_MODRISS", "1")=="2") .Or.; //Se a opcao no cadastro de clientes existir, estiver como 2=Sempre reter e a Modalidade de retencao for 1=Por titulo, desconsidero o Valor minimo e gero o titulo normalmente.
					SE1->(FieldPos("E1_FRETISS"))==0) .And.;	//Se a opcao no cadastro de clientes nao existir, respeito o tratamento padrao para o valor minimo.
					(nTotISS > 0 .And. nTotISS <= nMinRetISS )
					//
					SE1->E1_VRETISS := SE1->E1_ISS
					SE1->E1_ISS	:= 0
				Else
					If (SE1->E1_ISS+nVRetISS) > (SE1->E1_VALOR)-0.01
						SE1->E1_VRETISS := (SE1->E1_ISS+nVRetISS) - ((SE1->E1_VALOR)-0.01)
						SE1->E1_ISS := (SE1->E1_VALOR)-0.01
					Else
						SE1->E1_ISS := (SE1->E1_ISS+nVRetISS)
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
SE1->E1_NOMCLI  := SA1->A1_NREDUZ
SE1->E1_SITUACA := "0"
SE1->E1_EMIS1	 := dDataBase
SE1->E1_BAIXA	 := CtoD("  /  /  ")
SE1->E1_SALDO	 := SE1->E1_VALOR
SE1->E1_STATUS  := Iif(E1_SALDO>0.01,"A","B")
SE1->E1_ORIGEM  := UPPER(cOrigem)
If SE1->E1_TIPO $ MVABATIM		 // Se for abatimento
	SE1->E1_OCORREN := "04"
EndIf
SE1->E1_FILORIG := cFilAnt

If lM040Se1
	Execblock("M040SE1",.F.,.F.)
Endif

nSavRec:=RecNo()
nMCusto:=Val(SuperGetMV("MV_MCUSTO")) 
nMCusto		:= If(SA1->A1_MOEDALC > 0,SA1->A1_MOEDALC, nMCusto)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza Acumulado de Clientes				  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !( SE1->E1_TIPO $ MVRECANT + "/"+MV_CRNEG)
	DbSelectArea("SA1")
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Nao atualizar os campos A1_VACUM e A1_NROCOM se o modulo for o loja ³
	//³ou frontloja (via RPC) e o cliente = cliente padrao.                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( nModulo == 12 ) .Or. ( cOrigem == "LOJA010" )
		If SA1->A1_COD + SA1->A1_LOJA == GetMv("MV_CLIPAD") + GetMv("MV_LOJAPAD")
 			lAtuAcum := .F.
		EndIf
	EndIf

	If lAtuAcum
		Reclock("SA1",.F.)
		SA1->A1_PRICOM  := Iif(SE1->E1_EMISSAO<SA1->A1_PRICOM .Or. Empty(SA1->A1_PRICOM),SE1->E1_EMISSAO,SA1->A1_PRICOM)
		SA1->A1_ULTCOM  := Iif(SA1->A1_ULTCOM<SE1->E1_EMISSAO,SE1->E1_EMISSAO,SA1->A1_ULTCOM)
		SA1->A1_NROCOM  := SA1->A1_NROCOM + If( lUpDate,1,0 )
		SA1->A1_VACUM	 := SA1->A1_VACUM + Round(NoRound(xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,nMCusto,SE1->E1_EMISSAO,3),3),2)
		SA1->(MsUnlock())
	EndIf
EndIf

DbSelectArea("SE1")
If !( SE1->E1_TIPO $ MVABATIM )
	If cPaisLoc<>"BRA".Or.(	!SE1->E1_NATUREZ $ &(SuperGetMV("MV_ISS")) .And. ;
		!SE1->E1_NATUREZ $ &(SuperGetMV("MV_IRF")) .And. ;
		!SE1->E1_NATUREZ $ &(SuperGetMV("MV_INSS")).And. ;
		!SE1->E1_NATUREZ $ SuperGetMV("MV_CSLL") .and. ;
		!SE1->E1_NATUREZ $ SuperGetMV("MV_PISNAT")  	 .and. ;
		!SE1->E1_NATUREZ $ SuperGetMV("MV_COFINS")		)
		
		cPrefixo  := E1_PREFIXO
		cNum		 := E1_NUM
		cTipoE1   := E1_TIPO
      //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
      //³ A variavel privada "cTipo" foi substituida pela variavel local "cTipoE1", ³
      //³ porque neste ponto seu conteudo estava sendo alterado, gravando assim,    ³
      //³ incorretamente os tipos das Notas de Debito/Credito.                      ³
      //³ Sergio Fuzinaka ( 22.10.01 )                                              ³       
      //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza Acumulado Financeiros do Cliente  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nValTot == Nil
			nValTot := 0
			DbSelectArea("SE1")
			DbSetOrder(1)
			DbSeek(cFilial+cPrefixo+cNum)
			While ( !EOF() .And. E1_FILIAL+E1_PREFIXO+E1_NUM+E1_TIPO == ;
				cFilial+cPrefixo+cNum+cTipoE1 )
				nValTot := nValTot + MOEDA(SE1->E1_VALOR,1,"R")
				DbSkip()
			End
			DbGoTo( nSavRec )
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Nao Atualiza Caso seja um RA / NCC / PR    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ! ( SE1->E1_TIPO $ MVRECANT+"/"+MVPROVIS+"/"+MV_CRNEG ) .And. lAtuSalDup
			nValForte := ConvMoeda(E1_EMISSAO,E1_VENCTO,Moeda(E1_VALOR,1,"R"),AllTrim(STR(nMCusto)))
			AtuSalDup("+",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
			RecLock("SA1",.F.)
			SA1->A1_MSALDO :=Iif(SA1->A1_SALDUPM>SA1->A1_MSALDO,SA1->A1_SALDUPM,SA1->A1_MSALDO)
			If ( nValForte > A1_MAIDUPL )
				SA1->A1_MAIDUPL := nValForte
			EndIf
			nValForte := ConvMoeda(SE1->E1_EMISSAO,SE1->E1_VENCTO,nValTot,AllTrim(STR(nMCusto)))
			DbSelectArea("SA1")
			If ( nValForte > A1_MCOMPRA )
				SA1->A1_MCOMPRA := nValForte
			EndIf
			MsUnlock()
		EndIf
		If cPaisLoc == "BRA"
			DbSelectArea( "SE1" )
			cParcela := SE1->E1_PARCELA
			dEmissao := SE1->E1_EMISSAO
			dVencto	:= SE1->E1_VENCTO
			dVencRea	:= SE1->E1_VENCREA
			nIrrf 	:= SE1->E1_IRRF
			nIss		:= SE1->E1_ISS
			nInss 	:= SE1->E1_INSS
			cNatur	:= SE1->E1_NATUREZ
			cCliente := SE1->E1_CLIENTE
			cLoja 	:= SE1->E1_LOJA
			nCofins  := SE1->E1_COFINS
			nPis     := SE1->E1_PIS
			nCsll    := SE1->E1_CSLL
			
			If lCalcFet
				nFetHab  := SE1->E1_FETHAB
			Endif	
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera titulo de IRRF 							  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nIrrf > 0 )
				If SA1->(FieldPos("A1_RECIRRF"))>0 .And. SA1->A1_RECIRRF=="2"
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria o Fornecedor, caso nao exista 		  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SA2")
					DbSeek(cFilial+GetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMV("MV_UNIAO")))+cLojaIRF)
					If ( EOF() )
						Reclock("SA2",.T.)
						SA2->A2_FILIAL := cFilial
						SA2->A2_COD 	:= GetMV("MV_UNIAO")
						SA2->A2_LOJA	:= cLojaIRF
						SA2->A2_NOME	:= "UNIAO"
						SA2->A2_NREDUZ := "UNIAO"
						SA2->A2_BAIRRO := "."
						SA2->A2_MUN 	:= "."
						SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
						SA2->A2_End 	:= "."
						SA2->A2_TIPO	:= "J"
						MsUnlock()
					EndIf
					cParcIRF := ParcImposto(cPrefixo,cNum,MVTAXA)
					If GetMv("MV_VENCIRF") == "E"
						dNextDay := dEmissao+1
					ElseIf GetMv("MV_VENCIRF") == "C"
						dNextDay := dDataBase+1
					Else
						dNextDay := dVencrea+1
					EndIf
					For nCntFor := 1 To 7
						If Dow( dNextDay ) = 1
							Exit
						EndIf
						dNextDay++
					Next nCntFor
					For nZ:= 1 to 3
						dNextDay := DataValida(dNextDay+1,.T.)
					Next
					dVencRea := dNextDay
					RecLock("SE2",.T.)
					SE2->E2_FILIAL	:= cFilial
					SE2->E2_PREFIXO	:= cPrefixo
					SE2->E2_NUM		:= cNum
					SE2->E2_PARCELA	:= cParcIRF
					SE2->E2_TIPO	:= MVTAXA
					SE2->E2_EMISSAO	:= dEmissao
					SE2->E2_VALOR	:= nIrrf
					SE2->E2_VENCREA	:= dVencrea
					SE2->E2_SALDO	:= nIrrf
					SE2->E2_VENCTO	:= dVencRea
					SE2->E2_VENCORI	:= dVencRea
					SE2->E2_MOEDA	:= nMoeda
					SE2->E2_EMIS1	:= dDataBase
					SE2->E2_FORNECE	:= GetMv("MV_UNIAO")
					SE2->E2_VLCRUZ	:= Round(nIrrf, MsDecimais(1) )
					SE2->E2_LOJA	:= SA2->A2_LOJA
					SE2->E2_NOMFOR	:= SA2->A2_NREDUZ
					SE2->E2_ORIGEM	:= Upper(cOrigem)
					cNatureza		:= &(GetMv("MV_IRF"))
					SE2->E2_NATUREZ	:= cNatureza
					SE2->E2_LA		:= cLA			// Herda do principal
					MsUnLock()

//GRAVAR A PARCELA DO IRRF NO TITULO PRINCIPAL NO SE1
					DbSelectArea("SE1")
					If FieldPos("E1_PARCIRF")>0
						DbGoTo(nSavRec)
						RecLock("SE1",.F.)
						SE1->E1_PARCIRF	:= cParcIRF
						MsUnLock()
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria a natureza IRF caso nao exista		   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SED")
					If ( !DbSeek(cFilial+cNatureza) )
						RecLock("SED",.T.)
						SED->ED_FILIAL  := cFilial
						SED->ED_CODIGO  := cNatureza
						SED->ED_CALCIRF := "N"
						SED->ED_CALCISS := "N"
						SED->ED_CALCINS := "N"
						SED->ED_CALCCSL := "N"
						SED->ED_CALCCOF := "N"
						SED->ED_CALCPIS := "N"
						SED->ED_DESCRIC := "IMPOSTO RENDA RETIDO NA FONTE"
						MsUnlock()
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera lançamento do IRRF no SIGAPCO a partir do contas a pagar ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Upper(cOrigem) == "FINA040"
    					PCODetLan("000001","12",Upper(cOrigem))
					EndIf

				Else
					If GetNewPar("MV_IRMP232","2")!= "1"
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Cria a natureza IRF caso nao exista		  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						cNatureza	:= &(SuperGetMV("MV_IRF"))
						cNatureza	:= cNatureza+Space(10-Len(cNatureza))				
						DbSelectArea("SED")
						DbSeek(cFilial+cNatureza)
						If EOF()
							RecLock("SED",.T.)
							SED->ED_FILIAL  := xFilial()
							SED->ED_CODIGO  := cNatureza
							SED->ED_CALCIRF := "N"
							SED->ED_CALCISS := "N"
							SED->ED_CALCINS := "N"
							SED->ED_CALCCSL := "N"
							SED->ED_CALCCOF := "N"
							SED->ED_CALCPIS := "N"
							SED->ED_DESCRIC := "IMPOSTO RENDA RETIDO NA FONTE"
							MsUnlock()
							FKCOMMIT()
						EndIf

						DbSelectArea("SE1")
						RecLock("SE1",.T.)
						SE1->E1_FILIAL  := cFilial
						SE1->E1_PREFIXO := cPrefixo
						SE1->E1_NUM 	 := cNum
						SE1->E1_PARCELA := cParcela
						SE1->E1_TIPO	 := MVIRABT
						SE1->E1_EMISSAO := dEmissao
						SE1->E1_VALOR	 := nIrrf
						SE1->E1_VENCREA := dVencRea
						SE1->E1_SALDO	 := nIrrf
						SE1->E1_VENCTO  := dVencto
						SE1->E1_VENCORI := dVencto
						SE1->E1_EMIS1	 := dDataBase
						SE1->E1_CLIENTE := cCliente
						SE1->E1_LOJA	 := cLoja
						SE1->E1_SITUACA := "0"
						SE1->E1_NOMCLI  := SA1->A1_NREDUZ
						SE1->E1_MOEDA	 := nMoeda
						SE1->E1_VLCRUZ  := Round( nIrrf, MsDecimais(1) )
						SE1->E1_STATUS  := Iif(SE1->E1_SALDO>0.01,"A","B")
						SE1->E1_ORIGEM  := UPPER(cOrigem)
						SE1->E1_OCORREN := "04"
						SE1->E1_NATUREZ := cNatureza
						SE1->E1_LA      := cLa
						SE1->E1_FATURA	 := cFatura
						
						If lCtrAbatIRF
							lAbateuIRF	:=	.T.
						Endif
	
						If ExistBlock("F040IRF")
							Execblock("F040IRF",.F.,.F.,nSavRec)
						EndIf
	
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Baixa do Saldo do cliente o valor do IR.   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						DbSelectArea("SA1")
						If ( DbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
							AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
						EndIf
				
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera lançamento do IRRF no SIGAPCO a partir do contas a receber ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If Upper(cOrigem) == "FINA040"
	    					PCODetLan("000001","06",Upper(cOrigem))
						EndIf

					Else
						If lCtrAbatIRF
							lAbateuIRF	:=	.F.
						Endif		
					EndIf
				Endif
		    Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera titulo de INSS 							  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nInss > 0 )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Cria a natureza INSS caso nao exista		  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cNatureza	:= &(SuperGetMV("MV_INSS"))
				cNatureza	:= cNatureza+Space(10-Len(cNatureza))
				DbSelectArea("SED")
				DbSeek(cFilial+cNatureza)
				If EOF()
					RecLock("SED",.T.)
					SED->ED_FILIAL  := xFilial()
					SED->ED_CODIGO  := cNatureza
					SED->ED_CALCIRF := "N"
					SED->ED_CALCISS := "N"
					SED->ED_CALCINS := "N"
					SED->ED_CALCCSL := "N"
					SED->ED_CALCCOF := "N"
					SED->ED_CALCPIS := "N"
					SED->ED_DESCRIC := "RETENCAO P/ SEGURIDADE SOCIAL"
					MsUnlock()
					FKCOMMIT()
				EndIf

				RecLock("SE1",.T.)
				SE1->E1_FILIAL  := cFilial
				SE1->E1_PREFIXO := cPrefixo
				SE1->E1_NUM 	 := cNum
				SE1->E1_PARCELA := cParcela
				SE1->E1_TIPO	 := MVINABT
				SE1->E1_EMISSAO := dEmissao
				SE1->E1_VALOR	 := nInss
				SE1->E1_VENCREA := dVencRea
				SE1->E1_SALDO	 := nInss
				SE1->E1_VENCTO  := dVencto
				SE1->E1_VENCORI := dVencto
				SE1->E1_EMIS1	 := dDataBase
				SE1->E1_CLIENTE := cCliente
				SE1->E1_LOJA	 := cLoja
				SE1->E1_SITUACA := "0"
				SE1->E1_NOMCLI  := SA1->A1_NREDUZ
				SE1->E1_MOEDA	 := nMoeda
				SE1->E1_VLCRUZ  := Round( nInss, MsDecimais(1) )
				SE1->E1_STATUS  := Iif(SE1->E1_SALDO>0.01,"A","B")
				SE1->E1_ORIGEM  := UPPER(cOrigem)
				SE1->E1_OCORREN := "04"
				SE1->E1_NATUREZ := cNatureza
				SE1->E1_LA      := cLa
				SE1->E1_FATURA	 := cFatura
                
				
				If ExistBlock("F040INS")
					Execblock("F040INS",.F.,.F.,nSavRec)
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Baixa do Saldo do cliente o valor do Inss  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DbSelectArea("SA1")
				If ( DbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
					AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
				EndIf                             
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gera lançamento do INSS no SIGAPCO a partir do contas a receber ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If Upper(cOrigem) == "FINA040"
   					PCODetLan("000001","07",Upper(cOrigem))
				EndIf

			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera titulo de ISS									  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nIss > 0 )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Cria o fornecedor, caso nao exista 		  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DbSelectArea("SA2")
				DbSeek(cFilial+cMunIss+Space(Len(A2_COD)-Len(cMunIss))+"00")
				If ( EOF() )
					Reclock("SA2",.T.)
					SA2->A2_FILIAL := cFilial
					SA2->A2_COD 	:= cMunIss
					SA2->A2_LOJA	:= "00"
					SA2->A2_NOME	:= "MUNICIPIO"
					SA2->A2_NREDUZ := "MUNICIPIO"
					SA2->A2_BAIRRO := "."
					SA2->A2_MUN 	:= "."
					SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
					SA2->A2_End 	:= "."
					MsUnlock()
					FKCOMMIT()
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Cria a natureza ISS caso nao exista		  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cNatureza	:= &(SuperGetMV("MV_ISS"))
				cNatureza	:= cNatureza+Space(10-Len(cNatureza))
				DbSelectArea("SED")
				If ( ! DbSeek( cFilial + cNatureza ) )
					RecLock("SED",.T.)
					SED->ED_FILIAL  := cFilial
					SED->ED_CODIGO  := cNatureza
					SED->ED_CALCIRF := "N"
					SED->ED_CALCISS := "N"
					SED->ED_CALCINS := "N"
					SED->ED_CALCCSL := "N"
					SED->ED_CALCCOF := "N"
					SED->ED_CALCPIS := "N"
					SED->ED_DESCRIC := "IMPOSTO SOBRE SERVICOS"
					MsUnlock()
					FKCOMMIT()
				EndIf
				// Se o cliente abate o ISS, gera abatimento. Senao, gera titulo para pagamento do tributo.
				If cRecISS == "1" .And. GetNewPar("MV_DESCISS",.F.)
				
					If lGerAbtISS 
				
						RecLock("SE1",.T.)
						SE1->E1_FILIAL  := cFilial
						SE1->E1_PREFIXO := cPrefixo
						SE1->E1_NUM 	 := cNum
						SE1->E1_PARCELA := cParcela
						
						cNatureza:= &(SuperGetMV("MV_ISS"))
						SE1->E1_NATUREZ := cNatureza

						SE1->E1_TIPO	 := MVISABT
						SE1->E1_EMISSAO := dEmissao
						SE1->E1_VALOR	 := nIss
						SE1->E1_VENCREA := dVencRea
						SE1->E1_SALDO	 := nIss
						SE1->E1_VENCTO  := dVencto
						SE1->E1_VENCORI := dVencto
						SE1->E1_EMIS1	 := dDataBase
						SE1->E1_CLIENTE := cCliente
						SE1->E1_LOJA	 := cLoja
						SE1->E1_NOMCLI  := SA1->A1_NREDUZ
						SE1->E1_MOEDA	 := nMoeda
						SE1->E1_VLCRUZ  := Round( nIss, MsDecimais(1) )
						SE1->E1_STATUS  := Iif(SE1->E1_SALDO>0.01,"A","B")
						SE1->E1_ORIGEM  := UPPER(cOrigem)
						SE1->E1_LA      := cLa
						SE1->E1_FATURA	 := cFatura
						SE1->E1_SITUACA := "0"
						SE1->E1_OCORREN := "04"
						SE1->E1_SITUACA := "0"
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Baixa do Saldo do cliente o valor do Iss  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						DbSelectArea("SA1")
						If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
							AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera lançamento do ISS no SIGAPCO a partir do contas a receber ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If Upper(cOrigem) == "FINA040"
	    					PCODetLan("000001","08",Upper(cOrigem))
						EndIf
						
					EndIf 	
						
				Else	
					Do Case
						Case GetNewPar("MV_VENCISS","E")=="E"
							dVenISS := dEmissao
							dVenISS += 28
							If ( Month(dVenISS) == Month(dEmissao) )
								dVenISS := dVenISS+28
							EndIf
							nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
							dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
						Case GetNewPar("MV_VENCISS","E")=="Q" //Ultimo dia util da quinzena subsequente a dEmissao
							If Day(dEmissao) <= 15
								dVenISS	:= LastDay(dEmissao)
								dVenISS := DataValida(dVenISS,.F.)
							Else
								dVenISS := DataValida((LastDay(dEmissao)+1)+14,.F.)
							EndIf
						Case GetNewPar("MV_VENCISS","E")=="U" //Ultimo dia util do mes subsequente da dEmissao
							dVenISS := DataValida(LastDay(LastDay(dEmissao)+1),.F.)
						Case GetNewPar("MV_VENCISS","E")=="D"
							dVenISS := (LastDay(dEmissao)+1)
							nDiaUtil:= SuperGetMv("MV_DIAISS")
							For nDia := 1 To nDiaUtil-1
								If !(dVenISS == DataValida(dVenISS,.T.))
									nDia-=1
								EndIf
								dVenISS+=1
							Next nDia
						Case GetNewPar("MV_VENCISS","E")=="F" //Qtd de dia do parametro MV_DIAISS apos o fechamento da quinzena.
							If Day(dEmissao) <= 15
								dVenISS := CtoD("15"+SUBSTR(DtoC(dEmissao),3,Len(DtoC(dEmissao))))+SuperGetMv("MV_DIAISS")
							Else
								dVenISS := LastDay(dEmissao)+SuperGetMv("MV_DIAISS")
							EndIf
						OtherWise
							dVenISS := dVencto
							dVenISS += 28
							If ( Month(dVenISS) == Month(dEmissao) )
								dVenISS := dVenISS+28
							EndIf
							nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
							dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
					EndCase

					dVencRIss := DataValida(dVenISS,IIF(lVcAntIss,.F.,.T.))
					dVenISS := IIF(dVenIss > dVencRIss, dVencRISS, dVenIss)

					RecLock("SE2",.T.)
					SE2->E2_FILIAL  := cFilial
					SE2->E2_PREFIXO := cPrefixo
					SE2->E2_NUM 	 := cNum
					SE2->E2_PARCELA := cParcela
					SE2->E2_TIPO	 := MVTAXA
					SE2->E2_EMISSAO := dEmissao
					SE2->E2_EMIS1	 := dDataBase
					SE2->E2_VALOR	 := nIss
					SE2->E2_VENCREA := dVencRIss
					SE2->E2_VENCTO  := dVenISS
					SE2->E2_SALDO	 := nIss
					SE2->E2_VENCORI := dVenISS
					SE2->E2_FORNECE := cMunIss
					SE2->E2_LOJA	 := "00"
					SE2->E2_NOMFOR  := SA2->A2_NREDUZ
					SE2->E2_MOEDA	 := nMoeda
					SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
					SE2->E2_ORIGEM  := Upper(cOrigem)
					SE2->E2_NATUREZ := cNatureza
					SE2->E2_LA      := cLA
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera lançamento do ISS no SIGAPCO a partir do contas a pagar ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Upper(cOrigem) == "FINA040"
    					PCODetLan("000001","13",Upper(cOrigem))
					EndIf

				Endif	
				MsUnLock()

				If ExistBlock("F040ISS")
					Execblock("F040ISS",.F.,.F.,nSavRec)
				EndIf

			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera titulo Funrural					   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nValFun := Iif(Type("nValFun")=="U",0,nValFun)
			If ( nValFun > 0 )
	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Cria a natureza FUNRURAL caso nao exista   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DbSelectArea("SED")
				DbSeek(cFilial+SuperGetMV("MV_CSS"))
				If EOF()
					RecLock("SED",.T.)
					SED->ED_FILIAL  := cFilial
					SED->ED_CODIGO  := SuperGetMV("MV_CSS")
					SED->ED_CALCIRF := "N"
					SED->ED_CALCISS := "N"
					SED->ED_CALCINS := "N"
					SED->ED_CALCCSL := "N"
					SED->ED_CALCCOF := "N"
					SED->ED_CALCPIS := "N"
					SED->ED_DESCRIC := "CONTRIBUICAO SEGURIDADE SOCIAL"
					MsUnlock()
					FKCOMMIT()
				EndIf
	
				dVenFun := dEmissao + 28
				If Month(dVenFun) == Month(dEmissao)
					dVenFun := dVenFun+28
				EndIf
				nTamData := If(Len(Dtoc(dVenFun)) == 10, 7, 5)
				dVenFun	:= Ctod(StrZero(SuperGetMV("MV_DIAFUN"),2)+"/"+Subs(Dtoc(dVenFun),4,nTamData))
				dVencRea := DataValida(dVenFun,.T.)	
				DbSelectArea("SA1")
				DbGoTo(nSalvCli)
				If ( !SA1->A1_TIPO $ "L#F" )
					RecLock("SE1",.T.)
					SE1->E1_FILIAL  := cFilial
					SE1->E1_PREFIXO := cPrefixo
					SE1->E1_NUM 	 := cNum
					SE1->E1_PARCELA := cParcela
					SE1->E1_NATUREZ := cNatur
					SE1->E1_TIPO	 := MVFUABT
					SE1->E1_EMISSAO := dEmissao
					SE1->E1_VALOR	 := nValFun
					SE1->E1_VENCREA := dEmissao
					SE1->E1_SALDO	 := nValFun
					SE1->E1_VENCTO  := dEmissao
					SE1->E1_VENCORI := dEmissao
					SE1->E1_EMIS1	 := dDataBase
					SE1->E1_CLIENTE := SA1->A1_COD
					SE1->E1_LOJA	 := SA1->A1_LOJA
					SE1->E1_NOMCLI  := SA1->A1_NREDUZ
					SE1->E1_MOEDA	 := nMoeda
					SE1->E1_VLCRUZ  := Round( nValFun, MsDecimais(1) )
					SE1->E1_STATUS  := Iif(SE1->E1_SALDO>0.01,"A","B")
					SE1->E1_ORIGEM  := UPPER(cOrigem)
					SE1->E1_LA      := cLa
					SE1->E1_FATURA	 := cFatura
					SE1->E1_SITUACA := "0"
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ  Ä¿
					//³ Baixa do Saldo do cliente o valor do Funrural³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ  ÄÙ
					DbSelectArea("SA1")
					If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
						AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
					EndIf
					MsUnLock()
				Else
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria o cliente, caso nao exista 		   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SA2")
					DbSetOrder(1)
					If !(DbSeek(xFilial()+GetMv("MV_FORINSS")+Space(Len(A2_COD)-Len(GetMv("MV_FORINSS")))+"00"))
						Reclock("SA2",.T.)
						SA2->A2_FILIAL := cFilial
						SA2->A2_COD 	:= GetMv("MV_FORINSS")
						SA2->A2_LOJA	:= "00"
						SA2->A2_NOME	:= "Instituto Nacional de Previdencia Social"
						SA2->A2_NREDUZ := "INPS"
						SA2->A2_BAIRRO := "."
						SA2->A2_MUN 	:= "."
						SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
						SA2->A2_End 	:= "."
						SA2->A2_TIPO	:= "J"
						MsUnlock()
						FKCOMMIT()
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera titulo para uniao, pois quando a vEnda e'           ³
					//³ para pessoa fisica quem recolhe o funrural e' quem vEnde ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SE2")
					RecLock("SE2",.T.)
					SE2->E2_FILIAL  := cFilial
					SE2->E2_PREFIXO := cPrefixo
					SE2->E2_NUM 	 := cNum
					SE2->E2_PARCELA := cParcela
					SE2->E2_NATUREZ := cNatur
					SE2->E2_TIPO	 := MVTAXA
					SE2->E2_EMISSAO := dEmissao
					SE2->E2_VALOR	 := nValFun
					SE2->E2_VENCTO  := dVenFun
					SE2->E2_SALDO	 := nValFun
					SE2->E2_VENCREA := dVencRea
					SE2->E2_VENCORI := dVenFun
					SE2->E2_FORNECE := SuperGetMV("MV_FORINSS")
					SE2->E2_LOJA	 := "00"
					SE2->E2_NOMFOR  := SA2->A2_NREDUZ
					SE2->E2_MOEDA	 := nMoeda
					SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
					SE2->E2_LA      := cLa

					If lM040CSSR				
						ExecBlock("M040CSSR",.F.,.F.)
					Endif
					
					MsUnlock()
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera titulo de COFINS                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nCofins > 0

				If lAbate 		

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Cria a natureza COFINS caso nao exista     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SED")
					cNatureza	:= (SuperGetMV("MV_COFINS"))
					cNatureza	:= cNatureza+(Space(10-Len(cNatureza)))
					If ( ! DbSeek( cFilial + cNatureza ) )
						RecLock("SED",.T.)
						SED->ED_FILIAL  := xFilial()
						SED->ED_CODIGO  := cNatureza
						SED->ED_CALCIRF := "N"
						SED->ED_CALCISS := "N"
						SED->ED_CALCINS := "N"
						SED->ED_CALCCSL := "N"
						SED->ED_CALCCOF := "N"
						SED->ED_CALCPIS := "N"
						SED->ED_DESCRIC := "COFINS"
						MsUnlock()
						FKCOMMIT()
					EndIf
				
					RecLock("SE1",.T.)
					SE1->E1_FILIAL  := cFilial
					SE1->E1_PREFIXO := cPrefixo
					SE1->E1_NUM     := cNum
					SE1->E1_PARCELA := cParcela
					SE1->E1_TIPO    := MVCFABT
					SE1->E1_EMISSAO := dEmissao
					SE1->E1_EMIS1   := dDataBase
					SE1->E1_VALOR   := nCofins
					SE1->E1_VENCTO  := dVencto
					SE1->E1_SALDO   := nCofins
					SE1->E1_VENCREA := dVencRea
					SE1->E1_VENCORI := dVencto
					SE1->E1_CLIENTE := cCliente
					SE1->E1_LOJA    := cLoja
					SE1->E1_NOMCLI  := SA1->A1_NREDUZ
					SE1->E1_MOEDA   := nMoeda
					SE1->E1_VLCRUZ  := Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
					SE1->E1_ORIGEM  := Upper(cOrigem)
					SE1->E1_NATUREZ := cNatureza
					SE1->E1_OCORREN := "04"
					SE1->E1_SITUACA := "0"
					SE1->E1_STATUS  := "A"
					SE1->E1_LA      := cLa
					SE1->E1_FATURA	 := cFatura
										
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Baixa do Saldo do cliente o valor do COFINS³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SA1")
					If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
						AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
					EndIf
					
					lAbateuCOF := .T. 
					
					If ExistBlock("F040COF")
						Execblock("F040COF",.F.,.F.,nSavRec)
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera lançamento do COFINS no SIGAPCO a partir do contas a receber ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Upper(cOrigem) == "FINA040"
    					PCODetLan("000001","09",Upper(cOrigem))
					EndIf

				Else
					If lContrAbat 
						lAbateuCOF := .F. 
					EndIf 										
				EndIf	

			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera titulo de PIS                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPis > 0

				If lAbate
	
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria a natureza PIS caso nao exista        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SED")
					cNatureza       := SuperGetMV("MV_PISNAT")
					cNatureza := cNatureza+(Space(10-Len(cNatureza)))
					If ( ! DbSeek( cFilial + cNatureza ) )
						RecLock("SED",.T.)
						SED->ED_FILIAL  := cFilial
						SED->ED_CODIGO  := cNatureza
						SED->ED_CALCIRF := "N"
						SED->ED_CALCISS := "N"
						SED->ED_CALCINS := "N"
						SED->ED_CALCCSL := "N"
						SED->ED_CALCCOF := "N"
						SED->ED_CALCPIS := "N"
						SED->ED_DESCRIC := "PIS"
						MsUnlock()
						FKCOMMIT()
					EndIf
	
					RecLock("SE1",.T.)
					SE1->E1_FILIAL  := cFilial
					SE1->E1_PREFIXO := cPrefixo
					SE1->E1_NUM     := cNum
					SE1->E1_PARCELA := cParcela
					SE1->E1_TIPO    := MVPIABT
					SE1->E1_EMISSAO := dEmissao
					SE1->E1_EMIS1   := dDataBase
					SE1->E1_VALOR   := nPis
					SE1->E1_VENCTO  := dVencto
					SE1->E1_SALDO   := nPis
					SE1->E1_VENCREA := dVencRea
					SE1->E1_VENCORI := dVencto
					SE1->E1_CLIENTE := cCliente
					SE1->E1_LOJA    := cLoja
					SE1->E1_NOMCLI  := SA1->A1_NREDUZ
					SE1->E1_MOEDA   := nMoeda
					SE1->E1_VLCRUZ  := Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
					SE1->E1_ORIGEM  := Upper(cOrigem)
					SE1->E1_NATUREZ := cNatureza
					SE1->E1_STATUS  := "A"
					SE1->E1_SITUACA := "0"
					SE1->E1_OCORREN := "04"
					SE1->E1_LA      := cLa
					SE1->E1_FATURA	 := cFatura

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Baixa do Saldo do cliente o valor do PIS   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SA1")
					If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
						AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
					EndIf

					lAbateuPIS := .T.

					If ExistBlock("F040PIS")
						Execblock("F040PIS",.F.,.F.,nSavRec)
					EndIf                

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera lançamento do PIS no SIGAPCO a partir do contas a receber ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Upper(cOrigem) == "FINA040"
    					PCODetLan("000001","10",Upper(cOrigem))
					EndIf
	
				Else
					If lContrAbat 
						lAbateuPIS := .F. 
					EndIf 										
				EndIf	

			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera titulo de CSLL                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nCsll > 0

				If lAbate
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Cria a natureza CSLL caso nao exista       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SED")
					cNatureza	:= SuperGetMV("MV_CSLL")
					cNatureza	:= cNatureza+(Space(10-Len(cNatureza)))
					If ( ! DbSeek( cFilial + cNatureza ) )
						RecLock("SED",.T.)
						SED->ED_FILIAL  := cFilial
						SED->ED_CODIGO  := cNatureza
						SED->ED_CALCIRF := "N"
						SED->ED_CALCISS := "N"
						SED->ED_CALCINS := "N"
						SED->ED_CALCCSL := "N"
						SED->ED_CALCCOF := "N"
						SED->ED_CALCPIS := "N"
						SED->ED_DESCRIC := "CONTRIB.S/LUCRO LIQUIDO"
						MsUnlock()
						FKCOMMIT()
					EndIf
					
					RecLock("SE1",.T.)
					SE1->E1_FILIAL  := cFilial
					SE1->E1_PREFIXO := cPrefixo
					SE1->E1_NUM     := cNum
					SE1->E1_PARCELA := cParcela
					SE1->E1_TIPO    := MVCSABT
					SE1->E1_EMISSAO := dEmissao
					SE1->E1_EMIS1   := dDataBase
					SE1->E1_VALOR   := nCsll
					SE1->E1_VENCTO  := dVencto
					SE1->E1_SALDO   := nCsll
					SE1->E1_VENCREA := dVencRea
					SE1->E1_VENCORI := dVencto
					SE1->E1_CLIENTE := cCliente
					SE1->E1_LOJA    := cLoja
					SE1->E1_NOMCLI  := SA1->A1_NREDUZ
					SE1->E1_MOEDA   := nMoeda
					SE1->E1_VLCRUZ  := Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
					SE1->E1_ORIGEM  := Upper(cOrigem)
					SE1->E1_NATUREZ := cNatureza
					SE1->E1_STATUS  := "A"
					SE1->E1_SITUACA := "0"
					SE1->E1_OCORREN := "04"
					SE1->E1_LA      := cLa
					SE1->E1_FATURA	 := cFatura
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Baixa do Saldo do cliente o valor do csll  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					DbSelectArea("SA1")
					If ( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )) .And. lAtuSalDup
						AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
					EndIf

					lAbateuCSLL := .T. 
	
					If ExistBlock("F040CSL")
						Execblock("F040CSL",.F.,.F.,nSavRec)
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera lançamento do CSLL no SIGAPCO a partir do contas a receber ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Upper(cOrigem) == "FINA040"
    					PCODetLan("000001","11",Upper(cOrigem))
					EndIf
	
				Else
					If lContrAbat 
						lAbateuCSLL := .F. 
					EndIf 										
				EndIf	
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera titulo do FETHAB                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( lCalcFet .And. nFetHab > 0 )
				RecLock("SE1",.T.)
				SE1->E1_FILIAL	:= cFilial
				SE1->E1_PREFIXO	:= cPrefixo
				SE1->E1_NUM 	:= cNum
				SE1->E1_PARCELA	:= cParcela
				SE1->E1_TIPO   	:= "FE-"
				SE1->E1_EMISSAO	:= dEmissao
				SE1->E1_EMIS1  	:= dDataBase
				SE1->E1_VALOR  	:= nFetHab
				SE1->E1_VENCTO 	:= dVencto
				SE1->E1_SALDO  	:= nFetHab
				SE1->E1_VENCREA	:= dVencRea
				SE1->E1_VENCORI	:= dVencto                                           
				SE1->E1_CLIENTE	:= cCliente
				SE1->E1_LOJA   	:= cLoja
				SE1->E1_NOMCLI 	:= SA1->A1_NREDUZ
				SE1->E1_MOEDA  	:= nMoeda
				SE1->E1_VLCRUZ 	:= Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,3),MsDecimais(1)+1),MsDecimais(1))
				SE1->E1_ORIGEM 	:= Upper(cOrigem)
				cNatureza      	:= SuperGetMV("MV_FETNAT",.F.,"FETHAB")
				SE1->E1_NATUREZ	:= cNatureza
				SE1->E1_STATUS 	:= "A"
				SE1->E1_SITUACA	:= "0"
				SE1->E1_OCORREN	:= "04"
				SE1->E1_LA     	:= cLa
				SE1->E1_FATURA	:= cFatura

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Cria a natureza Fethab caso nao exista     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DbSelectArea("SED")
				cNatureza := AllTrim(cNatureza)
				cNatureza := cNatureza+(Space(10-Len(cNatureza)))
				If ( !MsSeek( cFilial + cNatureza ) )
					RecLock("SED",.T.)
					SED->ED_FILIAL  := cFilial
					SED->ED_CODIGO  := cNatureza
					SED->ED_CALCIRF := "N"
					SED->ED_CALCISS := "N"
					SED->ED_CALCINS := "N"
					SED->ED_CALCCSL := "N"
					SED->ED_CALCCOF := "N"
					SED->ED_CALCPIS := "N"
					SED->ED_CALCFET := "1"					
					SED->ED_DESCRIC := "FETHAB"
				EndIf
				
				If ExistBlock("F040FET")
					Execblock("F040FET",.F.,.F.,nSavRec)
				Endif
			Endif
		EndIf  // cPaisLoc
	EndIf
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso nao tenha efetuado os abatimentos, grava os campos de saldo a abater ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If (lContrAbat.Or.lCtrAbatIRF).And. ( lAbateuPIS .Or. lAbateuCOF .Or. lAbateuCSLL .Or. lAbateuIRF) 
	
	SE1->( MsGoto( nSavREC ) ) 
	RecLock( "SE1", .F. ) 
	           
	If lAbateuPIS 
		SE1->E1_SABTPIS := 0
	EndIf 	                                  

	If lAbateuCOF 
		SE1->E1_SABTCOF := 0 
	EndIf 	                                  

	If lAbateuCSLL 
		SE1->E1_SABTCSL := 0
	EndIf 	                                  

	If lAbateuIRF
		SE1->E1_SABTIRF := 0
	EndIf 	                                  
	SE1->( MsUnlock() ) 	
	
EndIf 

DbSelectArea( "SA1" )
DbGoTo( nSalvCli )
DbSelectArea( "SE1" )
DbGoTo( nSavRec )
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³A050DupPag³Autor  ³ Wagner Xavier         ³ Data ³ 28.02.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualizacao de titulos a pagar, gerando todos os dados      ³±±
±±³			 ³complementares a uma implantacao de titulo.                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³A050DupPag()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ cOrigem := Programa que originou o t¡tulo                  ³±±
±±³          ³ nTotIrrf:= Valor total do IRRF ( MATA100 ).                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  A050DupPag( cOrigem,lUpDate,nTotIrrf,nTotINSS,lRtPICFCS,nTotISS,nBasISS,lRatImp,lFina050 )

Local nValForte:=0,nIrrf:=0,nIss:=0, nInss := 0, nSEST := 0
Local cParcela,dEmissao,dVencto,dVencRea
Local cPrefixo,cNum,cTipoE2,nMOeda:=SE2->E2_MOEDA
Local dNextDay,nRegSe2,nRegSA2,nRegSED
Local cNatureza,lCond,lSa2:=.T.
Local nTamData	 := 0
Local lZeraIrrf := .F.
Local cLa := SE2->E2_LA
Local nDiaUtil    := 0
Local nDia        := 0
Local nMCusto   := 0
Local nOrdSe2 := SE2->(IndexOrd())
Local nVRetISS := 0
Local cSEST    := GetMv("MV_SEST",,"")
Local cForSEST := PadR( GetMv("MV_FORSEST",,""), Len( SE2->E2_FORNECE ) ) 
Local aTamParc := TamSx3("E2_PARCELA")
Local lM050CSSP := ExistBlock("M050CSSP")
Local cMunIss   := GetMv("MV_MUNIC")
Local cForLojISS:= "" 
Local dVenISS   := CtoD("")
Local dEmis1	:= SE2->E2_EMIS1
Local dVctoReal:= SE2->E2_VENCREA
Local cFornSe2 := SE2->E2_FORNECE
Local cLojaSe2	:= SE2->E2_LOJA
Local cFilDeb  := SE2->E2_FILDEB
Local cGeraDirf := If(cPaisLoc=="BRA",SE2->E2_DIRF,"")
Local cCodRetIr := If(cPaisLoc=="BRA",SE2->E2_CODRET,"")
Local cMultNat  := SE2->E2_MULTNAT 
Local cFornUni   := ""
Local cLojaUni   := ""
Local cLojaImpos := PadR( "00", Len( SE2->E2_LOJA ) ) 
Local	nCofins  := 0
Local	nPis     := 0
Local	nCsll    := 0
Local bCondicao  := ""
Local nTotBasISS := 0
Local lProcessa  := .T.
Local nFethab    := 0
Local lCalcFet   := ( FindFunction("MaCalcFet") .And. MaCalcFet() )

Local lContrRet := !Empty( SE2->( FieldPos( "E2_VRETPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE2->( FieldPos( "E2_VRETCSL" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETPIS" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_PRETCOF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETCSL" ) ) )

Local nCntFor

Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

Local lIrfMp232 := !Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ) .and. SA2->A2_CALCIRF == "2" .and. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) )
                             
// Carrega variavel de verificacao de consideracao de valor minimo de retencao de IR.
Local lDesMinIR := !Empty( SA2->( FieldPos( "A2_MINIRF" ) ) ) .and. SA2->A2_MINIRF == "1"

Local nMinRetIR := GetMv("MV_VLRETIR")
Local xMinRetIR := 0

Local lCalcIssBx := !Empty( SE5->( FieldPos( "E5_VRETISS" ) ) ) .and. !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .and. ;
							!Empty( SE2->( FieldPos( "E2_TRETISS" ) ) ) .and. GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)

Local aRatSev	  := {}
Local aRatSez	  := {}
Local nImpostos  := 0 	

Local lVcAntIss := (SuperGetMV("MV_ANTVISS",.T.,"2") == "1")  //Antecipa ou nao o vencimento do ISS em caso de vencimento em dia nao util
Local dVencRIss := CTOD("//")         
// Verifica se a retencao minima de ISS por base de calculo devera ser calculada pela emissao e nao vencimento - Municipio de Itabira - MG
Local lRetISSEmi	:= GetNewPar("MV_RISSEMI",.F.)
Local cFornCD := GetNewPar("MV_FORNCD","  ")
Local cForMinISS := GetNewPar("MV_FMINISS","1")
Local cTipoFor   := ""

Local lVretIrf := !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) )
Local lIrfRetAnt := .F.
Local lRetBISS := GetNewPar("MV_RETBISS",.F.)	//Retencao Minima de ISS pela Base de Calculo - Municipio de SBC - Sao Paulo

cOrigem := If(cOrigem==NIL,Space(8),Upper(cOrigem))
lUpDate := If( (lUpDate == NIL),.T.,lUpDate )
DEFAULT nTotINSS := 0                   
DEFAULT lRtPICFCS:= .T. 
DEFAULT nTotISS  := SE2->E2_ISS
DEFAULT nBasISS  := IIf(nTotISS>0,SE2->E2_VALOR+nTotISS,0)
DEFAULT lRatImp  := .F.
DEFAULT lFina050  := .F. 
DEFAULT nTotIrrf  := SE2->E2_IRRF

DbSelectArea("SA2")
nRegSA2 := RecNo()
DbSelectArea("SE2")
nRegSE2 := RecNo()

// Se o titulo estiver rateado em multiplas naturezas, 
If lRatImp .And. MV_MULNATP .And. SE2->E2_MULTNAT == "1"
	nImpostos := If(lIrfMP232,0,SE2->E2_IRRF)+;
				    If(!lCalcIssBx,SE2->E2_ISS,0)+;
				    SE2->E2_INSS+;
				    If(lPccBaixa,0,SE2->(E2_PIS+E2_COFINS+E2_CSLL))+SE2->E2_RETENC+SE2->E2_SEST
	// Carrega os rateios do titulo principal, para repassar aos titulos de impostos
	SEV->(DbSetOrder(2))
	SEZ->(DbSetOrder(1))
	SEV->(MsSeek(xFilial("SEV")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA+"1")))		//1=Inclusao
	While SEV->(EV_FILIAL+EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+EV_LOJA+EV_IDENT) ==;
			xFilial("SEV")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA+"1")	//1 = Inclusao
		
		// Recalcula os rateios, desconsiderando os impostos
		RecLock("SEV", .F.)
		SEV->EV_VALOR := SEV->EV_VALOR - (nImpostos*SEV->EV_PERC)
		msUnlock()
		
		// Adiciona todos os campos do SEV
		AAdd(aRatSev, {} )
		Aeval(SEV->(DbStruct()), { |e,i| Aadd(aRatSev[Len(aRatSev)], { e[1], SEV->(FieldGet(i)) } ) } )
		
		SEZ->(MsSeek(xFilial("SEZ")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA+SEV->EV_NATUREZ)))
		While SEZ->(EZ_FILIAL+EZ_PREFIXO+EZ_NUM+EZ_PARCELA+EZ_TIPO+EZ_CLIFOR+EZ_LOJA+EZ_NATUREZ) ==;
				xFilial("SEZ")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA+SEV->EV_NATUREZ)
			// Recalcula os rateios, desconsiderando os impostos
			RecLock("SEZ", .F.)
			SEZ->EZ_VALOR := (SEV->EV_VALOR * SEZ->EZ_PERC)
			msUnlock()
			AAdd(aRatSez, {} )
			Aeval(SEZ->(DbStruct()), { |e,i| Aadd(aRatSez[Len(aRatSez)], { e[1], SEZ->(FieldGet(i)) } ) } )
			SEZ->(DbSkip())
		End						
		SEV->(DbSkip())
	End	
Endif
DbSelectArea("SED")
nRegSED := RecNo()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verificar o Municipio de ISS deste Fornecedor   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SA2->(FieldPos("A2_MUNIC")) > 0 .And. !Empty(SA2->A2_MUNIC)
   cMvMunic := SA2->A2_MUNIC
EndIf                                                    
cForLojISS := Pad(cMunIss,Len(SA2->A2_COD))+cLojaImpos
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Transfere titulo de ISS para fornecedor de origem ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SE2->(FieldPos("E2_FORNISS")) > 0 .And. SE2->(FieldPos("E2_LOJAISS")) > 0
	If !Empty(SE2->E2_FORNISS) .And. !Empty(SE2->E2_LOJAISS) 
		cForLojISS := SE2->E2_FORNISS+SE2->E2_LOJAISS
	EndIf
Endif	

If SE2->(FieldPos("E2_VENCISS")) > 0
	If !Empty(SE2->E2_VENCISS)
		dVenISS := SE2->E2_VENCISS
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza dados do Fornecedor 				  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE2")
lCond := .F.

If ( SA2->A2_RECISS == "S" .And. lSA2)     // Fornecedor recolhe ISS
	If !E2_NATUREZ$&(GetMv("MV_ISS")) .Or. !E2_NATUREZ$&(GetMv("MV_IRF")) .or.;
		!E2_NATUREZ$&(GetMv("MV_INSS")) .or. !E2_NATUREZ$AllTrim(cSEST)
		lCond := .T.
	EndIf
ElseIf SA2->A2_RECINSS == "S"      // Fornecedor recolhe INSS
	If !E2_NATUREZ$&(GetMv("MV_ISS")) .Or. !E2_NATUREZ$&(GetMv("MV_IRF")) .or.;
		!E2_NATUREZ$&(GetMv("MV_INSS"))
		lCond := .T.
	EndIf
ElseIf SA2->(FieldPos("A2_RECSEST")) > 0 .And. SA2->A2_RECSEST $ "S1"      // Fornecedor recolhe SEST
	If !E2_NATUREZ$&(GetMv("MV_ISS")) .Or. !E2_NATUREZ$&(GetMv("MV_IRF")) .or.;
		!E2_NATUREZ$AllTrim(cSEST)
		lCond := .T.
	EndIf	
ElseIf ( !E2_NATUREZ$&(GetMv("MV_IRF")) )
  	lCond := .T.
EndIf

cTipoFor := IIF(LEN(TRIM(SA2->A2_CGC))< 14,"F","J")

If ( lCond )
	//Ponto de entrada para tratamento do valor minimo para IRRF.
	If ExistBlock("F040MIRF")
		xMinRetIR := 0
		xMinRetIR := Execblock("F040MIRF",.F.,.F.,{SA2->A2_COD,SA2->A2_LOJA})
		nMinRetIR := If(ValType(xMinRetIR)=="N",xMinRetIR,nMinRetIR)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza dados do Cta Pagar					  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc == "BRA" 
		//Verificacao do valor minimo de IRRF - Nao gerados pelo FINANCEIRO
		If !lFina050	

			If lVRetIrf
				nTotIrrf := FCalcIr(0,cTipoFor,.F.,@lIrfRetAnt)
			Endif
		
			If ( cOrigem == "MATA100" ) .And. nTotIrrf != Nil .And. GetMv("MV_VENCIRF") == "E"
				// Verifica se o fornecedor trata o valor minimo de retencao e se a regra se aplica.
				If !lDesMinIR .And. (nTotIrrf <= nMinRetIR .and. !lIrfRetAnt)
					lZeraIrrf	:= .T.
				EndIf
			Else
				// Verifica se o fornecedor trata o valor minimo de retencao , se a regra se aplica e se o titulo nao foi gerado pelo fina050
				If !lDesMinIR .And. ( nTotIrrf <= nMinRetIR .and. !lIrfRetAnt)
					lZeraIrrf	:= .T.
				EndIf
			EndIf
			If lZeraIrrf .and. !lIrfMP232
				DbSelectArea("SE2")
				RecLock("SE2",.F.)
				SE2->E2_VALOR	+= SE2->E2_IRRF
				SE2->E2_SALDO	+= SE2->E2_IRRF
				SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
				If lVRetIrf
					SE2->E2_VRETIRF := SE2->E2_IRRF
				Endif
				SE2->E2_IRRF	:= 0
			ElseIf lVRetIrf .and. !lFina050 .and. nTotIrrf > SE2->E2_IRRF
				//Recompoem o valor do IRRF no saldo e desconta o valor acumulado
				DbSelectArea("SE2")
				RecLock("SE2",.F.)
				SE2->E2_VALOR	+= SE2->E2_IRRF - nTotIrrf   
				SE2->E2_SALDO	+= SE2->E2_IRRF - nTotIrrf
				SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
				If lVRetIrf
					SE2->E2_VRETIRF := SE2->E2_IRRF
				Endif
				SE2->E2_IRRF	:= nTotIrrf
			Else
				If lVRetIrf
					DbSelectArea("SE2")
					RecLock("SE2",.F.)
					SE2->E2_VRETIRF := SE2->E2_IRRF
				Endif
			EndIf
		Endif

		If ( SE2->E2_INSS < SuperGetMv("MV_VLRETIN") .And. nTotINSS < SuperGetMv("MV_VLRETIN") ) .And.;
			SA2->A2_TIPO <> "F"
			DbSelectArea("SE2")
			RecLock("SE2",.F.)
			SE2->E2_VALOR	+= SE2->E2_INSS
			SE2->E2_SALDO	+= SE2->E2_INSS
			SE2->E2_VLCRUZ	:= Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
			SE2->E2_INSS	:= 0
		EndIf
		If SE2->(FieldPos("E2_VRETISS")) > 0 .and. !lCalcIssBx
			If lRetBISS .And. SE2->(FieldPos("E2_VBASISS")) > 0 .And. SE2->(FieldPos("E2_MDRTISS")) > 0 .And. nBasISS > 0 .And. !lRetISSEmi
				If SE2->E2_MDRTISS == "2"
					bCondicao := {|| nTotBasISS <= SuperGetMv("MV_VBASISS",.T.,0) }
				Else
					If cForMinISS == "1"
	                	lProcessa := .F.
					Else                          
						// Retencao pelo minimo em apenas alguns produtos
						If !Empty( SE2->( FieldPos( "E2_FRETISS" ) ) ) .And. SE2->E2_FRETISS == "1" 
							bCondicao := {|| nBasISS > 0 .And. nBasISS <= SuperGetMv("MV_VBASISS",.T.,0) }				
						Else
							lProcessa := .F.
						Endif
					Endif
				Endif
			Else
				If cForMinISS == "1"
					bCondicao := {|| nTotISS > 0 .And. nTotISS <= SuperGetMv("MV_VRETISS",.T.,0) }
				Else
					// Retencao pelo minimo em apenas alguns produtos
					If !Empty( SE2->( FieldPos( "E2_FRETISS" ) ) ) .And. SE2->E2_FRETISS == "1" 
						bCondicao := {|| nBasISS > 0 .And. nBasISS <= SuperGetMv("MV_VBASISS",.T.,0) }				
					Else 
						lProcessa := .F.
					Endif
				Endif
			Endif
			
			If lProcessa
				If !lRetISSEmi
					SomaTitISS("SE2",SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_VENCREA,@nTotISS,@nVRetISS,@nTotBasISS,nBasISS)
				Else                                                                                                       
					SomaTitISS("SE2",SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_EMISSAO,@nTotISS,@nVRetISS,@nTotBasISS,nBasISS,lRetISSEmi)
				Endif
				DbSelectArea("SE2")
				RecLock("SE2",.F.)

				If lRetBISS .And. SE2->(FieldPos("E2_VBASISS")) > 0 	
					SE2->E2_VBASISS	:= nBasISS
				Endif
				If ((SE2->(FieldPos("E2_FRETISS"))>0 .And. SE2->E2_FRETISS=="1") .Or.;	//Se a opcao no cadastro de clientes existir e estiver como 1=Considera Valor Minimo, respeito o tratamento padrao.
					(SE2->(FieldPos("E2_FRETISS"))>0 .And. SE2->E2_FRETISS=="2" .And. SuperGetMv ("MV_MODRISS", "1")=="2") .Or.; //Se a opcao no cadastro de clientes existir, estiver como 2=Sempre reter e a Modalidade de retencao for 1=Por titulo, desconsidero o Valor minimo e gero o titulo normalmente.
					SE2->(FieldPos("E2_FRETISS"))==0) .And.;	//Se a opcao no cadastro de clientes nao existir, respeito o tratamento padrao para o valor minimo.
					Eval(bCondicao)

					SE2->E2_VRETISS := SE2->E2_ISS
					SE2->E2_VALOR	+= SE2->E2_ISS
					SE2->E2_SALDO	+= SE2->E2_ISS
					SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
					SE2->E2_ISS	:= 0
				Else
					SE2->E2_VALOR	+= SE2->E2_ISS
					SE2->E2_SALDO	+= SE2->E2_ISS
					SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
					If (SE2->E2_ISS+nVRetISS) > (SE2->E2_VALOR)-0.01
						SE2->E2_VRETISS := (SE2->E2_ISS+nVRetISS) - ((SE2->E2_VALOR)-0.01)
						SE2->E2_ISS := (SE2->E2_VALOR)-0.01
					Else
						SE2->E2_ISS := (SE2->E2_ISS+nVRetISS)
					EndIf
					SE2->E2_VALOR	-= SE2->E2_ISS
					SE2->E2_SALDO	-= SE2->E2_ISS
					SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
				Endif
			Endif
		EndIf
	Else
		DbSelectArea("SE2")
		RecLock("SE2",.F.)
		SE2->E2_VLCRUZ := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
	EndIf
	If ExistBlock("ATUDPPAG")
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para Atualiza‡”es no SE2   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ExecBlock("ATUDPPAG",.f.,.f.,cOrigem)
	EndIf
	nRegSe2	:= RecNo()
	cPrefixo := SE2->E2_PREFIXO
	cNum		:= SE2->E2_NUM
	cTipoE2	:= SE2->E2_TIPO
	nValForte:= ConvMoeda(SE2->E2_EMISSAO,SE2->E2_VENCTO,SE2->E2_VALOR,GetMv("MV_MCUSTO"))

	// Criado o parametro MV_FORNCD para possibilitar um grande volume de notas SEM LOCK do SA2 para definir, por exemplo, notas de um centro de
	// distruicao (ponto de gargalo)
	If !SE2->E2_TIPO $ MVABATIM .and. cFORNCD != SE2->E2_FORNECE + SE2->E2_LOJA 
		RecLock(If(lSA2,"SA2","SA1"))
		If ! ( SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG )
			If lSA2 .and. SA2->(!Eof())
				SA2->A2_SALDUP +=Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,3),3),2)
				SA2->A2_SALDUPM+=Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,3),3),2)
			EndIf
		Else
			If ( !lSA2 ) .and. SA2->(!Eof())
				AtuSalDup("-",SE2->E2_VALOR,SE2->E2_MOEDA,SE2->E2_TIPO,,SE2->E2_EMISSAO)
			EndIf
		EndIf
		nValForte:=ConvMoeda(SE2->E2_EMISSAO,SE2->E2_VENCTO,If(lSA2,A2_SALDUP,A1_SALDUP),GetMv("mv_mcusto"))
		nMCusto:=Val(GetMV("MV_MCUSTO"))
		If ( lSA2 ) .AND. SA2->(!Eof())
			DbSelectArea( "SA2" )
			If ( SA2->A2_SALDUPM > A2_MSALDO )
				SA2->A2_MSALDO := SA2->A2_SALDUPM
			EndIf
			SA2->A2_PRICOM  := Iif(SE2->E2_EMISSAO<A2_PRICOM .Or. Empty(SA2->A2_PRICOM),SE2->E2_EMISSAO,SA2->A2_PRICOM)
			SA2->A2_ULTCOM  := Iif(SA2->A2_ULTCOM<SE2->E2_EMISSAO,SE2->E2_EMISSAO,SA2->A2_ULTCOM)
			SA2->A2_NROCOM  := SA2->A2_NROCOM + If( lUpDate,1,0 )
			If ( SA2->A2_MCOMPRA < Round(NoRound(xMoeda(SE2->E2_VALOR,1,nMCusto,SE2->E2_EMISSAO,3),3),2) )
				SA2->A2_MCOMPRA := Round(NoRound(xMoeda(SE2->E2_VALOR,1,nMCusto,SE2->E2_EMISSAO,3),3),2)
			EndIf
 			If FieldPos("A2_MNOTA") != 0
				If SubStr(SE2->E2_ORIGEM,1,3) == "FIN"
					SA2->A2_MNOTA   := Max(SA2->A2_MNOTA,Round(NoRound(xMoeda(SE2->E2_VALOR,1,nMCusto,SE2->E2_EMISSAO,3),3),2) )													
				ElseIf SubStr(cOrigem,1,7) $ "MATA100"
                    aArea := SF1->(GetArea())
					DbSelectArea("SF1")
					DbSetOrder(1)
					DbSeek(xFilial("SF1")+SE2->E2_NUM+SE2->E2_PREFIXO+SE2->E2_FORNECE+SE2->E2_LOJA)
					SA2->A2_MNOTA   := Max(SA2->A2_MNOTA,Round(NoRound(xMoeda(SF1->F1_VALBRUT,1,nMCusto,SF1->F1_EMISSAO,3),3),2) )																				
					RestArea(aArea)
				EndIf
			EndIf
			
		EndIf
		MsUnlock()
	EndIf

	DbSelectArea( "SE2" )
	cParcela := E2_PARCELA
	dEmissao := E2_EMISSAO
	dVencto	 := E2_VENCREA
	nIrrf 	 := E2_IRRF
	nIss	 := E2_ISS
	nInss 	 := E2_INSS
	nSEST 	 := E2_SEST
	nCofins  := SE2->E2_COFINS
	nPis     := SE2->E2_PIS
	nCsll    := SE2->E2_CSLL          

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera titulo de IRRF 							  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( nIrrf > 0 ) .and. !lIrfMP232
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria o Fornecedor, caso nao exista 		  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SA2")
		MsSeek(cFilial+GetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMV("MV_UNIAO")))+cLojaImpos)
		If ( EOF() )
			Reclock("SA2",.T.)
			SA2->A2_FILIAL := cFilial
			SA2->A2_COD 	:= GetMV("MV_UNIAO")
			SA2->A2_LOJA	:= cLojaImpos
			SA2->A2_NOME	:= "UNIAO"
			SA2->A2_NREDUZ := "UNIAO"
			SA2->A2_BAIRRO := "."
			SA2->A2_MUN 	:= "."
			SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
			SA2->A2_End 	:= "."
			SA2->A2_TIPO	:= "J"
			MsUnlock()
			FKCOMMIT()
		EndIf

		cNatureza		:= &(GetMv("MV_IRF"))
		cNatureza		:= cNatureza+Space(10-Len(cNatureza))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria a natureza IRF caso nao exista		   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SED")
		If ( !DbSeek(cFilial+cNatureza) )
			RecLock("SED",.T.)
			SED->ED_FILIAL  := cFilial
			SED->ED_CODIGO  := cNatureza
			SED->ED_CALCIRF := "N"
			SED->ED_CALCISS := "N"
			SED->ED_CALCINS := "N"
			SED->ED_CALCCSL := "N"
			SED->ED_CALCCOF := "N"
			SED->ED_CALCPIS := "N"
			SED->ED_DESCRIC := "IMPOSTO RENDA RETIDO NA FONTE"
			MsUnlock()
			FKCOMMIT()
		EndIf
		cParcela := ParcImposto(cPrefixo,cNum,cTipoE2)

		dVencRea := F050VIMP("IRRF",dEmissao,dEmis1,dVctoReal,cCodRetIr,cTipoFor) // Calcula o vencto do imposto

		RecLock("SE2",.T.)
		SE2->E2_FILIAL  := cFilial
		SE2->E2_PREFIXO := cPrefixo
		SE2->E2_NUM 	 := cNum
		SE2->E2_PARCELA := cParcela
		SE2->E2_TIPO	 := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG .And. !lPCCBaixa,MVTXA,MVTAXA)
		SE2->E2_EMISSAO := dEmissao
		SE2->E2_VALOR	 := nIrrf
		SE2->E2_VENCREA := dVencrea
		SE2->E2_SALDO	 := nIrrf
		SE2->E2_VENCTO  := dVencRea
		SE2->E2_VENCORI := dVencRea
		SE2->E2_MOEDA	 := nMoeda
		SE2->E2_EMIS1	 := dDataBase
		SE2->E2_FORNECE := GetMV("MV_UNIAO")
		SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
		SE2->E2_LOJA	 := SA2->A2_LOJA
		SE2->E2_NOMFOR  := SA2->A2_NREDUZ
		SE2->E2_ORIGEM  := cOrigem
		SE2->E2_NATUREZ := cNatureza
		SE2->E2_LA      := cLA			// Herda do principal
		If cPaisLoc == "BRA"
			SE2->E2_DIRF    := cGeraDirf
			SE2->E2_CODRET  := cCodRetIr
		Endif	
		SE2->E2_MULTNAT  := cMultNat
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava a filial de origem quando existir o campo no SE2            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE2->(FieldPos("E2_FILORIG")) > 0
			SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
		EndIf
		MsUnlock()
		FKCOMMIT()		

		If ExistBlock("F050IRF")
			Execblock("F050IRF",.F.,.F.,nRegSE2)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava lançamento do imposto IRRF no SIGAPCO se a rotina foi chamada do contas a pagar ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If "FINA050" $ cOrigem
			PCODetLan("000002","06","FINA050")
		EndIf	
		// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
		If lRatImp
			GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) // Grava SEV e SEZ dos impostos
		Endif	

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava parcela do IRF na parcela do titulo  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea( "SE2" )
		DbGoTo( nRegSe2 )
		Reclock( "SE2" , .F. )
		SE2->E2_PARCIR := cParcela
		If cPaisLoc=="BRA"
			SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de 
											 // imposto var para DIRF
		Endif											 
		MsUnlock()     
		                                  
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera titulo de INSS 							  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nInss > 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria o Fornecedor, caso nao exista 		  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SA2")
		If !(MsSeek(xFilial()+GetMv("MV_FORINSS")+Space(Len(A2_COD)-Len(GetMv("MV_FORINSS")))+cLojaImpos))
			Reclock("SA2",.T.)
			SA2->A2_FILIAL	:= xFilial("SA2")
			SA2->A2_COD		:= GetMv("MV_FORINSS")
			SA2->A2_LOJA	:= cLojaImpos
			SA2->A2_NOME	:= "Instituto Nacional de Previdencia Social"
			SA2->A2_NREDUZ	:= "INPS"
			SA2->A2_BAIRRO	:= "."
			SA2->A2_MUN		:= "."
			SA2->A2_EST		:= SuperGetMv("MV_ESTADO")
			SA2->A2_END		:= "."
			SA2->A2_TIPO	:= "J"
			MsUnlock()
			FKCOMMIT()
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria a natureza INSS caso nao exista		  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cNatureza	:= &(GetMv("MV_INSS"))
		cNatureza	:= cNatureza+Space(10-Len(cNatureza))
		DbSelectArea("SED")
		If !DbSeek(cFilial+cNatureza)
			RecLock("SED",.T.)
			SED->ED_FILIAL  := cFilial
			SED->ED_CODIGO  := cNatureza
			SED->ED_CALCIRF := "N"
			SED->ED_CALCISS := "N"
			SED->ED_CALCINS := "N"
			SED->ED_CALCCSL := "N"
			SED->ED_CALCCOF := "N"
			SED->ED_CALCPIS := "N"
			SED->ED_DESCRIC := "RETENCAO P/ SEGURIDADE SOCIAL"
			MsUnlock()
			FKCOMMIT()
		EndIf
		DbGoTo(nRegSED)

		cParcela := STRZERO(1,aTamParc[1])
		While .T.
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ VerIfica se ja' ha' titulo de INSS com esta numera‡„o ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SE2")
			DbSetOrder(1)
			If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"INS"+PadR(GetMv("MV_FORINSS"),6)))
				cParcela := Soma1( cParcela,,.t. )
				Loop
			EndIf
			Exit
		End
		DbGoTo( nRegSe2 )

		// Calcula o vencto do imposto
		dVencRea := F050VIMP("INSS",dEmissao,dEmis1,dVctoReal)

		RecLock("SE2",.T.)
		SE2->E2_FILIAL  := xFilial()
		SE2->E2_PREFIXO := cPrefixo
		SE2->E2_NUM 	 := cNum
		SE2->E2_PARCELA := cParcela
		SE2->E2_TIPO	 := MVINSS
		SE2->E2_EMISSAO := dEmissao
		SE2->E2_VALOR	 := nInss
		SE2->E2_VENCREA := dVencrea
		SE2->E2_SALDO	 := nInss
		SE2->E2_VENCTO  := dVencRea
		SE2->E2_VENCORI := dVencRea
		SE2->E2_MOEDA	 := nMoeda
		SE2->E2_EMIS1	 := dDataBase
		SE2->E2_FORNECE := GetMv("MV_FORINSS")
		SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
		SE2->E2_LOJA	 := SA2->A2_LOJA
		SE2->E2_NOMFOR  := SA2->A2_NREDUZ
		SE2->E2_ORIGEM  := cOrigem
		SE2->E2_NATUREZ := cNatureza
		SE2->E2_LA      := cLA			// Herda do principal
		If cPaisLoc == "BRA"
			SE2->E2_DIRF    := cGeraDirf
			SE2->E2_CODRET  := cCodRetIr
		Endif	
		SE2->E2_MULTNAT  := cMultNat
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava a filial de origem quando existir o campo no SE2            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE2->(FieldPos("E2_FILORIG")) > 0
			SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
		EndIf
		MsUnlock()
		FKCOMMIT()		

		If ExistBlock("F050INS")
			Execblock("F050INS",.F.,.F.,nRegSE2)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava lançamento do imposto INSS no SIGAPCO se a rotina foi chamada do contas a pagar ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If "FINA050" $ cOrigem
			PCODetLan("000002","07","FINA050")
		EndIf	
		// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
		If lRatImp
			// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
			GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) 
		Endif	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava parcela do INSS na parcela do titulo ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea( "SE2" )
		DbGoTo( nRegSe2 )
		Reclock( "SE2" , .F. )
		SE2->E2_PARCINS := cParcela
		MsUnlock()
		
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera titulo de SEST 					   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nSEST > 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria o Fornecedor, caso nao exista 	       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SA2")
		If !(DbSeek(xFilial() + cForSEST + cLojaImpos ))
			Reclock("SA2",.T.)
			SA2->A2_FILIAL := cFilial
			SA2->A2_COD 	:= cForSEST
			SA2->A2_LOJA	:= cLojaImpos
			SA2->A2_NOME	:= STR0046  //Servico Social do Transporte
			SA2->A2_NREDUZ :=  "SEST"
			SA2->A2_BAIRRO := "."
			SA2->A2_MUN 	:= "."
			SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
			SA2->A2_End 	:= "."
			SA2->A2_TIPO	:= "J"
			MsUnlock()
			FKCOMMIT()
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria a natureza SEST caso nao exista		  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cNatureza		:= cSEST
		cNatureza		:= cNatureza+Space(10-Len(cNatureza))
		DbSelectArea("SED")
		If !DbSeek(cFilial+cNatureza)
			RecLock("SED",.T.)
			SED->ED_FILIAL  := cFilial
			SED->ED_CODIGO  := cNatureza
			SED->ED_CALCIRF := "N"
			SED->ED_CALCISS := "N"
			SED->ED_CALCINS := "N"
			SED->ED_CALCCSL := "N"
			SED->ED_CALCCOF := "N"
			SED->ED_CALCPIS := "N"
			SED->ED_DESCRIC := STR0046 //Servico Social do Transporte
			MsUnlock()
			FKCOMMIT()
		EndIf
		DbGoTo(nRegSED)

		cParcela := STRZERO(1,aTamParc[1])
		While .T.
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ VerIfica se ja' ha' titulo de SEST com esta numera‡„o ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SE2")
			DbSetOrder(1)
			If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"SES"+cForSEST))
				cParcela := Soma1( cParcela,,.t. )
				Loop
			EndIf
			Exit
		End
		DbGoTo( nRegSe2 )
		dNextMes := Month(SE2->E2_EMISSAO)+1
		dNextVen := CTOD("02/"+Iif(dNextMes==13,"01",StrZero(dNextMes,2))+"/"+;
		Substr(Str(Iif(dNextMes==13,Year(SE2->E2_EMISSAO)+1,Year(SE2->E2_EMISSAO))),2))
		dVencRea := DataValida(dNextVen,.T.)
		RecLock("SE2",.T.)
		SE2->E2_FILIAL  := xFilial()
		SE2->E2_PREFIXO := cPrefixo
		SE2->E2_NUM 	 := cNum
		SE2->E2_PARCELA := cParcela
		SE2->E2_TIPO	 := "SES"
		SE2->E2_EMISSAO := dEmissao
		SE2->E2_VALOR	 := nSEST
		SE2->E2_VENCREA := dVencrea
		SE2->E2_SALDO	 := nSEST
		SE2->E2_VENCTO  := dVencRea
		SE2->E2_VENCORI := dVencRea
		SE2->E2_MOEDA	 := nMoeda
		SE2->E2_EMIS1	 := dDataBase
		SE2->E2_FORNECE := cForSEST
		SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
		SE2->E2_LOJA	 := SA2->A2_LOJA
		SE2->E2_NOMFOR  := SA2->A2_NREDUZ
		SE2->E2_ORIGEM  := cOrigem
		SE2->E2_NATUREZ := cNatureza
		SE2->E2_LA      := "S"
		If !Empty(cFilDeb)
			SE2->E2_FILDEB := cFilDeb	
		EndIf				
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava a filial de origem quando existir o campo no SE2            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE2->(FieldPos("E2_FILORIG")) > 0
			SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
		EndIf
		SE2->E2_MULTNAT  := cMultNat
		MsUnlock()
		FKCOMMIT()		

		If ExistBlock("F050SES")
			Execblock("F050SES",.F.,.F.,nRegSE2)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava lançamento do imposto SEST/SENAT no SIGAPCO se a rotina foi chamada do contas a pagar ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If "FINA050" $ cOrigem
			PCODetLan("000002","08","FINA050")
		EndIf
		// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
		If lRatImp
			// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
			GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) 
		Endif	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava parcela do SEST na parcela do titulo ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea( "SE2" )
		DbGoTo( nRegSe2 )
		Reclock( "SE2" , .F. )
		SE2->E2_PARCSES := cParcela
		MsUnlock()

	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera titulo de ISS						   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( nIss > 0 ) .And. !lCalcIssBx
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria o fornecedor, caso nao exista 		   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SA2")
		MsSeek(cFilial+cForLojISS)
		If ( EOF() )
			Reclock("SA2",.T.)
			SA2->A2_FILIAL   := cFilial
			SA2->A2_COD 	  := Left(cForLojISS,Len(SA2->A2_COD))
			SA2->A2_LOJA	  := Right(cForLojISS,Len(SA2->A2_LOJA))
			SA2->A2_NOME	  := "MUNICIPIO"
			SA2->A2_NREDUZ   := "MUNICIPIO"
			SA2->A2_BAIRRO   := "."
			SA2->A2_MUN 	  := "."
			SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
			SA2->A2_End 	  := "."
			MsUnlock()
			FKCOMMIT()
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria a natureza ISS caso nao exista		  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cNatureza		:= &(GetMv("MV_ISS"))
		cNatureza		:= cNatureza+Space(10-Len(cNatureza))
		DbSelectArea("SED")
		If ( !DbSeek( cFilial + cNatureza ) )
			RecLock("SED",.T.)
			SED->ED_FILIAL  := cFilial
			SED->ED_CODIGO  := cNatureza
			SED->ED_CALCIRF := "N"
			SED->ED_CALCISS := "N"
			SED->ED_CALCINS := "N"
			SED->ED_CALCCSL := "N"
			SED->ED_CALCCOF := "N"
			SED->ED_CALCPIS := "N"
			SED->ED_DESCRIC := "IMPOSTO SOBRE SERVICOS"
			MsUnlock()
			FKCOMMIT()
		EndIf

		cParcela := STRZERO(1,aTamParc[1])
		While ( .T. )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ VerIfica se ja' ha' titulo de ISS com esta numera‡„o ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SE2")
			DbSetOrder(1)			
			If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"ISS"+cForLojISS))
				cParcela := Soma1( cParcela,,.t.)
				Loop
			EndIf
			Exit
		End
		If Empty(dVenISS)
			Do Case
				Case GetNewPar("MV_VENCISS","E")=="E"
					dVenISS := dEmissao
					dVenISS += 28
					If ( Month(dVenISS) == Month(dEmissao) )
						dVenISS := dVenISS+28
					EndIf
					nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
					dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
				Case GetNewPar("MV_VENCISS","E")=="Q" //Ultimo dia util da quinzena subsequente a dEmissao
					If Day(dEmissao) <= 15
						dVenISS	:= LastDay(dEmissao)
						dVenISS := DataValida(dVenISS,.F.)
					Else
						dVenISS := DataValida((LastDay(dEmissao)+1)+14,.F.)
					EndIf
				Case GetNewPar("MV_VENCISS","E")=="U" //Ultimo dia util do mes subsequente da dEmissao
					dVenISS := DataValida(LastDay(LastDay(dEmissao)+1),.F.)
				Case GetNewPar("MV_VENCISS","E")=="D"
					dVenISS := (LastDay(dEmissao)+1)
					nDiaUtil:= SuperGetMv("MV_DIAISS")
					For nDia := 1 To nDiaUtil-1
						If !(dVenISS == DataValida(dVenISS,.T.))
							nDia-=1
						EndIf
						dVenISS+=1
					Next nDia
				Case GetNewPar("MV_VENCISS","E")=="F" //Qtd de dia do parametro MV_DIAISS apos o fechamento da quinzena.
					If Day(dEmissao) <= 15
						dVenISS := CtoD("15"+SUBSTR(DtoC(dEmissao),3,Len(DtoC(dEmissao))))+SuperGetMv("MV_DIAISS")
					Else
						dVenISS := LastDay(dEmissao)+SuperGetMv("MV_DIAISS")
					EndIf
				OtherWise
					dVenISS := dVencto
					dVenISS += 28
					If ( Month(dVenISS) == Month(dEmissao) )
						dVenISS := dVenISS+28
					EndIf
					nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
					dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
			EndCase
		EndIf

		dVencRIss := DataValida(dVenISS,IIF(lVcAntIss,.F.,.T.))
		dVenISS := IIF(dVenIss > dVencRIss, dVencRISS, dVenIss)

		dVencRea := DataValida(dVenISS,.T.)
		RecLock("SE2",.T.)
		SE2->E2_FILIAL  := cFilial
		SE2->E2_PREFIXO := cPrefixo
		SE2->E2_NUM 	 := cNum
		SE2->E2_PARCELA := cParcela
		SE2->E2_TIPO	 := MVISS
		SE2->E2_EMISSAO := dEmissao
		SE2->E2_EMIS1	 := dDataBase
		SE2->E2_VALOR	 := nIss
		SE2->E2_VENCTO  := dVenISS
		SE2->E2_SALDO	 := nIss
		SE2->E2_VENCREA := dVencRIss
		SE2->E2_VENCORI := dVenISS
		SE2->E2_FORNECE := Left(cForLojISS,Len(SE2->E2_FORNECE))
		SE2->E2_LOJA    := Right(cForLojISS,Len(SE2->E2_LOJA))
		SE2->E2_NOMFOR  := SA2->A2_NREDUZ
		SE2->E2_MOEDA	 := nMoeda
		SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
		SE2->E2_ORIGEM  := cOrigem
		SE2->E2_NATUREZ := cNatureza
		SE2->E2_LA      := cLA			// Herda do principal
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava a filial de origem quando existir o campo no SE2            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE2->(FieldPos("E2_FILORIG")) > 0
			SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
		EndIf
		SE2->E2_MULTNAT  := cMultNat
		MsUnlock()
		FKCOMMIT()		

		If ExistBlock("F050ISS")
			Execblock("F050ISS",.F.,.F.,nRegSE2)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava lançamento do imposto ISS no SIGAPCO se a rotina foi chamada do contas a pagar ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If "FINA050" $ cOrigem
			PCODetLan("000002","09","FINA050")
		EndIf	
		// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
		If lRatImp
			// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
			GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) 
		Endif	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava parcela do IRF na parcela do titulo  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea( "SE2" )
		DbGoTo( nRegSe2 )
		Reclock( "SE2" , .F. )
		SE2->E2_PARCISS := cParcela
		MsUnlock()            
		
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera titulo Funrural					   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nValFun := Iif(Type("nValFun")=="U",0,nValFun)
	
	If ( nValFun > 0 )
		cParcela := STRZERO(1,aTamParc[1])
		While .T.
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ VerIfica se ja' ha' titulo de FunRural com esta numera‡„o ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SE2")
			DbSetOrder(1)
			If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"TX "+PadR(GetMv("MV_FORINSS"),6)))
				cParcela := Soma1( cParcela,,.t. )
				Loop
			EndIf
			Exit
		End
		dVenFun := dEmissao + 28
		If Month(dVenFun) == Month(dEmissao)
			dVenFun := dVenFun+28
		EndIf
		nTamData := Iif(Len(Dtoc(dVenFun)) == 10, 7, 5)
		dVenFun	:= Ctod(StrZero(GetMv("mv_DiaFun"),2)+"/"+Subs(Dtoc(dVenFun),4,nTamData))
		dVencRea := DataValida(dVenFun,.T.)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria o Fornecedor, caso nao exista 		   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SA2")
		If !(MsSeek(xFilial()+GetMv("MV_FORINSS")+Space(Len(A2_COD)-Len(GetMv("MV_FORINSS")))+cLojaImpos))
			Reclock("SA2",.T.)
			SA2->A2_FILIAL := cFilial
			SA2->A2_COD 	:= GetMv("MV_FORINSS")
			SA2->A2_LOJA	:= cLojaImpos
			SA2->A2_NOME	:= "Instituto Nacional de Previdencia Social"
			SA2->A2_NREDUZ := "INPS"
			SA2->A2_BAIRRO := "."
			SA2->A2_MUN 	:= "."
			SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
			SA2->A2_End 	:= "."
			SA2->A2_TIPO	:= "J"
			MsUnlock()
			FKCOMMIT()
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria a natureza CSS caso nao exista		   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cNatureza		:= GetMv("MV_CSS")
		cNatureza		:= cNatureza+Space(10-Len(cNatureza))
		DbSelectArea("SED")
		DbSeek(cFilial+cNatureza)
		If ( EOF() )
			RecLock("SED",.T.)
			SED->ED_FILIAL 	:= cFilial
			SED->ED_CODIGO 	:= cNatureza
			SED->ED_CALCIRF	:= "N"
			SED->ED_CALCISS	:= "N"
			SED->ED_CALCINS	:= "N"
			SED->ED_CALCCSL	:= "N"
			SED->ED_CALCCOF	:= "N"
			SED->ED_CALCPIS	:= "N"
			SED->ED_DESCRIC	:= "CONTRIBUICAO SEGURIDADE SOCIAL"
			MsUnlock()
			FKCOMMIT()
		EndIf

		DbSelectArea("SE2")
		RecLock("SE2",.T.)
		SE2->E2_FILIAL 	:= cFilial
		SE2->E2_PREFIXO  := cPrefixo
		SE2->E2_NUM 	  := cNum
		SE2->E2_PARCELA  := cParcela
		SE2->E2_TIPO	  := MVTAXA
		SE2->E2_EMISSAO  := dEmissao
		SE2->E2_VALOR	  := nValFun
		SE2->E2_VENCREA  := dVencrea
		SE2->E2_SALDO	  := nValFun
		SE2->E2_VENCTO   := dVencRea
		SE2->E2_VENCORI  := dVencRea
		SE2->E2_MOEDA	  := nMoeda
		SE2->E2_EMIS1	  := dDataBase
		SE2->E2_FORNECE  := GetMv("MV_FORINSS")
		SE2->E2_VLCRUZ   := Round( SE2->E2_VALOR, MsDecimais(1) )
		SE2->E2_LOJA	  := SA2->A2_LOJA
		SE2->E2_NOMFOR   := SA2->A2_NREDUZ
		SE2->E2_ORIGEM   := cOrigem
		SE2->E2_NATUREZ  := cNatureza
		SE2->E2_LA       := cLA			// Herda do principal
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava a filial de origem quando existir o campo no SE2            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE2->(FieldPos("E2_FILORIG")) > 0
			SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
		EndIf
		SE2->E2_MULTNAT  := cMultNat
		MsUnlock()
		FKCOMMIT()		
		If lM050CSSP 
			ExecBlock("M050CSSP",.F.,.F.,nRegSe2) 
		Endif
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava parcela do CSS na parcela do titulo  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea( "SE2" )
		DbGoTo( nRegSe2 )
		Reclock( "SE2" , .F. )
		SE2->E2_PARCCSS := cParcela
		MsUnlock()
	EndIf
	
	//Gravacao dos titulos de Pis, Cofins e Csll
	If !lPccBaixa
		FGrvImpPcc(nPis,nCofins,nCsll,nRegSe2,.T.,lRtPICFCS,"",cOrigem,nMoeda,cGeraDirf,nIrrf,,lRatImp,aRatSev,aRatSez)
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera titulo de FETHAB                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCalcFet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria o fornecedor, caso nao exista         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SA2")
	If SA2->(!DbSeek(xFilial("SA2")+SuperGetMV("MV_RECEST")+Space(Len(A2_COD)-Len(SuperGetMV("MV_RECEST")))+cLojaImpos))
		Reclock("SA2",.T.)
		SA2->A2_FILIAL	:= xFilial("SA2")
		SA2->A2_COD 	:= SuperGetMV("MV_RECEST")
		SA2->A2_LOJA  	:= cLojaImpos
		SA2->A2_BAIRRO	:= "."
		SA2->A2_MUN   	:= "."
		SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
		SA2->A2_END   	:= "."
		SA2->A2_NOME 	:= "RECEITA ESTADUAL"
		SA2->A2_NREDUZ	:= "ESTADO"
	Endif
		
	cFornUni  := SA2->A2_COD
	cLojaUni  := SA2->A2_LOJA
	cPrefixo  := SE2->E2_PREFIXO
	cNum	  := SE2->E2_NUM
	cTipoE2   := SE2->E2_TIPO
	dEmissao  := SE2->E2_EMISSAO
	dEmis1	  := SE2->E2_EMIS1
	dVctoReal := SE2->E2_VENCREA
	nFethab   := SE2->E2_FETHAB
		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava SE2                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nFethab > 0
		dVencRea := F050VIMP("FETHAB",dEmissao,dEmis1,dVctoReal) // Calcula o vencto do imposto
		cParcela := ParcImposto(cPrefixo,cNum,cTipoE2)
		RecLock("SE2",.T.)
		SE2->E2_FILIAL 	:= cFilial
		SE2->E2_PREFIXO	:= cPrefixo
		SE2->E2_NUM    	:= cNum
		SE2->E2_PARCELA	:= cParcela
		SE2->E2_TIPO 	   := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
		SE2->E2_EMISSAO	:= dEmissao
		SE2->E2_EMIS1  	:= dDataBase
		SE2->E2_VALOR  	:= nFethab
		SE2->E2_VENCTO 	:= dVencRea
		SE2->E2_SALDO  	:= nFethab
		SE2->E2_VENCREA	:= dVencRea
		SE2->E2_VENCORI	:= dVencRea
		SE2->E2_FORNECE	:= cFornUni
		SE2->E2_LOJA   	:= cLojaUni
		SE2->E2_NOMFOR 	:= SA2->A2_NREDUZ
		SE2->E2_MOEDA 	:= nMoeda
		SE2->E2_VLCRUZ 	:= Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,3),MsDecimais(1)+1),MsDecimais(1))
		SE2->E2_ORIGEM 	:= Upper(cOrigem)
		cNatureza      	:= SuperGetMV("MV_FETNAT")
		SE2->E2_NATUREZ	:= cNatureza
		SE2->E2_LA     	:= cLa

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava a filial de origem quando existir o campo no SE2            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE2->(FieldPos("E2_FILORIG")) > 0
			SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
		EndIf
		
		If ExistBlock("F050FET")
			Execblock("F050FET",.F.,.F.,nRegSE2)
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria a natureza FETHAB caso nao exista     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SED")
		cNatureza := AllTrim(cNatureza)
		cNatureza := cNatureza+(Space(10-Len(cNatureza)))
		If ( !dbSeek( cFilial + cNatureza ) )
			RecLock("SED",.T.)
			SED->ED_FILIAL	:= cFilial
			SED->ED_CODIGO	:= cNatureza
			SED->ED_CALCIRF	:= "N"
			SED->ED_CALCISS	:= "N"
			SED->ED_CALCINS	:= "N"
			SED->ED_CALCCSL	:= "N"
			SED->ED_CALCCOF	:= "N"
			SED->ED_CALCPIS	:= "N"
			SED->ED_CALCFET	:= "1"	
			SED->ED_DESCRIC	:= "FETHAB"
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava parcela do fethab na parcela do titulo ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea( "SE2" )
		DbGoTo( nRegSe2 )
		Reclock( "SE2" , .F. )
		SE2->E2_PARCFET := cParcela
		MsUnlock()
	EndIf
Endif

If lContrRet .and. !lPccBaixa

	SE2->( MsGoto( nRegSE2 ) ) 			
	Reclock( "SE2" , .F. )

	If lRtPICFCS
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava os campos de valor retido              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
		SE2->E2_VRETPIS := SE2->E2_PIS 
		SE2->E2_VRETCOF := SE2->E2_COFINS 
		SE2->E2_VRETCSL := SE2->E2_CSLL 
		
		SE2->E2_PRETPIS := " "
		SE2->E2_PRETCOF := " "
		SE2->E2_PRETCSL := " "
		
	EndIf		

	MsUnlock() 
		
EndIf 

DbSelectArea("SA2")
DbGoTo( nRegSA2 )
DbSelectArea("SED")
DbGoTo( nRegSED )
DbSelectArea("SE2")
DbSetOrder(nOrdSe2)
DbGoTo(nRegSE2)
RecLock("SE2")
SE2->E2_ORIGEM := cOrigem
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AxCadastro³Autor  ³ Ary Medeiros	        ³ Data ³ 28.02.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Geracao de modelo 1                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³AxCadastro(ExpC1,ExpC2,ExpC3,ExpC4,[ExpA1])                 ³±±
±±³ ExpC1	 ³Alias do arquivo                                            ³±±
±±³ ExpC2	 ³Titulo da Janela                                            ³±±
±±³ ExpC3	 ³Nome de funcao para validacao da exclusao                   ³±±
±±³ ExpC4	 ³Nome de funcao para validacao da tela	                      ³±±
±±³ ExpA5	 ³Array de funcoes adicionais          	                      ³±± 
±±³ ExpB6	 ³CodeBlock Executado antes da Interface                      ³±± 
±±³ ExpB7	 ³CodeBlock Executado na validacao da Interface               ³±± 
±±³ ExpB8	 ³CodeBlock Executado na validacao da Interface               ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AxCadastro(cAlias,cTitle,cDel,cOk,aRotAdic,bPre,bOK,bTTS,bNoTTS,aAuto,nOpcAuto,aButtons,aACS)

Local nX := 1
DEFAULT cTitle   := "AX_CADASTRO()"
DEFAULT bPre     := {|| .T.}
DEFAULT bOk      := {|| .T.}
DEFAULT bTTS     := {|| .T.}
DEFAULT bNoTTS   := {|| .T.}
DEFAULT nOpcAuto := 3
DEFAULT aACS     := {}

Private cOkFunc := cOk
Private cDelFunc:= cDel
Private aParam  := {bPre,bOK,bTTS,bNoTTS}
Private xAuto   := aAuto 
Private aNewBtn := aButtons
Private aRotina := { { oemtoansi(STR0014),"AxPesqui", 0 , 1},; // "Pesquisar"
	{ oemtoansi(STR0015),"AxCadVis", 0 , 2},; // "Visualizar"
	{ oemtoansi(STR0016),"AxCadInc", 0 , 3},; //"Incluir"
	{ oemtoansi(STR0017),"AxCadAlt", 0 , 4},; //"Alterar"
	{ oemtoansi(STR0018),"AxCadDel", 0 , 5}}  //"Excluir"
                   
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona o array de rotinas adicioniais   				     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ValType( aRotAdic ) == "A"
	AEval( aRotAdic, { |x| AAdd( aRotina, x ) } )   
EndIf
For nX := 1 To Len(aACS)
	If aACS[nX] <> Nil
		aadd(aRotina[nX],aACS[nX])
	EndIf
Next nX
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de atualizacoes				     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cCadastro := OemToAnsi(cTitle)

If aAuto==Nil
	mBrowse( 6, 1,22,75,cAlias)
Else
	MBrowseAuto(nOpcAuto,Aclone(aAuto),cAlias)
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AxCadInc	³Autor  ³ Ary Medeiros		    ³ Data ³ 28.02.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Chamada da funcao AxInclui pela AxCadastro				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ AxCadastro												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function  AxCadInc(cAlias,nReg,nOpc,aAcho,cFunc,aCpos)

Return(AxInclui(cAlias,nReg,nOpc,aAcho,cFunc,aCpos,cOkFunc,/*lF3*/,/*cTransact*/,aNewBtn,aParam,xAuto))
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AxCadAlt	³Autor  ³ Ary Medeiros			³ Data ³ 28.02.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Chamada da funcao AxAltera pela AxCadastro		          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ AxCadastro												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AxCadAlt(cAlias,nReg,nOpc,aAcho,aCpos,nColMens,cMensagem,cTudoOk)

AxAltera(cAlias,nReg,nOpc,aAcho,aCpos,nColMens,cMensagem,cOkFunc,/*cTransact*/,/*cFunc*/,aNewBtn,aParam,xAuto)

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AxCadDel	³Autor  ³ Eduardo Riera         ³ Data ³10.09.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Chamada da funcao AxDeleta pela AxCadastro		          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ AxCadastro												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AxCadDel(cAlias,nReg,nOpc,aCpos)

AxDeleta(cAlias,nReg,nOpc,/*cTransact*/,aCpos,aNewBtn,aParam,xAuto)

Return nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AxCadVis	³Autor  ³ Eduardo Riera         ³ Data ³25.02.2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Chamada da funcao AxVisual pela AxCadastro		          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ AxCadastro												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AxCadVis(cAlias,nReg,nOpc,aCpos)

AxVisual(cAlias,nReg,nOpc,/*aAcho*/,/*nColMens*/,/*cMensagem*/,/*cFunc*/,aNewBtn,/*lMaximized*/)

Return nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ AxDeleta ³ Autor ³ Jorge Queiroz         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa generico para exclusao     		                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ AxDeleta(ExpC1,ExpN1,ExpN2,ExpA1,ExpN3,ExpC1)              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³			 ³ ExpN2 = Numero do registro                                 ³±±
±±³			 ³ ExpN3 = Numero da opcao selecionada                        ³±±
±±³			 ³ ExpC4 = Funcao a ser executada durante a transacao    	  ³±±
±±³			 ³ ExpA5 = Array com os campos a serem mostrados              ³±±
±±³			 ³ ExpA6 = Array com os botoes da EnchoiceBar            	  ³±±
±±³			 ³ ExpA7 = Array de codeblock de execucao                	  ³±±
±±³			 ³ ExpA8 = Array da rotina automatica                    	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AxDeleta(cAlias,nReg,nOpc,cTransact,aCpos,aButtons,aParam,aAuto,lMaximized)

Local aArea    := GetArea()
Local aPosEnch := {}
Local nOpcA    := 0
Local nX       := 0
Local oDlg
Local nTop
Local nLeft
Local nBottom
Local nRight
Local cMsgError:= ""

Private aTELA[0][0]
Private aGETS[0]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea(cAlias)
If SoftLock( cAlias )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento de codeblock de antes da interface                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(aParam)
		Eval(aParam[1],nOpc)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Controle de Interface                                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	Do Case
		Case ( Type("__cInternet") # "C" .Or. __cInternet # 'AUTOMATICO' ) .And. aAuto == Nil

			If SetMDIChild()
				oMainWnd:ReadClientCoors()
				nTop := 40
				nLeft := 30 
				nBottom := oMainWnd:nBottom-80
				nRight := oMainWnd:nRight-70		
			Else
				nTop := 135
				nLeft := 0
				nBottom := TranslateBottom(.T.,28)
				nRight := 632
			EndIf

			DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd	

			If lMaximized <> NIL
				oDlg:lMaximized := lMaximized
			EndIf

			aPosEnch := {,,(oDlg:nClientHeight - 4)/2,}  // ocupa todo o  espaço da janela		
			nOpcA:=EnChoice( cAlias, nReg, nOpc,,,,aCpos,aPosEnch)	
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpca := 2,oDlg:End()},{|| nOpca := 1,oDlg:End()},,aButtons)
		Case aAuto <> Nil
			RegToMemory(cAlias,.F.,.F.)
			If EnchAuto(cAlias,aAuto,{|| Obrigatorio(aGets,aTela)},nOpc,aCpos)
				nOpcA := 2
			EndIf			
		OtherWise
			nOpcA := 2
	EndCase
	If nOpcA == 2	
		dbSelectArea(cAlias)
		If Type("cDelFunc") != "U" .and. cDelFunc != Nil
			If !&(cDelFunc)
				nOpcA := 0
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento de codeblock de validacao de confirmacao            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpcA == 2 .And. !Empty(aParam)
		If !Eval(aParam[2],nOpc)
			nOpcA := 0
		EndIf
	EndIf	
	If nOpcA == 2
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualizacao da tabela                                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		Begin Transaction
			DbSelectArea(cAlias)
			If cTransact != Nil .And. ValType(cTransact) == "C"
				If !("("$cTransact)
					cTransact+="()"
				EndIf
				&cTransact
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Processamento de codeblock dentro da transacao                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(aParam)
				Eval(aParam[3],nOpc)
			EndIf
						
			If Type("aMemos")=="A"
				For nX := 1 To Len(aMemos)
//Incluído parametro com o nome da tabela de memos => para módulo APT
					cAliasMemo := If(len(aMemos[nX]) == 3,aMemos[nX][3],Nil)
					MSMM(&(aMemos[nX][1]),,,,2,,,,,cAliasMemo)
				Next nX
			EndIf

			RecLock(cAlias,.F.,.T.)
			IF !FKDelete(@cMsgError)
			   RollBackDelTran(cMsgError)
			EndIf
			MsUnLock()
			
		End Transaction
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processamento de codeblock fora da transacao                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(aParam)
			Eval(aParam[4],nOpc)
		EndIf
	EndIf
EndIf
MsUnLockAll()
RestArea(aArea)
Return(nOpcA)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ClearTitle³Autor  ³ Ary Medeiros			³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Limpa string com titulo do campo 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ AS400 													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  ClearTitle(cTitle)
Local i,cChar, cOut := ""

For i:= 1 to Len(cTitle)
	cChar := Substr(cTitle,i,1)
	cOut  += If(LetterOrNum(cChar),cChar," ")
Next
Return cChar


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³LetterOrNum³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ VerIfica se caracter e uma letra ou um numero				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ AS400 													 				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  LetterOrNum(cChar)
Local nChar := ASC(cChar)

Return ((nChar >= 48 .and. nChar <= 57) .or. (nChar >= 65 .and. nChar <= 90) .or. (nChar >= 97 .and. nChar <= 122 ))

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ADupCred	³Autor  ³ Rosane L. Chene		³ Data ³01.06.95  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Gera titulo de Credito para fornecedor no caso de nota 	  ³±±
±±³			 ³fiscal de devolucao de compras 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ADupCred()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Valor do Titulo 									  ³±±
±±³			 ³ ExpC2 = Codigo do TES									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  ADupCred(nValtot,cTes,nMoeda,cNatureza,nTaxa,dVencNCC)
Local cSaveAlias := Alias()
Local nSaveOrd   := IndexOrd()
Local cSerie     := ""
Local nRecCred   := 0
Local cPrefixo   := ""
Local cParcela   := ""
Local nTamParc   := 0

#ifdef SHELL
	Local nSaveOrdSF2, nSaveRecSF2
	Local nPosSer, nPosNfOr, nElem
#endif

DEFAULT nMoeda     	:= 1                               
DEFAULT nTaxa   	:= 0                                          
DEFAULT dVencNCC	:= dDataBase

If cTes > "500"
	cArqSA := "SA2"
	cSeek  := SF2->F2_CLIENTE+SF2->F2_LOJA
	cArqSE := "SE2"
	cSerie := SF2->F2_SERIE
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³ Desposiciona o SA1                                           ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SA1->(MsGoto(0))
Else
	cArqSA := "SA1"
	cSeek  := SF1->F1_FORNECE+SF1->F1_LOJA
	cArqSE := "SE1"
	cSerie := SF1->F1_SERIE
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³ Desposiciona o SA2                                           ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SA2->(MsGoto(0))
	#ifdef SHELL
		*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		*³ Posiciona a Capa de Nota de Saida para obter o VEndedor      ³
		*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SF2")
		nSvOrdSF2 :=IndexOrd()
		nSvRecSF2 := Recno()
		nPosSer := Ascan(aHeader,{|x|Trim(x[2])=="D1_SERIORI"})
		nPosNfOr := Ascan(aHeader,{|x|Trim(x[2])=="D1_NFORI"})
		DbSetOrder(1)
		For nElem :=1 to Len(Acols)
			If ! aCols[nElem][Len(aHeader)+1]
				dbSeek(cFilial+aCols[nElem][nPosNfOr]+aCols[nElem][nPosSer])
				Exit
			EndIf
		Next
	#endif
EndIf

DbSelectArea(cArqSA) 	 // Posiciona o arquivo de cliente/fornecedor
dbSetOrder(1)
DbSeek(cFilial+cSeek)

If cArqSE == "SE2"
	DEFAULT cNatureza  := &(GetMV("mv_1dupnat"))
	RecLock(cArqSE,.T.)
	Replace E2_NOMFOR	With SA2->A2_NREDUZ
	Replace E2_EMIS1   With dDataBase
	Replace E2_BAIXA   With CtoD("  /  /  ")
	Replace E2_SALDO   With nValTot
	Replace E2_FILIAL  With cFilial
	Replace E2_PREFIXO With &(GetMV("mv_1dupref"))
	Replace E2_NUM	  With SF2->F2_DOC
	Replace E2_PARCELA With GetMV("mv_1dup")
	Replace E2_NATUREZ With cNatureza
	If cPaisLoc$"ARG|POR|EUA"
		Replace E2_TIPO	  With SC5->C5_TIPOTIT
		Replace E2_VALOR   With If(SC5->C5_TIPOTIT $ MVABATIM,nValTot*-1,nValTot )
	Else
		Replace E2_TIPO	  With left(MV_CPNEG,3)
		Replace E2_VALOR   With nValTot
	EndIf
	Replace E2_EMISSAO With dDataBase
	Replace E2_VALOR   With nValTot
	Replace E2_VENCTO  With dDataBase
	Replace E2_VENCREA With dDatabase
	Replace E2_VENCORI With dDatabase
	Replace E2_FORNECE With SF2->F2_CLIENTE
	Replace E2_LOJA	  With SF2->F2_LOJA
	Replace E2_NOMFOR  With SA2->A2_NREDUZ
	Replace E2_MOEDA   With nMoeda
	Replace E2_VLCRUZ  With Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1,nTaxa),MsDecimais(1)+1),MsDecimais(1))
	Replace E2_ORIGEM  With "MATA460"
	Replace E2_LA      With "S"
	fkCommit(.T.)
	nRecCred := Recno()
	DbSelectArea( "SA2" )
	RecLock("SA2")
	Replace A2_SALDUP With A2_SALDUP	- Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,3),3),2)
	Replace A2_SALDUPM With A2_SALDUPM - Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,3),3),2)
	
	If SA2->A2_SALDUPM > SA2->A2_MSALDO
		Replace SA2->A2_MSALDO With SA2->A2_SALDUPM
	EndIf
ElseIf cArqSe == "SE1"
	DEFAULT cNatureza := &(GetMV("mv_2dupnat"))
	dbSelectArea("SE1")
	dbSetOrder(1)
	cPrefixo := &(GetMV("mv_2dupref"))
	cParcela := (GetMV("mv_1dup"))
	nTamParc := Len(SE1->E1_PARCELA)
	While MSSeek(xFilial("SE1")+cPrefixo+SF1->F1_DOC+cParcela)
		cParcela := Soma1(cParcela,nTamParc)
	EndDo
	RecLock(cArqSE,.T.)
	Replace E1_FILIAL with cFilial
	Replace E1_PREFIXO with cPrefixo
	Replace E1_SERIE   with cSerie
	Replace E1_NUM	  with SF1->F1_DOC
	Replace E1_PARCELA with cParcela
	Replace E1_NATUREZ with cNatureza
	Replace E1_TIPO	 with left(MV_CRNEG,3)
	Replace E1_EMISSAO with dDataBase
	Replace E1_VALOR   with nValTot
	Replace E1_VENCREA with dVencNCC
	Replace E1_SALDO   with nValTot
	Replace E1_VENCTO  with dVencNCC
	Replace E1_VENCORI with ddataBase
	Replace E1_EMIS1   with dDataBase
	Replace E1_CLIENTE with SF1->F1_FORNECE
	Replace E1_LOJA	  with SF1->F1_LOJA
	Replace E1_NOMCLI  with SA1->A1_NREDUZ
	Replace E1_MOEDA   with nMoeda
	Replace E1_VLCRUZ  with Round(NoRound(xMoeda(SE1->E1_VALOR,nMoeda,1,SE1->E1_EMISSAO,3,nTaxa),MsDecimais(1)+1),MsDecimais(1))
	Replace E1_STATUS  with Iif(SE1->E1_SALDO>0.01,"A","B")
	Replace E1_SITUACA With "0"
	Replace E1_ORIGEM  With "MATA100"
	Replace E1_LA      With "S"	
	
	If SE1->(FieldPos("E1_FILORIG")) > 0
		SE1->E1_FILORIG := cFilAnt
	EndIf
	
	#ifdef SHELL
		Replace E1_VEnd1   With SF2->F2_VEnd1
	#endif
	fkCommit(.T.)
	nRecCred := Recno()
	DbSelectArea( "SA1" )
	AtuSalDup("-",SE1->E1_VALOR,SE1->E1_MOEDA,SE1->E1_TIPO,,SE1->E1_EMISSAO)
EndIf
#ifdef SHELL
	If Val(cTes) < 500
		DbSelectArea("SF2")
		DbSetOrder(nSvOrdSF2)
		DbGoTo(nSvRecSF2)
	EndIf
#endif

If ExistBlock( "M461DUPCR" ) 
	ExecBlock( "M461DUPCR", .f., .f. ) 
EndIf	

DbSelectArea(cSaveAlias)
DbSetOrder(nSaveOrd)
Return nRecCred


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AGravaSB6 ³Autor  ³ Rosane / Cristina	  ³ Data ³ 01.06.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava item de poder de terceiros 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ AGravaSB6(ExprC1,ExprA1,ExprC2)									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExprC1 := Codigo da Tes 											  ³±±
±±³			 ³ ExprA2 := Array dos Campos com os valores dos Custos		  ³±±
±±³			 ³ ExprC2 := Tipo da Nota												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AGRAVASb6(cTes,aCustoSB6,cTipo,aCpoSD)

DbSelectArea("SF4")
DbSetOrder(1)
DbSeek(xFilial()+cTes)

RecLock("SB6",.T.)

Replace B6_FILIAL 	With xFilial()
Replace B6_CLIfOR 	With aCpoSD[1]
Replace B6_LOJA		With aCpoSD[2]
Replace B6_PRODUTO	With aCpoSD[3]
Replace B6_Local		With aCpoSD[4]
Replace B6_PRUNIT 	With aCpoSD[5]
Replace B6_TIPO		With aCpoSd[6]
Replace B6_DOC 		With aCpoSD[7]
Replace B6_SERIE		With aCpoSD[8]
Replace B6_EMISSAO	With aCpoSD[9]
Replace B6_DTDIGIT	With aCpoSD[10]
Replace B6_TES 		With cTes
Replace B6_QUANT		With aCpoSD[12]
Replace B6_UM			With aCpoSD[13]
Replace B6_QTSEGUM	With aCpoSD[14]
Replace B6_SEGUM		With aCpoSD[15]
Replace B6_PODER3 	With SF4->F4_PODER3

If cTes <= "500"
	If cTipo == "B"
		Replace B6_TPCF with "C"
	ElseIf cTipo == "N"
		Replace B6_TPCF with "F"
	EndIf
Else
	If cTipo == "B"
		Replace B6_TPCF with "F"
	ElseIf cTipo == "N"
		Replace B6_TPCF with "C"
	EndIf
EndIf

If SF4->F4_ESTOQUE=="S"
	Replace B6_CUSTO1 With aCustoSB6[1]
	Replace B6_CUSTO2 With aCustoSB6[2]
	Replace B6_CUSTO3 With aCustoSB6[3]
	Replace B6_CUSTO4 With aCustoSB6[4]
	Replace B6_CUSTO5 With aCustoSB6[5]
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ CalcTerc ³ Autor ³ Rosane L Chene        ³ Data ³ 23.05.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna um Array onde:                                     ³±±
±±³          ³ aSaldo[1] := Saldo de Poder Terceiro                       ³±±
±±³          ³ aSaldo[2] := Quantidade Poder Terceiro Liberada(ainda nao  ³±±
±±³          ³                               faturada)                    ³±±
±±³          ³ aSaldo[3] := Saldo total do poder de terceiro ( Valor)     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpA1(ExpC1,ExpC2,ExpC3,ExpC4,ExpC5,ExpC6)                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo do Produto                                  ³±±
±±³          ³ ExpC2 = Codigo do Cliente/Fornecedor                       ³±±
±±³          ³ ExpC3 = Codigo da Loja                                     ³±±
±±³          ³ ExpC4 = Codigo do identIficador do SB6                     ³±±
±±³          ³ ExpC5 = Codigo da Tes                                      ³±±
±±³          ³ ExpC6 = Tipo da Nota                                       ³±±
±±³			 ³ ExpD1 = Dt Inicial a ser Considerada na Composi‡Æo do Saldo³±±
±±³			 ³ ExpD2 = Dt Final a ser Considedara na Composi‡Æo do Saldo  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  CalcTerc(cCod,cClIfor,cLoja,cIdentB6,cTesB6,cTipo,dDtIni,dDtFim)

Local aArq       := GetArea()
Local aArqSF4    := SF4->(GetArea())
Local aArqSB6    := SB6->(GetArea())
Local aStruSB6   := {}
Local aSaldo     := {0,0,0}
Local lConsIni   := (ValType(dDtIni)=='D'.And.!Empty(dDtIni))
Local lConsFim   := (ValType(dDtFim)=='D'.And.!Empty(dDtFim))
Local lQuery     := .F.
Local cAliasSB6  := "SB6"
Local cAliasSF4  := "SF4"
#IFDEF TOP
	Local cQuery     := ""
	Local nX         := 0
#ELSE	
	Local cCompB6    := ""
	Local nRegSB6    := 0
	Local cFilterB6  := SB6->(dbFilter())
#ENDIF	

dbSelectArea("SB6")
If !Empty(cIdentB6)
	DbSetOrder(3)
	#IFDEF TOP
		lQuery     := .T.
		aStruSB6   := SB6->(dbStruct())
		cAliasSB6  := "CALCTERC"
		cAliasSF4  := "CALCTERC"          

		cQuery := "SELECT "+SqlOrder(SB6->(IndexKey()))+","
		For nX := 1 To Len(aStruSB6)
			If !aStruSB6[nX][1]$cQuery
				cQuery += aStruSB6[nX][1]+","
			EndIf
		Next nX
		cQuery += "SF4.F4_PODER3 "
		cQuery += " FROM "+RetSqlName("SB6")+" SB6,"+RetSqlName("SF4")+" SF4 "
		cQuery += "WHERE SB6.B6_FILIAL='"+xFilial("SB6")+"' AND "
		cQuery += "SB6.B6_IDENT='"+cIdentB6+"' AND "
		cQuery += "SB6.B6_PRODUTO='"+cCod+"' AND "
		cQuery += "SB6.D_E_L_E_T_=' ' AND "
		If cTesB6 <= "500"
			If cTipo == "B"
				cQuery += "SB6.B6_TPCF='C' AND "
			ElseIf cTipo == "N"
				cQuery += "SB6.B6_TPCF='F' AND "
			EndIf
		Else
			If cTipo == "B"
				cQuery += "SB6.B6_TPCF='F' AND "
			ElseIf cTipo == "N"
				cQuery += "SB6.B6_TPCF='C' AND "
			EndIf
		EndIf
		If ( lConsIni )
			cQuery += "SB6.B6_DTDIGIT>='"+Dtos(dDtIni)+"' AND "
		EndIf
		If ( lConsFim )	
			cQuery += "SB6.B6_DTDIGIT<='"+Dtos(dDtFim)+"' AND "
		EndIf
		cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
		cQuery += "SF4.F4_CODIGO=SB6.B6_TES AND "
		cQuery += "SF4.D_E_L_E_T_=' ' "
		If SB6->(FieldPos("B6_IDENTB6"))<>0
			cQuery += "UNION ALL "+StrTran(cQuery,"B6_IDENT=","B6_IDENTB6=")+" "
		EndIf
		cQuery += "ORDER BY 1,2,3,4"
		
		cQuery := ChangeQuery(cQuery)
		
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSB6,.T.,.T.)
		
		For nX := 1 To Len(aStruSB6)
			If ( aStruSB6[nX][2] <> "C" )
				TcSetField(cAliasSB6,aStruSB6[nX][1],aStruSB6[nX][2],aStruSB6[nX][3],aStruSB6[nX][4])
			EndIf
		Next nX
	#ELSE
		If !Empty(cFilterB6)
			DbClearFilter()
		EndIf
		DbSeek(xFilial("SB6")+cIdentB6+cCod)
	#ENDIF
	While !Eof() .And. xFilial("SB6") == (cAliasSB6)->B6_FILIAL .And.;
		(IIf(SB6->(FieldPos("B6_IDENTB6"))<>0,cIdentB6==(cAliasSB6)->B6_IDENTB6,.F.) .Or.;
		cIdentB6==(cAliasSB6)->B6_IDENT ) .And.;
		cCod == (cAliasSB6)->B6_PRODUTO
		
		If  !lQuery
			If (cAliasSB6)->(FieldPos("B6_IDENTB6"))<>0 .And. !Empty((cAliasSB6)->B6_IDENTB6)
				DbSelectArea(cAliasSB6)
				DbSkip()
				Loop
			EndIf
			DbSelectArea("SF4")
			dbSetOrder(1)
			DbSeek(xFilial()+(cAliasSB6)->B6_TES)
			//-- Condicao para DBFCDX deve ser o inverso do SQL, ja que indica registros a serem
			//-- desconsiderados, ao contrario do SQL que indica registros a serem considerados
			If cTesB6 <= "500"
				If (cTipo == "B" .And. (cAliasSB6)->B6_TPCF != "C") .Or. (cTipo == "N" .And. (cAliasSB6)->B6_TPCF != "F")
					DbSelectArea(cAliasSB6)
					DbSkip()
					Loop
				EndIf
			Else
				If (cTipo == "B" .And. (cAliasSB6)->B6_TPCF != "F") .Or. (cTipo == "N" .And. (cAliasSB6)->B6_TPCF != "C")
					DbSelectArea(cAliasSB6)
					DbSkip()
					Loop
				EndIf
			EndIf
			//-- Condicao para DBF deve ser o inverso do SQL, ja que indica registros a serem
			//-- desconsiderados, ao contrario do SQL que indica registros a serem considerados
			//-- Consiste Data Inicial e Final na Composi‡Æo do Saldo
			If (lConsIni.And.(cAliasSB6)->B6_DTDIGIT<dDtIni).Or.(lConsFim.And.(cAliasSB6)->B6_DTDIGIT>dDtFim)
				DbSelectArea(cAliasSB6)
				DbSkip()
				Loop
			EndIf
		EndIf
		If (cAliasSF4)->F4_PODER3 == "R"
			aSaldo[1]+= (cAliasSB6)->B6_QUANT
			aSaldo[2]+= (cAliasSB6)->B6_QULIB
			aSaldo[3]+= A410Arred((cAliasSB6)->B6_PRUNIT*IIF((cAliasSB6)->B6_QUANT==0,1,aSaldo[1]),"D2_TOTAL") 
			#IFNDEF TOP
				If (cAliasSB6)->(FieldPos("B6_IDENTB6"))<>0
					nRegSB6 := (cAliasSB6)->(RecNo())
					cCompB6 := (cAliasSB6)->B6_IDENT
					(cAliasSB6)->(dbSetOrder(4))
					If (cAliasSB6)->(MsSeek(xFilial("SB6")+cCompB6+cCod+"R"))
						While !Eof() .And. xFilial("SB6") == (cAliasSB6)->B6_FILIAL .And.;
							cCompB6 == (cAliasSB6)->B6_IDENTB6 .And.;
							"R" == (cAliasSB6)->B6_PODER3

							aSaldo[3]+= (cAliasSB6)->B6_PRUNIT

							dbSelectArea(cAliasSB6)
							dbSkip()
						EndDo
					EndIf
					(cAliasSB6)->(MsGoto(nRegSB6))
				EndIf
			#ENDIF
		ElseIf (cAliasSF4)->F4_PODER3 == "D"
			aSaldo[1]-= (cAliasSB6)->B6_QUANT
		EndIf
		DbSelectArea(cAliasSB6)
		DbSkip()
	EndDo
	#IFDEF TOP
		dbSelectArea(cAliasSB6)
		dbCloseArea()
		dbSelectArea("SB6")
	#ELSE
		dbSelectArea("SB6")
		If !Empty(cFilterB6)
			Set Filter to &(cFilterB6)
		EndIf
	#ENDIF
EndIf
//
// Calculo do valor unitario
//
aSaldo[3] := A410Arred(If(aSaldo[1]==0,aSaldo[3],(aSaldo[3]/aSaldo[1])),"D2_PRCVEN")
RestArea(aArqSF4)
RestArea(aArqSB6)
RestArea(aArq)
Return(aSaldo)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ ConvData ³ Autor ³ Cristiane Maed	     ³ Data ³ 19.06.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Transforma chave lida em formato caracter (	/	/ ),		  ³±±
±±³			 ³ para data e em seguida para formato string "aaaa/mm/dd"    ³±±
±±³			 ³ em casos em que o indice do arquivo utiliza a funcao DTOS()³±±
±±³			 ³ ou DTOC().																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpA1(ExpC1)															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Indice do arquivo											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ AXPESQ																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  ConvData(cKey,cConteudo)
Local nPos,cStr,nTam, nTamFil
Local aKey:= {},i,cConteudo1:=""

cKey := Upper(AllTrim(cKey))
cStr := Iif("DTOS" $ Upper(cKey),"DTOS","DTOC")
If "_FILIAL" == Subs(cKey,3,7)
	cKey := AllTrim(Subs(cKey,10))
ElseIf  "_FILIAL" == Subs(cKey,4,7)
	cKey := AllTrim(Subs(cKey,11))
EndIf
If Subs(cKey,1,1) == "+"
	cKey := Subs(cKey,2)
EndIf

While !Empty(cKey)
	nPos :=	AT("+",cKey)
	AADD(aKey,SubStr(cKey,1,Iif(nPos>0,nPos-1,Len(cKey))))
	cKey := Iif(nPos>0,SubStr(cKey,nPos+1),"")
End

For i:= 1 to Len(aKey)
	nTam := Len(&(aKey[i]))
	If cStr $ aKey[i]
		nTam := Len( Dtoc( MsDate() ) )
		cConteudo1 += DTOS(CTOD(SubStr(cConteudo,1,nTam)))
	Else
		cConteudo1 += Substr(cConteudo,1,nTam)
	End
	cConteudo	:= Substr(cConteudo,nTam+1)
Next i

Return cConteudo1

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Aleatorio ³ Autor ³ Jorge Queiroz  	     ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gera um numero aleatorio de acordo com a semente passada   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpN1:=Aleatorio(ExpN2,ExpN3) 									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Numero aleatorio (entre 0 e ExpN2)					  ³±±
±±³			 ³ ExpN2 = Numero maximo a ser devolvido							  ³±±
±±³			 ³ ExpN2 = Semente de geracao do numero aleatorio. E' alta-   ³±±
±±³			 ³ mente recomEndavel que seja o proprio numero devolvido	  ³±±
±±³			 ³ anteriormente pela funcao. 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  aleatorio(nMax,nSeed)
Local nRand:=0
While .T.
	nRand := (nSeed+(seconds()-int(seconds())))/.717171717
	nRand := nRand*log(ABS(nRand))
	nRand := ABS(nRand)+sqrt(nRand)
	nRand := nRand-Int(nRand)
	nRand := INT(nRand*(nMax+1))
	If (nRand!=nSeed)   //.AND.at(str(nRand,4),cString)==0
		exit
	EndIf
End
Return nRand

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ AtuSalBco³ Autor ³ Wagner Xavier 		  ³ Data ³ 16/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Func„o para atualiza‡„o do saldo bancario						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ AtuSalBco() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ SIGAFIN													 				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  AtuSalBco( cBanco, cAgencia, cConta, dData, nValor, cSinal,lReconc , lSalatu)
Local cAlias := Alias()
Local nRecNo := 0
Local lAppEnd:=.f.
Local nSalIni:=0
Local cMoeda := "  "
Local nRecBco := SA6->(Recno())
Local nSalIniRec :=0
Default lReconc := .F.  //Atualiza saldo concilialdo
Default lSalAtu  := .T. //Atualiza saldo principal Atual

If Empty(cBanco)
	Return
EndIf

DbSelectArea( "SA6" )
DbSetOrder(1)
If !(DbSeek( cFilial+cBanco+cAgencia+cConta ) )
	Reclock( "SA6", .T. )
	SA6 -> A6_FILIAL := cFilial
	SA6 -> A6_COD	  := cBanco
	SA6 -> A6_AGENCIA:= cAgencia
	SA6 -> A6_NUMCON := cConta
	SA6 -> A6_NOME   := "."
	SA6 -> A6_NREDUZ := "."
	MsUnlock()
Endif

DbSelectArea("SE8")
DbSetOrder(1)
DbSeek(cFilial+cBanco+cAgencia+cConta+DtoS(dData),.t.)
If E8_DTSALAT != dData .or. Eof() .or. E8_BANCO+E8_AGENCIA+E8_CONTA != cBanco+cAgencia+cConta
	lAppEnd := .t.
	DbSkip(-1)
	If E8_FILIAL+E8_BANCO+E8_AGENCIA+E8_CONTA == xFIlial()+cBanco+cAgencia+cConta .and. dData >= SE8->E8_DTSALAT
		nSalIni := E8_SALATUA
		nSalIniRec := E8_SALRECO
	Else
		nSalIni := 0
		nSalIniRec := 0
	EndIf
Else
	nSalIni := E8_SALATUA
	nSalIniRec := E8_SALRECO
EndIf
RecLock("SE8",lAppEnd)
If lAppEnd
	SE8 -> E8_FILIAL := cFilial
	SE8 -> E8_BANCO	:= cBanco
	SE8 -> E8_AGENCIA:= cAgencia
	SE8 -> E8_CONTA	:= cConta
	SE8 -> E8_DTSALAT:= dData
	SE8 -> E8_MOEDA  := cMoeda
EndIf
If lSalAtu
	SE8->E8_SALATUA := nSalini + (Iif(cSinal=="+",nValor,nValor*-1))
Endif
If lReconc
	SE8->E8_SALRECO := nSaliniRec + (Iif(cSinal=="+",nValor,nValor*-1))
ElseIf SE8->E8_SALRECO == 0
	SE8->E8_SALRECO := nSaliniRec		
Endif
MsUnlock()
nRecNo := RecNo()
DbSkip()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recalcula os saldos do diante em diante, se necess rio. 	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While !Eof().and.E8_FILIAL==xFilial("SE8").and.E8_BANCO+E8_AGENCIA+E8_CONTA==cBanco+cAgencia+cConta
	Reclock("SE8")
	nRecNo := RecNo()
	If cSinal == "+"
		If lSalAtu  //Atualizo todos os saldos
			SE8->E8_SALATUA += nValor
		Endif
		If lReconc
			SE8->E8_SALRECO += nValor		
		Endif	
	Else
		If lSalAtu  //Atualizo todos os saldos
			SE8->E8_SALATUA -= nValor
		Endif
		If lReconc
			SE8->E8_SALRECO -= nValor		
		Endif	
	Endif
	MsUnlock()
	DbSkip()
End
DbGoTo(nRecNo)
Reclock("SA6")
SA6->A6_SALATU  := SE8->E8_SALATUA
MsUnlock()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para Reconciliacao Bancaria					  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (ExistBlock( "FAATUBCO" ) )
	ExecBlock("FAATUBCO",.F.,.F.)
EndIf

SA6->(DbGoTo(nRecBco))   // Reposiciona no Banco da entrada da funcao
DbSelectArea( cAlias )
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ EvalGeneric³ Autor ³ Wagner Xavier	     ³ Data ³ 16/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ 																			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ EvalGeneric()						 				 				     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ SIGAFIN																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  EvalGeneric()

DEFAULT __HasFunType := FindFunction("FunType")

If GetStartMod1()
	If !__HasFunType .or. FunType() <> 3
		If ExistBlock(FunName())
			ExecBlock(FunName(),.F.,.F.)
			GetStartMod1(.f.)
		EndIf
	EndIf
EndIf
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ GetSX8Num³Autor  ³ Ary Medeiros		     ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Obtem numero sequencial do arquivo de semaforo				  ³±±
±±³Descri‡…o ³Existe apenas para compatibilizar a Nova GetSxeNum()        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³GetSX8Num( ) 												 			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  GetSX8Num(cAlias,cCpoSx8,cAliasSX8,nOrdSX8)
Return GetSxeNum(cAlias,cCpoSx8,cAliasSX8,nOrdSX8)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³RollBackSX8³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna numero no semafor como pEndente 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³RollBackSX8()															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												 				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  RollBackSX8()
Return RollBackSE()
Return nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ConfirmSX8 ³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Confirma numero sugerido pelo semaforo					 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ConfirmSX8() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL1 : Ativa a verificacao do numero gravado. Quando ligado³±±
±±³          ³a confirmacao do numero eh executada apenas se o usuario nao³±±
±±³          ³alterou o numero sugerido. Exemplo : O sistema sugeriu      ³±±
±±³          ³000015 para um Pedido, o usuario alterou para 000040 e      ³±±
±±³          ³gravou. No momento da ConfirmSX8, o numero gravado sera     ³±±
±±³          ³comparado com o sugerido, e o mesmo apenas sera confirmado  ³±±
±±³          ³caso nao tenha sido alterado.                               ³±±
±±³          ³ATENCAO : O PADRAO DESTE PARAMETRO E FALSO, E O MESMO SO    ³±±
±±³          ³          PODERA SER UTILIZADO CASO O REGISTRO GRAVADO PELO ³±±
±±³          ³          USUARIO ESTEJA POSICIONADO.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function  ConfirmSX8(lPosConf)
Return ConFirmSXE(lPosConf)
/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	  ³ Modelo2  ³ Autor ³ Juan Jose Pereira	  ³ Data ³ 18/09/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o  ³ Exibe Formulario Modelo 2 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros ³ cTitulo=Titulo da Janela								 			  ³±±
±±³			  ³ aC=Array com campos do cabecalho								  ³±±
±±³			  ³ aR=Array com campos do rodape							  		  ³±±
±±³			  ³ aCGD=Array com coordenadas da GetDados	 			   	  ³±±
±±³			  ³ nOpcx=Modo de operacao 									        ³±±
±±³			  ³ cLineOk=Validacao de linha da GetDados					     ³±±
±±³			  ³ cAllOkk=Validacao de toda GetDados 						 	  ³±±
±±³			  ³ aGetsD=Array com gets editaveis 								  ³±±
±±³			  ³ bF4=bloco de codigo para tecla F4								  ³±±
±±³			  ³ cIniCpos=string com nome dos campos que devem ser inicia- ³±±
±±³			  ³			 lizados ao teclar seta para baixo. 				  ³±±
±±³			  ³ lDelGetD=determina se as linhas da Getdados podem ser de- ³±±
±±³			  ³			 letadas ou nao.											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		  ³ Generico																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function  Modelo2(cTitulo,aC,aR,aCGD,nOpcx,cLineOk,cAllOk,aGetsGD,bF4,cIniCpos,nMax,aCordW,lDelGetD,lMaximized, aButtons)

Local nOpca:=0, i,lAllOk
Local oDlg, cCampo, nX, nY, cCaption, cPict, cValid, cF3, cWhen, nLargSay, nLargGet, uConteudo, oSay, oGet
Local cBlkGet,cBlkWhen,cBlkVld, oSaveGetdad := Nil, aSvRot := Nil
Local oTop
Local oBottom
Local aObject := {}
Local aSize := {}
Local nObject

DEFAULT cLineOk := "AllwaysTrue()"
DEFAULT cAllOk  := "AllwaysTrue()"
DEFAULT nCOunt := 0
DEFAULT nOpcx	:= 3
DEFAULT aCGD	:= {}
DEFAULT lDelGetD := .T.
DEFAULT aButtons := {}

nOpcX := Iif(nOpcX<1,3,nOpcX)
cIniCpos := Iif(cIniCpos==Nil,"",cIniCpos)
nCount++
__cLineOk := cLineOK
__nOpcx	 := nOpcx
If nCount > 1
	oSaveGetdad := oGetDados
	oSaveGetdad:oBrowse:lDisablePaint := .t.
EndIf
oGets := {}
If Type("aRotina") == "A"
	aSvRot := aClone(aRotina)
EndIf
aRotina := {}
For nX := 1 to nOpcX
	AADD(aRotina,{"","",0,nOpcx})
Next

aCGD:=Iif(Len(aCGD)==0,{34,5,128,315},aCGD)

If !Empty(bF4)
	SetKey(VK_F4,bF4)
EndIf
aCordW :=Iif(aCordW==Nil,{125,0,400,635},aCordW)

DEFINE MSDIALOG oDlg TITLE OemToAnsi(cTitulo) FROM aCordW[1],aCordW[2] TO aCordW[3],aCordW[4] PIXEL OF oMainWnd

If ValType(lMaximized) == "L"
	oDlg:lMaximized := lMaximized
EndIf

If Len(aC) > 0

	@00,00 SCROLLBOX oTop
	Aadd(aSize,aCGD[1]+13)
	Aadd(aObject,oTop)
	nObject := 2

	For i:=1 to Len(aC)
		If Len(aC[i])==7
			cCampo:=aC[i,1]
			nX:=aC[i,2,1]-13
			nY:=aC[i,2,2]
			cCaption:=Iif(Empty(aC[i,3])," ",aC[i,3])
			cPict:=Iif(Empty(aC[i,4]),Nil,aC[i,4])
			cValid:=Iif(Empty(aC[i,5]),".t.",aC[i,5])
			cF3:=Iif(Empty(aC[i,6]),NIL,aC[i,6])
			cWhen:=Iif(aC[i,7]==NIL,".t.",Iif(aC[i,7],".t.",".f."))
			cWhen := Iif(!(Str(nOpcx,1,0)$"346"),".f.",cWhen)
			cBlKSay := "{|| OemToAnsi('"+cCaption+"')}"
			oSay := TSay():New( nX+1, nY, &cBlkSay,oTop,,, .F., .F., .F., .T.,,,,, .F., .F., .F., .F., .F. )
			nLargSay := GetTextWidth(0,cCaption) / 1.8  // estava 2.2
			cCaption := oSay:cCaption
			
			cBlkGet := "{ | u | If( PCount() == 0, "+cCampo+","+cCampo+":= u ) }"
			cBlKVld := "{|| "+cValid+"}"
			cBlKWhen := "{|| "+cWhen+"}"
			
			oGet := TGet():New( nX, nY+nLargSay,&cBlKGet,oTop,,,cPict, &(cBlkVld),,,, .F.,, .T.,, .F., &(cBlkWhen), .F., .F.,, .F., .F. ,cF3,(cCampo))
			AADD(oGets,oGet)
		EndIf
	Next
EndIf

// 	  oGetDados:=MSGetDados():New(aCGD[1],aCGD[2],aCGD[3],aCGD[4],1,"__MOD2LineOK()","AllwaysTrue()","",.T.,aGetsGD, , , ,"__FieldOk()")
oGetDados:=MSGetDados():New(aCGD[1],aCGD[2],aCGD[3],aCGD[4],nOpcX,"__MOD2LineOK()","AllwaysTrue()",cIniCpos,lDelGetD,aGetsGD, , ,nMax ,"__FieldOk()")
Aadd(aObject,oGetDados:oBrowse)
Aadd(aSize,NIL)

If Len(aR) > 0

	@00,00 SCROLLBOX oBottom
	Aadd(aSize,aCordW[3]/2-aCGD[1]-aCGD[3])
	Aadd(aObject,oBottom)
	nObject := 2

	For i:=1 to Len(aR)
		If Len(aR[i])==7
			cCampo:=aR[i,1]
			nX:=aR[i,2,1]-aCGD[3]
			nY:=aR[i,2,2]
			cCaption:=Iif(Empty(aR[i,3])," ",aR[i,3])
			cPict:=Iif(Empty(aR[i,4]),NIL,aR[i,4])
			cValid:=Iif(Empty(aR[i,5]),".t.",aR[i,5])
			cF3:=Iif(Empty(aR[i,6]),NIL,aR[i,6])
			cWhen:=Iif(aR[i,7]==NIL,".t.",Iif(aR[i,7],".t.",".f."))
			cWhen := Iif(!(Str(nOpcx,1,0)$"346"),".f.",cWhen)
			cBlKSay := "{|| OemToAnsi('"+cCaption+"')}"
			oSay := TSay():New( nX+1, nY, &cBlkSay,oBottom,,, .F., .F., .F., .T.,,,,, .F., .F., .F., .F., .F. )
			nLargSay := GetTextWidth(0,cCaption) / 1.8
			cCaption := oSay:cCaption
			
			cBlkGet := "{ | u | If( PCount() == 0, "+cCampo+","+cCampo+":= u ) }"
			cBlKVld := "{|| "+cValid+"}"
			cBlKWhen := "{|| "+cWhen+"}"
			
			oGet := TGet():New( nX, nY+nLargSay,&cBlKGet,oBottom,,,cPict, &(cBlkVld),,,, .F.,, .T.,, .F., &(cBlkWhen), .F., .F.,, .F., .F. ,cF3,(cCampo))
			AADD(oGets,oGet)
		EndIf
	Next
EndIf

ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg,{||nOpca:=1,lAllOk:=__Mod2OK(cAllOk),Iif(lAllOk,oDlg:End(),nOpca:=0)},{||oDlg:End()},,aButtons),;
AlignObject(oDlg,aObject,1,nObject,aSize),oGetDados:oBrowse:Refresh())

nCount--
If nCount > 0
	oGetDados := oSaveGetDad
	oGetDados:oBrowse:lDisablePaint := .f.
EndIf
If ValType(aSvRot) == "A"
	aRotina := aClone(aSvRot)
EndIf

SetKey(VK_F4,{||Nil})

Return (nOpca==1)

Static Function  __Mod2LineOk()
Local lRet:=.t. , ni
If Str(__nOpcx,1,0)$"346"
	lRet := &__cLineOK
	For ni:= 1 to Len(oGets)
		oGets[ni]:Refresh()
	Next
EndIf
Return lRet

Static Function __Mod2Ok(cAllOK)
Local lRet
lRet := __Mod2LineOk()
If lRet
	lRet := &cAllOk
EndIf
Return lRet

Static Function CallMod2Obj()
Return oGetDados

Static Function __FieldOk()
Local ni
For ni:= 1 to Len(oGets)
	oGets[ni]:Refresh()
Next
Return .t.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Modelo3	  ³ Autor ³ Wilson				  ³ Data ³ 17/03/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Enchoice e GetDados													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³lRet:=Modelo3(cTitulo,cAlias1,cAlias2,aMyEncho,cLinOk, 	  ³±±
±±³			 ³ cTudoOk,nOpcE,nOpcG,cFieldOk,lVirtual,nLinhas,aAltEnchoice)³±±
±±³			 ³lRet=Retorno .T. Confirma / .F. Abandona						  ³±±
±±³			 ³cTitulo=Titulo da Janela 											  ³±±
±±³			 ³cAlias1=Alias da Enchoice									 		  ³±±
±±³			 ³cAlias2=Alias da GetDados											  ³±±
±±³			 ³aMyEncho=Array com campos da Enchoice							  ³±±
±±³			 ³cLinOk=LinOk 															  ³±±
±±³			 ³cTudOk=TudOk 															  ³±±
±±³			 ³nOpcE=nOpc da Enchoice												  ³±±
±±³			 ³nOpcG=nOpc da GetDados												  ³±±
±±³			 ³cFieldOk=validacao para todos os campos da GetDados 		  ³±±
±±³			 ³lVirtual=Permite visualizar campos virtuais na enchoice	  ³±±
±±³			 ³nLinhas=Numero Maximo de linhas na getdados				  	  ³±±
±±³			 ³aAltEnchoice=Array com campos da Enchoice Alteraveis		  ³±±
±±³			 ³nFreeze=Congelamento das colunas.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³RdMake 																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Modelo3(cTitulo,cAlias1,cAlias2,aMyEncho,cLinOk,cTudoOk,nOpcE,nOpcG,cFieldOk,lVirtual,nLinhas,aAltEnchoice,nFreeze,aButtons,aCordW,nSizeHeader)
Local lRet, nOpca := 0,cSaveMenuh,nReg:=(cAlias1)->(Recno()),oDlg
Local oEnchoice
Local nDlgHeight
Local nGDHeight
Local aSize := {}

Private Altera:=.t.,Inclui:=.t.,lRefresh:=.t.,aTELA:=Array(0,0),aGets:=Array(0),;
bCampo:={|nCPO|Field(nCPO)},nPosAnt:=9999,nColAnt:=9999
Private cSavScrVT,cSavScrVP,cSavScrHT,cSavScrHP,CurLen,nPosAtu:=0

nOpcE := If(nOpcE==Nil,3,nOpcE)
nOpcG := If(nOpcG==Nil,3,nOpcG)
lVirtual := Iif(lVirtual==Nil,.F.,lVirtual)
nLinhas:=Iif(nLinhas==Nil,99,nLinhas)

If SetMDIChild()
	oMainWnd:ReadClientCoors()
	nDlgHeight := 500
	nGDHeight  := oMainWnd:nBottom
Else
	nDlgHeight := 420
	nGDHeight  := 70
EndIf

Default aCordW := {135,000,nDlgHeight,632}
Default nSizeHeader := 110

Aadd(aSize,nSizeHeader)

DEFINE MSDIALOG oDlg TITLE cTitulo From aCordW[1],aCordW[2] to aCordW[3],aCordW[4] Pixel of oMainWnd

oEnchoice := Msmget():New(cAlias1,nReg,nOpcE,,,,aMyEncho,{15,1,70,315},aAltEnchoice,3,,,,,,lVirtual,,,,,,,,.T.)

oGetDados := MsGetDados():New(75,1,nGDHeight,315,nOpcG,cLinOk,cTudoOk,"",.T.,,nFreeze,,nLinhas,cFieldOk)

ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg,{||nOpca:=1,If(oGetDados:TudoOk(),If(!obrigatorio(aGets,aTela),nOpca := 0,oDlg:End()),nOpca := 0)},{||oDlg:End()},,aButtons),;
AlignObject(oDlg,{oEnchoice:oBox,oGetDados:oBrowse},1,,aSize))

lRet:=(nOpca==1)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³RegToMemory ³ Autor ³ Wilson			     ³ Data ³ 17/03/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria variaveis M-> para uso na modelo3()						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Modelo3																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RegToMemory(cAlias,lInc,lDic,lInitPad)

Local aArea    := GetArea()
Local aAreaSX3 := SX3->(GetArea())
Local nX    := 0
Local cCpo  := ""

DEFAULT lInc := .F.
DEFAULT lDic := .T.
DEFAULT lInitPad := .T.

If lDic
	DbSelectArea("SX3")
	DbSetOrder(1)
	DbSeek(cAlias)
	While !Eof() .and. SX3->X3_ARQUIVO == cAlias
		DbSelectArea(cAlias)
		If SX3->X3_CONTEXT == "V" .or. lInc
			_SetOwnerPrvt(Trim(SX3->X3_CAMPO),CriaVar(Trim(SX3->X3_CAMPO),lInitPad))
		Else
			cCpo := (cAlias+"->"+Trim(SX3->X3_CAMPO))
			_SetOwnerPrvt(Trim(SX3->X3_CAMPO),&cCpo)
		EndIf
		DbSelectArea("SX3")
		DbSkip()
	EndDo
Else
	dbSelectArea(cAlias)
	For nX := 1 To FCount()
		If ( lInc )
			cCpo := CriaVar(Trim(FieldName(nX)),lInitPad)
		Else
			cCpo := &(cAlias+"->"+Trim(FieldName(nX)))
		EndIf
		_SetOwnerPrvt(Trim(FieldName(nX)),cCpo)
	Next nX
EndIf
RestArea(aAreaSX3)
RestArea(aArea)
Return(Nil)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡„o	  ³ xCxLoja  ³ Autor ³ Fernando Godoy		   ³Data  ³ 27/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡„o ³ Retorna o Caixa/Agencia/Conta geral da Loja 	 			   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe   ³ xCxLoja()																   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function xCxLoja()
Local cCaixa
Local aCaixaRet := {}
Local cAlias 	:= Alias()
Local nReg	 	:= Recno()
Local cOrder 	:= IndexOrd()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ VeIfica a existencia do parametro ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GetMv("MV_CXLOJA", .T.)
	GetMv("MV_CXLOJA")
	cCaixa	 := " "
Else
	cCaixa	 := GetMv("MV_CXLOJA")
EndIf

If Substr(cCaixa,4,1) != "/" .or.;
	Substr(cCaixa,10,1) != "/" .or.;
	Empty(Substr(cCaixa,1,3)) .or.;
	Empty(Substr(cCaixa,5,5)) .or.;
	Empty(Substr(cCaixa,11,10))
	If GetMv("MV_CXLOJA", .T.)
		RecLock("SX6",.F.)
	Else
		RecLock("SX6", .T.)
		SX6->X6_FIL      := "  "
		SX6->X6_VAR      := "MV_CXLOJA"
		SX6->X6_TIPO     := "C"
	EndIf
	SX6->X6_CONTEUD := "CL1/00001/0000000001"
	SX6->(MsUnlock())
EndIf

cCaixa := GetMv("MV_CXLOJA")

Aadd(aCaixaRet, Substr(cCaixa,1,At("/",cCaixa) - 1))
Aadd(aCaixaRet, Substr(cCaixa,At("/",cCaixa) +1 ,(Rat("/",cCaixa)-At("/",cCaixa)-1)))
Aadd(aCaixaRet, Substr(cCaixa,Rat("/",cCaixa) +1,10))

DbSelectArea("SA6")
DbSetOrder(1)
If !DbSeek(xFilial()+aCaixaRet[1]+aCaixaRet[2]+aCaixaRet[3])
	RecLock("SA6",.T.)
	SA6->A6_FILIAL	:= xFilial()
	SA6->A6_COD		:= aCaixaRet[1]
	SA6->A6_AGENCIA	:= aCaixaRet[2]
	SA6->A6_NUMCON	:= aCaixaRet[3]
	SA6->A6_NOME	:= STR0041 // CAIXA GERAL DA LOJA
	SA6->A6_NREDUZ	:= STR0042 // CAIXA GERAL LJ
	MsUnLock()
EndIf

DbSelectArea("SX5")
DbSetOrder(1)
If ! DbSeek(xFilial()+"23"+aCaixaRet[1])                  
	RecLock("SX5",.T.)
	SX5->X5_FILIAL	:= 	xFilial("SX5")
	SX5->X5_TABELA	:= "23"
	SX5->X5_CHAVE	:= aCaixaRet[1]
	SX5->X5_DESCRI	:= STR0041 // CAIXA GERAL DA LOJA
	SX5->X5_DESCSPA	:= STR0041 // CAIXA GERAL DA LOJA
	SX5->X5_DESCENG	:= STR0041 // CAIXA GERAL DA LOJA
	MsUnLock()
EndIf
DbSelectArea(cAlias)
DbSetOrder(cOrder)
DbGoTo(nReg)

Return aCaixaRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³NetCancel   ³ Autor ³ Alessandro B. Freire³ Data ³ 19/05/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Envia mensagem ao usuario									 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Generico													  				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static FUNCTION NetCancel()
Return (APMsgYesNo(OemToAnsi(STR0022),OemToAnsi(STR0023))) //"H  outro usu rio utilizando o SX8. Deseja Cancelar ?" ### "Aten‡„o"


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ ArrayTP8 ³ Autor ³ Rogerio F. Guimaraes  ³ Data ³ 31.10.97  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina para trazer array com os itens da cond pagto tipo 9  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpA1 := ArrayTP8(ExpN1)									  			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array contEndo os dias e percentuais de cada parcel ³±±
±±³			 ³ ExpN1 = E4_COND														   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ Generico 																   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL. 						   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³	MOTIVO DA ALTERACAO						   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Rogerio F.G. ³24/11/97³B.HUR ³Alt Cond Pagto Tipo 8 - validacao		   ³±±
±±³ Rogerio/Edson³09/12/97³12551 ³Alt Validacao para o Percent. Digitado   ³±±
±±³ Edson  M.	  ³25/02/98³XXXXX ³Acerto da validacao da cond. Tipo 8.	   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static FUNCTION ArrayTP8(cCond)
Local cString,cPercent,cDias
Local nPos1:=nPos2:=nx:=0
Local aTp8:={},aDias:={},aPercent:={},i:=0
Local nPerc:=0

cString:=cCond
nPos1:=Rat("[",cString)
nPos2:=Rat("]",cString)

cPercent := Substr(cString,nPos1+1,nPos2-(nPos1+1))
cString:=Stuff(cString,nPos1-1,(nPos2+1)-(nPos1-1),"")

nPos1:=Rat("[",cString)
nPos2:=Rat("]",cString)
cDias := Substr(cString,nPos1+1,nPos2-(nPos1+1))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ VeIfica nro de parcelas e percentuais ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While Len(cDias) > 0
	AAdd(aDias,Val(Parse(@cDias)))			// Adiciona os dias para pagamento
End

While Len(cPercent) > 0
	AAdd(aPercent,Val(Parse(@cPercent)))	// Adiciona os percentuais de pagamento
	If aPercent[Len(aPercent)] == 0
		Return aTp8 := {}
	EndIf
End

If Len(aDias) == 0 .Or. Len(aPercent) == 0
	Return aTp8:={}
EndIf

If Len(aDias) != Len(aPercent)					// VerIfica discrepancia
	Return aTP8:={}
EndIf

For i := 1 to Len(aDias)
	AAdd(aTp8,{aDias[i],aPercent[i]})			// Atualiza Retorno, acumula percentuais
	nPerc += aTp8[i][2]
Next

If nPerc < 100 .Or. nPerc > 100
	aTp8 := {}
EndIf
Return aTp8

Static Function x2Path(cAlias)
Local cSavAlias := Alias(),nRecSx2,cRet:=""
Local cFilter

DbSelectArea("SX2")
cFilter := dbFilter()
nRecSx2 := Recno()
DbClearFilter()
If DbSeek(cAlias)
	cRet := PADR(AllTrim(x2_path)+AllTrim(x2_arquivo),50)
EndIf
Set Filter to &cFilter
DbGoTo(nRecSx2)

If ( ! Empty(cSavAlias) )
	DbSelectArea(cSavAlias)
EndIf
Return cRet

Static Function SuperVal(cVar)
Local xVar:="",ni, cByte

If ValType( cVar ) == "N"
	Return( cVar )
EndIf

For ni:= 1 to Len(cVar)
	cByte := Subs(cVar,ni,1)
	If cByte == ","
		cByte := "."
	endif
	If cByte $"1234567890.-"
		xVar+= cByte
	EndIf
Next
Return (Val(xVar))

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ Final 	³ Autor ³ Ary Medeiros	  	     ³ Data ³		     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Finaliza Aplicativo com janela propria 					     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

//REMOVIDA PARA LIB
Function Final(cStr,cStr1)
*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ As fun‡”es Posicione e RetField       ³
//³ fazem exatamente a mesma coisa        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static function RetField(cAlias,nOrder,cChave,cCampo)
Return Posicione(cAlias,nOrder,cChave,cCampo)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AxPesqInd	³ Autor ³ Bruno Sobieski		  ³ Data ³ 23.03.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pesquisas genericas em arquivos com Indice cond. ativo.    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ AxPesqInd(cTxtInd,cArqInd)											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTxtInd = Texto exibido no ComboBox com a chave do indice. ³±±
±±³          ³ cArqInd = Nome de arquivo de indice temporario.            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 											      			  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static FUNCTION axPesqInd(cTxtInd,cArqInd)
Local cAlias,cCampo,nReg,oDlg,nOpca:=0,bSav12 := SetKey(VK_F12,Nil)
Local cFil:="",nChave:=1,dCampo,cOrd,oCbx,nOpt1,nI, nSavReg
Local	nOrder	:=	IndexOrd(), aOrd	:=	{}
*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Salva a Integridade dos Dados														³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cTxtInd==Nil .Or. cArqInd==Nil
	Return
EndIf
cAlias  := ALIAS()
DbSelectArea(cAlias)
cCpofil := PrefixoCpo(cAlias)+"_FILIAL"
nSavReg := Recno()
If cCpofil $ Indexkey() //TYPE(cCpoFil) != "U"
	DbSeek(cFilial)
Else
	DbGoTop()
EndIf
If Eof()
	Help(" ",1,"A000FI")
	SetKey(VK_F12,bSav12)
	Return 3
EndIf
DbGoTo(nSavReg)

Aadd(aOrd,OemToAnsi(" "+cTxtInd))
cOrd := cTxtInd
cCampo:=SPACE(40)
DEFINE MSDIALOG oDlg FROM 5, 5 TO 14, 50 TITLE OemToAnsi(STR0010) //"Pesquisa"

@ 0.6,1.3 COMBOBOX oCBX VAR cOrd ITEMS aOrd  SIZE 165,44 OF oDlg FONT oDlg:oFont
@ 2.1,1.3 MSGET cCampo SIZE 165,10
DEFINE SBUTTON FROM 055,122	TYPE 1 ACTION (nOpca := 1,oDlg:End()) ENABLE OF oDlg
DEFINE SBUTTON FROM 055,149.1 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg

ACTIVATE MSDIALOG oDlg CENTERED
If nOpca == 0
	SetKey(VK_F12,bSav12)
	Return 0
EndIf
nReg := RecNo()
Set Softseek On
#ifndef TOP
	DbSetIndex(cArqInd+OrdBagExt())
	DbSetOrder(nOrder)
#else
	DbSetOrder(0)
#endif

If (PrefixoCpo(cAlias)+"_FILIAL") $ IndexKey()  //Procura pela filial
	cFil:=cFilial
	nChave:=11
EndIf

If ("DTOS" $ Upper(IndexKey(nOrder))) .or. ("DTOC" $ Upper(IndexKey(nOrder)))
	cCampo := ConvData(IndexKey(nOrder),cCampo)
EndIf

If SubStr(cAlias,1,3) == "SM2"
	dCampo:=Ctod(AllTrim(cCampo))
	DbSeek(dCampo)
EndIf
If !((PrefixoCpo(cAlias)+"_FILIAL") $ IndexKey()).and.(!"SM2"$cAlias)  //cAlias $ "SX6/SX9"
	DbSeek(Trim(ccampo))
ElseIf cAlias != "SM2"
	DbSeek(cFilial+Trim(cCampo))
	If Subs(&(IndexKey()),1,2) != cFilial	 // IR Para EOF
		DbSeek(chr(255))
	EndIf
EndIf
Set SoftSeek Off
lRefresh := .t.
SetKey(VK_F12,bSav12)
Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ MaParcela  ³ Autor ³ Ben-Hur M Castilho  ³ Data ³ 14/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Calcula o Numero da Proxima Parcela 			 		 	     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATA460													  				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MaParcela( cParcela )
Local cBack    := ""
Local nTamParc := Len(SE1->E1_PARCELA)
If nTamParc == 1
	Do Case
		Case (cParcela >= "0" .And. cParcela <= "8")
			cBack := Str( (Val( cParcela )+1),1 )
		Case (cParcela >= "A" .And. cParcela <= "Y")
			cBack := Chr( (Asc( cParcela )+1) )
		Case (cParcela >= "a" .And. cParcela <= "y")
			cBack := Chr( (Asc( cParcela )+1) )
		Case cParcela = "Z"
			cBack := "a"
		OtherWise
			cBack := "A"
	EndCase
Else
	cBack := Soma1(cParcela,nTamParc)
EndIf
Return( cBack )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ GetSXENum³Autor  ³ Ary Medeiros			  ³ Data ³	   	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Obtem numero sequencial do arquivo de semaforo			     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³GetSXENum( ) 												           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetSXENum(cAlias,cCpoSx8,cAliasSX8,nOrdem)
Local cSavAlias := Alias(), cRet, nSize, lFound, lNetErr := .t.
Local nRegX6 := SX6->(Recno()), nTimes := 0,nExist, nHdl, aCampos, nTrys := 0

IF __lSemServer == Nil
   IF GetCountLicense()		
	__lSemServer :=  ( LS_GetLicense(10000) >= 0)
   Else
    __lSemServer := .f.
   Endif
Endif

IF __lSemServer
   IF !__lCleaned
      FERASE("SXE.DBF")
      FERASE("SXF.DBF")
      __lCleaned := .t.
   Endif
   Return GetLSNum(cAlias,cCpoSx8,cAliasSX8,nOrdem)
Endif

DEFAULT __lFirstXE := .t.    

If __lFirstXE
	__lFirstXE := .f.
	If !File("SXE" + GetDBExtension()) .Or. ! File( "SXF" + GetDBExtension() )
		nTrys := 0
		While !LockByName("SOEUSXE")
			Inkey(5)
			nTrys++
			If nTrys > 20
				Final("Probs.Criacao SOEUSXE")
			EndIf
		End

		If ! File( 'SXE' + GetDBExtension() )
			aCampos := {}
			AADD(aCampos,{"XE_FILIAL","C",50,0})
			AADD(aCampos,{"XE_ALIAS","C",3,0})
			AADD(aCampos,{"XE_TAMANHO","N",2,0})
			AADD(aCampos,{"XE_NUMERO","C",20,0})
			dbCreate("SXE",aCampos,__LocalDriver)
			If NetERR()
				Final("Probs.Criacao SXE")
			EndIf
		EndIf

		If ! File( 'SXF' + GetDBExtension() )
			aCampos := {}
			AADD(aCampos,{"XF_FILIAL","C",50,0})
			AADD(aCampos,{"XF_ALIAS","C",3,0})
			AADD(aCampos,{"XF_TAMANHO","N",2,0})
			AADD(aCampos,{"XF_NUMERO","C",20,0})
			dbCreate("SXF",aCampos,__LocalDriver)
			If NetERR()
				Final("Probs.Criacao SXF")
			EndIf
		EndIf

		UnLockByName("SOEUSXE")
		DbCommitAll()
	EndIf
EndIf
If Select("SXE") <= 0
	USE SXE ALIAS SXE SHARED NEW VIA __LocalDriver
	If NetERR()
		Final("Probs.Abertura SXE")
	EndIf
	USE SXF ALIAS SXF SHARED NEW VIA __LocalDriver
	If NetERR()
		Final("Probs.Abertura SXF")
	EndIf
EndIf

nOrdem := Iif(nOrdem == Nil,1,nOrdem)

If cAliasSX8 == Nil
	cAliasSx8  :=   PADR(xFilial(cAlias)+x2path(cAlias),50)
Else
	cAliasSx8  :=   Padr(cAliasSx8,50)
EndIf

DbSelectArea("SXF")     //Olhar as Sobras
DbGoTop()
lFound := .f.
While !Eof()  //.and. (X8_FILIAL+X8_ALIAS+X8_STATUS) == (cAliasSx8+cAlias+"0")
	If XF_FILIAL+XF_ALIAS != cAliasSX8+cAlias
		DbSkip()
		Loop
	EndIf
	IF Ascan(aSx8,{|x| x[1]==SXF->(Recno())}) > 0
	   dbSkip()
	   Loop
	Endif
	If MSRLock(Recno())
	   dbCommit()
	   dbGoto(Recno())
		IF MsRLock(Recno())     //Nao Mexer WIlson
		 dbGoto(Recno())       //Nao Mexer Wilson
		 If !Deleted()
			lFound  := .t.
			cRet            := Substr(XF_NUMERO,1,XF_TAMANHO)
			Exit
		 Else
			MSRUnlock(Recno())
		 EndIf
		Else
		   MsRUnlock(Recno())
		Endif
	EndIf
	DbSkip()
End
If !lFound
	DbSelectArea("SXE")    //Olhar o Proximo
	DbGoTop()
	While !Eof()
		If XE_FILIAL+XE_ALIAS == cAliasSX8+cAlias
			Exit
		EndIf
		DbSkip()
	End
	If Eof()
		CriaSXE(cAlias,cCpoSx8,cAliasSx8,nOrdem)
		DbSelectArea("SXE")
		dbCommit()
	EndIf
	nTrys := 0
	While .t.
		DbGoTo(Recno())
		If MSRLock(Recno())
			dbCommit()
			DbGoTo(Recno())
			If MsRLock(RecNo())   //Nao Mexer (Wilson)
				Exit
			EndIf
		EndIf
		nTrys++
		Sleep(15*nTrys)
		If nTrys > 50
			Final("Nao Consegui SXE")
		EndIf
	End
	cRet := Substr(XE_NUMERO,1,XE_TAMANHO)
	nSize := XE_TAMANHO
	If ( cAlias == 'CPR' ) .And. ( cRet == 'ZZZZ' )
		Replace XE_NUMERO WITH '0001'
	Else	
	Replace XE_NUMERO with SOMA1(Substr(XE_NUMERO,1,XE_TAMANHO))
	EndIf
	DbCommit()
	MsRUnLock(Recno())
	DbCommit()


	While lNetErr
		DbSelectArea("SXF")
		Set DELE OFF
		DbGoTop()
		While !Eof()
			If Deleted()
				Exit
			EndIf
			DbSkip()
		End
		If Eof()
			dbAppEnd(.f.)
			lNetErr := NetErr()
		Else
			If ( MsrLock(RecNo()) )
			    dbCommit()
				dbGoto(Recno())
				IF MsRLock(Recno())
				 If !Deleted()
					 MsRUnlock(RecNo())
					 Loop
				 EndIf
				Else
				 MsRUnLock(Recno())
				 Loop
				Endif 
			Else
				Loop
			EndIf
			lNetErr := .f.
		EndIf
		Set DELE ON
		nTimes ++
		If nTimes > 20
			If NetCancel()
				Final( oemtoansi("PROBS.GRV.SXF") ) //"Problema de GRAVACAO NO SX8"
			Else
				nTimes := 0
			EndIf
		EndIf
		If ( lNetErr )
			Inkey( nTimes/24 )	
		EndIf
	End
	DbSelectArea("SXF")
	MSRLock(Recno())
	DbReCall()
	Replace XF_FILIAL with cAliasSx8
	Replace XF_ALIAS with cAlias
	Replace XF_TAMANHO with nSize
	Replace XF_NUMERO with cRet
	DbCommit()
EndIf

__lSX8 := .t.

//If Ascan(aSx8,{|x| x[1]==SXF->(Recno())}) == 0
   AADD(aSx8,{SXF->(Recno()),"E",cCpoSX8,cAlias})
//Endif


If !Empty(cSavAlias)
	DbSelectArea(cSavAlias)
EndIf


Return cRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³RollBackSXE³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna numero no semafor como pEndente 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³RollBackSXE()															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RollBackSE()
Local cALias := Alias()

IF __lSemServer == Nil
   IF GetCountLicense()		
	__lSemServer :=  ( LS_GetLicense(10000) >= 0)
   Else
    __lSemServer := .f.
   Endif
Endif

IF __lSemServer
   Return RollBackLS()
Endif


If Len(aSX8) < 1
	__lSx8 := .f.
EndIf

If !__lSx8
	Return Nil
EndIf

DbSelectArea("SXF")
DbGoTo(aSx8[len(aSx8),1])
aDel(aSX8,len(aSX8))
aSize(aSX8,len(aSX8)-1)
__lSx8 := Iif(Len(aSx8) == 0,.f.,.T.)

MsRUnLock(Recno())
dbCommit()
If !Empty(cAlias)
	DbSelectArea(cAlias)
EndIf
Return nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ConfirmSXE ³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Confirma numero sugerido pelo semaforo							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ConfirmSXE() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL1 : Ativa a verificacao do numero gravado. Quando ligado³±±
±±³          ³a confirmacao do numero eh executada apenas se o usuario nao³±±
±±³          ³alterou o numero sugerido. Exemplo : O sistema sugeriu      ³±±
±±³          ³000015 para um Pedido, o usuario alterou para 000040 e      ³±±
±±³          ³gravou. No momento da ConfirmSX8, o numero gravado sera     ³±±
±±³          ³comparado com o sugerido, e o mesmo apenas sera confirmado  ³±±
±±³          ³caso nao tenha sido alterado.                               ³±±
±±³          ³ATENCAO : O PADRAO DESTE PARAMETRO E FALSO, E O MESMO SO    ³±±
±±³          ³          PODERA SER UTILIZADO CASO O REGISTRO GRAVADO PELO ³±±
±±³          ³          USUARIO ESTEJA POSICIONADO.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ConfirmSXE(lPosConf)
Local cAlias := Alias(), nReg
Local nTimes := 0
Local cAliasSXE 
Local cSeqSXE 

DEFAULT lPosConf := .F.

lPosConf := If(ValType(lPosConf) == "L",lPosConf,.F.)

IF __lSemServer == Nil
   IF GetCountLicense()		
	__lSemServer :=  ( LS_GetLicense(10000) >= 0)
   Else
    __lSemServer := .f.
   Endif
Endif

IF __lSemServer
   Return ConFirmLS(lPosConf)
Endif


If Len(aSX8) < 1
	__lSx8 := .f.
EndIf

If !__lSx8
	Return Nil
EndIf

nReg := aSx8[len(aSx8),1]
If lPosConf
	If aSX8[len(aSx8),4] <> Nil .And. aSX8[len(aSx8),3] <> Nil  .And. Select(cAlias) > 0 .And. (cAlias)->(FieldPos(aSX8[len(aSx8),3]))> 0
		cAliasSXE := cAlias
		cSeqSXE := (cAliasSXE)->(&(aSX8[len(aSx8),3]))
	Else
		lPosConf := .F.
	EndIf
EndIf

DbSelectArea("SXF")
DbGoTo(nReg)
aDel(aSX8,len(aSX8))
aSize(aSX8,len(aSX8)-1)
If !lPosConf .Or. ( XF_ALIAS == cAliasSXE .And. Substr(XF_NUMERO,1,XF_TAMANHO) == cSeqSXE)
	nTimes := 0
	While !MsRLock(RecNo())
		nTimes++
		If nTimes > 20
			If NetCancel()
				Final( "Probs.Lock SXF" ) //"Problemas de Lock no SX8"
			Else
				nTimes := 0
			EndIf
		EndIf
		Inkey( ntimes/24 )
	End
	dbDelete()
	dbCommit()
	MsRUnLock(nReg)
	DbCommit()
EndIf
	
DbSelectArea(cAlias)
Return nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ CriaSXE	 ³Autor	³ Ary Medeiros 		  ³ Data ³			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria registro no SX8 para alias nao Localizado				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³CriaSXE() 																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function CriaSXE(cAlias,cCpoSx8,cAliasSx8,nOrdSX8,lInServer)
Local cSavAlias := Alias(), nRecno, nOrdem, cNum, cFilCpo
Local lCampo := .t., cProva, aArquivos, nTamanho, lNetErr := .T., nTimes := 0
Local nHdl := -1, nTrys := 0, lFound, cCampo,cFilter, cSerie, nOrd, nNum, uRet
Local cMvUniao, cMvMunic

DEFAULT lInServer := .f.

cNum := Nil

If ( ExistBlock("CRIASXE") )
	uRet := ExecBlock("CRIASXE",.f.,.f.,{cAlias,cCpoSx8,cAliasSx8,nOrdSX8})
	If ( ValType(uRet) == 'C' )
		cNum 	:= uRet
		nTamanho:=Len(cNum)
	EndIf
EndIf

IF cNum == Nil
	nOrdSX8 := Iif(nOrdSX8 == Nil,1,nOrdSX8)
	Do Case
		Case cAlias == "SA1"
			cCampo := "A1_COD"
		Case cAlias == "SA2"
			cCampo := "A2_COD"
		Case cAlias == "SB1"
			cCampo := "B1_COD"
		Case cAlias == "SC1"
			cCampo := "C1_NUM"
		Case cAlias == "SC2"
			cCampo := "C2_NUM"
		Case cAlias == "SC5"
			cCampo := "C5_NUM"
		Case cAlias == "SC7"
			cCampo := "C7_NUM"
		Case cAlias == "SC8"
			cCampo := "C8_NUM"
		Case cAlias == "SI2"
			cCampo := "I2_NUM"
		Case cAlias == "SL1"
			cCampo := "L1_NUM"
		Case cAlias == "NFF"
		   IF cAliasSX8 == Nil
			   UserException("Invalid Use OF GetSXENum With NFF Alias")
			Endif
		   lCampo := .f.
		   cSerie := Subs(cAliasSX8,1,3)
			nTamanho := Len(SF2->F2_DOC)
			nOrd := SF2->(IndexOrd())
			SF2->(dbSetOrder(4))
			SF2->(DbGoTop())	// Nao tirar -> Ramalho
			SF2->(dbSeek(xFilial("SF2")+"zzzzz",.t.))
			SF2->(dbSkip(-1))
			IF SF2->(Bof()) .Or. SF2->F2_FILIAL+SF2->F2_SERIE != xFilial("SF2")+cSerie
			   nNum := 1 
			Else
			   nNum := Val(SF2->F2_DOC) + 1
			Endif
			cNum := StrZero(nNum,nTamanho,0)
		SF2->(dbSetOrder(nOrd))
		Case cAlias == "CPR"
			lCampo := .f.
			cProva	 := GetMv("MV_PROVA")
			aArquivos := DIRECTORY(cProva+"SP*.*")
			If Len(aArquivos) == 0
				cNum := "0001"
			Else
				aArquivos:=ASORT(aArquivos,,, { | x ,y| x[1] < y[1] } )
				cNum := StrZero(Val(Substr(aArquivos[Len(aArquivos)][1],5,4))+1,4)
			EndIf
			nTamanho := 4
		Case cAlias == "_CT"    //Numeador do CTK
			lCampo := .f.  
			nRec := SM0->(Recno())         
			nOrd := CTK->(IndexOrd())
			nRecno := CTK->(Recno())
			SM0->(dbSeek(cEmpAnt))
			cNum := " "
			While !SM0->(Eof()) .and. SM0->M0_CODIGO == cEmpAnt
			   cFilTrb := xFilial("CTK")
			   dbSelectArea("CTK")
			   dbSetOrder(1)
			   dbSeek(cFilTrb+"zzzzzzzzzz",.t.)
			   dbSkip(-1)
			   IF CTK_FILIAL != cFilTrb .and. Empty(cNum)
			      cNum := "0000000001"
			   ElseIF cNum <= CTK->CTK_SEQUEN
			      cNum := SOMA1(CTK_SEQUEN)
			   Endif
			   nTamanho := 10
			   IF Empty(cFilTrb)
			      Exit
			   Endif                 
			   SM0->(dbSkip())
			End
			SM0->(dbGoto(nRec))
			CTK->(dbSetOrder(nOrd)) 
			CTK->(dbGoto(nRecno))
		Case cAlias == "TRB"
			lCampo := .f.
			cNum := "00001"
			nTamanho := 5 
		Case cAlias == "SSC"
			cCampo := "SC_VIAGEM"
		Case cAlias == "SS2"
			cCampo := "S2_CODIGO"
		Case cAlias == "ACF"
			cCampo := "ACF_CODIGO"
		Case cAlias == "SUA"
			cCampo := "UA_NUM"
		Case cAlias == "SUC"
			cCampo := "UC_CODIGO"
		Case cAlias == "SY6"
			cCampo := "Y6_CODLEIT"
		Case cAlias == "SY4"
			cCampo := "Y4_CODEMP"
		Case cAlias == "SY8"
			cCampo := "Y8_CODREV"
		Case cAlias == "SYA"
			cCampo := "YA_CODPECA"
		Case cAlias == "SYE"
			cCampo := "YE_CODPEnd"
		Case cAlias == "SYR"
			cCampo := "YR_CODHIST"
		Case cAlias == "SYI"
			cCampo := "YI_CODAL"
		Case cAlias == "SYC"
			cCampo := "YC_CODPLAN"
		Case cAlias == "SGJ"         //GUTEMBERG
			cCampo := "GJ_FICHA"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Arquivos do modulo de Administracao de Oficina e Veiculos	  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Case cAlias == "SO8"
			cCampo := "O8_NUM"
		Case cAlias == "SO1"
			cCampo := "O1_CODIGO"
		Case cAlias == "SO2"
			cCampo := "O2_CODIGO"
		Case cAlias == "SO3"
			cCampo := "O3_CODIGO"
		Case cAlias == "SO5"
			cCampo := "O5_CODIGO"
		Case cAlias == "SV1"
			cCampo := "V1_CODIGO"
	EndCase
	If cCpoSX8 != Nil
		cCampo := cCpoSX8
	EndIf
	
	If lCampo
		cFilCpo := PrefixoCpo(cAlias)+"_FILIAL"
		DbSelectArea("SX3")
		DbSetOrder(2)
		DbSeek(cCampo)
		DbSetOrder(1)
		DbSelectArea(cAlias)
		nRecno := Recno()
		nOrdem := IndexOrd()
		DbSetOrder(nOrdSX8)
		cFilter := dbFilter()
		IF cAlias == "SA1"
		   cMvUniao := Padr(GetMV("MV_UNIAO"),Len(SA1->A1_COD))
		   cMvMunic := Padr(GetMV("MV_MUNIC"),Len(SA1->A1_COD))
	       DbSelectArea(cAlias)
		   Set Filter to ( A1_COD != cMvUniao .and. A1_COD != cMvMunic) 
		ElseIf ( cAlias == 'SA2' )
		   cMvUniao := Padr(GetMV("MV_UNIAO"),Len(SA2->A2_COD))
		   cMvMunic := Padr(GetMV("MV_MUNIC"),Len(SA2->A2_COD))
	       DbSelectArea(cAlias)
		   SET FILTER TO ( A2_COD != cMvUniao .And. A2_COD != cMvMunic) 
		ElseIF cAlias == "SB1"
		   Set Filter to Subs(B1_COD,1,3) != "MOD"
		Else
		   DbClearFilter()
		Endif
		DbGoTop()		// Nao tirar !!!!!!!! - Eh usado para resolver problema quando o SXE eh chamado apos o SetDummy
		DbSeek(xFilial(cAlias)+'z',.t.)
		DbSkip(-1)
		DbSetOrder(nOrdem)
		If (Substr(&(cFilCpo),1,2) != xFilial(cAlias)) .or. (LastRec()==0)
			cNum := Replicate("0",SX3->X3_TAMANHO)
		Else
			cNum := &(cCampo)
		EndIf
		DbGoTo(nRecno)
		If !Empty(cFilter)
			Set Filter to &cFilter
		Else
			DbClearFilter()
		EndIf
		cNum := Soma1(cNum)
		nTamanho := SX3->X3_TAMANHO
		
	EndIf

EndIf

IF lInServer
   Return cNum
Endif

nTrys := 0
While !LockByName("SOSXE"+cAlias)
	Inkey(3)
	nTrys++
	If nTrys > 20
		FINAL("PROBS.CRIASXE")
	EndIf
End

DbSelectArea("SXE")   //Garantir que nao existe o Registro
DbGoTop()
lFound := .f.

While !Eof()
	If XE_FILIAL+XE_ALIAS == cAliasSX8+cAlias
		lFound := .t.
		Exit
	EndIf
	DbSkip()
End

If !lFound
	While lNetErr
		dbAppEnd(.f.)
		lNetErr := NetErr()
		nTimes ++
		If nTimes > 20
			If NetCancel()
				Final( oemtoansi(STR0021) ) //"Problema de GRAVACAO NO SX8"
			Else
				nTimes := 0
			EndIf
		EndIf
		If ( lNetErr )
			Inkey( nTimes/24 )	
		EndIf
	End
	MSRLock(Recno())
	Replace XE_ALIAS with cAlias, XE_TAMANHO with nTamanho,XE_FILIAL with cAliasSx8
	Replace XE_NUMERO with cNum
	dbCommit()
	MsRUnLock(Recno())
EndIf
UnLockByName("SOSXE"+cAlias)
Return cNum

Static Function PesqInit(aLista,oFather,nAtu,bGet,cVar)
Local oGet
Local nWidth
Local nTop
Local cPict
Local cF3
Local bSay

nTop := PESQ_TOP+((nAtu-1)*PESQ_SKIP)
If aLista[nAtu][2] == "D"
	cPict := "@D"
	nWidth := 40
Else
	cPict := If(Empty(aLista[nAtu][6]),NIL,AllTrim(aLista[nAtu][6]))
	nWidth := CalcFieldSize(aLista[nAtu][2],aLista[nAtu][3],0,," ")
EndIf

If '"'$aLista[nAtu][5]
	bSay := &("{|| '"+OemToAnsi(aLista[nAtu][5])+"'}")
Else
	bSay := &('{|| "'+OemToAnsi(aLista[nAtu][5])+'"}')
EndIf

nWidth += 10
nWidth := Iif(nWidth > 130,130,nWidth)
cF3 := If(Empty(aLista[nAtu][1]),NIL,aLista[nAtu][1])
TSay():New(nTop,10,bSay,oFather,,,.F.,.F.,.F.,.T.,,,(Len(Trim(aLista [nAtu][5]))*8),15,.F.,.F.,.F.,.F.,.F.)
oGet := TGet():New(nTop,70,bGet,oFather,nWidth,10,cPict,,,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F.,cF3,cVar,,,,.T.)
oGet:cSX1Hlp := aLista[nAtu][7]
Return

Static Function PesqList(cAlias,lSeeAll,aPesqVar,aReturn,cMsg)
Local cSvAlias := Alias()
Local nI := 1
Local cChave, nAt1
Local cF3 := ""
Local nPos := 0
Local nSx3Ord := SX3->(IndexOrd())
Local nJ	:= 1
Local aKey	:= {}
Local lSixFilter	:= ( SIX->(FieldPos('SHOWPESQ')) > 0 )
Local lOK := .T.
Local lFilial

DEFAULT lSeeALL := .f.

aReturn := {}

DbSelectArea("SIX")
If DbSeek(cAlias)
	While !Eof() .And. SIX->INDICE == cAlias
	
		If ( lSixFilter ) .And. ( SIX->SHOWPESQ == 'N' )
			DbSkip()
			Loop				
		EndIf
	
		nPos++
		Aadd(aReturn,{})
		Aadd(aPesqVar,{})

		nI 	:= 0
		aKey:= StrTokArr( Upper(SIX->CHAVE), '+' )
		nAt1:= 1
		lFilial := ( '_FILIAL+' $ SIX->CHAVE )
		
		For nJ := 1 To Len( aKey )
			
			cChave := AllTrim(aKey [nJ])
			
			If ( '(' $ cChave )
			
				nAt1 := At('(', cChave )
				While ( nAt1 > 0 )
					cChave	:= Subs( cChave, nAt1 + 1 )
					nAt1	:= At('(', cChave )					
				End
				
				nAt1 := At(',', cChave )
				
				If ( nAt1 > 0 )
					cChave := Subs( cChave, 1, nAt1 - 1 )
				EndIf
		
				nAt1 := At(')', cChave )
				
				If ( nAt1 > 0 )
					cChave := Subs( cChave, 1, nAt1 - 1 )
				EndIf
				
			EndIf
			
			If ( '->' $ cChave )
				cChave := Subs(cChave,At('->',cChave)+2)
			EndIf

			If !( 'FILIAL' $ cChave) .or. lSeeALL
				nI++
				Aadd(aPesqVar[nPos],NIL)
				
				If ('_FILIAL|' $ cChave+"|" )
					cF3 := ""
				Else				
					cF3 := PesqF3(SIX->F3,nI-If(lFilial .And. lSeeAll,1,0))
				EndIf
				DbSelectArea("SX3")
				DbSetOrder(2)
				If DbSeek(cChave)
					Aadd(aReturn[nPos],{cF3,SX3->X3_TIPO,SX3->X3_TAMANHO,SX3->X3_DECIMAL,X3Titulo(),SX3->X3_PICTURE,SX3->X3_CAMPO})
					If SX3->X3_TIPO == "D"
						aPesqVar[nPos][ni] := Ctod("")
					ElseIf SX3->X3_TIPO == "C"
						aPesqVar[nPos][ni] := Space(SX3->X3_TAMANHO)
					ElseIf SX3->X3_TIPO == "N"
						aPesqVar[nPos][ni] := 0
					EndIf
				Else
					lOK := .F.
					Exit
				EndIf
			EndIf
		Next

		If !lOK
			Exit
		EndIf
				
		DbSelectArea("SIX")
		DbSkip()
	End
EndIf

SX3->(DbSetOrder(nSx3Ord))
DbSelectArea(cSvAlias)
Return lOK

Static Function PesqF3(cString,nPos)
Local cReturn := ""
Local i := 0, nAt

If !Empty(cString)
	While ( i <= nPos )
		i++
		nAt := At("+",cString)
		If ( nAt == 0 )
			cReturn := Trim(cString)
			cString := ""
		Else
			cReturn := Trim(Subs(cString,1,nAt-1))
			cString := Subs(cString,nAt+1)
		EndIf
		
		If i == nPos
			If cReturn == "XXX"
				cReturn := ""
			EndIf
			Exit
		EndIf
	End
EndIf
Return cReturn

Static Function PesqDetail(lDetail,oDlg,aScroll,oBigGet,nOrd)

lDetail := !lDetail
If ( lDetail )
	oBigGet:Hide()
	aScroll[nOrd]:Show()
	If oDlg <> NIL
		oDlg:ReadClientCoors(.T.)
		oDlg:Move(oDlg:nTop,oDlg:nLeft,498,250,,.T.)
	EndIf
Else
	aScroll[nOrd]:Hide()
	oBigGet:Show()
	If oDlg <> NIL
		oDlg:ReadClientCoors(.T.)
		oDlg:Move(oDlg:nTop,oDlg:nLeft,498,127,,.T.)
	EndIf
EndIf
Return lDetail
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ MoedFin   ³Autor  ³ Bruno Sobieski       ³ Data 17.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Retorna a quantidade de moedas usadas pelo modulo financeiro³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³                   											   	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MoedFin
Static  nCnt

If ( nCnt == Nil )
	nCnt := 1
	While SM2->(FieldPos("M2_MOEDA"+Alltrim(Str(nCnt)))) <> 0
		nCnt++
	EndDo
EndIf
Return( nCnt - 1)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ ap5TObtv()³Autor  ³ Marcelo Abe          ³ Data 16.08.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Funcao que transforma o File.AP5(Btrieve) para File.DDF.
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Programa chamado pelo menu do configurador
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³
±±³          ³
±±³          ³
±±³          ³
±±³          ³
±±³          ³
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³                   											   	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ap5TObtv()
Local aRet:={},i,cTodas := "",oDlg,oPath,cPath:=Space(120)
Local oTables,aTables:={},oPathTab,cPathTab:=SPACE(120),cDest:=SPACE(120)
Local oOk := LoadBitmap( GetResources(), "LBOK" )
Local oNo := LoadBitmap( GetResources(), "LBNO" )
Private cDir := ""

//Pego as tabelas contidas no File.AP5
aRet := BTVTables()
aSort(aRet)

DEFINE MSDIALOG oDlg TITLE STR0034 From 9,0 To 30,62  //"Gerar DDF Padrao""AgEndamento"
@ 0.5, 0.9  SAY STR0035 of oDlg   //"Informe o diretorio Default dos Arquivos(*.dat)"
@ 1.1, 0.9  MSGET oPath VAR cPath Picture "@!"  SIZE 150,10 OF oDlg
For i:=1 To Len(aRet)
	aadd(aTables,{.T.,aRet[i],""})
Next
oPath:bLostFocus := { || cPathTab:=Ap5ToDDFDir(aTables,cPath,oTables),oPathTab:Refresh() }
@ 2.5, 0.9  SAY STR0036 of oDlg   //"Escolha os Arquivos:"
@ 42,07 LISTBOX oTables FIELDS HEADER " ",STR0037;  //"Arquivo"
FIELDSIZES 14, 50 SIZE 70, 70 PIXEL OF oDlg
oTables:bChange := { || cPathTab:=Ap5ToDDFBO(oTables,aTables),oPathTab:Refresh() }
oTables:SetArray(aTables)
oTables:bLine := {|| {Iif(aTables[oTables:nAt,1],oOK,oNo),aTables[oTables:nAt,2]} }
oTables:bLDblClick := { |nRowPix, nColPix, nKeyFlags| If(oTables:nAtCol(nColPix)==1,(aTables[oTables:nAt,1] := !aTables[oTables:nAt,1],oTables:DrawSelect()),)}
oTables:lhScroll := .F.

@ 3.1, 11  SAY STR0038 of oDlg   //"Diretorio do Arquivo Selecionado"
@ 3.7, 11  MSGET oPathTab VAR cPathTab SIZE 100,10 Picture "@!" OF oDlg
oPathTab:bLostFocus := { || Ap5ToDDFTb(aTables,cPathTab,oTables) }

@ 9.0, 0.9  SAY STR0039 of oDlg   //"Diretorio da Geracao deste DDF(Abaixo do RootPath)"
@ 9.6, 0.9  MSGET oDest VAR cDest SIZE 150,10 Picture "@!" OF oDlg

DEFINE SBUTTON FROM 145,90 TYPE 1 ENABLE OF oDlg ACTION ap5toddfOK(aTables,cDest) //Iif((lInclui==.T. .or. lAltera==.T.),Grava(lInclui),Iif(lDeleta,Deleta(),oDlg:End()))
DEFINE SBUTTON FROM 145,120 TYPE 2 ENABLE OF oDlg ACTION (oDlg:End())

ACTIVATE MSDIALOG oDlg CENTERED
Return .T.

Static Function ap5toddfOK(aTables,cDest)
Local aRet1:={}
Local i
For i:=1 to Len(aTables)
	If aTables[i][1] = .T.
		aadd(aRet1,{aTables[i][2],aTables[i][3]})
	EndIf
Next
BTVCreateDDFs(aRet1,cDest)
MessageBox(STR0040,"AP5",0) //"DDF Gerado"
Return .T.

Static Function Ap5ToDDFDir(aTables,cPath,oTables)
Local i
If cDir <> cPath
	For i:=1 to Len(aTables)
		If aTables[i][3] = cDir
			aTables[i][3] := cPath
		EndIf
	Next
	cDir := cPath
EndIf
Return AP5TODDFBO(oTables,aTables)

Static Function AP5TODDFBO(oTables,aTables)
Return aTables[oTables:nAt,3]

Static Function Ap5ToDDFTb(aTables,cPathTab,oTables)
aTables[oTables:nAt,3] := cPathTab
Return .T.       

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ AtuSalDup()    ³Autor  ³ Gilson da Silva     ³ Data 09.04.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Funcao que grava os campos no SA1 para avaliaçao de credito      ±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AtuSalDup(cOper,nValor,nMoeda,cTipoDoc,nTaxa,dData)             ±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cOper = Operando para calcular os campos de avliaçao do credito  ±±
±±³          ³nValor = Valor do campo que será calculado                       ±±
±±³          ³nMoeda = Moeda Forte do Cliente                                  ±±
±±³          ³cTipoDoc = Tipo de Titulo(Docto)                                 ±±
±±³          ³nTaxa  = Taxa de conversão do Valor do campo para a Moeda Forte  ±±
±±³          ³dData  = Data de conversão do Valor do cmapo para a Moeda Forte  ±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³  Generico           										   	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AtuSalDup(cOper,nValor,nMoeda,cTipoDoc,nTaxa,dData)

Local cCampo,cCampo1
Local cTpNaoAtu   // Tipos que nao atualizam saldo algum no cadastro de clientes
Local cFilSF2 := xFilial("SF2")        
Local lE1MsFil := SE1->(FieldPos("E1_MSFIL") > 0)	
Local aArea    := SA1->(GetArea()) 					// Salva a area do SA1

nTaxa	:=  If(nTaxa	==	Nil,0,nTaxa)
nMoeda	:=	If(nMoeda	==	Nil,1,nMoeda)
dData	:=	If(dData	==	Nil,dDataBase,dData)
If !cOper $ "+-="
	MsgAlert(STR0044)  //"Operando incorreto, Verifique se é uma atribuição, soma ou subtração"
	Return
Endif

If cTiposLC == Nil
	cTiposLC := ""
	cTiposLC := GetSESTipos({ || ES_SALDUP == "2"},"1")
	nMCusto		:=	Val(GetMV("MV_MCUSTO"))
Endif

// Tipos que nao atualizam nenhum dos saldos
If cTpNaoAtu == Nil
	cTpNaoAtu := ""
	cTpNaoAtu := GetSESTipos({ || ES_SALDUP == "3"},"1")
Endif

If !(cTipoDoc $ cTpNaoAtu)
	If cTipoDoc $ cTiposLC
		cCampo	:=	"SA1->A1_SALFIN"
		cCampo1	:=	"SA1->A1_SALFINM"
	Else
		cCampo	:=	"SA1->A1_SALDUP"
		cCampo1	:=	"SA1->A1_SALDUPM"
	Endif
Else
	Return
Endif

//titulo do Sigaloja
If Upper(subs(SE1->E1_ORIGEM,1,3)) == "LOJ" .AND. SL1->L1_TIPO <> "P"
	If ALLTRIM( SE1->E1_TIPO)  $ "CC;VA;CO;CD;FI"		// Cartao Credito, Vales, Convenio, Cartao de Debito, Financiamento Proprio
		dbSelectArea( "SF2" )
		SF2->(dbSetOrder(1)) 
		cFilSF2 := If (lE1Msfil .and. !Empty(xFilial("SF2")),SE1->E1_MSFIL,xFilial("SF2"))
		DbSeek(cFilSF2+SE1->E1_NUM +SE1->E1_PREFIXO)
		dbSelectArea( "SA1" )
		MsSeek(xFilial("SA1")+ SF2->F2_CLIENTE+ SF2->F2_LOJA )
   Endif
Endif       

If SA1->(Eof())		// garantir que estah posicionado em algum registro valido
	RestArea(aArea)
	Return
Endif

nMoedaF		:= If(SA1->A1_MOEDALC > 0,SA1->A1_MOEDALC,nMCusto)

nValorMoe1	:= Round(xMoeda(nValor,nMoeda,1,dData,MsDecimais(1)+1,nTaxa),MsDecimais(1))
nValorMoeF  := Round(xMoeda(nValor,nMoeda,nMoedaF,dData,MsDecimais(nMoedaF)+1,nTaxa),MsDecimais(nMoedaF))

RecLock("SA1",.F.)
If cOper=="+"
	&cCampo. 	+= nValorMoe1
	&cCampo1. 	+= nValorMoeF
ElseIf cOper=="-"
	&cCampo. 	-= nValorMoe1
	&cCampo1. 	-= nValorMoeF
Elseif cOper="="
	&cCampo. 	:= nValorMoe1
	&cCampo1.	:= nValorMoeF
EndIf
MsUnlock()

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SAPVALID()ºAutor  ³Denis Martins       º Data ³  06/29/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida conversao de unidades de medidas.                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ X3_VALID do campo AP_PARA                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function SapValid()

Local aArea		:=GetArea()
Local lRet		:=.T.
Local nRec		:=SAP->(RecNo())

If M->AP_DE == M->AP_PARA
	MsgInfo(OemToAnsi(STR0045)) //"Unidades de medidas nao poderao ser iguais !" 
	lRet:=.F.
EndIf

If lRet
	If !empty(M->AP_PARA)
		If SAP->(DbSeek(xFilial("SAP")+M->AP_DE+M->AP_PARA))
			If Inclui .Or. nRec <> SAP->(RecNo())
				SAP->(DbGoTo(nRec))
				Help(" ",1,"JAGRAVADO")
				lRet:=.F.
			EndIf
		EndIf
	EndIf
Endif

SAP->(DbGoTo(nRec))
RestArea(aArea)

Return lRet


//------------Semaforo Pelo License Server
Static ;
Function GetLSNum(cAlias,cCpoSx8,cAliasSX8,nOrdem)
Local cRet, nRet

DEFAULT __SpecialKey := GetSrvProfString("SpecialKey", "")
DEFAULT __aKeys := {}
nOrdem := Iif(nOrdem == Nil,1,nOrdem)

If cAliasSX8 == Nil
	cAliasSx8  :=   PADR(xFilial(cAlias)+x2path(cAlias),50)
Else
	cAliasSx8  :=   Padr(cAliasSx8,50)
EndIf

cRet := LS_GetNum(__SpecialKey+cAliasSX8+cAlias)

If ( Empty(cRet) )
   cRet := CriaSXE(cAlias, cCpoSX8,cAliasSx8,nOrdem,.t.)
   nRet := LS_CreateNum(__SpecialKey+cAliasSx8+cAlias, cRet)
   IF nRet < 0 .and. nRet != -12    // Chave Duplicada eh -12
      UserException(" Error On LS_CreateNum : "+Str(nRet,4,0))
   Endif
   cRet := LS_GetNum(__SpecialKey+cAliasSX8+cAlias)
   IF Empty(cRet)
      UserException(" Error On GetLSNUM : Empty")
   Endif
EndIf

Aadd(__aKeys,{ __SpecialKey+cAliasSX8+cAlias,cret, cAlias,cCpoSX8})
__lSX8 := .t.



Return cRet

// ------------------------------------------------------

Static ;
Function RollbackLS()  
Local nLen, nRet

DEFAULT __aKeys := {}
DEFAULT nLen 	:= Len(__aKeys)

IF nLen > 0
   nRet := LS_RollBackNum(__aKeys[nLen,1], __aKeys[nLen,2]) 
   //    -11: cChave+ cValue não encontrada. 
   //    0: OK
   //   -1: No Connection (é melhor abortar ou vc trata no programa?)
   //   -6: Erro inesperado (é melhor abortar ou vc trata no programa?)
   //   (os 3 últimos códigos são iguais aos retornos do License Server)
   IF nRet < 0
      UserException(" Error On RollBackLS : "+Str(nRet,4,0))
   Endif
   __aKeys := aDel(__aKeys,nLen)
   __aKeys := aSize(__aKeys,nLen-1)
   __lSX8 := (Len(__aKeys) > 0)
Endif
Return Nil

// ------------------------------------------------------

Static ;
Function ConFirmLS(lPosConf)
Local cAlias := Alias()
Local nLen, nRet
Local cAliasSXE
Local cSeqSXE

DEFAULT lPosConf := .F.
DEFAULT __aKeys := {}

nLen 	:= Len(__aKeys)

IF nLen > 0
	If lPosConf
		If __aKeys[nLen,3]<> Nil .And. __aKeys[nLen,4] <> Nil .And. Select(cAlias) > 0 .And. (cAlias)->(FieldPos(__aKeys[nLen,4])) > 0
			cAliasSXE := cAlias
			cSeqSXE := (cAliasSXE)->(&(__aKeys[nLen,4]))
		Else
			lPosConf := .F.
		EndIf 
	EndIf
	If !lPosConf .Or. ( __aKeys[nLen,3] == cAliasSXE .And. __aKeys[nLen,2] == cSeqSXE )
	   nRet := LS_ConfirmNum(__aKeys[nLen,1], __aKeys[nLen,2])
	   //    -11: cChave+ cValue não encontrada. 
	   //    0: OK
	   //   -1: No Connection (é melhor abortar ou vc trata no programa?)
	   //   -6: Erro inesperado (é melhor abortar ou vc trata no programa?)
	   //   (os 3 últimos códigos são iguais aos retornos do License Server)
	   IF nRet < 0
	      UserException(" Error On ConfirmLS : "+Str(nRet,4,0))
	   Endif
	Else
	   nRet := LS_RollBackNum(__aKeys[nLen,1], __aKeys[nLen,2]) 
	   //    -11: cChave+ cValue não encontrada. 
	   //    0: OK
	   //   -1: No Connection (é melhor abortar ou vc trata no programa?)
	   //   -6: Erro inesperado (é melhor abortar ou vc trata no programa?)
	   //   (os 3 últimos códigos são iguais aos retornos do License Server)
	   IF nRet < 0
	      UserException(" Error On RollBackLS : "+Str(nRet,4,0))
	   Endif
	EndIf
   __aKeys := aDel(__aKeys,nLen)
   __aKeys := aSize(__aKeys,nLen-1)
   __lSX8 := (Len(__aKeys) > 0)
Endif
DbSelectArea(cAlias)
Return Nil                           

// ------------------------------------------------------

Static Function GetSX8Len()
Local nMax
DEFAULT __aKeys := {}
nMax := Max(Len(aSX8),Len(__aKeys))
Return(nMax)

// ------------------------------------------------------

Static Function GetLSKeys()
DEFAULT __aKeys := {}
Return __aKeys

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ParcImpost³ Autor ³ Claudio D. de Souza   ³ Data ³ 11/12/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calcula a parcela de titulos de impostos, IR, PIS, COFINS  ³±±
±±³          ³ e CSLL                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ParcImposto(cPrefixo,cNum,cTipoE2)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINANCEIRO/COMPRAS  												     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ParcImposto(cPrefixo,cNum,cTipoE2)
Local aArea	:= GetArea()
Local aAreaSE2 := SE2->(GetArea())
Local cParcela
Local cAlias 
Local aTamParc := TamSx3("E2_PARCELA")
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

Local cSavFilter // Declarar variavel para evitar problemas quando existir filtro 

If Select("__SE2") == 0
	dbSelectArea("SE2")
	cSavFilter := dbFilter()
	dbClearFilter()
	cAlias := "SE2"
Else
	cAlias := "__SE2"
EndIf
cParcela := STRZERO(1,aTamParc[1])
While ( .T. )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ VerIfica se ja' ha' titulo de IMPOSTO com esta numera‡„o ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea(cAlias)
	DbSetOrder(1)
	If (DbSeek(xFilial("SE2")+cPrefixo+cNum+cParcela+;
		Iif(cTipoE2 $ MVPAGANT+"#"+MV_CPNEG .And. !lPCCBaixa,MVTXA,MVTAXA)+PadR(GetMv("MV_UNIAO"),6)))
		cParcela := Soma1( cParcela,,.T.)
		Loop
	EndIf
	Exit
End

If cAlias=="SE2" .And. !Empty( cSavFilter ) 
	dbSelectArea("SE2")
	DbSetFilter({||&(cSavFilter)},cSavFilter)
EndIf

RestArea(aArea)
RestArea(aAreaSE2)
Return cParcela

Static Function HasCTKSXE()
Return .t.


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FGrvImpPcc³ Autor ³ Mauricio Pequim Junior³ Data ³ 18/10/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Efetua a gravacao dos titulos de impostos PIS, COFINS      ³±±
±±³          ³ e CSLL                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ GrvImpPcc(cPrefixo,cNum,cTipoE2)                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINANCEIRO/COMPRAS  												     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function FGrvImpPcc(nPis,nCofins,nCsll,nRegSe2,lInclusao,lRtPICFCS,cSeq,cOrigem,nMoeda,cGeraDirf,nIrrf,nIss,;
						  lRatImp,aRatSev,aRatSez)

Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

Local cFornUni	:= ""
Local	cLojaUni	:= ""
Local cPrefixo	:= ""
Local cNum		:= ""
Local cTipoE2	:= ""
Local cParcela,dEmissao,dVencto,dVencRea,dEmis1
Local cCodRetPis := ""
Local cCodRetCof := ""
Local cCodRetCsl := ""
Local cLojaImpos := PadR( "00", Len( SE2->E2_LOJA ) ) 

Local lIrfMp232 := !Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ) .and. SA2->A2_CALCIRF == "2" .and. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) )

Local	cCodRetIr := SE2->(If(FieldPos("E2_CODRET")>0,E2_CODRET,""))   

Local lCalcIssBx := !Empty( SE5->( FieldPos( "E5_VRETISS" ) ) ) .and. !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .and. ;
							!Empty( SE2->( FieldPos( "E2_TRETISS" ) ) ) .and. GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)

Local cMunIss    := GetMv("MV_MUNIC")

Local nDia := 0
Local nDiaUtil := 0
Local aTamParc := TamSx3("E2_PARCELA")

Local cForLojISS:= "" 
Local dVenISS   := CtoD("")
Local aFeriados:=RetFeriados()

Local lCodRtPCC := !Empty( SE2->( FieldPos( "E2_CODRPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_CODRCOF" ) ) ) .And. ;
				!Empty( SE2->( FieldPos( "E2_CODRCSL" ) ) ) 

DEFAULT cOrigem 	:= Space(8)
DEFAULT lRtPICFCS:= .T. 
DEFAULT nMoeda := 1
DEFAULT lInclusao := .T.
DEFAULT cGeraDirf := "1"
DEFAULT nIrrf := 0
DEFAULT nIss := 0
DEFAULT aRatSev := {}
DEFAULT aRatSez := {}

cForLojISS := Pad(cMunIss,Len(SA2->A2_COD))+cLojaImpos

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Transfere titulo de ISS para fornecedor de origem ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SE2->(FieldPos("E2_FORNISS")) > 0 .And. SE2->(FieldPos("E2_LOJAISS")) > 0
	If !Empty(SE2->E2_FORNISS) .And. !Empty(SE2->E2_LOJAISS) 
		cForLojISS := SE2->E2_FORNISS+SE2->E2_LOJAISS
	EndIf
Endif	

If SE2->(FieldPos("E2_VENCISS")) > 0
	If !Empty(SE2->E2_VENCISS)
		dVenISS := SE2->E2_VENCISS
	EndIf
EndIf


SE2->(dbGoto(nRegSe2))


If lPccBaixa
	// Caso nao exista os tres impostos, o codigo de retencao sera diferenciado
	// para cada imposto
	If	(nPis <= 0 .Or. nCofins <= 0 .Or. nCsll <= 0 )
		cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,"5979")
		cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,"5960")
		cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,"5987")				
	Else
		// Se os 3 impostos juntos for maior que a media de retencao, o codigo sera o mesmo
		// para os tres.
		If nPis+nCofins+nCsll > ((SuperGetMV("MV_VRETPIS")+SuperGetMV("MV_VRETCOF")+SuperGetMV("MV_VRETCSL")) / 3)
				If lIrfMp232 .And. !Empty(SE2->E2_CODRET)
					cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,SE2->E2_CODRET)
					cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,SE2->E2_CODRET)
					cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,SE2->E2_CODRET)	
				Else
					cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,"5952")
					cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,"5952")
					cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,"5952")	
				Endif
		Endif
	Endif
Else
	// Caso nao exista os tres impostos, o codigo de retencao sera diferenciado
	// para cada imposto
	If	(SE2->E2_PIS <= 0 .Or. SE2->E2_COFINS <= 0 .Or. SE2->E2_CSLL <= 0 )
		cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,"5979")
		cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,"5960")
		cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,"5987")	
	Else
		// Se os 3 impostos juntos for maior que a media de retencao, o codigo sera o mesmo
		// para os tres.
		If SE2->(E2_PIS+E2_COFINS+E2_CSLL) > ((SuperGetMV("MV_VRETPIS")+SuperGetMV("MV_VRETCOF")+SuperGetMV("MV_VRETCSL")) / 3)
			cCodRetPis := If (lCodRtPCC .and. !Empty(SE2->E2_CODRPIS),SE2->E2_CODRPIS,"5952")
			cCodRetCof := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCOF),SE2->E2_CODRCOF,"5952")
			cCodRetCsl := If (lCodRtPCC .and. !Empty(SE2->E2_CODRCSL),SE2->E2_CODRCSL,"5952")	
		Endif
	Endif
Endif

If !( SE2->E2_TIPO $ MVABATIM )
	If cPaisLoc=="BRA".And.;
		(!SE2->E2_NATUREZ $ SuperGetMV("MV_CSLL")	 .And. ;
		!SE2->E2_NATUREZ $ SuperGetMV("MV_PISNAT")  	 .And. ;
		!SE2->E2_NATUREZ $ SuperGetMV("MV_COFINS"))
      
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria o Fornecedor, caso nao exista 		  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SA2")
		MsSeek(xFilial("SA2")+SuperGetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(SuperGetMV("MV_UNIAO")))+cLojaImpos)
		If ( EOF() )
			Reclock("SA2",.T.)
			SA2->A2_FILIAL := cFilial
			SA2->A2_COD 	:= SuperGetMV("MV_UNIAO")
			SA2->A2_LOJA	:= cLojaImpos
			SA2->A2_NOME	:= "UNIAO"
			SA2->A2_NREDUZ := "UNIAO"
			SA2->A2_BAIRRO := "."
			SA2->A2_MUN 	:= "."
			SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
			SA2->A2_End 	  := "."
			SA2->A2_TIPO	  := "J"
			MsUnlock()
			FKCOMMIT()
		EndIf     
		
		cFornUni := SA2->A2_COD
		cLojaUni := SA2->A2_LOJA 
		cPrefixo  := SE2->E2_PREFIXO
		cNum	  := SE2->E2_NUM
		cTipoE2   := SE2->E2_TIPO
		
		DbSelectArea( "SE2" )
		DbGoTo( nRegSe2 )

		If lInclusao
			// Se existirem os 3 impostos e o valor dos 3 for menor que a media dos valores
			// minimos de retencao, zera o imposto gerado.
			If SE2->E2_PIS > 0 .And. SE2->E2_COFINS > 0 .And. SE2->E2_CSLL > 0 .And.;
				SE2->(E2_PIS+E2_COFINS+E2_CSLL) <= ((SuperGetMV("MV_VRETPIS")+SuperGetMV("MV_VRETCOF")+SuperGetMV("MV_VRETCSL")) / 3)
				DbSelectArea("SE2")
				RecLock("SE2",.F.)
				SE2->E2_VALOR	+= SE2->E2_PIS
				SE2->E2_SALDO	+= SE2->E2_PIS
				SE2->E2_PIS	:= 0
				SE2->E2_VALOR	+= SE2->E2_COFINS
				SE2->E2_SALDO	+= SE2->E2_COFINS
				SE2->E2_COFINS	:= 0
				SE2->E2_VALOR	+= SE2->E2_CSLL
				SE2->E2_SALDO	+= SE2->E2_CSLL
				SE2->E2_VLCRUZ	:= Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
				SE2->E2_CSLL	:= 0
			ElseIf (SE2->E2_PIS <= 0 .Or. SE2->E2_COFINS <= 0 .Or. SE2->E2_CSLL <= 0)
				// Caso nao exista um dos impostos, o codigo de retencao e separado para
				//	cada um deles, entao zera o imposto caso ele seja menor que o valor minimo.
				If ( SE2->E2_PIS <= GetMv("MV_VRETPIS") )
					DbSelectArea("SE2")
					RecLock("SE2",.F.)
					SE2->E2_VALOR	+= SE2->E2_PIS
					SE2->E2_SALDO	+= SE2->E2_PIS
					SE2->E2_VLCRUZ := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
					SE2->E2_PIS	:= 0
				EndIf
				If ( SE2->E2_COFINS <= GetMv("MV_VRETCOF") )
					DbSelectArea("SE2")
					RecLock("SE2",.F.)
					SE2->E2_VALOR	+= SE2->E2_COFINS
					SE2->E2_SALDO	+= SE2->E2_COFINS
					SE2->E2_VLCRUZ := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
					SE2->E2_COFINS	:= 0
				EndIf
				If ( SE2->E2_CSLL <= GetMv("MV_VRETCSL") )
					DbSelectArea("SE2")
					RecLock("SE2",.F.)
					SE2->E2_VALOR	+= SE2->E2_CSLL
					SE2->E2_SALDO	+= SE2->E2_CSLL
					SE2->E2_VLCRUZ := Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,SE2->E2_EMISSAO,MsDecimais(1)+1,SE2->E2_TXMOEDA),MsDecimais(1)+1),MsDecimais(1))
					SE2->E2_CSLL	:= 0
				EndIf
			EndIf
		Endif
		cParcSe2 := SE2->E2_PARCELA
		dEmissao := SE2->E2_EMISSAO
		dEmis1	:= SE2->E2_EMIS1
		dVencto	:= SE2->E2_VENCTO
		dVctoReal:= SE2->E2_VENCREA
		cLa		:= SE2->E2_LA
	
		//Se for tratado o imposto pela baixa
		If lPccBaixa .and. !lInclusao
			dEmissao	:= dBaixa
			dEmis1	:= dDataBase
			dVctoReal := dBaixa
		Endif

		//Verifica se aglutina os impostos em apenas um titulo	
		If lRtPICFCS .and. SuperGetMv("MV_AG10925",.F.,"2") == "1" .and. cCodRetPis == "5952"
			nPis += nCofins + nCsll
			nCsll := 0
			nCofins := 0
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gera titulo de IRRF 							  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nIrrf > 0 ) .and. lPccBaixa .and. lIrfMP232 .and. lRtPICFCS 
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria o Fornecedor, caso nao exista 		  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SA2")
			MsSeek(cFilial+GetMV("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMV("MV_UNIAO")))+cLojaImpos)
			If ( EOF() )
				Reclock("SA2",.T.)
				SA2->A2_FILIAL := cFilial
				SA2->A2_COD 	:= GetMV("MV_UNIAO")
				SA2->A2_LOJA	:= cLojaImpos
				SA2->A2_NOME	:= "UNIAO"
				SA2->A2_NREDUZ := "UNIAO"
				SA2->A2_BAIRRO := "."
				SA2->A2_MUN 	:= "."
				SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
				SA2->A2_End 	:= "."
				SA2->A2_TIPO	:= "J"
				MsUnlock()
				FKCOMMIT()
			EndIf
	
			cNatureza		:= &(GetMv("MV_IRF"))
			cNatureza		:= cNatureza+Space(10-Len(cNatureza))
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria a natureza IRF caso nao exista		   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SED")
			If ( !DbSeek(cFilial+cNatureza) )
				RecLock("SED",.T.)
				SED->ED_FILIAL  := cFilial
				SED->ED_CODIGO  := cNatureza
				SED->ED_CALCIRF := "N"
				SED->ED_CALCISS := "N"
				SED->ED_CALCINS := "N"
				SED->ED_CALCCSL := "N"
				SED->ED_CALCCOF := "N"
				SED->ED_CALCPIS := "N"
				SED->ED_DESCRIC := "IMPOSTO RENDA RETIDO NA FONTE"
				MsUnlock()
				FKCOMMIT()
			EndIf
			cParcela := ParcImposto(cPrefixo,cNum,cTipoE2)
			dVencRea := F050VIMP("PIS",dEmissao,dEmis1,dVctoReal) // Calcula o vencto do imposto			dVencRea := dNextDay
			RecLock("SE2",.T.)
			SE2->E2_FILIAL  := cFilial
			SE2->E2_PREFIXO := cPrefixo
			SE2->E2_NUM 	 := cNum
			SE2->E2_PARCELA := cParcela
			SE2->E2_TIPO    := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
			SE2->E2_EMISSAO := dEmissao
			SE2->E2_VALOR	 := nIrrf
			SE2->E2_VENCREA := dVencrea
			SE2->E2_SALDO	 := nIrrf
			SE2->E2_VENCTO  := dVencRea
			SE2->E2_VENCORI := dVencRea
			SE2->E2_MOEDA	 := nMoeda
			SE2->E2_EMIS1	 := dDataBase
			SE2->E2_FORNECE := GetMV("MV_UNIAO")
			SE2->E2_VLCRUZ  := Round( SE2->E2_VALOR, MsDecimais(1) )
			SE2->E2_LOJA	 := SA2->A2_LOJA
			SE2->E2_NOMFOR  := SA2->A2_NREDUZ
			SE2->E2_ORIGEM  := UPPER(cOrigem)
			SE2->E2_NATUREZ := cNatureza
			SE2->E2_LA      := cLA			// Herda do principal
			If cPaisLoc == "BRA"
				SE2->E2_DIRF    := cGeraDirf
				SE2->E2_CODRET  := cCodRetIr
			Endif	
			If lPccBaixa
				SE2->E2_SEQBX  := cSeq				
			Endif
			If lRatImp
				SE2->E2_MULTNAT  := "1"
			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava a filial de origem quando existir o campo no SE2            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE2->(FieldPos("E2_FILORIG")) > 0
				SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
			EndIf
			MsUnlock()
			FKCOMMIT()		
	
			If ExistBlock("F050IRF")
				Execblock("F050IRF",.F.,.F.,nRegSE2)
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava lançamento do imposto IRRF no SIGAPCO se a rotina foi chamada do contas a pagar ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If "FINA050" $ Upper(cOrigem) 
				PCODetLan("000002","06","FINA050")
			ElseIf Upper(cOrigem) == "FINA240"
    			PCODetLan("000023","06",Upper(cOrigem))
			EndIf	
			// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
			If lRatImp
				// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
				GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) 
			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava parcela do IRF na parcela do titulo  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea( "SE2" )
			DbGoTo( nRegSe2 )
			Reclock( "SE2" , .F. )
			SE2->E2_PARCIR := cParcela
			If cPaisLoc=="BRA"
				SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de 
												 // imposto var para DIRF
			Endif											 
			MsUnlock() 

		EndIf
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gera titulo de PIS                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPis > 0 .And. lRtPICFCS 
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria a natureza PIS caso nao exista        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SED")
			cNatureza := Pad(SuperGetMV("MV_PISNAT"),10)
			If ( ! DbSeek( cFilial + cNatureza ) )
				RecLock("SED",.T.)
				SED->ED_FILIAL  := cFilial
				SED->ED_CODIGO  := cNatureza
				SED->ED_CALCIRF := "N"
				SED->ED_CALCISS := "N"
				SED->ED_CALCINS := "N"
				SED->ED_CALCCSL := "N"
				SED->ED_CALCCOF := "N"
				SED->ED_CALCPIS := "N"
				SED->ED_DESCRIC := "PIS"
				MsUnlock()
				FKCOMMIT()
			EndIf
			dVencRea := F050VIMP("PIS",dEmissao,dEmis1,dVctoReal) // Calcula o vencto do imposto
			cParcela := ParcImposto(cPrefixo,cNum,cTipoE2)
			RecLock("SE2",.T.)
			SE2->E2_FILIAL  := cFilial
			SE2->E2_PREFIXO := cPrefixo
			SE2->E2_NUM     := cNum
			SE2->E2_PARCELA := cParcela
			SE2->E2_TIPO    := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
			SE2->E2_EMISSAO := dEmissao
			SE2->E2_EMIS1   := dDataBase
			SE2->E2_VALOR   := nPis
			SE2->E2_VENCTO  := dVencRea
			SE2->E2_SALDO   := nPis
			SE2->E2_VENCREA := dVencRea
			SE2->E2_VENCORI := dVencRea
			SE2->E2_FORNECE := cFornUni
			SE2->E2_LOJA    := cLojaUni
			SE2->E2_NOMFOR  := SA2->A2_NREDUZ
			SE2->E2_MOEDA   := nMoeda
			SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
			SE2->E2_ORIGEM  := Upper(cOrigem)
			SE2->E2_NATUREZ := cNatureza
			SE2->E2_LA      := cLa
			If cPaisLoc == "BRA"
				SE2->E2_DIRF    := cGeraDirf
				SE2->E2_CODRET  := cCodRetPis
			Endif	
			If lPccBaixa
				SE2->E2_SEQBX  := cSeq				
			Endif
			If lRatImp
				SE2->E2_MULTNAT  := "1"
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava a filial de origem quando existir o campo no SE2            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE2->(FieldPos("E2_FILORIG")) > 0
				SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
			EndIf
			MsUnlock()
			FKCOMMIT()

			If ExistBlock("F050PIS")
				Execblock("F050PIS",.F.,.F.,nRegSE2)
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava lançamento do imposto PIS no SIGAPCO se a rotina foi chamada do contas a pagar ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If "FINA050" $ Upper(cOrigem)
				PCODetLan("000002","10","FINA050")
			ElseIf Upper(cOrigem) == "FINA240"
    			PCODetLan("000023","03",Upper(cOrigem))
			EndIf	
			// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
			If lRatImp
				// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
				GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) 
			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava parcela do PIS na parcela do titulo  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea( "SE2" )
			DbGoTo( nRegSe2 )
			Reclock( "SE2" , .F. )
			SE2->E2_PARCPIS := cParcela
			If cPaisLoc=="BRA"
				SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de 
												 // imposto var para DIRF
			Endif													 
			MsUnlock()

		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gera titulo de COFINS                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nCofins > 0 .And. lRtPICFCS 
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria a natureza COFINS caso nao exista     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SED")
			cNatureza := Pad(SuperGetMV("MV_COFINS"),10)
			If ( ! DbSeek( cFilial + cNatureza ) )
				RecLock("SED",.T.)
				SED->ED_FILIAL  := xFilial()
				SED->ED_CODIGO  := cNatureza
				SED->ED_CALCIRF := "N"
				SED->ED_CALCISS := "N"
				SED->ED_CALCINS := "N"
				SED->ED_CALCCSL := "N"
				SED->ED_CALCCOF := "N"
				SED->ED_CALCPIS := "N"
				SED->ED_DESCRIC := "COFINS"
				MsUnlock()
				FKCOMMIT()
			EndIf
			dVencRea := F050VIMP("COFINS",dEmissao,dEmis1,dVctoReal) // Calcula o vencto do imposto
			cParcela := ParcImposto(cPrefixo,cNum,cTipoE2)
			RecLock("SE2",.T.)
			SE2->E2_FILIAL  := cFilial
			SE2->E2_PREFIXO := cPrefixo
			SE2->E2_NUM     := cNum
			SE2->E2_PARCELA := cParcela
			SE2->E2_TIPO    := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
			SE2->E2_EMISSAO := dEmissao
			SE2->E2_EMIS1   := dDataBase
			SE2->E2_VALOR   := nCofins
			SE2->E2_VENCTO  := dVencRea
			SE2->E2_SALDO   := nCofins
			SE2->E2_VENCREA := dVencRea
			SE2->E2_VENCORI := dVencRea
			SE2->E2_FORNECE := cFornUni
			SE2->E2_LOJA    := cLojaUni
			SE2->E2_NOMFOR  := SA2->A2_NREDUZ
			SE2->E2_MOEDA   := nMoeda
			SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
			SE2->E2_ORIGEM  := Upper(cOrigem)
			SE2->E2_NATUREZ := cNatureza
			SE2->E2_LA      := cLa
			If cPaisLoc == "BRA"
				SE2->E2_DIRF    := cGeraDirf
				SE2->E2_CODRET  := cCodRetCof
			Endif	
			If lPccBaixa
				SE2->E2_SEQBX  := cSeq				
			Endif
			If lRatImp
				SE2->E2_MULTNAT  := "1"
			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava a filial de origem quando existir o campo no SE2            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE2->(FieldPos("E2_FILORIG")) > 0
				SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
			EndIf
			MsUnlock()
			FKCOMMIT()

			If ExistBlock("F050COF")
				Execblock("F050COF",.F.,.F.,nRegSE2)
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava lançamento do imposto COFINS no SIGAPCO se a rotina foi chamada do contas a pagar ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If "FINA050" $ Upper(cOrigem)
				PCODetLan("000002","11","FINA050")
			ElseIf Upper(cOrigem) == "FINA240"
    			PCODetLan("000023","04",Upper(cOrigem))
			EndIf
			// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
			If lRatImp
				// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
				GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) 
			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava parcela do COFINS na parcela do titulo ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea( "SE2" )
			DbGoTo( nRegSe2 )
			Reclock( "SE2" , .F. )
			SE2->E2_PARCCOF := cParcela
			If cPaisLoc=="BRA"
				SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de 
										 // imposto var para DIRF
			Endif													 
			MsUnlock()                
			
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gera titulo de CSLL                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nCsll > 0 .And. lRtPICFCS 
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria a natureza CSLL caso nao exista       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SED")
			cNatureza  := Pad(SuperGetMV("MV_CSLL"),10)
			If ( ! DbSeek( cFilial + cNatureza ) )
				RecLock("SED",.T.)
				SED->ED_FILIAL  := cFilial
				SED->ED_CODIGO  := cNatureza
				SED->ED_CALCIRF := "N"
				SED->ED_CALCISS := "N"
				SED->ED_CALCINS := "N"
				SED->ED_CALCCSL := "N"
				SED->ED_CALCCOF := "N"
				SED->ED_CALCPIS := "N"
				SED->ED_DESCRIC := "CONTRIB.S/LUCRO LIQUIDO"
				MsUnlock()
				FKCOMMIT()
			EndIf
			dVencRea := F050VIMP("CSLL",dEmissao,dEmis1,dVctoReal) // Calcula o vencto do imposto
			cParcela := ParcImposto(cPrefixo,cNum,cTipoE2)
			RecLock("SE2",.T.)
			SE2->E2_FILIAL  := cFilial
			SE2->E2_PREFIXO := cPrefixo
			SE2->E2_NUM     := cNum
			SE2->E2_PARCELA := cParcela
			SE2->E2_TIPO    := Iif(cTipoE2 $ MVPAGANT+"/"+MV_CPNEG  .And. !lPCCBaixa,MVTXA,MVTAXA)
			SE2->E2_EMISSAO := dEmissao
			SE2->E2_EMIS1   := dDataBase
			SE2->E2_VALOR   := nCsll
			SE2->E2_VENCTO  := dVencRea
			SE2->E2_SALDO   := nCsll
			SE2->E2_VENCREA := dVencRea
			SE2->E2_VENCORI := dVencRea
			SE2->E2_FORNECE := cFornUni
			SE2->E2_LOJA    := cLojaUni
			SE2->E2_NOMFOR  := SA2->A2_NREDUZ
			SE2->E2_MOEDA   := nMoeda
			SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
			SE2->E2_ORIGEM  := Upper(cOrigem)
			SE2->E2_NATUREZ := cNatureza
			SE2->E2_LA      := cLa
			If cPaisLoc == "BRA"
				SE2->E2_DIRF    := cGeraDirf
				SE2->E2_CODRET  := cCodRetCsl
			Endif	
			If lPccBaixa
				SE2->E2_SEQBX  := cSeq				
			Endif
			If lRatImp
				SE2->E2_MULTNAT  := "1"
			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava a filial de origem quando existir o campo no SE2            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE2->(FieldPos("E2_FILORIG")) > 0
				SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
			EndIf
			MsUnlock()
			FKCOMMIT()

			If ExistBlock("F050CSL")
				Execblock("F050CSL",.F.,.F.,nRegSE2)
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava lançamento do imposto CSLL no SIGAPCO se a rotina foi chamada do contas a pagar ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If "FINA050" $ Upper(cOrigem)
				PCODetLan("000002","12","FINA050")
			ElseIf Upper(cOrigem) == "FINA240"
    			PCODetLan("000023","05",Upper(cOrigem))
			EndIf
			// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
			If lRatImp
				// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
				GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) 
			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava parcela do CSLL na parcela do titulo   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea( "SE2" )
			DbGoTo( nRegSe2 )
			Reclock( "SE2" , .F. )
			SE2->E2_PARCSLL := cParcela
			If cPaisLoc=="BRA"
				SE2->E2_DIRF    := "2"	 // Desmarca titulo principal, pois apenas o titulo de 
												 // imposto var para DIRF
			Endif													 
			MsUnlock()                

		EndIf  // cPaisLoc
	EndIf
EndIf              

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera titulo de ISS - Baixa					  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nIss > 0 ) .and. lCalcIssBx   

	DbSelectArea( "SE2" )
	DbGoTo( nRegSe2 )

	DbSelectArea("SA2")
	DbSetOrder(1)
	DbSeek(xFilial(SE2->E2_FORNECE+SE2->E2_LOJA))
	If SA2->(FieldPos("A2_MUNIC")) > 0 .And. !Empty(SA2->A2_MUNIC)
	   cMunISS := SA2->A2_MUNIC
	Else
   	cMunIss := SuperGetMV("MV_MUNIC")
	EndIf

	DbSelectArea( "SE2" )

	cParcSe2 := SE2->E2_PARCELA
	dEmissao := dBaixa
	dEmis1	:= dBaixa
	dVencto	:= dBaixa
	dVctoReal:= dBaixa
	cLa		:= SE2->E2_LA

	DbSelectArea("SA2")
	DbSeek(cFilial+cMunIss+Space(Len(A2_COD)-Len(cMunIss))+"00")
	If ( EOF() )
		Reclock("SA2",.T.)
		SA2->A2_FILIAL := cFilial
		SA2->A2_COD 	:= cMunIss
		SA2->A2_LOJA	:= "00"
		SA2->A2_NOME	:= "MUNICIPIO"
		SA2->A2_NREDUZ := "MUNICIPIO"
		SA2->A2_BAIRRO := "."
		SA2->A2_MUN 	:= "."
		SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
		SA2->A2_End 	:= "."
		MsUnlock()
		FKCOMMIT()
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria a natureza ISS caso nao exista		  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNatureza	:= &(SuperGetMV("MV_ISS"))
	cNatureza	:= cNatureza+Space(10-Len(cNatureza))
	DbSelectArea("SED")
	If ( ! DbSeek( cFilial + cNatureza ) )
		RecLock("SED",.T.)
		SED->ED_FILIAL  := cFilial
		SED->ED_CODIGO  := cNatureza
		SED->ED_CALCIRF := "N"
		SED->ED_CALCISS := "N"
		SED->ED_CALCINS := "N"
		SED->ED_CALCCSL := "N"
		SED->ED_CALCCOF := "N"
		SED->ED_CALCPIS := "N"
		SED->ED_DESCRIC := "IMPOSTO SOBRE SERVICOS"
		MsUnlock()
		FKCOMMIT()
	EndIf

	cParcela := STRZERO(1,aTamParc[1])
	While ( .T. )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ VerIfica se ja' ha' titulo de ISS com esta numera‡„o ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SE2")
		DbSetOrder(1)			
		If (DbSeek(cFilial+cPrefixo+cNum+cParcela+"ISS"+cForLojISS))
			cParcela := Soma1( cParcela,,.t.)
			Loop
		EndIf
		Exit
	End
	If Empty(dVenISS)
		Do Case
			Case GetNewPar("MV_VENCISS","E")=="E"
				dVenISS := dEmissao
				dVenISS += 28
				If ( Month(dVenISS) == Month(dEmissao) )
					dVenISS := dVenISS+28
				EndIf
				nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
				dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
			Case GetNewPar("MV_VENCISS","E")=="Q" //Ultimo dia util da quinzena subsequente a dEmissao
				If Day(dEmissao) <= 15
					dVenISS	:= LastDay(dEmissao)
					dVenISS := DataValida(dVenISS,.F.)
				Else
					dVenISS := DataValida((LastDay(dEmissao)+1)+14,.F.)
				EndIf
			Case GetNewPar("MV_VENCISS","E")=="U" //Ultimo dia util do mes subsequente da dEmissao
				dVenISS := DataValida(LastDay(LastDay(dEmissao)+1),.F.)
			Case GetNewPar("MV_VENCISS","E")=="D"
				dVenISS := (LastDay(dEmissao)+1)
				nDiaUtil:= SuperGetMv("MV_DIAISS")
				For nDia := 1 To nDiaUtil-1
					If !(dVenISS == DataValida(dVenISS,.T.))
						nDia-=1
					EndIf
					dVenISS+=1
				Next nDia
			Case GetNewPar("MV_VENCISS","E")=="F" //Qtd de dia do parametro MV_DIAISS apos o fechamento da quinzena.
				If Day(dEmissao) <= 15
					dVenISS := CtoD("15"+SUBSTR(DtoC(dEmissao),3,Len(DtoC(dEmissao))))+SuperGetMv("MV_DIAISS")
				Else
					dVenISS := LastDay(dEmissao)+SuperGetMv("MV_DIAISS")
				EndIf
			OtherWise
				dVenISS := dVencto
				dVenISS += 28
				If ( Month(dVenISS) == Month(dEmissao) )
					dVenISS := dVenISS+28
				EndIf
				nTamData := Iif(Len(Dtoc(dVenISS)) == 10, 7, 5)
				dVenISS	:= Ctod(StrZero(SuperGetMv("MV_DIAISS"),2)+"/"+Subs(Dtoc(dVenISS),4,nTamData))
		EndCase
	EndIf

	//Caso a data de vencimento seja um feriado, sabado ou domingo, retoage-se ao primeiro dia util
	//ISS - Manaus - Fundamento: Art. 2º, II e III do Decreto nº 8.248/2006.
	While .T.
		If Ascan(aFeriados,Dtos(dVenIss)) <> 0 .or. Dow(dVenIss) == 1 .or. Dow(dVenIss) == 7
		   dVenIss--
		Else
			Exit
		EndIf     
	EndDo

	RecLock("SE2",.T.)
	SE2->E2_FILIAL  := cFilial
	SE2->E2_PREFIXO := cPrefixo
	SE2->E2_NUM 	 := cNum
	SE2->E2_PARCELA := cParcela
	SE2->E2_TIPO	 := MVISS
	SE2->E2_EMISSAO := dEmissao
	SE2->E2_EMIS1	 := dDataBase
	SE2->E2_VALOR	 := nIss
	SE2->E2_VENCTO  := dVenISS
	SE2->E2_SALDO	 := nIss
	SE2->E2_VENCREA := dVenISS
	SE2->E2_VENCORI := dVenISS
	SE2->E2_FORNECE := Left(cForLojISS,Len(SE2->E2_FORNECE))
	SE2->E2_LOJA    := Right(cForLojISS,Len(SE2->E2_LOJA))
	SE2->E2_NOMFOR  := SA2->A2_NREDUZ
	SE2->E2_MOEDA	 := nMoeda
	SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,1,SE2->E2_EMISSAO,MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
	SE2->E2_ORIGEM  := cOrigem
	SE2->E2_NATUREZ := cNatureza
	SE2->E2_LA      := cLA			// Herda do principal
	SE2->E2_SEQBX	 := cSeq
	If lRatImp
		SE2->E2_MULTNAT  := "1"
	Endif	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava a filial de origem quando existir o campo no SE2            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SE2->(FieldPos("E2_FILORIG")) > 0
		SE2->E2_FILORIG := CriaVar("E2_FILORIG",.T.)	
	EndIf
	MsUnlock()
	FKCOMMIT()		

	If ExistBlock("F050ISS")
		Execblock("F050ISS",.F.,.F.,nRegSE2)
	EndIf
	// Se rateia os impostos, grava o rateio multipla natureza/centro de custo
	If lRatImp
		// Grava SEV e SEZ dos impostos, baseado nos percentuais do rateio do titulo principal
		GrvSevSezImp(aRatSev,aRatSez,SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR) 
	Endif	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava parcela do IRF na parcela do titulo  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea( "SE2" )
	DbGoTo( nRegSe2 )
	Reclock( "SE2" , .F. )
	SE2->E2_PARCISS := cParcela
	MsUnlock()            

EndIf


Return
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³GrvSevSezImp³ Autor ³ Claudio Donizete Souza³ Data ³ 15/03/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Efetua a gravacao das multiplas naturezas/centro de custo    ³±±
±±³          ³ dos titulos de impostos												    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³GrvSevSezImp(aRatSev,aRatSez,cParcela,cTipo,cFornece,cLoja,   ³±±
±±³          ³         		nValor)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINANCEIRO/COMPRAS  												       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GrvSevSezImp(aRatSev,aRatSez,cParcela, cTipo, cFornece, cLoja, nValor)
Local nX
Local nY
Local nLenSev := Len(aRatSev)
Local nLenSez := Len(aRatSez)
Local aArea := GetArea()
Local aAreaSev := SEV->(GetArea())
Local aAreaSez := SEZ->(GetArea())
Local nPosPrefixo 
Local nPosNum		
Local nPosNatureza
Local nPosPerc		
Local nPosCCusto	

SEV->(DbSetOrder(1))
SEZ->(DbSetOrder(1))

For nX := 1 To nLenSev
	nPosPrefixo := Ascan(aRatSev[1],{|e| Alltrim(e[1]) == "EV_PREFIXO" } )
	nPosNum		:= Ascan(aRatSev[1],{|e| Alltrim(e[1]) == "EV_NUM" } )
	nPosNatureza:= Ascan(aRatSev[1],{|e| Alltrim(e[1]) == "EV_NATUREZ" } )
	nPosPerc		:= Ascan(aRatSev[1],{|e| Alltrim(e[1]) == "EV_PERC" } )
	If !SEV->(MsSeek(xFilial("SEV")+aRatSev[nX][nPosPrefixo][2]+aRatSev[nX][nPosNum][2]+cParcela+cTipo+cFornece+cLoja+aRatSev[nX][nPosNatureza][2]))
		SEV->(RecLock("SEV", .T.))
		Aeval(aRatSev[nX], {|e| SEV->(FieldPut(FieldPos(e[1]),e[2])) })  // Grava os campos comuns ao rateio do titulo principal
		// Altera os campos que nao sao comuns
		SEV->EV_PARCELA	:= cParcela
		SEV->EV_CLIFOR		:= cFornece
		SEV->EV_LOJA		:= cLoja
		SEV->EV_TIPO		:= cTipo
		SEV->EV_VALOR		:= nValor * aRatSev[nX][nPosPerc][2]	// Proporcionaliza o valor do impostos pelo percentual rateado
		SEV->EV_RECPAG		:= "P" // Grava a Carteira
		SEV->(MsUnlock())
	Endif
Next
For nY := 1 To nLenSez
	nPosPrefixo := Ascan(aRatSez[1],{|e| e[1] == "EZ_PREFIXO" } )
	nPosNum		:= Ascan(aRatSez[1],{|e| e[1] == "EZ_NUM" } )
	nPosNatureza:= Ascan(aRatSez[1],{|e| e[1] == "EZ_NATUREZ" } )
	nPosPerc		:= Ascan(aRatSez[1],{|e| e[1] == "EZ_PERC" } )
	nPosCcusto	:= Ascan(aRatSez[1],{|e| e[1] == "EZ_CCUSTO" } )
	If !SEZ->(MsSeek(xFilial("SEZ")+aRatSez[nY][nPosPrefixo][2]+aRatSez[nY][nPosNum][2]+cParcela+cTipo+cFornece+cLoja+aRatSez[nY][nPosNatureza][2]+aRatSez[nY][nPosCCusto][2]))
		// Posiciona no SEV para obter o valor do imposto rateado por centro de custo
		SEV->(MsSeek(xFilial("SEV")+aRatSez[nY][nPosPrefixo][2]+aRatSez[nY][nPosNum][2]+cParcela+cTipo+cFornece+cLoja+aRatSez[nY][nPosNatureza][2]))
		SEZ->(RecLock("SEZ", .T.))
		Aeval(aRatSez[nY], {|e| SEZ->(FieldPut(FieldPos(e[1]),e[2])) })  // Grava os campos comuns ao rateio do titulo principal
		// Altera os campos que nao sao comuns
		SEZ->EZ_PARCELA	:= cParcela
		SEZ->EZ_CLIFOR		:= cFornece
		SEZ->EZ_LOJA		:= cLoja
		SEZ->EZ_TIPO		:= cTipo
		SEZ->EZ_VALOR		:= SEV->EV_VALOR * aRatSez[nY][nPosPerc][2]
		SEZ->EZ_RECPAG		:= "P"  // Grava a Carteira
		SEV->(MsUnlock())
	Endif	
Next
SEV->(RestArea(aAreaSev))
SEZ->(RestArea(aAreaSez))
RestArea(aArea)
Return Nil
