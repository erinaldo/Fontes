#INCLUDE "FINA080.CH"
#INCLUDE "FWMVCDEF.CH"           
#INCLUDE "FWADAPTEREAI.CH" 

STATIC lFa080Bco
Static lFWCodFil := FindFunction("FWCodFil")
STATIC lNewIrBx	 := (FindFunction("FCALCIRBX") .AND. FindFunction("FGRVSFQIR"))
STATIC nValMax	 := 0
Static lIsIssBx := FindFunction("IsIssBx") 
Static lIsEmpPub :=  FindFunction("IsEmpPub")
Static dLastPcc  := CTOD("22/06/2015")
Static lCheck_V	:= .F.
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ FINA080	  ³ Autor ³ Wagner Xavier       ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa de Baixa de Titulos a Pagar						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±            
±±³Sintaxe   ³ FINA080()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico							 						  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FINA080(xAutoCab,nOpc,lNoMBrowse,nOpbaixa,lExibeLanc,lOnline)             

#INCLUDE "PROTHEUS.CH"
#INCLUDE "SET.CH"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis 											 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lDigita,lAglut
Local bBlock
Local aHelpPor 	:= {}
Local aHelpEng 	:= {}
Local aHelpSpa 	:= {}
Local cFonte_V := ""
Private lF080Auto :=(xAutoCab <> NIL)
Private aAutoCab := {}
DEFAULT nOpc	:= 3
Private lBxLote := .F.
lF415Auto := IIf(Type("lF415Auto")=="U",.F.,lF415Auto)		// Sergio Fuzinaka - 05.06.02
DEFAULT lNoMBrowse := .F.
Default nOpBaixa := 1
Private lFini055		:=IsInCallStack("FINI055")
Private lImp  := (SuperGetMv("MV_IMPTRAN",.F.,"1") == "2" )
Private lGerImp := !(FWIsInCallStack("FINA631") .And. lImp )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restringe o uso do programa ao Financeiro e Sigaloja		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(AmIIn(6,12,17,72))		// S¢ Fin e Loja e EIC e photo
	Return
Endif

PRIVATE aRotina := MenuDef()
PRIVATE cLoteFin 	:= Space(TamSX3("E2_LOTE")[1])
PRIVATE cBanco 		:= CriaVar("E1_PORTADO")
PRIVATE cAgencia	:= CriaVar("E1_AGEDEP")
PRIVATE cConta		:= CriaVar("E1_CONTA")
PRIVATE cCheque 	:= CriaVar("E1_NUMBCO")
PRIVATE cPortado	:= "   "
PRIVATE cNumBor 	:= Space(6)
PRIVATE cMarca 		:= ''
PRIVATE nValPadrao	:= 0
PRIVATE nValEstrang	:= 0
PRIVATE nEstOriginal := 0
PRIVATE cBenef
PRIVATE cBancoV
PRIVATE cAgenciaV
PRIVATE cContrato
PRIVATE cPrefV
PRIVATE cNumV
PRIVATE cParcV
PRIVATE cTipV
PRIVATE cNaturV
PRIVATE cFornecV
PRIVATE nValAcres
PRIVATE nTxAcresV
PRIVATE nValtitV
PRIVATE dDataVencV
PRIVATE cCtbaixa 	:= GETMV("MV_CTBAIXA")
Private cFil080
PRIVATE oVlEstrang,oCM
PRIVATE lGerouSef 	:= .F.
PRIVATE nAcresc     := 0
PRIVATE nDecresc    := 0
PRIVATE lIntegracao := IF(GetMV("MV_EASYFIN")=="S",.T.,.F.)
PRIVATE lEECFAT  := SuperGetMv("MV_EECFAT",.F.,.F.)
PRIVATE oDifCambio
PRIVATE oAcresc
PRIVATE oDecresc
Private aDadosSPB 	:= {}
PRIVATE nMoedaBco	 := 1   
Private cCodDiario	:= ""
PRIVATE lIRProg	:= "2"
PRIVATE nPgtoAuto := 0
PRIVATE nValEIC  := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ CONTROLE DE VERSAO.Funcao utilizada para verificar a ultima      
//³ versao dos fontes FINXFUN.PRX, MATXATU.PRX e FINXIMP.PRW,    
//| aplicados no rpo do cliente, assim verificando a necessidade      
//| de uma atualizacaonestes fontes. 						        
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*If !(FindFunction("FINXFUN_V") .And. FINXFUN_V() >= "20160720")
	cFonte_V += "|FINXFUN.PRX"
EndIf
If !(FindFunction("MATXATU_V") .And. MATXATU_V() >= "20160720")
	cFonte_V += "|MATXATU.PRX"
EndIf
If	!(FindFunction("FINXIMP_V") .And. FINXIMP_V() >= "20160720")
	cFonte_V += "|FINXIMP.PRW"
EndIf	
If !lCheck_V .and. !Empty(cFonte_V)
	lCheck_V := .T.
	Alert(STR0211 + cFonte_V + STR0212+ Chr(13)+Chr(10)+ STR0213 ) //"A versão do(s) fonte(s) " + cFonte_V + " encontra-se desatualizada."+ Chr(13)+Chr(10)+"Providencie a atualização!"
EndIf*/

nOpc1 := 0

NUMCHEQUE 	:= ""		//para contabilizar o numero do cheque  

If Type("lWserver") == "U"		//-- utilizado para evitar problemas quando chamado via WS - TMS
	 cMarca 		:= Get080Mark()
EndIf 

AjustaSx()
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega fun‡ao Pergunte												  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SetKey (VK_F12,{|a,b| AcessaPerg("FIN080",.T.)})

If FunName() <> "FINA415" .And. !(FunName() == "FINA050" .And. IsInCallStack('Fa050Subst'))
	Pergunte("FIN080",.F.)
EndIf	

//Tratamento para evitar conflito do pergunte FIN080
//com o TMA250 ao gerar contrato de carreteiro - TMS
If lExibeLanc <> NIL .And. ValType(lExibeLanc) == "L"
	mv_par01 := Iif(lExibeLanc,1,2) //Exibe Lancamentos Contabeis
EndIf

//Tratamento para evitar conflito do pergunte FIN080
//com o TMA250 ao gerar contrato de carreteiro - TMS
If lOnline <> NIL .And. ValType(lOnline) == "L"
	mv_par03 := Iif(lOnline,1,2) //Contabiliza On-Line
EndIf

lDigita:=IIf(mv_par01==1,.T.,.F.)
lAglut :=IIf(mv_par02==1,.T.,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ VerIfica o numero do Lote 											  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cLote
LoteCont( "FIN" )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabe‡alho da tela de baixas								  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cCadastro := OemToAnsi(STR0006 )  //"Baixa de Titulos"

F080Help()

If lNoMBrowse
	Do Case
		Case nOpc == 3
			INCLUI := .T.
			ALTERA := .F.
		Case nOpc == 4
			INCLUI := .F.
			ALTERA := .T.
		OtherWise	
			INCLUI := .F.
			ALTERA := .F.
	EndCase		
	dbSelectArea("SE2")	
	
	If ( nOpc <> 0 )  .And. !Deleted()		
		bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nOpc,2 ] + "(a,b,c,d,e) }" )
		Eval( bBlock, Alias(), (Alias())->(Recno()),nOpc)
	EndIf


Else			
	If ! lF080Auto
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de entrada para pre-validar os dados a serem  ³
		//³ exibidos.                                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF ExistBlock("F080BROW")
			ExecBlock("F080BROW",.f.,.f.)
		Endif
	
		If ( cPaisLoc == "PER" ) 
			mBrowse( 6, 1,22,75,"SE2",,,,,, Fa040Legenda("SE2"),,,,,,,,"E2_TIPO = 'PA '")
	    Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Endere‡a a Fun‡„o de BROWSE											  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			mBrowse( 6, 1,22,75,"SE2",,,,,, Fa040Legenda("SE2"),,,,,,,,IIF(ExistBlock("F080FILB"),ExecBlock("F080FILB",.f.,.f.),NIL))
		EndIF
	Else
	   dbSelectArea('SE2')
	   aAutoCab := SE2->(MSArrayXDB(xAutoCab,nil,4))
	   If Len(aAutoCab) == 0
	      Return
	   EndIf
	   if nOpc == 3
			fA080Tit("SE2",Recno(),4)
	   Elseif nOpc == 4
			INCLUI := .F.
			ALTERA := .T.                         
			fA080Tit("SE2",Recno(),4)          	   
	   ElseIf nOpc == 5
	       fA080Can("SE2",Recno(),5,,nOpbaixa)	
	   ElseIf nOpc == 6
	       fA080Can("SE2",Recno(),6,,nOpbaixa)	     
	     
	   Endif	
	Endif
Endif
	
dbSelectArea("SE2")
SET FILTER TO
SetKey( VK_F12, Nil )
dbSetOrder(1)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fA080Tit ³ Autor ³ Wagner Xavier 		³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para Baixa de Titulos a Pagar   	      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080Tit()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA080Tit(cAlias,nReg,nOpcx,aM,lAut)
Local lPrjCni 	:= FindFunction("ValidaCNI") .And. ValidaCNI()
Local lPanelFin := If (FindFunction("IsPanelFin"),IsPanelFin(),.F.)
LOCAL oBtnTx
LOCAL nLinSom  := If(cPaisLoc<>"BRA",14,15)
LOCAL nOpt
LOCAL lDigita	:=IIf(mv_par01==1,.T.,.F.)
LOCAL lAglut	:=IIf(mv_par02==1,.T.,.F.)
LOCAL nHdlPrv	:=0
LOCAL nTotal	:=0
LOCAL lPadraoBx
LOCAL cArquivo
LOCAL lRet:=.T.
LOCAL nSalvRec:=0
LOCAL cParcela
LOCAL cNum
LOCAL cFornece
LOCAL cMoeda
LOCAL nOrdem
LOCAL nErro :=0
LOCAL lPadraoVd
LOCAL cContabiliza := GETMV("MV_CTBAIXA")
LOCAL lContabiliza
Local lContabMnat
LOCAL lFina080 := Existblock("FINA080")
Local cLanca	:= Iif(mv_par03==1,"S","N")
Local aCmc7:={}
Local lFa080tit:= Existblock("FA080TIT")
Local aMotBx := ReadMotBx()
Local cPadrao
Local aOldValores
LOCAL oCbx
LOCAL aDescMotbx := {}
Local cMoedaTx, nA := 0
LOCAL oImpSubst
Local nDecrescF:= 0
Local lSPB := VerCpoSPB() // Bank of America
Local cClearing := Space(3) // Bank of America
Local cTipoPgto := Space(2) // Bank of America
Local cStored := Space(4) // Bank of America
Local cHora := Substr(Time(),1,5) // Bank of America
Local cCodBar	:= Space(44) // Bank of America
Local nEventoSPB := 0 // Bank of America
Local lSpbInUse := SpbInUse()
LOCAL aModalSPB	:=  {"1=TED","2=CIP","3=COMP"}
LOCAL oModSpb
Local nTxMoeda
Local nUltLin
Local nTamTitOri := TamParcela("E2_PARCELA",19,20,21)
Local oMultNat
Local lMultNat := .F.
Local lOk := .F. //Controla se foi confirmada a distribuicao 
Local aColsSEV := {}
Local oTxMoeda
Local nTolerCp := SuperGetMv("MV_TOLERCP",.F.,0)
Local nI
Local cNatPis	:= GetMv("MV_PISNAT",.F.,"PIS")
Local cNatCof	:= GetMv("MV_COFINS",.F.,"COF")
Local cNatCsl	:= GetMv("MV_CSLL",.F.,"CSL")
Local lMensagem := .T.   
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )
Local nLinha := 0

Local nOldVlPis := 0
Local nOldVlCof := 0
Local nOldVlCsl := 0
Local nCentMd1	:= MsDecimais(1)
Local nOldVlIrf := 0
Local lIRPFBaixa := .F.

Local aArea := SE2->(GetArea())
Local cPrefixo := SE2->E2_PREFIXO
Local cTipoPai := SE2->E2_TIPO
Local lAchou := .F.

Local cMsg	 := ""
Local nBusca := 0
Local lAD	 := .F.
Local lAcessImp:= .T.
Local oNumTit
Local oNomeFor
Local aButtons  := {}
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) .And. !SE2->E2_TIPO $ MVPAGANT
					
Local nOldVlIss := 0                                       

Local nOldRetPis := 0
Local nOldRetCof := 0
Local nOldRetCsl := 0               
Local lContrRet  := !Empty( SE2->( FieldPos( "E2_VRETPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE2->( FieldPos( "E2_VRETCSL" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETPIS" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_PRETCOF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETCSL" ) ) )

Local lBordero   := If (lContrRet,(SE2->E2_PRETPIS = '4' .OR. SE2->E2_PRETCOF = '4' .OR. SE2->E2_PRETCSL = '4') .And.;
				 				!Empty(SE2->E2_NUMBOR),.F.)

Local lBxEstTotal := .F.
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local nSalImp := 0
Local lAcessMul      := .T.
Local lAcessJur	     := .T.
Local lAcessdBaixa   := .T.
Local lAcessDtDebito := .T.
Local lAcessDes	     := .T.
Local aCposDes	     := {}
Local nT 		     := 0
LOCAL nY	         := 0
Local oJuros
Local oDescont
Local oMulta
LOCAL oNaturez 
LOCAL oTipo 
LOCAL cTipo
Local dVencRea
Local oDtBaixa 
Local oDtDebito		
Local lCarret       := .F.

//Huawei
Local cPort240 := Criavar("EF_BANCO")
Local cAgen240	:= CriaVar("A6_AGENCIA")
Local cConta240:= CriaVar("A6_NUMCON")
Local cModPgto := CriaVar("EA_MODELO")
Local cTipoPag := CriaVar("EA_TIPOPAG")
Local dDataBord := dDatabase
Local lAltBord := .F.
Local aGrvLctPco := {	{"000005","03","FINA080"}, ;
						{"000005","04","FINA080"}  }

Local aFlagCTB := {}
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/) 
Local nPgtoIRRF := 0
Local lValPgto := SuperGetMv("MV_BP10925",.T.,"1") == "2" //1- Valor bruto da baixa parcial / 2- Valor da baixa parcial menos os impostos
Local lBaseIRPF := If (FindFunction('F050BIRPF'),F050BIRPF(2),.F.)
Local lF080VLAD := ExistBlock("F080VLAD")

Local lGerTXBord := .T.
Local aAreaSE2   := {}
Local aAreaSA2   := {}
Local cChaveIR   := ""
Local cFormCalcIR := GetMV("MV_RCIRJBX",.F.,"1") // Valor de IR a considerar ou recalcular imposto: "1" - Recalcular IR, "2" - Considerar IR titulo (E2_IRRF)
Local cFormClcPCC := GetMV("MV_RCPCCBX",.F.,"1") // Valor de PCC a considerar ou recalcular imposto: "1" - Recalcular PCC, "2" - Considerar IR titulo (E2_IRRF)
Local lFinVDoc	:= IIF(GetNewPar("MV_FINVDOC","2")=="1",.T.,.F.)		//Controle de validacao de documentos obrigatorios
Local nLimInss  := GetMv("MV_LIMINSS",.F.,0)
Local lBaixou	:= .F.
Local lDtBaixa	:= .F.
Local lF080VCheq := ExistBlock( "F080VCHEQ" )
Local cNomeCpo   :=	'E2_EMISSAO'
Local lSubsPrv := IsInCallStack("FINA050")
Local aDiario	:= {}
Local lVerifyBlq := IIf(SE2->(FieldPos("E2_CODOPE") ) > 0,Empty(SE2->E2_CODOPE),.T.)
Local lTpDesc		:= SE5->(FieldPos("E5_TPDESC"))	> 0 //Verifica campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)
Local aAreaSED 	:= {}
Local	lNatApura	:=	.F. //Natureza configurada para apurar impostos no SPED PIS/COFINS.                                    
Local lCposSped	:=	 (SED->(FieldPos("ED_APURCOF")) > 0 .And. SED->(FieldPos("ED_APURPIS")) > 0) //Campos que apuram impostos no SPED PIS/COFINS.
Local lESSCOM   := .F. //Trade-Easy - RRC - 17/07/2013 - Integração SIGACOM x SIGAESS: Geração automática das invoices e parcelas de câmbio a partir do documento de entrada
Local lESSEIC   := .F. //Trade-Easy - RRC - 05/12/2013 - Integração SIGAEIC x SIGAESS: Geração automática das parcelas de câmbio a partir dos títulos
Local llOpc	:= Nil
Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0) 
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 		:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao.
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )
Local lPaBruto		:= GetNewPar("MV_PABRUTO","2") == "1"  //Indica se o PA terá o valor dos impostos descontados do seu valor
Local nOldInss	:= 0
Local lPrImPA := !Empty( SE2->( FieldPos( "E2_PRINSS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRISS" ) ) ) .And. ;
				 !lPaBruto .And. (SuperGetMv("MV_PAPRIME",.T.,"2") == "1")

//Inss Baixa
Local lAcmPJ 	 := SuperGetMv("MV_INSACPJ",.T.,"2") == "1"  //1 = Acumula    2= Não acumula
Local aBaixa		:=	{}
Local lNotBax 	:= .F.
Local lAglImp  := .F. 
Local lFina379 := IsInCallStack("FINA379")
LOCAL nTotAdto 	:= 0
LOCAL lBaixaAbat	:= .F.
Local lBxCEC 		:= .F.  //Verificador de existencia de baixa por compensacao entre carteiras
Local nTotImpost 	:= 0  //Valores de baixas de por geracao de impostos
Local nTotaIRPF   := 0
Local lBxLiq	:= .F.               
Local nParciais	:=	0
Local aPAComp	:=	{}
Local nInsComp	:=	0
Local nInsEst	:=	0
Local 	aAreaSe5  := SE5->(GetArea())	
Local lPAMOv := .F.			
Local lCb10925 := GetNewPar("MV_CB10925","2") == "1"
Local nRecPAInc := 0 
Local cNccIr		:= SuperGetMv("MV_NCCIR",.F.,"2")
Local lBxTxa := SuperGetMv("MV_BXTXA",.F.,"1") == "1"
Local nRecSE5Ins := 0
Local lExistFJU := AliasIndic("FJU") .and. FindFunction("FinGrvEx")
Local aValImp := {}
Local aBckImpEms := {}
Local aPcc		:= {}
Local lMVBP10925  := SuperGetMv("MV_BP10925",.F., "1") == "2" // Default (Bruto)
Local lResta1 		:= ExistBlock("RESTAUM")
Local lRestaUM 		:= .T.
lOCAL lEdJur	:= SED->(FieldPos('ED_JURSPD')) > 0 							
Local noldPcc	:= 0
Local lAdiantamento := .f.
Local lMovBcoBx 	:= .T.
Local lCnab 	:= .F.
Local lOldPCC	:= .T.
Local lMVCNBImpg := GetNewPar("MV_CNBIMPG",.F.)
Local nRcN_PASE5 := 0
Local lVlrAcImp	:= FindFunction('VlrAcImp')

Private lISSF631		:= ("FINA631" == ALLTRIM(SE2->E2_ORIGEM)) .AND. lImp
										
Private nBaseIns	:= 0 //Inss Baixa
Private nVretInss	:= 0
Private aRecnoINSS:= {}
Private aBordINSS:= {}
Private cPretIns	:= ""
Private nInss		:= 0

PRIVATE l450		:= .F.
PRIVATE oCheque,oAgencia,oBanco,oConta,oDlg,oValPgto
PRIVATE cHist070 := CriaVar("E5_HISTOR")
PRIVATE dBaixa	  := CriaVar("E2_BAIXA")
PRIVATE dDebito	  := CriaVar("E2_BAIXA")
PRIVATE cNatMov   := iif ( lPrjCni, CriaVar("ED_MOVBCO"), '')

PRIVATE nValPgto := 0
PRIVATE nCM 	  := 0
PRIVATE nDescont := 0
PRIVATE nJuros   := 0
PRIVATE nMulta   := 0
PRIVATE nOtrga       := 0
PRIVATE nDifCambio   := 0
PRIVATE nImpSubst    := 0
PRIVATE aTxMoedas	  := {}
Private noldvalor := 0
Private aDadosSPB := {}
PRIVATE lUsaCmc7 := .F.
PRIVATE cModSpb		:= "1"
PRIVATE nValBrut		:= 0
PRIVATE nPis 		:= 0
PRIVATE nCofins   := 0
PRIVATE nCsll		:= 0
PRIVATE aDadosRef := Array(7)
PRIVATE aDadosRet := Array(7)
PRIVATE aRecnosSE2 := ()
PRIVATE nOldValPgto := 0
PRIVATE dBxDt_Venc
PRIVATE dOldData 	:= CToD("")
PRIVATE dOldDeb		:= cTod("")
PRIVATE nOldDescont := 0
PRIVATE nOldMulta := 0
PRIVATE nOldJuros := 0
PRIVATE nOldIRRF := 0
PRIVATE nOldPIS := 0
PRIVATE nOldCofins := 0
PRIVATE nOldCSLL := 0
PRIVATE nValComp := 0
Private nIss := 0
Private nIrrf := 0
Private nBaseIrpf := 0
PRIVATE nOldIss := 0
PRIVATE nVlImpPCC:= 0
Private nAcrescF := 0 
Private lDtPag	:=.F.
PRIVATE oFontLbl
PRIVATE dDataCan := CTOD("")

Private aBaixaSE5 := {}
//IRRF - BAIXA
PRIVATE aDadosIr := Array(3)
PRIVATE nVlRetIrf:= 0
Private cTpDesc := "I"                
Private lEmpPub := IIf(lIsEmpPub, IsEmpPub(), .F.)
Private nVlMPub := SuperGetMv("MV_VLMPUB" ,.T.,10)
Private lAplMinP := .F.          
aFill(aDadosIr,0)

aFill(aDadosRef,0)
aFill(aDadosRet,0)

If (ExistBlock( "FA080CMC" ) )
	lUsaCmc7:=ExecBlock("FA080CMC",.F.,.F.)
Endif

IF ExistBlock("F080MNAT")
	lMultNat := ExecBlock("F080MNAT",.F.,.F.)
Endif               

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
	lCalcIssBx := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se titulo esta suspenso			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SE2->( FieldPos( "E2_DATASUS" ) ) > 0 .AND. !Empty( SE2->E2_DATASUS )
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe Adiantamento ou Devolucao ³
//³ para o Fornecedor do título a ser baixado.   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (IIF(FunName() == "MATA101N" .AND. cPaisLoc == "MEX", .T. , GetNewPar("MV_VLTITAD",.F.) .And. !(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG) ) )
	nBusca := F090BuscAD( "SE2", SE2->E2_FORNECE, SE2->E2_LOJA )
	If nBusca <> 0
		lAD := .T.
		cMsg := STR0144 //"O Fornecedor deste titulo possui "
		Do Case 
			Case nBusca = 1 // Adiantamento
				cMsg += STR0145 //"Adiantamento."
			Case nBusca = 2 // Devolucao
				cMsg += STR0146 //"Devolucao."
		End Case
		cMsg += chr(13)+chr(10)
		cMsg += STR0147 //"Deseja mesmo assim baixa-lo ?"
		If isBlind()
			If lF080VLAD
				If !(ExecBlock("F080VLAD",.F.,.F.))
					Return .F.
				Endif
			Endif
		Else
			If !MsgYesNo( cMsg )
				Return .F. /*Function fA080Tit*/
			Endif
		Endif
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe Adiantamento de INSS      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nBusca := 0
If GetNewPar("MV_VLTITAD",.F.) .And. SE2->E2_TIPO $ MVINSS
	If SE2->(FieldPos("E2_TITPAI")) > 0
		If !Empty(SE2->E2_TITPAI)
			If F090LocINA( SE2->E2_TITPAI )
				If !isBlind()
					If !MsgYesNo( "Existem titulos de INSS retido em pagamentos antecipados ainda pendentes de compensação para este fornecedor, efetua a baixa mesmo assim?" )
						Return .F. /*Function fA080Tit*/
					Endif
				Else
					Return .F.
				Endif
			Endif
		Endif
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises Localizados:                                  ³
//³Nao deixa baixar o titulo se no cadastro de Moeda SM2³
//³a taxa estiver com valor Zero                        ³
//³Validacao somente para titulo com Moeda > 1          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( cPaisLoc <> "BRA" ) .And. ( SE2->E2_MOEDA > 1 )
	If !(RecMoeda(dBaixa,SE2->E2_MOEDA) > 0 )
 		Help(" ",1,"A080TXZERO")	
 		Return .F. /*Function fA080Tit*/
    Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VerIfica se pode baixar titulo inserido em um bordero 				³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If mv_par04 == 2	// Nao permite baixa se o titulo estiver num bordero.
	If !Empty( SE2->E2_NUMBOR )
		Help(" " , 1 , "FA080NAOBAIXA")
		Return .F. /*Function fA080Tit*/
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o titulo esta bloqueado - Gestao de Contratos ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(SE2->(FieldPos("E2_MSBLQL"))) .And. SE2->E2_MSBLQL == "1" .And. lVerifyBlq
	Help(" ",1,"SE2BLOQ")
	Return .F. /*Function fA080Tit*/
EndIf

// inclusao para a rotina de workflow (maria cristina)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se pode baixar sem aprova‡Æo                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (Type('lF080Auto') =='U' .or. ! lF080Auto) .Or. (Type('lF080Auto') =='L' .And. lF080Auto)
	If !(FunName() $ 'FINA630|FINA631|TMSA250|TMSA251') 
		If !lSubsPrv .and. !( SE2->E2_TIPO $ MVPROVIS) // Permite Baixar Provisório ao Substituir
			If !( SE2->E2_TIPO $ MVPAGANT) .And. ;
				(GetMv("MV_CTLIPAG").and.Empty(SE2->E2_DATALIB).and.(SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE)>GetMV("MV_VLMINPG"))
				Help(" " , 1 , "FA080NAOLIB") // NÆo permite baixar t¡tulos nÆo liberados
				Return .F. /*Function fA080Tit*/
			Endif
	 	Endif
 	EndIf		
Endif	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a apresentação dos documentos                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction( "CN062ValDocs" )
	If (Type('lF080Auto') =='U' .or. ! lF080Auto)
		IF AliasIndic("FRD") .AND. (SE2->(FieldPos("E2_TEMDOCS")) > 0) .And. lFinVDoc
			If !CN062ValDocs("02",.F.)
				Return .F. 
			EndIf
		EndIf			 
	ElseIf (Type('lF080Auto') =='L' .and. lF080Auto)
		IF AliasIndic("FRD") .AND. (SE2->(FieldPos("E2_TEMDOCS")) > 0) .And. lFinVDoc
			If !CN062ValDocs("02",.T.)
				Return .F. 
			EndIf
		EndIf			 
	Endif	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha sido gerado pelo SigaEic e do tipo PR nao podera se baixado se nao for pela rotina automatica ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. lIntegracao .and.  SE2->E2_TIPO = "PR "  .and. UPPER(SE2->E2_ORIGEM) = "SIGAEIC"
	HELP(" ",1,"FAORIEIC")
	Return /*Function fA080Tit*/
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿ 
// TDF - 04/08/2011
//³ Caso tenha sido gerado pelo SigaEic e do tipo PRE nao podera ser baixado se nao for pela rotina automatica ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. lIntegracao .and.  SE2->E2_TIPO = "PRE"  .and. UPPER(SE2->E2_ORIGEM) = "SIGAEIC"
	HELP(" ",1,"FAORIEIC")
	Return /*Function fA080Tit*/
Endif  
                                                                                              
//DFS - 16/03/11 - Deve-se verificar se os títulos foram gerados por módulos Trade-Easy, antes de apresentar a mensagem.
// TDF - 26/12/11 - Acrescentado o módulo EFF para permitir liquidação
// NCF - 25/03/13 - Acrescentado o módulo SIGAESS (Siscoserv)
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .And. (UPPER(Alltrim(SE2->E2_Origem)) $ "SIGAEEC/SIGAEDC/SIGAECO/SIGAESS" .AND. !(cModulo $ "EEC/EDC/ECO/EFF/ESS") .And.;
    Posicione("SA2",1,xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA),"A2_PAIS") <> "105" .AND. SE2->E2_MOEDA > 1)
	HELP(" ",1,"FAORIEEC")
	Return
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha sido gerado pelo SigaEic e do tipo INV e do BRASIL nao podera se baixado se nao for pela rotina automatica ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. lIntegracao .and. cPaisloc =="BRA" .and.  SE2->E2_TIPO =="INV"  .and.  UPPER(Alltrim(SE2->E2_ORIGEM)) $ "SIGAEIC"
	HELP(" ",1,"FAORIEIC")
	Return /*Function fA080Tit*/
Endif  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ AAF - Titulos originados no SIGAEFF não devem ser alterados   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .AND. "SIGAEFF" $ SE2->E2_ORIGEM
   Help(" ",1,"FAORIEFF")
   Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha integracao SIGAPFS e seja um titulo com natureza juridica sem rateio finalizado ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Fa080Juri()  
	Help(" ",1,"F080JURI",, STR0170,1,0) // "Nao permite baixar titulos com rateio juridico incompleto"
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso esteja ligado o controle de solicitacao de notas de credito e exista alguma ³
//³ pendencia para este titulo                                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If cPaisLoc <> "BRA"
	SCU->(DbSetOrder(2))
Endif
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .And. cPaisLoc <> "BRA" .And. SuperGetMv('MV_SOLNCP') .And.  SE2->E2_TIPO == MVNOTAFIS ;
		.And. SCU->(MsSeek(xFilial()+SE2->E2_FORNECE+SE2->E2_LOJA+SE2->E2_NUM+SE2->E2_PREFIXO)).And. Empty(SCU->CU_NCRED)
	HELP(" ",1,"SOLNCPAB")
	Return /*Function fA080Tit*/
Endif  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se possui movimento de baixa valido						³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SE2->E2_TIPO $ "INA"
	If F090PagINA( E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA )
		HELP(" ",1,"SE2BLOQ")
		Return /*Function fA080Tit*/
	EndIf
EndIf

If SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
	lAdiantamento := .T.
EndIf	
//verifica se PA teve movimentação bancária com atualizaçãod de saldo para poder realizar a baixa
#IFDEF TOP 
lOldPCC := .F.
If cPaisloc == "BRA"
	If SE2->E2_TIPO $ MVPAGANT
		 //posicionar na SE5 de movimentacao bancaria da PA
		lPAMov := .F.
		 //verifica se PA possui movimentacao bancaria
		nRecPAInc := F080MovPA(.T.,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA)
		If  nRecPAInc > 0
			SE5->(DBGoto(nRecPAInc))
			lPAMov := .T.
		EndIf
		If !lPAMov
			MsgStop(STR0197,STR0143) //"Não é possível realizar a baixa de pagamento antecipado sem movimentação bancária." 
			Return .F.
		EndIf
		//verifica se PA possui registro de inclusao
		nRecPAInc := F080MovPA(.F.,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA)
		If	nRecPAInc > 0
			 SE5->(DBGoto(nRecPAInc))
		EndIf
		If !Fa050Filho(.T.)
			If !lCb10925 .or. Fa080IrBx()//se o imposto baixado for Imposto de Renda gerado na baixa -> nao deixa cancelar baixa do principal.
				Help(" ",1,"NODELETA",,STR0153, 4, 0) // "Este titulo possui impostos e"+chr(13)+"um desses impostos sofreu baixa."
				Return .F.  /*Function fa080Can*/
			Else
				If SE5->E5_PRETPIS=='2' .or. SE5->E5_PRETCOF=='2' .or. SE5->E5_PRETCSL=='2'
					If (ExistBlock("F080PCBX") .and. ExecBlock("F080PCBX",.F.,.F.)==.F.)
						//"Nao é possível realizar essa baixa pois possui impostos PCC retidos em outra baixa. E necessario cancelar primeiro a baixa responsavel pela retenção dos impostos"
						MsgStop(STR0198 +chr(13)+STR0164,STR0143)	
						Return .F. /*Function fa080Can*/
					EndIf			
				EndIf
				//Mesmo permitindo o cancelamento MV_CB10925 = 1, será feita uma pergunta de confirmação
				//caso exista algum título filho que já tenha sido baixado.
				If !MsgYesNo(STR0153+chr(13)+STR0159,STR0143)	//"Este titulo possui impostos e"+chr(13)+"um desses impostos sofreu baixa."
																				//"Deseja mesmo cancelar ?"
					Return .F. /*Function fa080Can*/
				EndIf		
			EndIf
		ElseIf !Fa050Filho(.F.)   //verifica se esse título tem TX filhos, sem verificar se esses TXs foram baixados
			If SE5->E5_PRETPIS=='2' .or. SE5->E5_PRETCOF=='2' .or. SE5->E5_PRETCSL=='2'  
				If (ExistBlock("F080PCBX") .and. ExecBlock("F080PCBX",.F.,.F.)==.F.)
					//"Nao é possível realizar essa baixa pois possui impostos PCC retidos em outra baixa. E necessario cancelar primeiro a baixa responsavel pela retenção dos impostos"
					MsgStop(STR0198 +chr(13)+STR0164,STR0143)	
					Return .F. /*Function fa080Can*/					
				ElseIf lPccBaixa
					If !MsgYesNo(STR0192)//Essa baixa possui impostos retidos em outra baixa, deseja continuar ?
						Return .F.
					Endif
				EndIf			
			EndIf
			If SE2->E2_VALOR != SE2->E2_SALDO .And. !Empty(SE2->E2_BAIXA) .And. !Empty(SE2->E2_VALLIQ)
				MsgStop(STR0208+chr(13)+STR0209,STR0143)
				Return .F.
			EndIf
		ElseIf lPccBaixa
			//posicionar na SE5 de inclusao da PA
			If SE5->E5_PRETPIS=='2' .or. SE5->E5_PRETCOF=='2' .or. SE5->E5_PRETCSL=='2'  
					If !MsgYesNo(STR0192)//Essa baixa possui impostos retidos em outra baixa, deseja continuar ?
						Return .F.
					Endif
			EndIf		
		Endif	
	EndIf
EndIf
#ENDIF	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA 													³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (ExistBlock( "FA080CHK" ) )
	If !(ExecBlock("FA080CHK",.F.,.F.))
		Return .F. /*Function fA080Tit*/
	EndIf
Endif

//Caso a rotina esteja cadastrada no adapter, so pode ser enviada como 'Sincrona'. Uma baixa enviada como assincrona 
//sera concretizada mesmo que de erro no sistema integrado.
If !lFini055
	If !(FA080Integ(.F.))
		Return
	Endif	
Endif

If SE2->( Deleted() )
	Help( " " , 1 , "RECNO" )
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta Hist¢rico da Baixa para digita‡„o pelo usuario					³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cHist070 := Criavar("E5_HISTOR")		//Inicilizador padrao

If Empty(cHist070)
	cHist070 := OemToAnsi(STR0011)+Space(Len(cHist070)-20) 	//"Valor pago s/ Titulo"
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Variavel auxiliar  … analise se o titulo veio de um cheque pre datado ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE lChqPre:= .f.
PRIVATE cMotBx := CriaVar("E5_MOTBX")
PRIVATE cBenef	:= CriaVar("E5_BENEF")
lAut 		:= If( lAut=NIL,.F.,lAut)

dbSelectArea("SE2")
nOrdem	:= IndexOrd()
dbSetOrder(1)

If cPaisLoc <> "BRA"
	Aadd(aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
	For nA	:=	2	To MoedFin()
		cMoedaTx	:=	Str(nA,IIf(nA <= 9,1,2))
		If !Empty(GetMv("MV_MOEDA"+cMoedaTx))
			Aadd(aTxMoedas,{GetMv("MV_MOEDA"+cMoedaTx),RecMoeda(dDataBase,nA),PesqPict("SM2","M2_MOEDA"+cMoedaTx) })
		Else
			Exit
		Endif	
	Next
EndIf

*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Analisa se o titulo foi gerado a partir de um cheque pre datado.		³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lChqPre := .f.
dbSelectArea("SE5")
dbSetOrder(2)
If SE5->(dbSeek( xFilial("SE5") + "CD" + SE2->E2_PREFIXO + ;
		SE2->E2_NUM + SE2->E2_PARCELA + SE2->E2_TIPO + dToS(SE2->E2_EMISSAO )+;
		SE2->E2_FORNECE + SE2->E2_LOJA ))

	lChqPre := .T.
	cBanco   := SE5->E5_BANCO
	cAgencia := SE5->E5_AGENCIA
	cConta   := SE5->E5_CONTA
	cCheque  := SE5->E5_NUMCHEQ
	cBenef   := SE5->E5_BENEF
	cHist070 := SE5->E5_HISTOR	
EndIf

//FDR - 11/10/2016 - Realizar validação padrão pelo Financeiro
/*If ( Type('lF080Auto') <>'U' .AND. lF080Auto) .and. "EIC" $ UPPER(FUNNAME())
	aValidGet := {}
  	IF (nT := ascan(aAutoCab,{|x| x[1]='AUTMOTBX'})) > 0
		cMotBx	:=	aAutoCab[nT,2]
 	EndIf	
	If MovBcobx(cMotBx, .T.)	// Sergio Fuzinaka - 28.05.02
		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTBANCO'})) > 0
			Aadd(aValidGet,{'cBanco' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,,,.T.)",.t.})		
		Endif	
	    IF (nT := ascan(aAutoCab,{|x| x[1]='AUTAGENCIA'}) ) > 0
			Aadd(aValidGet,{'cAgencia' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,@cAgencia,,.T.)",.t.})		
		EndIf	
	   	IF (nT := ascan(aAutoCab,{|x| x[1]='AUTCONTA'}) ) > 0
			Aadd(aValidGet,{'cConta' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,@cAgencia,@cConta,.T.,,.T.)",.t.})		
		EndIf	
	EndIf	
	If !SE2->(MsVldGAuto(aValidGet))
		Return .F. 
	EndIf
EndIf*/
nOrdSA6:=SA6->(IndexOrd())
DbSetOrder(1)
SA6->(dbSeek(xFilial("SA6")+cBanco+cAgencia+cConta))
nMoedaBco:= Max(SA6->A6_MOEDA,1) 
SA6->(DbSetOrder(nOrdSA6))


*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Mostra dados cadastrais do titulo										³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SA2")
dbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA)

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If !(Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto))
	lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S" .or. (SA2->A2_MINPUB == "1" .and. A2_MINIRF == "1"), .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT         
EndIf

If SA2->( FieldPos( "A2_MINPUB" ) ) > 0 .And. SA2->A2_MINPUB == "2"
	lAplMinP := .T.
EndIf

lEmpPub := lEmpPub .And. lIRPFBaixa 
lIRProg := IIf(SA2->(FieldPos("A2_IRPROG")) # 0, IIf(!Empty(SA2->A2_IRPROG), SA2->A2_IRPROG, "2"), "2")
				 
*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Carrega Beneficiario com Nome do Fornecedor 							³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(cBenef)
	dbSelectArea("SA2")
	SA2->(dbSeek(cFilial+SE2->E2_FORNECE+SE2->E2_LOJA))
	dbSelectArea("SE2")
	cBenef   := Padr(SA2->A2_NREDUZ,TamSx3("EF_BENEF")[1])
Endif
If ExistBlock("F080BENEF")
	cBenef := ExecBlock("F080BENEF",.F.,.F.)
EndIf

IF !lChqPre
	cCheque  := CriaVar("EF_NUM",.F.)
Endif

dBaixa	 := CriaVar("E2_BAIXA")
If cPaisLoc == "BRA"
 If lIntegracao .and. !(SE2->E2_TIPO $ MVNOTAFIS + '|' + MVPAGANT)
  	IF (nT := ascan(aAutoCab,{|x| x[1]='AUTTXMOEDA'}) ) > 0
		nTxMoeda	:=	aAutoCab[nT,2]
	Else
		nTxMoeda	:=	RecMoeda(dBaixa,SE2->E2_MOEDA)		
	EndIf	         
 Else				
	nTxMoeda	 := If(SE2->E2_MOEDA > 1,If(SE2->E2_TXMOEDA > 0 .and. Empty(SE2->E2_DTVARIA) .And. RecMoeda(dBaixa,SE2->E2_MOEDA) == 0, SE2->E2_TXMOEDA,;
							IIf(RecMoeda(dBaixa,SE2->E2_MOEDA) > 0 .And. Empty(SE2->E2_TXMOEDA), RecMoeda(dBaixa,SE2->E2_MOEDA), SE2->E2_TXMOEDA)),0)
 Endif						
Else
	nTxMoeda	 := RecMoeda(dBaixa,SE2->E2_MOEDA)
Endif	
cPortado	 := SE2->E2_PORTADO

If !SoftLock( "SE2" )
	Return /*Function fA080Tit*/
EndIf

If (ExistBlock( "F080MENS" ) )
	lMensagem:=ExecBlock("F080MENS",.F.,.F.)
Endif

//Ponto de entrada para desabilitar campos de Multa, Juros ou Descontos, data de baixa, data de debito
If ExistBlock("F080DCNB")
	aCposDes:=ExecBlock("F080DCNB",.F.,.F.)
	If Len(aCposDes) > 0
		IF (nT := ascan(aCposDes,'MULTA')) > 0	
			lAcessMul := .F.
		Endif
		IF (nT := ascan(aCposDes,'DESCONTO')) > 0	
			lAcessDes := .F.
		Endif
		IF (nT := ascan(aCposDes,'JUROS')) > 0	
			lAcessJur := .F.
		Endif
		IF (nT := ascan(aCposDes,'DATABAIXA')) > 0	
			lAcessdBaixa := .F.
		Endif
		IF (nT := ascan(aCposDes,'DATADEBITO')) > 0	
			lAcessDtDebito := .F.
		Endif		
	Endif
Endif
//se vier da integracao Protheus X Tin nao e permitido alterar na baixa
If AllTrim(SE2->E2_ORIGEM)=="FINI055" .And. ( Type('lF080Auto') =='U' .or. ! lF080Auto)
	//Caso o parametro MV_ITLBCPG esteja ativado ira permitir alteração dos campos 
	IF !(SuperGetMv("MV_ITLBCPG",,.F.))
		lAcessMul := .F.
		lAcessDes := .F.
		lAcessJur := .F.
		lAcessdBaixa:= .F.
		lAcessDtDebito := .F.
	Else
		lAcessMul := .T.
		lAcessDes := .T.
		lAcessJur := .T.
		lAcessdBaixa := .T.
		lAcessDtDebito := .T. 	
	EndIf
Endif

//Aviso ao baixar titulo de Imposto gerado por bordero e baixa do principal ainda nao
//foi efetuada.
If lMensagem .and. cPaisLoc == "BRA" .and. ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. ;
	("FINA240" $ SE2->E2_ORIGEM) .and. lPccBaixa .and. ;
	SE2->E2_TIPO $ MVTAXA .and. ((cNatPis $ E2_NATUREZ).or. ;
		(cNatCof $ E2_NATUREZ ).or. (cNatCsl $ E2_NATUREZ))

	Do Case 
	Case Alltrim(E2_NATUREZ) $ AllTrim(GetMv("MV_PISNAT"))
		cValorPai := "SE2->E2_PIS"
		cParcPai := "E2_PARCPIS"
	Case Alltrim(E2_NATUREZ) $ AllTrim(GetMv("MV_COFINS"))
		cValorPai := "SE2->E2_COFINS"
		cParcPai := "E2_PARCCOF"
	Case Alltrim(E2_NATUREZ) $ AllTrim(GetMv("MV_CSLL"))
		cValorPai := "SE2->E2_CSLL"
		cParcPai := "E2_PARCSLL"
	OtherWise
		cValorPai := "SE2->E2_IRRF"
		cParcPai := "E2_PARCIR"
	EndCase	

	dbSelectArea("SE2")
	dbSetOrder(1)
	nRegSE2:= Recno()
	aArea 	:= SE2->(GetArea())
	cPrefixo	:= SE2->E2_PREFIXO
	cNum		:= SE2->E2_NUM 
	cParcela	:= SE2->E2_PARCELA
	cTipoPai := SE2->E2_TIPO
	lAchou	:= .F.
	If dbSeek(xFilial("SE2")+cPrefixo+cNum)
		While !Eof() .and. SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM) == cFilial+cPrefixo+cNum
			If &(cParcPai) == cParcela .and. IIF(cTipoPai $ MVTXA,SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG,.T.)
				If &(cValorPai) != 0 .and. SE2->E2_SALDO > 0
					lAchou := .T.
					Exit
				EndIf
			EndIf
			DbSkip()
		Enddo
	EndIf

	If lAchou
		IF !MSGYESNO(STR0139+; // "Tentativa de efetuar baixa de titulo de imposto sem que o titulo "
							STR0140,"BXIMPBOR") // "principal tenha sido baixado. Continuar o processo de baixa ?"
			RestArea(aArea)				
			Return .F. /*Function fA080Tit*/
		Endif
	Endif
	RestArea(aArea)	
Endif

// Se for um titulo de adiantamento, verifica se existem cheques nao liberados, pois se existir, nao permitir a baixa
// Isso ocorre quando o parametro MV_LIBCHEQ esta igual a N, foi gerado um cheque para o adiantamento e este
// ainda nao foi liberado
If (Type('lF080Auto') =='U' .or. ! lF080Auto) .And.;
	Alltrim(SE2->E2_TIPO) $ MVPAGANT 
	SEF->(DbSetOrder(3))
	SEF->(MsSeek(xFilial("SEF")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+Pad(E2_NUMBCO,Len(SEF->EF_NUM)))))
	If SEF->EF_LIBER == "N"
		Help(" ",1,"NOCHQADT")	
		RestArea(aArea)
		Return (.F.) /*Function fA080Tit*/
	Endif
Endif   
         
                                           
if lPrjCni
	// Verifica integracao com PMS e nao permite alteracao de titulos que tenham solicitacoes
	// de transferencias em aberto.
	If !( Alltrim(Upper(FunName())) == "FINA631" .or. (Type("lF631Auto")=="L" .and.  lF631Auto) ) .And. (SE2->(FieldPos("E2_NUMSOL")) > 0 .AND. !Empty(SE2->E2_NUMSOL))
		HELP(" ",1,"FIN62003")
		Return
	Endif
EndIf	




// Nao permitir baixar titulos de adiantamento relacionados a pedido
#IFDEF TOP
	If cPaisLoc $ "BRA|MEX" .and. AliasInDic("FIE")
		If FinAdtSld( "P", SE2->( E2_FORNECE + E2_LOJA + E2_PREFIXO + E2_NUM + E2_PARCELA + E2_TIPO ) )
			Help(" ",1,"ADTXPED",,STR0171,1,0) //"Adiantamento relacionado a um pedido. Somente poderá ser utilizado no relacionamento com pedidos."
			Return(.F.)
		EndIf
	Endif
#ENDIF	

While .T.
	nTotAGer  := 0 // Variaveis para acumulo dos valores
	nTotADesp := 0 // na baixa
	nTotADesc := 0
	nTotAMul  := 0
	nTotAJur  := 0

	nValPgto := 0
	nCM 	 := 0
	nDescont := 0
	nJuros   := 0
	nMulta   := 0
		
	nAcrescF 	:= SE2->E2_SDACRES
	nDecrescF	:= SE2->E2_SDDECRE
	nAcresc		:= Round(Noround(xMoeda(SE2->E2_SDACRES,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
	nDecresc	:= Round(Noround(xMoeda(SE2->E2_SDDECRE,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
	// Ponto de entrada para alterar o valor do acrescimo
	If ExistBlock("F080ACRE")
		ExecBlock("F080ACRE",.F.,.F.)
	EndIf	

	nPis		:= 0
	nCofins		:= 0
	nCsll		:= 0
	nVlRetPis	:= 0
	nVlRetCof	:= 0
	nVlRetCsl	:= 0
	nDiferImp	:= 0
	cNumBor		:= SE2->E2_NUMBOR

	nIrrf := 0
	nVlRetIrf := 0
	nBaseIrpf := 0
	nIss		:= 0

	nInss		:= 0
	nBaseIns	:= 0
	nVretInss	:= 0
	cTpDesc	:= "I"	
	IF Empty(cBanco)
		cBanco	:= CriaVar( "E5_BANCO" )
		cAgencia := CriaVar( "E5_AGENCIA")
		cConta	:= CriaVar( "E5_CONTA" )
	Endif

	dbSelectArea("SE2")
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Verifica se o Titulo ja foi Baixado Totalmente 						³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF (SE2->E2_SALDO + SE2->E2_SDACRES == 0) .or. (!lBxTxa .and. SE2->E2_OK == 'TA' .and. !SE2->E2_TIPO $ MVPAGANT)
		Help(" ",1,"TITBAIXADO")
		MsUnlock()
		Exit
	EndIF

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Verifica se ‚ um registro Principal									³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SE2->E2_TIPO $ MVABATIM
		Help(" ",1,"NAOPRINCIP")
		MsUnlock()
		Exit
	EndIF

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Verifica se ‚ um titulo provisorio 									  ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SE2->E2_TIPO $ MVPROVIS .and. !lSubsPrv
		Help(" ",1,"TITULOPROV")
		MsUnlock()
		Exit
	EndIF

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³ Identifica se contab. deve ocorrer na baixa ou gera‡„o de cheques e se  ³
	*³ o tipo do titulo for PA e existir cheque deve ser contabilizado  	   ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SEF")
	dbSetOrder(3)
	If SE2->E2_TIPO $ MVPAGANT .and. SEF->(dbseek(xFilial("SEF")+SE2->E2_PREFIXO+SE2->E2_NUM+;
			SE2->E2_PARCELA+SE2->E2_TIPO))
		lContabiliza := .T.
	Else
		lContabiliza := IIf(cContabiliza = "B" .Or. cContabiliza = "A", .T., .F.) .and. !IsInCallStack('FINA450')
	EndIf
	dbSelectArea("SE2")
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Carrega as variaveis utilizadas para receber os dados do titulo		   ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nSalvRec 	:= SE2->(RecNO())
	cNum	  	:= SE2->E2_NUM
	cPrefixo 	:= SE2->E2_PREFIXO
	cParcela 	:= SE2->E2_PARCELA
	cFornece 	:= SE2->E2_FORNECE
	cLoja	  	:= SE2->E2_LOJA
	cTipo		:= SE2->E2_TIPO
	nTotAbat 	:= 0
	nValPadrao 	:= 0
	dAnter 		:= dBaixa	
	cMoeda 		:= IIF(Empty(SE2->E2_MOEDA),"1",AllTrim(Str(SE2->E2_MOEDA,2)))
	cDescMoeda  := SubStr(GetMV("MV_SIMB"+cMoeda),1,3)

	If SE2->( FieldPos( "E2_DATACAN" ) ) > 0
		dDataCan	:= SE2->E2_DATACAN //FRS - Sit. Titulo
	EndIf

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Soma Titulos Abatimentos												³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTotAbat := SumAbatPag( cPrefixo, cNum, cParcela, cFornece, SE2->E2_MOEDA, "S", dBaixa, cLoja )
	SE2->( dbGoTo( nSalvRec ) )
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Recebe os dados do titulo a ser baixado											³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lCont := .F.
    
	nValTot		:= SE2->E2_VLCRUZ
	//Recompor a base c/ impostos já retidos em outras baixas, para proporcionalizar o valor do imposto corretamente.
	If lMVBP10925
		nValEstrang := SE2->E2_SALDO-nTotAbat
	Else
		nValEstrang := SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL+E2_SALDO)-nTotAbat
	EndIf
	nValOrig 	:= nValEstrang
	
	If cPaisLoc<>"BRA"
		nCentMd1 	:= 4
	    nValMoeda	:= xMoeda(nValOrig,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,,nTxMoeda)
		nValMoeda1	:= xMoeda(SE2->E2_VALOR-nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,,nTxMoeda)	    
	Else
		nValMoeda	:= xMoeda(nValOrig,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda)
		nValMoeda1	:= xMoeda(SE2->E2_VALOR-nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda)
	EndIf

	nValMoeda   := Round(Noround(nValMoeda,nCentMd1+1),nCentMd1)
	nValMoeda1  := Round(NoRound(nValMoeda1,nCentMd1+1),nCentMd1)
	nValPgto		:= nValMoeda+nMulta+nJuros-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss
	nValLiq		:= nValPgto-nMulta-nJuros+nDescont-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss
	nOldValPgto	:= nValPgto

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³ Retorna o Array aDescMotBx contendo apenas a descricao do    ³
	*³ motivo das Baixas.									 	             ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aDescMotbx) == 0
		For nI := 1 to len( aMotBx )
			If substr(aMotBx[nI],34,01) == "A" .or. substr(aMotBx[nI],34,01) =="P"
		  		If !(substr(aMotBx[nI],01,03) $ "FAT|LOJ|LIQ|CEC|CMP")
					AADD( aDescMotbx,substr(aMotBx[nI],07,10))
		  		EndIf
			EndIf
		Next nI
	EndIf         
	
	// Carrega varivael cmotbx para sua verifcacao na funcao fa080totmes()
	cMotBx		:= aDescMotBx[1] 	//NORMAL

	If FunName() <> "FINA415"
		//Calcula ISS na Baixa
		If lCalcIssBx .and. Empty(SE2->E2_NUMBOR) .And. lGerImp // (1) Emissao, (2) Baixa
			F080IssBx()
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Caso Natureza calcule IRRF de carreteiro ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
	If Posicione("SED",1,xFilial("SED")+SE2->E2_NATUREZ,"ED_IRRFCAR") == "S"
		lCarret := .T.
	EndIf	

	If SE2->E2_FATURA="NOTFAT"
		aRet := FinFatAbat(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_FORNECE,SE2->E2_LOJA)
		nTotIss	:= aRet[1]
		nTotIns	:= aRet[2]
		nTotIrf	:= aRet[3]
		nTotPis := aRet[4]
		nTotCof	:= aRet[5]
		nTotCsl	:= aRet[6]
		nTotSes	:= aRet[7]
    Else
    	If !lCalcIssBx
			nTotIss := SE2->E2_ISS - SE2->E2_VRETISS	
		Else
			nTotIss	:= SE2->E2_VRETISS
		EndIf
		
		nTotIns	:= SE2->E2_INSS
		nTotIrf	:= SE2->E2_VRETIRF
		nTotPis	:= SE2->E2_VRETPIS
		nTotCof	:= SE2->E2_VRETCOF
		nTotCsl	:= SE2->E2_VRETCSL
		nTotSes	:= SE2->E2_SEST
    Endif


	If !lCarret
		//Calcula Impostos pela Baixa                     
		If lValPgto                                                                                                                  
			//Verificacao se o INSS deve ser abatido do base de calculo do IRRF
			If (SuperGetMv("MV_INSIRF",.F.,"2") == "2") .And. (SA2->A2_TIPO == "F" .OR. (SA2->A2_TIPO == "J" .AND. lIRProg == "1"))
				nPgtoIRRF := (nValPgto + nTotIss - FVRetISSBx()) + nTotIns
			ElseIf (SuperGetMv("MV_INSIRF",.F.,"2") == "1") .And. (SA2->A2_TIPO == "F" .OR. (SA2->A2_TIPO == "J" .AND. lIRProg == "1"))
				nPgtoIRRF := (nValPgto + nTotIss - FVRetISSBx())

				If SA2->A2_TIPO == "J"
					nPgtoIRRF += nTotIns
				EndIf 
			Else
				nPgtoIRRF := nValPgto

				If SA2->A2_TIPO == "J"
					nPgtoIRRF += nTotIns
				EndIf 
			Endif 
		Else
			If (SuperGetMv("MV_INSIRF",.F.,"2") == "2") .And. (SA2->A2_TIPO == "F" .OR. (SA2->A2_TIPO == "J" .AND. lIRProg == "1"))
				//Essa validacao do ISS acompanha a validacao incluida na função F080IssBx(), onde a variável 
				//nValPgto só é atualizada se não estiver sendo utilizado IR na Baixa.
				nPgtoIRRF :=  nValPgto + If(!lCalcIssBx .and. lIRPFBaixa ,nTotIss,0) + nTotIns
			ElseIf (SuperGetMv("MV_INSIRF",.F.,"2") == "1") .And. (SA2->A2_TIPO == "F" .OR. (SA2->A2_TIPO == "J" .AND. lIRProg == "1"))
				//Essa validacao do ISS acompanha a validacao incluida na função F080IssBx(), onde a variável 
				//nValPgto só é atualizada se não estiver sendo utilizado IR na Baixa.
				nPgtoIRRF :=  nValPgto + If(!lCalcIssBx .and. lIRPFBaixa ,nTotIss,0)

				If SA2->A2_TIPO == "J"
					nPgtoIRRF += nTotIns
				EndIf 
			Else
				nPgtoIRRF := nValPgto

				If SA2->A2_TIPO == "J"
					nPgtoIRRF += nTotIns + If(!lCalcIssBx .and. lIRPFBaixa ,nTotIss,0)//Acacio
				EndIf 
			Endif
            
			nPgtoIRRF += SE2->E2_VRETISS
			
	       //Soma o valor retido do pcc
			If SE2->(FieldPos("E2_VRETPIS"))>0
				nPgtoIRRF += nTotPis
			EndIf
			If SE2->(FieldPos("E2_VRETCOF"))>0
				nPgtoIRRF += nTotCof
			EndIf			
			If SE2->(FieldPos("E2_VRETCSL"))>0
				nPgtoIRRF += nTotCsl
			EndIf
    
			//Soma o valor retido do IRRF anteriormente
			If lIRPFBaixa 
				If SE2->(FieldPos("E2_VRETIRF"))>0
					nPgtoIRRF += nTotIrf
				EndIf
			Endif	

		EndIf
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//|Caso seja titulo de carreteiro recompoe base com valor bruto  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
		nPgtoIRRF :=  nValPgto + nTotIss + nTotIns + Iif( SE2->(FieldPos("E2_SEST") > 0) , nTotSes ,0 )
		nINSSRet	:=  nTotIns
		If nLimInss > 0 .And. nINSSRet > nLimInss
			nINSSRet := nLimInss
		EndIf		
	Endif

	//Evita o sistema calcular o IRRF para documento de entrada que nao teve retencao
	//de IRRF ( itens ) mesmo possuindo um fornecedor e natureza que calcule (MATA100)	
	If lIRPFBaixa .And. ( FunName() <> "FINA415" ) .And. lGerImp .And. ;
		!( "MATA100" $ SE2->E2_ORIGEM .And. Empty( SE2->E2_BASEIRF ) .And. Empty( SE2->E2_IRRF ) )

		//Novo calculo de IRRF pela Baixa
		If lNewIrBx
			If !(SE2->E2_TIPO $ MV_CPNEG)
				//Calculo para o  IRRF 
				//o primeiro parametro, neste caso vai zerado pois o calculo 
				//eh feito com base no saldo do titulo 
				If "FINA631" $ SE2->E2_ORIGEM  .And. Empty( SE2->E2_IRRF ) .and. SA2->A2_MINPUB == "1"
					nIRRF := 0
				Else
					nIRRF := FCalcIRBx(0,SA2->A2_TIPO,dBaixa,dDebito)
				Endif
			EndIf
		Else
		
			If (SE2->E2_PRETIRF == '1' .OR. EMPTY(SE2->E2_PRETIRF))
	
				//Se o título estiver em bordero, verifica se gerou título (fina241) ou nao (fina240)
				If !Empty(SE2->E2_NUMBOR)
						
					aAreaSE2 := SE2->(GetArea())
					cChaveIR := SE2->(E2_PREFIXO+E2_NUM+E2_PARCIR)+MVTAXA
					
					aAreaSA2 := SA2->(GetArea()) 
					dbSelectArea("SA2")
					If (dbSeek(xFilial("SA2")+GetMV("MV_UNIAO")))
				   		cChaveIR +=SA2->(A2_COD+A2_LOJA)				
					Endif
					
					dbSelectArea("SE2")
					If SE2->(dbSeek(xFilial("SE2")+cChaveIR)) 
						lGerTXBord := .F.
					Endif            
					
					SE2->(RestArea(aAreaSE2))   
					SA2->(RestArea(aAreaSA2))
				Endif
				
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Busca base de cálculo para o  IRPF ³
				//³caso não tenha sido calculada      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ					
				aCalcIRPF := F241BsIRPF(SE2->(Recno()),"SE2",nPgtoIRRF,lGerTXBord,,,,,.T.,,,lCarret)
						
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Calcula IRPF e deduz os valores retidos anteriormente³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SA2->A2_TIPO == "F" .And. EMPTY(SE2->E2_NUMBOR)
					nIRRF := Fa050TabIR(aCalcIRPF[1] - aCalcIRPF[4]) - aCalcIRPF[2]
				Else
					If EMPTY(SE2->E2_NUMBOR)
						If cFormCalcIR == "1" // Recalcula imposto
							nIRRF := FClcIRPJ(aCalcIRPF[1],.T.,.T.)						
						ElseIf cFormCalcIR == "2" // Considera valor calculado no título, menos o IR já retido
							nIRRF := SE2->E2_IRRF - aCalcIRPF[2]
						EndIf
					EndIf
				EndIf
			Endif
		EndIf

		If !lIRPFBaixa
			nIRRF := IIF(nIRRF <= GetMv("MV_VLRETIR",,0),0,nIRRF)
		EndIf		

	EndIf
	nValPgto -= IF(lMVBP10925 .And. SE2->E2_SALDO # SE2->E2_VALOR,SE2->E2_DECRESC, 0)
	If lPccBaixa .And. lGerImp
		fa080Data(nTxMoeda)

		//Caso IRRF na Baixa
		//a variavel nValPgto retorna da funcao FA080DATA() com o valor do nIRRF deduzido.
		//Igualo nOldValPgto a nValPgto para que nao se constitua alteracao do valor verificada
		//pela funcao F080TOTMES() e nao gere distorcoes nos calculos do PCC
		nOldValPgto	:= nValPgto
                                         
		If (( Type('lF080Auto') <>'U' .AND. lF080Auto) .And. IsInCallStack('FINA450') .And. lPCCBaixa)
			//Caso seja rotina automatica chamada pela rotina de Compensacao entre Carteiras verificar o valor antes de gerar os titulos do PCC.			
			aValidGet:= {}
		  IF (nT := ascan(aAutoCab,{|x| x[1]='AUTVLRPG'}) ) > 0
				If  (aAutoCab[nT,2]+SE2->((E2_PIS-E2_VRETPIS) + (E2_COFINS-E2_VRETCOF) + (E2_CSLL-E2_VRETCSL)) != SE2->E2_SALDO)		
					Aadd(aValidGet,{'nValPgto' ,aAutoCab[nT,2],"Fa080ValVR("+STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2])+")",.t.})
					
					If ! SE2->(MsVldGAuto(aValidGet)) // consiste os gets
			  			Return .f. /*Function fA080Tit*/
	   				EndIf    								
				EndIf
				l450 := .T.
			EndIf	 	
		Endif
		nValMax := SE2->E2_SALDO
		If cPaisLoc == "BRA" .and.lPCCBaixa 
			If (dBaixa < dLastPcc .Or. lEmpPub .or. lOldPCC) 
				f080TotMes(dBaixa,.T.)
			Else
				
				If !SE2->E2_TIPO $ MVPAGANT+"/"+MVPROVIS .And. VLDBOR(SE2->E2_NUMBOR,"P") .And. SA2->A2_TIPO <> "F"
					If FwIsInCallStack('FINA450')
						If nValPgto == SE2->E2_SALDO // só pode retirar os valores dos impostos na emissão na ultima baixa
					 		nSalImp := nValPgto + Iif(lIRPFBaixa, 0 , SE2->E2_IRRF) + If(lCalcIssBx ,0,SE2->E2_ISS) + IIF(lInssBx, 0 , SE2->E2_VRETINSS)
					 	Else
					 		nSalImp := nValPgto
					 	EndIf
					Else
						nSalImp := salRefPag(SA2->A2_COD+SA2->A2_LOJA)
					EndIf
					
					If SE2->E2_MOEDA > 1 
						nSalImp := xMoeda(nSalImp,SE2->E2_MOEDA,1,dBaixa,3,SE2->E2_TXMOEDA)
					EndIf
					// Atribui valor dos impostos para o cálculo das proporções 
					aValImp    := GetOutImp("P",nIss,nInss,nIrrf)
					aBckImpEms := { nIss , nInss , nIrrf }
					nIss	    := aValImp[1]
					nInss 	    := aValImp[2]
					nIrrf	    := aValImp[3]
					// --------------------------------------------------------
					
					// Chamada para Calculo dos Impostos
					nSalImp += IIF(lJurMulDes,(nMulta+nJuros-nDescont+nAcresc-nDecresc),Iif(lVlrAcImp, VlrAcImp(), 0) )
					aPcc	 := newMinPcc(dDataBase, nSalImp,SED->ED_CODIGO,"P",SA2->A2_COD+SA2->A2_LOJA,nIss,nInss,nIRRF) 
					nPis	 := aPcc[2]
					nCofins := aPcc[3]
					nCsll	 := aPcc[4]
					// ---------------------------------
					
					// Ajusta as Variáveis de Impostos
					nIss  := aBckImpEms[ 1 ]
					nInss := aBckImpEms[ 2 ]
					nIrrf := aBckImpEms[ 3 ]
					aSize( aBckImpEms , 0 )
					aBckImpEms := Nil
					// -------------------------------
					

					If FwIsInCallStack('FINA450') .And. (lMVBP10925 .or. SE2->E2_SALDO == nValPgto)
						nValPgto -= (nPis+nCofins+nCsll)
						noldPcc := nValPgto						
					EndIf 
					If lResta1 
						lRestaUM := ExecBlock("RestaUM",.F.,.F.)
					Endif
					If !lRestaUm 
						If (SE2->E2_SALDO - (nPis + nCofins + nCsll + nIrrf + nIss)) == 0.01
							nPis += 0.01
						Elseif (SE2->E2_SALDO - (nPis + nCofins + nCsll + nIrrf + nIss)) == - 0.01
							nPis -= 0.01
						EndIf 
					Endif
				Else
					nPis    := 0
					nCofins := 0
					nCsll   := 0
				EndIf
			EndIf
		EndIf
	Endif 
	
	nTotARet :=  (nPis + nCofins + nCsll + nIrrf)
	nDiferImp := nValPgto - nTotARet
	
	If nDiferImp < 0
				
		aOutImp := {}
		aAdd(aOutImp, {"PIS", nPis })
		aAdd(aOutImp, {"COF", nCofins })
		aAdd(aOutImp, {"CSL", nCsll })

		If lIRPFBaixa 
			aAdd(aOutImp, {"IRF", nIrrf })
		EndIf

		If lInssBx .And. nInss == 0
			aAdd(aOutImp, {"INS", (SE2->E2_INSS - SE2->E2_VRETINS) })
		EndIf
		
		If lCalcIssBx.And. nIss == 0
			aAdd(aOutImp, {"ISS", (SE2->E2_ISS - SE2->E2_VRETISS) })
		EndIf

		aDadosPar := verVrAR(nValPgto, aOutImp )
		nPis	 := aDadosPar[1]
		nCofins := aDadosPar[2]
		nCsll	 := aDadosPar[3] 
	Endif		
	
	If SED->ED_CALCINS == "S" .And. SA2->A2_RECINSS == "S" .And. lInssBx .And. cPaisLoc = "BRA" .And. Empty(SE2->E2_NUMBOR) //Inss Baixa 		
		If !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //PA de Inss Baixa Empresa Publica
			nOldInss	:=	nInss
			nInsBx	:=	0		
			cChave	:=	''			
			If lInsPub .And. !(SE2->E2_TIPO $ MVPAGANT+"/INA") .And. !lPaBruto				
				aPAComp	:=	{} //caso tenha PA´s que compensaram esta NF.
				nInsComp	:=	0
				nInsEst	:=	0
				//Caso o PA tenha sido compensado anteriormente com alguma nf e gerado inss devo recompor o valor do imposto do saldo.			
				aAreaSe5  := SE5->(GetArea())				
				//Quais PA's compensaram essa NF.
				DbSelectArea("SE5")
				SE5->(DbSetOrder(7))				
				SE5->(DbSeek(xFilial("SE5")+ SE2->E2_PREFIXO + SE2->E2_NUM + SE2->E2_PARCELA + SE2->E2_TIPO + SE2->E2_FORNECE + SE2->E2_LOJA  ))				
				Do While SE5->(!Eof() .And. ALLTRIM(SE5->E5_FILIAL+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA) == ALLTRIM(xFilial("SE5")+ SE2->E2_PREFIXO + SE2->E2_NUM +;
								 SE2->E2_PARCELA + SE2->E2_TIPO + SE2->E2_FORNECE + SE2->E2_LOJA))
					
					If SE5->E5_RECPAG == "P" .And. SE5->E5_TIPODOC = "CP" .And. SE5->E5_MOTBX = "CMP" 
						AAdd(aPAComp,SE5->E5_DOCUMEN)
					EndIf
					SE5->(DbSkip())
				EndDo
				//Somando os valores dos inss retidos dos PA´s que compensaram essa NF.
				DbSelectArea("SE5")
				SE5->(DbSetOrder(10))									
				If Len(aPAComp) >= 1				
					For nI	:=	1 TO Len(aPAComp)					
						SE5->(DbSeek(xFilial("SE5")+ aPAComp[nI]))				
						Do While SE5->(!Eof() .And. ALLTRIM(SE5->E5_FILIAL+SE5->E5_DOCUMEN) == ALLTRIM( xFilial("SE5") + aPAComp[nI] ))
							If SE5->E5_TIPODOC == "CP" .And. SE5->E5_RECPAG == "P" 
							    nInsComp += SE5->E5_VRETINS
							ElseIf SE5->E5_TIPODOC == "ES" .And. SE5->E5_RECPAG == "P"
								nInsEst += SE5->E5_VRETINS
							EndIf
							SE5->(DbSkip())
						EndDo																																															
					 Next
				Endif
				SE5->(RestArea(aAreaSE5))
				nInsComp	:=	nInsComp - nInsEst	 				
				nInss		:=	FCaInssBxCP(nValPgto+nInsComp ,lIRPFBaixa,lCalcIssBx,lPCCBaixa)				
			Else
				nInss		:=	FCaInssBxCP(nValPgto,lIRPFBaixa,lCalcIssBx,lPCCBaixa)
			Endif	
		Endif	
	Endif	
	// Tratamento execauto para não reter PCC		
	If ( Type('lF080Auto') <>'U' .AND. lF080Auto) .and. !l450 .And. !FwIsInCallStack("FA450CMP")
		//Caso seja rotina automatica verificar o valor antes de gerar os titulos do PCC.					
		aValidGet:= {}
		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTVLRPG'}) ) > 0
			nPgtoAuto := aAutoCab[nT,2]
			If  (aAutoCab[nT,2]+SE2->((E2_PIS-E2_VRETPIS) + (E2_COFINS-E2_VRETCOF) + (E2_CSLL-E2_VRETCSL)) != SE2->E2_SALDO)		
				Aadd(aValidGet,{'nValPgto' ,aAutoCab[nT,2],"Fa080ValVR("+STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2])+")",.t.})
				
				If ! SE2->(MsVldGAuto(aValidGet)) // consiste os gets
		  			Return .f. /*Function fA080Tit*/
	   			EndIf    								
			EndIf
		Else
		 
			nPgtoAuto :=	xMoeda(SE2->E2_SALDO ,SE2->E2_MOEDA,1,dBaixa,3,nTxMoeda)
		
		EndIf 
		nValMax := SE2->E2_SALDO
		If cPaisLoc == "BRA" .AND. lPCCBaixa 
			If (dBaixa < dLastPcc .Or. lEmpPub .or. lOldPCC)
				f080TotMes(dBaixa,.T.)
			Else
				
				If !SE2->E2_TIPO $ MVPAGANT+"/"+MVPROVIS .And. VLDBOR(SE2->E2_NUMBOR,"P")
					If nPgtoAuto == xMoeda(nValOrig ,SE2->E2_MOEDA,1,dBaixa,3,nTxMoeda)//Baixa total por execauto
						nSalImp := salRefPag(SA2->A2_COD+SA2->A2_LOJA)
						nSalImp += IIF(lJurMulDes,(nMulta+nJuros-nDescont+nAcresc-nDecresc),Iif(lVlrAcImp, VlrAcImp(), 0))
						nSalImp := xMoeda(nSalImp ,SE2->E2_MOEDA,1,dBaixa,3,nTxMoeda)
					Else
						nSalImp := nPgtoAuto //baixa parcial por execauto
					Endif
										
					aValImp    := GetOutImp("P",nIss,nInss,nIrrf)
					aBckImpEms := { nIss , nInss , nIrrf }
					nIss       := aValImp[1]
					nInss      := aValImp[2]
					nIrrf      := aValImp[3]
					
					aPcc	 := newMinPcc(dDataBase, nSalImp,SED->ED_CODIGO,"P",SA2->A2_COD+SA2->A2_LOJA,nIss,nInss,nIRRF)
					nPis	 := aPcc[2]
					nCofins := aPcc[3]
					nCsll	 := aPcc[4]

					nIss  := aBckImpEms[ 1 ]
					nInss := aBckImpEms[ 2 ]
					nIrrf := aBckImpEms[ 3 ]
					aSize( aBckImpEms , 0 )
					aBckImpEms := Nil
				Else
					nPis    := 0
					nCofins := 0
					nCsll   := 0
				EndIf
			EndIf
		EndIf
		nValPgto := If (nPgtoAuto == xMoeda(nValOrig ,SE2->E2_MOEDA,1,dBaixa,3,nTxMoeda),nPgtoAuto - (nPis+nCoFins+nCsll+nIrrf+nIss)+ nJuros + nMulta - nDescont, nPgtoAuto )
		nOldValPgto := nValPgto
	Endif
	If SE2->E2_TIPO == MV_CPNEG // NDF nao deve calcular importo
		nPis := nCoFins := nCsll  := 0
	EndIf
	//Guardo o valor dos impostos calculados para diferenciar quando os mesmos
	//forem digitados manualmente pelo usuario
	If lEmpPub .And. lIRPFBaixa  .And. lAplMinP .And. (nPis+nCoFins+nCsll+nIrrf+aDadosRet[2]+aDadosRet[3]+aDadosRet[4]+aDadosRet[5]< nVlMPub .And.;
		 !(aDadosRet[2]+aDadosRet[3]+aDadosRet[4]+aDadosRet[5] == 0 .And. aDadosRet[1] > 0))
		nPis := nCoFins := nCsll := nIrrf := 0 
	EndIf
	nVlImpPCC := nPis+nCoFins+nCsll
	
	IF (nMulta+nJuros+nDescont+nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss) > 0 .OR. Round(nValEstrang - xMoeda(nValPgto,nMoEdaBco,SE2->E2_MOEDA,dBaixa,,,nTxMoeda),2 ) > 0.01
	
		nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
		
	EndIF
	
	nValLiq	  := nValPgto-nMulta-nJuros+nDescont-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss
	
	If SE2->E2_MOEDA == 1
		nCm:=0
	Endif
	
	SA2->( dbseek( xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
	cNomeFor := SE2->E2_FORNECE + " " + SA2->A2_NOME                          
	cTitulo := SE2->E2_PREFIXO + " " + SE2->E2_NUM+ " " + SE2->E2_PARCELA
	nPagtoParcial := SE2->E2_VALOR-SE2->E2_SALDO
	cTexto := OemToAnsi(STR0101)+ SubStr(GetMV("MV_SIMB"+cMoeda),1,3)  //"Valor Original "
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³PONTO DE ENTRADA FA080POS  ³
	//³ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Permite a altera‡„o de vari veis apos carga de dados do t¡tulo a ser ³
	//³ baixado, antes das informa‡äes serem mostradas na Tela.              ³
	//³ Vari veis dispon¡veis para serem alteradas :                         ³
	//³                                                                      ³
	//³ cBanco , cAgencia, cConta, cCheque                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA080POS")
		ExecBlock("FA080POS",.F.,.F.)
		SE2->(dbGoTo(nSalvRec))
	Endif

	If cPaisLoc <> "BRA" .And. !lF415Auto
		nTxMoeda   := RecMoeda(dBaixa,SE2->E2_MOEDA)
		nDifCambio := ( Round( (SE2->E2_VALOR * nTxMoeda), nCentMd1) - SE2->E2_VLCRUZ )
	EndIf
   
	lNatApura	:=	.F.	
	aAreaSED 	:= SED->(GetArea())
	DbSelectArea("SED")							
	DbSetOrder(1)			
	If DbSeek(xFilial("SED")+ SE2->E2_NATUREZ) .And. (lCposSped .OR. (lEdJur .and. ( SED->ED_JURSPD == "1" )))
		If (!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS)) .OR. (lEdJur .and. ( SED->ED_JURSPD == "1" ))
			lNatApura	:=	.T. //Natureza configurada para apurar impostos no SPED PIS/COFINS.
		Endif	
	Endif
   RestArea(aAreaSED)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³PONTO DE ENTRADA FA080ACES ³
	//³ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Permite ou nao que o usuario altere os valores dos impostos da lei 10925 ³
	//³ calculados automaticamente pelo sistema.                                 ³
	//³ Vari veis dispon¡veis para serem alteradas :                             ³
	//³                                                                          ³
	//³ lAcessImp ( .T. - PERMITE  /  .F. - NAO PERMITE )						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA080ACES")
		lAcessImp := ExecBlock("FA080ACES",.F.,.F.)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa a gravacao dos lancamentos do SIGAPCO    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
  	PcoIniLan("000005")
   
   If Type('lF080Auto') =='U' .or. ! lF080Auto
		*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		*³Recebe os dados do t¡tulo a ser baixado 							 ³
		*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nOpc1 := 0
		// Carrega as variaveis bancarias
		Fa080BDev(.F.)
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Pr‚-inicializa a modalidade de SPB                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lSpbInUse
			If !Empty(SE2->E2_MODSPB)
				cModSpb := SE2->E2_MODSPB
			Else
			   cModSpb := "1"
			Endif		
		Endif
	

		DEFINE MSDIALOG oDlg FROM	31,15 TO 577,574 TITLE OemToAnsi(STR0007)  PIXEL OF oMainWnd //"Baixas a Pagar"

		//DADOS DO TITULO
		oPanel1 := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,45,45,.f.,.f. )
		oPanel1:Align := CONTROL_ALIGN_TOP

		//DADOS GERAIS E DA BAIXA
		oPanel2 := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,30,30,.f.,.f. )
		oPanel2:Align := CONTROL_ALIGN_ALLCLIENT


		//////////////////
		//DADPS DO TITULO
		
		@ 001,002 GROUP oGrp1 TO 043, 272 LABEL STR0015 OF oPanel1 PIXEL //"Principal"
		@ 001,002 GROUP oGrp2 TO If(cPaisLoc=="BRA",205,165), 133 LABEL STR0013 OF oPanel2  PIXEL //"Dados Gerais"
		@ 001,139 GROUP oGrp3 TO If(cPaisLoc=="BRA",205,165), 272 LABEL STR0014 OF oPanel2  PIXEL //"Valores da Baixa"

		If lUsaCmc7
			aCmc7:=LjLeCmc7(1)
			If Len(aCmc7) > 0
				cBanco  :=aCmc7[1]
				cAgencia:=aCmc7[2]
				cConta  :=aCmc7[3]
				cCheque :=aCmc7[4]
			Endif
		Endif
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ\¿
		//³Ponto de Entrada para o escolher se a data exibida é a E2_VENCREA ou a E2_VENCTO³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ\Ù
		If Type("dBxDt_Venc") == "U"
			dBxDt_Venc := SE2->E2_VENCREA
		EndIf

		@ 008,004 SAY STR0092				SIZE 31,07 OF oPanel1 PIXEL //Prefixo
		@ 008,027 MSGET SE2->E2_PREFIXO	SIZE 25,08 OF oPanel1 PIXEL When .F. 
		@ 008,060 SAY STR0093 				SIZE 31,07 OF oPanel1 PIXEL //Numero 
		@ 008,085 MSGET SE2->E2_NUM		SIZE 70,08 OF oPanel1 PIXEL When .F.
		@ 008,165 SAY STR0094 				SIZE 31,07 OF oPanel1 PIXEL //Parcela
		@ 008,188 MSGET SE2->E2_PARCELA	SIZE 25,08 OF oPanel1 PIXEL When .F.
		@ 008,220 SAY STR0095				SIZE 31,07 OF oPanel1 PIXEL //Tipo
		@ 008,238 MSGET oTipo VAR cTipo	F3 "SE2RDO" SIZE 30,08 OF oPanel1 PIXEL HASBUTTON
		oTipo:lReadOnly := .T.

		@ 019,004 SAY STR0019 SIZE 22,07 OF oPanel1 PIXEL //"Fornecedor"
		@ 019,027 MSGET oCodFor VAR SE2->E2_FORNECE F3 "SA2" SIZE 70,08 OF oPanel1 PIXEL HASBUTTON
		oCodFor:lReadOnly := .T.
		@ 019,105 MSGET SA2->A2_NOME SIZE 165,08 OF oPanel1 PIXEL When .F.

		@ 030,004 SAY STR0098 				SIZE 31,07 OF oPanel1 PIXEL //"Natureza"
		@ 030,027 MSGET oNaturez VAR SE2->E2_NATUREZ	F3 "SED" SIZE 70,08 OF oPanel1 PIXEL HASBUTTON
		oNaturez:lReadOnly := .T.
		@ 030,105 SAY STR0017 				SIZE 31,07 OF oPanel1 PIXEL //"Emiss„o"
		@ 030,133 MSGET SE2->E2_EMISSAO	SIZE 48,08 OF oPanel1 PIXEL When .F.
		@ 030,189 SAY STR0018 				SIZE 49,07 OF oPanel1 PIXEL //"Vencto.Atual"
		@ 030,222 MSGET SE2->E2_VENCREA	SIZE 48,08 OF oPanel1 PIXEL When .F.


		//////////////////
		//DADOS DO GERAIS 
		
		nUltLin := 10
		
		@ nUltLin,005 SAY OemToAnsi(STR0020)	SIZE 38,07 OF oPanel2 PIXEL //"Hist.Emiss„o"
		@ nUltLin,065 MSGET SE2->E2_HIST 		SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When .F.
		
		nUltLin += 12
		@ nUltLin,005 SAY OemToAnsi(STR0021)	SIZE 39,07 OF oPanel2 PIXEL //"Portador"
		@ nUltLin,065 MSGET cPortado				SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When .F.
		
		nUltLin += 12
		@ nUltLin,005 SAY OemToAnsi(STR0029)	SIZE 37,07 OF oPanel2 PIXEL //"Mot.Baixa"
		
		if lPrjCni
			@ nUltLin,065 MSCOMBOBOX oCbx VAR cMotBx ITEMS aDescMotbx SIZE 65,47 OF oPanel2 PIXEL ;
			WHEN f080DMotBx(cMotBx) ON CHANGE (fa080ChkVdr(),oBanco:lReadOnly := !fa080digit(),If(MovBcoBx(cMotBx, .T. )<>MovBcoBx(cOldMotBx,.T.),F080TotMes(dBaixa,.T.),)) Valid fa080BDev() .and.;
			F080MtBx() .AND. F080SPB(@lSPB,@cClearing,@cTipoPgto,@cStored,@cHora) .and. FA080VlNat(cMotBx)
		Else		
			@ nUltLin,065 MSCOMBOBOX oCbx VAR cMotBx ITEMS aDescMotbx SIZE 65,47 OF oPanel2 PIXEL ;
			WHEN f080DMotBx(cMotBx) ON CHANGE (fa080ChkVdr(),oBanco:lReadOnly := !fa080digit(),If(MovBcoBx(cMotBx, .T. )<>MovBcoBx(cOldMotBx,.T.).and. dBaixa <= dLastPcc,F080TotMes(dBaixa,.T.),));
			Valid fa080BDev() .and. F080MtBx() .AND. F080SPB(@lSPB,@cClearing,@cTipoPgto,@cStored,@cHora)
		EndIf
		
		nUltLin += 12
		@ nUltLin,005 SAY OemToAnsi(STR0022)	SIZE 40,07 OF oPanel2 PIXEL //"Banco"
		@ nUltLin,065 MSGET oBanco VAR cBanco 	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON F3 "SA6" ;
			Valid (!MovBcobx(cMotBx, .T.) .and. Empty(cBanco)) .or. ;
						(CarregaSA6(@cBanco,@cAgencia,@cConta,.T.) .and. fa080BcoCx() .And. ;
						FaPrNumChq(cBanco,cAgencia,cConta,@oCheque,@cCheque) .And. ;
						f080AltBco(nTxMoeda,oJuros, oMulta, oDescont, oCm) )
		oBanco:lReadOnly := !fa080digit()
		
		nUltLin += 12
		@ nUltLin,005 SAY OemToAnsi(STR0023)	SIZE 39,07 OF oPanel2 PIXEL //"Agˆncia"
		@ nUltLin,065 MSGET oAgencia VAR cAgencia	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When fa080digit() Valid ;		
																  CarregaSA6(@cBanco,@cAgencia,@cConta,.T.) .And. FaPrNumChq(cBanco,cAgencia,cConta,@oCheque,@cCheque) .And. ;
																  f080AltBco(nTxMoeda,oJuros, oMulta, oDescont, oCm)
		
		nUltLin += 12									  
							  
		@ nUltLin,005 SAY OemToAnsi(STR0024)	SIZE 41,07 OF oPanel2 PIXEL //"Conta"
		@ nUltLin,065 MSGET oConta VAR cConta 	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When fa080digit() Valid ;
																	If(CarregaSA6(@cBanco,@cAgencia,@cConta,.T.,,.T.) .AND. ( FindFunction( "FXVldBxBco" ) .AND. FXVldBxBco( cBanco, cAgencia, cConta, SE2->E2_NATUREZ, SE2->E2_MOEDA ) ),FaPrNumChq(cBanco,cAgencia,cConta,@oCheque,@cCheque) .And. ;
																	f080AltBco(nTxMoeda,oJuros, oMulta, oDescont, oCm),oBanco:SetFocus())
		
		nUltLin += 12															
		@ nUltLin,005 SAY OemToAnsi(STR0027)	SIZE 40,07 OF oPanel2 PIXEL //"Cheque No."
		@ nUltLin,065 MSGET oCheque VAR cCheque	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict( "SEF","EF_NUM") When ( IIf( !lF080VCheq, fa080digit(), Execblock("F080VCHEQ", .F.,.F.)) .and. faDigiChq()) Valid fa080Cheq()
		
		
		nUltLin += 12
		@ nUltLin,005 SAY OemToAnsi(STR0025)	SIZE 38,07 OF oPanel2 PIXEL //"Data Pagto."
		@ nUltLin,065 MSGET oDtBaixa VAR dBaixa 			SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON; 
															ON CHANGE (lDtPag:=.T.,iif(dBaixa < dLastPcc, f080TotMes(dBaixa,.T.,,,dOldData # dBaixa),),If(lIRPFBaixa.and.FunName()<>"FINA415", Fa080Irrf(nPgtoIRRF,dBaixa,lCarret,.T.,nOldIrrf) , .T.), Iif(lIRPFBaixa .and. nIrrf > 0 .and. nValPgto < 0 .and. cNccIr == "1", nValPgto := nIrrf, nValPgto)); 
															Valid Iif(dOldData # dBaixa, fa080Data(@nTxMoeda,,.T.), .T.) .and. Iif(SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dBaixa), .T.);
															When !(AllTrim(SE2->E2_ORIGEM)=='FINI055') .And. lAcessdBaixa
		dOldData := dBaixa

		nUltLin += 12
		@ nUltLin,005 SAY OemToAnsi(STR0149)	SIZE 38,07 OF oPanel2 PIXEL //"Data Debito"
		@ nUltLin,065 MSGET oDtDebito		VAR dDebito 			SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON;
																	ON CHANGE (lDtPag:=.T.,iif(dBaixa < dLastPcc,f080TotMes(dDebito,.T.,,,dOldData # dDebito),),If(lIRPFBaixa.and.FunName()<>"FINA415", Fa080Irrf(nPgtoIRRF,dDebito,lCarret,.T.,nOldIrrf) , .T.), Iif(lIRPFBaixa .and. nIrrf > 0 .and. nValPgto < 0 .and. cNccIr == "1", nValPgto := nIrrf, nValPgto)); 
																	Valid (IIf(dDebito > dBaixa, fa080Data(@nTxMoeda),.T.) .and. Iif(SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dDebito), .T.) .And. Fa080Val(0,nTxMoeda));
																	When !(AllTrim(SE2->E2_ORIGEM)=='FINI055') .And. lAcessDtDebito
		
		dOldDeb := dDebito
		nUltLin += 12
		@ nUltLin,005 SAY OemToAnsi(STR0026)	SIZE 39,07 OF oPanel2 PIXEL //"Hist.Baixa"
		@ nUltLin,065 MSGET cHist070			SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture "@!" VALID CheckSX3("E5_HISTOR") When VisualSX3("E5_HISTOR")
		
		
		nUltLin += 12
		@ nUltLin,005 SAY OemToAnsi(STR0028)	SIZE 36,07 OF oPanel2 PIXEL //"Beneficiário"
		@ nUltLin,065 MSGET cBenef 			SIZE 65, 08 OF  oPanel2 PIXEL HASBUTTON Picture "@!" When cNivel >= NivelSx3("E5_BENEF") .and. fa080digit()
								
		
		If cPaisLoc == "BRA" .And. SE2->E2_MOEDA > 1
			nUltLin += 12
			@ nUltLin,005 SAY STR0129 	SIZE 53, 07 OF oPanel2 PIXEL //"Taxa contratada"
			@ nUltLin,065 MSGET oTxMoeda VAR nTxMoeda SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict( "SM2","M2_MOEDA"+AllTrim(Str(SE2->E2_MOEDA))) ;
							 Valid Fa080Val(0,nTxMoeda, .T.)
			
		Endif	                   
		If lSpbInUse
			nUltLin += 12		
			@ nUltLin,005 SAY STR0128 SIZE 32, 07 OF oPanel2 PIXEL  //"Modalidade SPB"
			@ nUltLin,065 COMBOBOX oModSPB VAR cModSpb ITEMS aModalSpb SIZE 56, 47 OF oPanel2 PIXEL ;
								When MovBcoBx(cMotBx,.T.) 			
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somente exibe a opcao Rateio Multiplas Naturezas se parametro MV_MULNATP = .T.  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ       
		If MV_MULNATP
			nUltLin += 12
			@ nUltLin,005 SAY STR0132 SIZE 100, 07 OF oPanel2 PIXEL	 //"Rateio Mult.Naturezas"
			@ nUltLin,065 CHECKBOX oMultNat VAR lMultNat PROMPT "" SIZE 11,11 OF oPanel2 PIXEL
		Endif
	

		//////////////////
		//DADOS DA BAIXA 
		
		nUltLin := 10
	   If cPaisLoc <> "CHI"
			nValOrigem	:= SE2->E2_VALOR
	   		
			@ nUltLin,144 SAY cTexto 				SIZE 53,07 OF oPanel2 PIXEL //"Valor Original"
			@ nUltLin,204 MSGET SE2->E2_VALOR		SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When .F. Picture PesqPict("SE2","E2_VALOR")
			
			nUltLin += 12
			@ nUltLin,144 SAY OemToAnsi(STR0035)	SIZE 53,07 OF oPanel2 PIXEL //"- Abatimentos"
			@ nUltLin,204 MSGET nTotAbat			SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When .F. Picture PesqPict("SE2","E2_VALOR")	
		Else
			@ nUltLin,144 SAY OemToAnsi(STR0034) 	SIZE 53,07 OF oPanel2 PIXEL //"Valor Original"
			@ nUltLin,204 MSGET SE2->E2_VLCRUZ		SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When .F. Picture PesqPict("SE2","E2_VLCRUZ")	

			nUltLin += 12
			@ nUltLin,144 SAY OemToAnsi(STR0118)	SIZE 53,07 OF oPanel2 PIXEL //"+ Imposto Subst."
			@ nUltLin,204 MSGET oImpSubst VAR nImpSubst	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_IMPSUBS") Valid Fa080Val(nImpSubst,nTxMoeda) When !(AllTrim(SE2->E2_ORIGEM)=='FINI055')
		EndIf
		
		nUltLin += 12
		@ nUltLin,144 SAY OemToAnsi(STR0036)  		SIZE 53,07 OF oPanel2 PIXEL //"- Pagtos.Parciais"
		@ nUltLin,204 MSGET nPagtoParcial			SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When .F. Picture PesqPict("SE2","E2_VALOR")
		
		nUltLin += 12
		@ nUltLin,144 SAY OemToAnsi(STR0120)    	SIZE 53,07 OF oPanel2 PIXEL //"+ Acrescimo"
		@ nUltLin,204 MSGET oAcresc VAR nAcrescF	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When .f. Picture PesqPict("SE2","E2_SDACRES")
		
		nUltLin += 12
		@ nUltLin,144 SAY OemToAnsi(STR0121)		SIZE 53,07 OF oPanel2 PIXEL //"- Decrescimo"
		@ nUltLin,204 MSGET oDecresc VAR nDecrescF	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When .f. Picture PesqPict("SE2","E2_SDDECRE")
		
		If SE2->E2_IMPCHEQ == "S" .and. SE2->E2_JUROS > 0
			nJuros := SE2->E2_JUROS
		Endif
		      
		If GetNewPar( "MV_NGMNTFI","N" ) == 'S' .And. AllTrim(SE2->E2_ORIGEM) $ "MNTA765/MNTA766" //Se houver integração entre os módulos Manutenção de Ativos e Financeiro
			//Caso exista o P.E. MNTA7655 já é realizado o desconto diretamente na SE2
			If !ExistBlock("MNTA7655")
				If !NGCADICBASE('TRX_NUMSE2',"A",'TRX',.F.)
					If !NGINCOMPDIC("UPDMNT22","TEAHZ4",.f.)
						Return
					Endif
				Endif
				
				aArea := GetArea()
				cAliasQry := GetNextAlias()
				cQuery := " SELECT TRX.TRX_DESCON"
				cQuery += " FROM " + RetSqlName( "TRX" )+" TRX"
				cQuery += " WHERE TRX.TRX_NUMSE2 = '" + SE2->E2_NUM + "'"
				cQuery += " AND	TRX.D_E_L_E_T_ <> '*' "
				cQuery := ChangeQuery(cQuery)
				dbUseArea( .T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasQry,.F.,.T. )
				
				nDescont := ( cAliasQRY )->TRX_DESCON //Desconto
				RestArea( aArea )
			EndIf
		EndIf
		nUltLin += 12
		@ nUltLin,144 SAY OemToAnsi(STR0037)	   	SIZE 53,07 OF oPanel2 PIXEL //"- Descontos"
		@ nUltLin,204 MSGET oDescont VAR nDescont	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_DESCONT") Valid Iif(nOldDescont # nDescont,;
				 (Fa080Val(nDescont,nTxMoeda,.T.),nOldDescont := nDescont,Fa080Desc(lTpDesc,lNatApura)), .T.) When lAcessDes
      
		nUltLin += 12
		@ nUltLin,144 SAY OemToAnsi(STR0038)		SIZE 53,07 OF oPanel2 PIXEL //"+ Multa"
		@ nUltLin,204 MSGET oMulta VAR nMulta 		SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_MULTA") Valid Iif(nOldMulta # nMulta, (Fa080Val(nMulta,nTxMoeda,.T.,.T.),nOldMulta := nMulta), .T.) When lAcessMul
			
	  
		nOldMulta := nMulta

	   If cPaisLoc <> "CHI"
			nUltLin += 12
			@ nUltLin,144 SAY OemToAnsi(STR0039)  	SIZE 53,7 OF oPanel2 PIXEL //"+ Tx.Permanenc."
			@ nUltLin,204 MSGET oJuros VAR nJuros 	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_JUROS") Valid Iif(nOldJuros # nJuros, (Fa080Val(nJuros,nTxMoeda,.T.),nOldJuros := nJuros), .T.) When  lAcessJur
		 
			nOldJuros := nJuros
		Else
			nUltLin += 12
			@ nUltLin,144 SAY OemToAnsi(STR0117)  	SIZE 53,7 OF oPanel2 PIXEL //"+ Outros Gastos"
			@ nUltLin,204 MSGET nOtrga 			SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_OTRGA") Valid Iif(nOldJuros # nOtrga, (Fa080Val(nOtrga,nTxMoeda),nOldJuros := nOtrga), .T.);
			When  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
			nOldJuros := nOtrga
		EndIf
		
		nLinha := nUltLin
		//Get do ISS na baixa
		If lCalcIssBx  .and. cPaisLoc == "BRA"
			nLinha +=12
			@ nLinha,144 SAY "- Iss"	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha,204 MSGET oIss VAR nIss	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ")  ;
			Valid ( Iif(nOldIss # nIss, (Fa080Val(nIss,,,.T.),nOldIss := nIss), .T.)) When  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
			nOldIss := nIss
		Endif

		If lInssBx .And. cPaisLoc == "BRA" .And. nInss > 0 .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa		            			
			nLinha +=12
			@ nLinha,144 SAY "- Inss"	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha,204 MSGET oInss VAR nInss	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ")  ;
			 Valid ( Iif(nOldInss # nInss, Fa080Val(nInss,,,.T.), .T.)) When  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
			nOldInss := nInss
			
		Endif
		If lIRPFBaixa    		            
			
			nLinha +=12
			@ nLinha,144 SAY "- Irrf"	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha,204 MSGET oIrrf VAR nIrrf	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ")  ;
			 Valid ( Iif(nOldIRRF # nIrrf, Fa080Val(nIrrf,,,.T.), .T.)) When  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
			nOldIRRF := nIrrf
			
		Endif

		If lPccBaixa .and. cPaisLoc == "BRA"

			nLinha +=12
			@ nLinha,144 SAY "- Pis"	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha,204 MSGET oPis VAR nPis	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ")  ;
			Valid ( Iif(nOldPIS # nPis, Fa080Val(nPis,,,.T.), .T.)) When  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
			oPis:SetEnable( lAcessImp )
			nOldPIS := nPis

			nLinha +=12
			@ nLinha,144 SAY "- Cofins" 	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha,204 MSGET oCofins VAR nCofins SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ") ;
			Valid ( Iif(nOldCofins # nCofins, Fa080Val(nCofins,,,.T.), .T.)) When  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
			oCofins:SetEnable( lAcessImp )
			nOldCofins := nCofins

			nLinha +=12
			@ nLinha,144 SAY "- Csll"	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha,204 MSGET oCsll VAR nCsll	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ") ;
			Valid ( Iif(nOldCSLL # nCsll, Fa080Val(nCsll,,,.T.), .T.)) When  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
			oCsll:SetEnable( lAcessImp )
			nOldCSLL := nCsll
		Endif
		If Empty(nTxMoeda)
			nTxMoeda := 0 //evitar erro type mismatch na função xmoeda, quando parâmetro MV_EASYFIN for igual S e a moeda = 2		
		EndIf
		nValTot	     := SE2->E2_VLCRUZ
		nValEstrang  := nValOrig	  := SE2->E2_SALDO-nTotAbat
		nEstOriginal := nValEstrang-(xMoeda(nJuros+nMulta-nDescont+nOtrga+nImpSubst,nMoedaBco,SE2->E2_MOEDA,,,,nTxMoeda))
		nValMoeda    := Round(Noround(xMoeda(nValOrig,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
		nValMoeda1   := Round(NoRound(xMoeda(SE2->E2_VALOR-nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
		
		If nValTot - nValMoeda == 0.01 .and. SE2->E2_MOEDA > 1 
			nValMoeda := nValTot //ACERTO DE CASAS DECIMAIS QUANDO A GRAVAÇÃO
									// OCORRE POR OUTROS MÓDULOS E BAIXA É TOTAL
		Endif
		nValPgto 		:= nValMoeda+nMulta+nJuros-nDescont+nOtrga+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-Iif(lIRPFBaixa,nIrrf,0)-nIss-Iif(lInssBx,nInss,0)
		nOldValPgto	 := nValPgto
		IF (nMulta+nJuros+nDescont+nOtrga+nImpSubst+nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss) > 0 .or. Round(nValEstrang - xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,,,nTxMoeda),2) > 0.01
			nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
		EndIF
		nValLiq	  := nValPgto-nMulta-nJuros+nDescont-nOtrga-nImpSubst-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss-Iif(lInssBx,nInss,0)
		FA080CORR(nEstOriginal,nTxMoeda)
		
		If lIRPFBaixa .and. SE2->E2_SALDO < nIrrf .and. cNccIr == "1"
			nValPgto := 0.01
			nValEstrang := nValPgto 
		ElseIf lIRPFBaixa .and. SE2->E2_SALDO < nIrrf .and. cNccIr == "2"
			nValPgto := 0
			nValEstrang := nValPgto 
		EndIf
		
		
		If cPaisLoc <> "CHI"
			nLinha +=12
			@ nLinha,144 SAY OemToAnsi(STR0041)	 	SIZE 53,07 OF oPanel2 PIXEL //"= Valor Pago"
			@ nLinha,204 MSGET oValPgto VAR nValPgto	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALOR")  ;
	                   Valid ( oValPgto:Refresh(), FA080REFRE(), Fa080ValVR(nTxMoeda,,,lIRPFBaixa) ) 
																 
		Else
			nLinha +=12
			@ nLinha,144 SAY OemToAnsi(STR0041)	 	SIZE 53,07 OF oPanel2 PIXEL //"= Valor Pago"
			@ nLinha,204 MSGET oValPgto VAR nValPgto	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ")  ;
	                   Valid ( oValPgto:Refresh(), Fa080ValVR(nTxMoeda),FA080REFRE() )
			
		EndIf
		If SE2->E2_MOEDA > 1 .Or. cPaisLoc<>"BRA"
			nLinha +=12
			@ nLinha,144 SAY OemToAnsi(STR0042)  + SubStr(GetMV("MV_SIMB"+cMoeda),1,3)    SIZE 53,07 OF oPanel2 PIXEL //"Valor "
			@ nLinha,204	MSGET oVlEstrang VAR nValEstrang		SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON ;
						  	Picture PesqPict("SE2","E2_VALOR") Valid	FA080Estrang(nTxMoeda,nTolerCP) .And.;
						  														  	FA080REFRE() .And.;
						  														  	Fa080ValEstrang(	nValEstrang,@nTxMoeda,@nValPgto,dBaixa,oValPgto,oTxMoeda,;
																											nJuros,nMulta,nDescont,nOtrga,nImpSubst,nEstOriginal)
			
			If cPaisloc <> "CHI"
				nLinha +=12
			   @ nLinha,144 SAY OemToAnsi(STR0040) 		SIZE 53,07 OF oPanel2 PIXEL //"+ Corr.Monet ria"
			   @ nLinha,204 MSGET oCM VAR nCM				SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_CORREC") ;
					When SE2->E2_MOEDA > 1 .and. (IIf(GetMv("MV_CALCCM") == "S",.T.,.F.) .And. cPaisLoc<>"BRA")
			Else
		      nLinha +=12
		      @ nLinha,144 SAY OemToAnsi(STR0119)				SIZE 53,07 OF oPanel2 PIXEL //"+/- Dif. Cambio"	   
		      @ nLinha,204 MSGET oDifCambio VAR nDifCambio	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_CAMBIO");
		      When .F.	   
		   EndIf
		Endif
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza o valor caso seja necessario calcular juros no titulo          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
		nValMax := SE2->E2_SALDO	
		If ( cPaisLoc <> "BRA" )
			fa080Data(nTxMoeda)
		Else
			If !lPccBaixa
				fa080Data()
			Endif
		Endif

		//³Verifica os botoes de usuarios.³
		If ExistBlock("FA080BTN")
			aButtons:= ExecBlock("FA080BTN",.F.,.F.,{aButtons})
		EndIf
		
		//³Botao para permitir manutencao de bordero    ³
		If ExistBlock("FA080BTH")
			AADD(aButtons, {"SIMULACA", {|| FaActBord(@cNumBor,@cPort240,@cAgen240,@cConta240,@dDataBord,@cModPgto,@cTipoPag,@lAltBord)}, "Bordero"})
		EndIf

		//³Verifica os botoes de usuarios no Template.³
		If ExistTemplate("FA080BTN")
			aButtons := ExecTemplate("FA080BTN",.F.,.F.,{aButtons})
		EndIf

		If ( cPaisLoc <> "BRA" )
	    	AADD(aButtons, {"TABPRICE", {|| (nTxMoeda:=Fa080SetMd(), fA080Val(0,nTxMoeda),Fa080ValVR(nTxMoeda),f080AltBco(nTxMoeda), FA080REFRE(1))},STR0138 }) //Troca de Taxas
	    	
		Endif
		
		//Documento de Entrada - Evitar op simuntanea de baixa e exclusão para não ter registro órfão na SE5 
		If AllTrim(SE2->E2_ORIGEM) == "MATA100"
			Reclock("SE2")
		EndIf
		
		If lPrjCni
			If lPanelFin  //Chamado pelo Painel Financeiro					
				ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{||iIf( iIf( !MovBcoBx(cMotBx, .T.),Fa080BDev(),Fa080Cont().and.;
																( IIf( SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dBaixa), .T.) ) .and.;
																fa080Data(@nTxMoeda,.T.,.T.) .and. fa080Cheq(.F.)) .And.;
																( IIf( FindFunction( "FXMultSld" ) .AND. FXMultSld(), FXVldBxBco( cBanco, cAgencia, cConta, SE2->E2_NATUREZ, SE2->E2_MOEDA ), .T. ) ) .AND.;
																PcoVldLan("000005","01","FINA080") .AND. ( FA080VlCan(dDataCan, cMotBx)).and. Iif( FA080VlNat(cMotBx),.T.,.F.) ,(nOpc1 := 1,oDlg:End()),NIL) },;
																{||nOpc1 := 0,oDlg:End()},aButtons) CENTERED
		    Else		
		   		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||iIf( iIf( !MovBcoBx(cMotBx, .T.),Fa080BDev() .and. IIf( SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dBaixa), .T.),Fa080Cont().and.;
		   														( IIf( SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dBaixa), .T.) ) .and.;
																fa080Data(@nTxMoeda,.T.,.T.) .and. fa080Cheq(.F.)),.T.,.F.) .And.;
																( IIf( FindFunction( "FXMultSld" ) .AND. FXMultSld(), FXVldBxBco( cBanco, cAgencia, cConta, SE2->E2_NATUREZ, SE2->E2_MOEDA ), .T. ) ) .AND.;
																PcoVldLan("000005","01","FINA080") .AND. ( FA080VlCan(dDataCan, cMotBx)) .and. Fa080Lib() .and. Iif( FA080VlNat(cMotBx) ,(nOpc1 := 1,oDlg:End()),NIL) },;
																{||nOpc1 := 0,oDlg:End()},,aButtons) CENTERED
		    Endif
		Else
		If lPanelFin  //Chamado pelo Painel Financeiro					
			ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{||iIf( iIf( !MovBcoBx(cMotBx, .T.),Fa080BDev(),Fa080Cont().and.;
															( IIf( SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dBaixa), .T.) ) .and.;
															fa080Data(@nTxMoeda,.T.,.T.) .and. fa080Cheq(.F.)) .And.;
															( IIf( FindFunction( "FXMultSld" ) .AND. FXMultSld(), FXVldBxBco( cBanco, cAgencia, cConta, SE2->E2_NATUREZ, SE2->E2_MOEDA ), .T. ) ) .AND.;
															PcoVldLan("000005","01","FINA080") .AND. ( FA080VlCan(dDataCan, cMotBx)) ,(nOpc1 := 1,oDlg:End()),NIL) },;
															{||nOpc1 := 0,oDlg:End()},aButtons) CENTERED
	   Else		
	   		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||iIf( iIf( !MovBcoBx(cMotBx, .T.),Fa080BDev() .and. IIf( SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dBaixa), .T.),Fa080Cont().and.;
	   														( IIf( SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dBaixa), .T.) ) .and.;
															fa080Data(@nTxMoeda,.T.,.T.) .and. fa080Cheq(.F.)) .And.;
															( IIf( FindFunction( "FXMultSld" ) .AND. FXMultSld(), FXVldBxBco( cBanco, cAgencia, cConta, SE2->E2_NATUREZ, SE2->E2_MOEDA ), .T. ) ) .AND.;
															PcoVldLan("000005","01","FINA080") .AND. ( FA080VlCan(dDataCan, cMotBx)) .and. Fa080Lib() ,(nOpc1 := 1,oDlg:End()),NIL) },;
															{||nOpc1 := 0,oDlg:End()},,aButtons,,,,.F.,,,) CENTERED
	   Endif
	    EndIf     
	   
	Else 
		// rotina automatica
	  	lCont := .F.
		aOldValores:={nDescont,nMulta,nJuros,nOTRGA}

		aValidGet:= {}
	   	IF (nT := ascan(aAutoCab,{|x| x[1]='AUTMOTBX'})) > 0
			cMotBx	:=	aAutoCab[nT,2]		// Sergio Fuzinaka - 28.05.02
			If Len(AllTrim(cMotBx)) == 3
				If (nY := ascan(aMotBx,{|x| SubStr(x,1,3) == AllTrim(cMotBx)})) > 0
					aAutoCab[nT,2] := SubStr(aMotBx[nY],07,10)
					cMotBx := aAutoCab[nT,2]
				EndIf
			EndIf
	 		Aadd(aValidGet,{'cMotBx' ,aAutoCab[nT,2],"fa080BDev()",.t.})
	 	EndIf	
		If MovBcobx(cMotBx, .T.)	// Sergio Fuzinaka - 28.05.02
			IF (nT := ascan(aAutoCab,{|x| x[1]='AUTBANCO'})) > 0
				Aadd(aValidGet,{'cBanco' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,,,.T.)",.t.})		
			Endif	
		    IF (nT := ascan(aAutoCab,{|x| x[1]='AUTAGENCIA'}) ) > 0
				Aadd(aValidGet,{'cAgencia' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,@cAgencia,,.T.)",.t.})		
			EndIf	
		   	IF (nT := ascan(aAutoCab,{|x| x[1]='AUTCONTA'}) ) > 0
				Aadd(aValidGet,{'cConta' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,@cAgencia,@cConta,.T.,,.T.)",.t.})		
			EndIf	
		EndIf	
		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTDTBAIXA'}) ) > 0
			dBaixa :=	aAutoCab[nT,2]
			Aadd(aValidGet,{'dBaixa' ,aAutoCab[nT,2],"fA080Data()",.t.})		
		EndIf	

		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTDTDEB'}) ) > 0
			dDebito :=	aAutoCab[nT,2]
			Aadd(aValidGet,{'dDebito' ,aAutoCab[nT,2],"(dDebito >= dBaixa  .and. DtMovFin(dDebito))",.t.})		
		EndIf	

		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTCHEQUE'}) ) > 0
			cCheque := aAutoCab[nT,2]
			Aadd(aValidGet,{'cCheque' ,aAutoCab[nT,2],"fA080Cheq()",.t.})		
		EndIf	
		IF VisualSX3("E5_HISTOR") .AND. (nT := ascan(aAutoCab,{|x| x[1]='AUTHIST'}) ) > 0
			cHist070 := aAutoCab[nT,2]
			Aadd(aValidGet,{'cHist070' ,aAutoCab[nT,2],"CheckSX3('E5_HISTOR')",.t.})		
		EndIf	
     
		nOldValor := aOldValores[1]
		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTDESCONT'}) ) > 0
			nDescont := aAutoCab[nT,2]
			Aadd(aValidGet,{'nDescont' ,aAutoCab[nT,2],'Fa080Val(nDescont,,.f.) .and. IIF(cPaisLoc<>"CHI",nDescont<= xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,nMoedaBco,dBaixa,MsDecimais(1)+1,'+ STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2]) +'),iF(SE2->E2_MOEDA==1,nDescont<=moeda(SE2->E2_SALDO,1,"P",dBaixa),.T.))  .and. if((SE2->E2_IMPCHEQ == "S" .or. lChqPre) .and. nDescont!=nOldValor,Help(" ",1,"JACHQSTIT")!=NIL,.t.)',.t.})
		EndIf	
            
		nOldValor := aOldValores[2]
		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTMULTA'}) ) > 0
			nMulta :=  aAutoCab[nT,2]
			Aadd(aValidGet,{'nMulta' ,aAutoCab[nT,2],'Fa080Val(nMulta,,.f.) .and. if((SE2->E2_IMPCHEQ == "S" .or. lChqPre) .and. nMulta!=nOldValor,Help(" ",1,"JACHQSTIT")!=NIL,.t.)',.t.})
		EndIf	
			
		nOldValor := aOldValores[3]
		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTJUROS'}) ) > 0
			nJuros := aAutoCab[nT,2]
			Aadd(aValidGet,{'nJuros' ,aAutoCab[nT,2],'Fa080Val(nJuros,,.f.) .and. if((SE2->E2_IMPCHEQ == "S" .or. lChqPre) .and. nJuros!=nOldValor,Help(" ",1,"JACHQSTIT")!=NIL,.t.)',.t.})
		EndIf	                    
			
		nOldValor := aOldValores[4]                
		If cPaisLoc == "CHI"
			IF (nT := ascan(aAutoCab,{|x| x[1]='AUTOUTGAS'}) ) > 0
				Aadd(aValidGet,{'nOTRGA' ,aAutoCab[nT,2],'Fa080Val(nOTRGA) .and. if(!fa080Digit() .and. nOTRGA!=nOldValor,Help(" ",1,"JACHQSTIT")!=NIL,.t.)',.t.})		
			EndIf	                             			
		EndIf			               
		
		IF SE2->E2_MOEDA > 1               
			If cPaisLoc == "BRA"
				IF (nT := ascan(aAutoCab,{|x| x[1]='AUTTXMOEDA'}) ) > 0
					nTxMoeda	:=	aAutoCab[nT,2]
					Aadd(aValidGet,{'nTxMoeda' ,aAutoCab[nT,2],"Fa080Val(0,"+STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2])+")",.t.})		
				EndIf	                            
			Endif
			IF (nT := ascan(aAutoCab,{|x| x[1]='AUTVLRME'}) ) > 0
				nValEstrang	:=	aAutoCab[nT,2]
				If !cModulo $ "EIC/EEC/EFF/ESS"
					Aadd(aValidGet,{'nValEstrang' ,aAutoCab[nT,2],"Fa080Estrang() .And. Fa080ValEstrang(nValEstrang,"+STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2])+",@nValPgto,dBaixa,,,nJuros,nMulta,nDescont,nOtrga,nImpSubst,nEstOriginal)",.T.})
				Else
					Aadd(aValidGet,{'nValEstrang' ,aAutoCab[nT,2],"Fa080Estrang("+STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2])+") .And. Fa080ValEstrang(nValEstrang,"+STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2])+",@nValPgto,dBaixa,,,nJuros,nMulta,nDescont,nOtrga,nImpSubst,nEstOriginal)",.T.})
				EndIf
			ElseIf Empty(nValEstrang)
				nValEstrang := SE2->E2_SALDO-nTotAbat
				lBxEstTotal := .T.
			EndIf	                            
		ENDIF			
		
		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTBENEF'}) ) > 0
			cBenef :=	aAutoCab[nT,2]
			Aadd(aValidGet,{'cBenef' ,aAutoCab[nT,2],'.t.',.t.})		
		EndIf	                    

		IF (nT := ascan(aAutoCab,{|x| x[1]='AUTVLRPG'}) ) > 0
//			Linha comentada para tratar juros na rotina automatica. Sistema não recalculava o valor de pagamento quando existia juros, 
//			baixando assim o titulo totalmente ao inves de baixar primeiro o juros e depois o saldo.
			If (!IsInCallStack('FINA450')) .or. (IsInCallStack('FINA450') .and. aAutoCab[nT,2]+SE2->((E2_PIS-E2_VRETPIS) + (E2_COFINS-E2_VRETCOF) + (E2_CSLL-E2_VRETCSL)) != SE2->E2_SALDO .and. nSelecP <> nSelecR)
				Aadd(aValidGet,{'nValPgto' ,aAutoCab[nT,2],"Fa080ValVR("+STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2])+")",.t.})
			EndIf
		EndIf

		nValTot	  := SE2->E2_VLCRUZ			
		nValOrig	:= SE2->E2_SALDO-nTotAbat
		//posicionado a validação dos gets aqui para alimentar corretamente as variáveis para depois utiliza-las	
	 	If ! SE2->(MsVldGAuto(aValidGet)) // consiste os gets
		  	Return .f. /*Function fA080Tit*/
	    EndIf		
		
		If !(FWIsInCallStack('FINA450')) .AND. ( Type('lF080Auto') =='U' .or. ! lF080Auto)
			If !lBxEstTotal
				nValMoeda := Round(Noround(xMoeda(nValOrig,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
				nValPgto	 := nValMoeda+nMulta+nJuros-nDescont+nOtrga+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss
			Else
				nValPgto  := Iif(SE2->E2_MOEDA > 1, nValPgto, nValEstrang)   		
			EndIf
		EndIf
   	
		If cPaisLoc =="CHI" .And. SE2->E2_MOEDA <> 1
			nValPgto	  := nValTot+nMulta+nJuros-nDescont+nOTRGA
		Endif

		IF (nMulta+nJuros+nDescont+nOTRGA) > 0 .or. Round(nValEstrang - xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa),2 ) > 0.01
			nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
		EndIF

		nValLiq	  := nValPgto-nMulta-nJuros+nDescont-nOtrga-nImpSubst-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss
                        
		nEstOriginal := nValEstrang-(xMoeda(nJuros+nMulta-nDescont+nOTRGA,nMoedaBco,SE2->E2_MOEDA))

		FA080CORR(nEstOriginal,nTxMoeda)
	 	nValMax := SE2->E2_SALDO
		nOpc1 := 1
	Endif	
	If nOpc1 == 0
		nErro ++
	EndIf

	//Se o reg for um doc de entrada, libera o registro, independente da op. 
	If AllTrim(SE2->E2_ORIGEM) == "MATA100"
		SE2->(MSUnlock())
	EndIf
	
	If nErro > 2
		nErro :=0
		If Abandona()
			MsUnlock()
			Exit
		Endif
	Endif

	NUMCHEQUE := cCheque	//para contabilizar o numero do cheque

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³ Verifica onde ocorrer  a contabiliza‡„o 								   ³
	*³ Se for informado num. do cheque, deve contabilizar pela baixa		   ³
	*³ Se n„o informou num.do cheque ou num. cheque come‡ar com "*" na gera‡„o ³
	*³ Contabiliza tamb‚m caso seja CAIXA.                           		   ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (!Empty( cCheque ) .and. SubStr( cCheque, 1, 1 ) != "*" .and. SE2->E2_IMPCHEQ != "S") .or. ;
			cContabiliza = "B" .Or. cContabiliza = "A" .or. ;
			cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .or. cBanco$GetMV("MV_CARTEIR")
			If !IsInCallStack('FINA450')
				lContabiliza := .T.
			Endif
	Endif

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Caso motivo seja VENDOR, dever   ser contabilizado na baixa. 			   ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(cMotBx)
		cMotBx		:= aDescMotBx[1] 	//NORMAL
	Endif

	If TrazCodMot(cMotBx) $ "VEN/DEB"
		lContabiliza := .T.
	EndIF

	If MovBcoBx(cMotBx, .T.) .and. !ChqMotBx(cMotBx)
		lContabiliza := .T.
	EndIF
	If cContabiliza == "C" .And. !ChqMotBx(cMotBx)
		lContabiliza := .T.
	EndIF

	If ExistBlock("F080FILEMI")
		cNomeCpo := ExecBlock("F080FILEMI",.F.,.F.,{})
		If SE2->(FieldPos(cNomeCpo)) ==0
			cNomeCpo := 'E2_EMISSAO'
		EndIf
	EndIf
      
	If nOpc1 == 1 .And. dBaixa < SE2->(&cNomeCpo) 
		Help( " ", 1, "DATAERRP",, STR0150,1,0 ) //"Data do pagamento não pode ser menor que a data de emissâo do título correspondente"
		If Type('lF080Auto') =='U' .or. ! lF080Auto
			Loop
		Else
			nopc1 := 0
		Endif
	Endif

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Verifica se valor da baixa ‚ maior que valor maximo a pagar 			  ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpc1 == 1 .and. SE2->E2_MOEDA == 1
		IF nOpc1 == 1 .And. Str(nValPgto,17,2) > STR(SE2->E2_SALDO+nJuros+nMulta-nDescont-nTotAbat+nOtrga+nImpSubst+nAcresc-nDecresc+nTolerCp-nPis-nCoFins-nCsll-Iif(lIRPFBaixa,nIrrf,0)-nIss,17,2)
			If !IsInCallStack("FINA450") .And. ( !lMVCNBImpg .Or. ( lMVCNBImpg .And. !(FwIsInCallStack("Fa430gera"))))
				If !(nValPgto < nIrrf) 
					Help(" ",1,"ValorMaior")
					If Type('lF080Auto') =='U' .or. ! lF080Auto
						Loop
					Else
						nopc1 := 0
					Endif	  
				EndIf               
			Endif	
		Endif
	EndIf
         
	If nOpc1 == 1 
		If !Fa080ValCh()
			If Type('lF080Auto') =='U' .or. ! lF080Auto
				Loop
			Else
				nopc1 := 0
			Endif	
		Endif
	EndIf

   //Baixa de titulo em moeda forte com a cotacao da moeda igual a zero !!
	If nOpc1 == 1 .and. SE2->E2_MOEDA > 1 .and. RECMOEDA(dBaixa,cMoeda) == 0 .and. nTxMoeda == 0 .and. ;
			nValPgto == 0 .and. nValEstrang == 0
		Help(" ",1,"TX_MOEDA",, STR0130,1,0)	//"Nao sera possivel baixar este titulo pois a cotacao da moeda do titulo na data da baixa é igual a zero."
		// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
		// dados, senao abandona a baixa.
		If Type('lF080Auto') =='U' .or. ! lF080Auto
			loop
		Else
			nOpc1 := 0
		Endif
	Endif

	If	SE5->(FieldPos("E5_VLACRES")) >0  .and. SE5->(FieldPos("E5_VLDECRE")) >0 .And. nAcresc > nValPgto
		nValPadrao 	:= 0
		nAcresc		:= nValPgto
	Else
		If nValPgto < nIrrf .and. nValPgto != 0.01
			nValPadrao := nValPgto
		Else
			nValPadrao 	:= nValPgto-(nJuros+Iif(SE2->E2_MOEDA<=1,nCM,0)+nMulta-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss)
		EndIf
	EndIf
	nOpt := IIF(Str(nValPadrao,14,2)=Str(Moeda(SE2->E2_SALDO,1,"P",dBaixa),14,2),1,2)

	If nOpc1 <> 1
		lRet := .F.
		MsUnlock()
		Exit
	Endif

	If SE2->( Deleted() )
		nOpc1 := 0
		Help( " " , 1 , "RECNO" )
		Return lRet
	EndIf

	IF nOpc1 == 1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada - para confirmacao da baixa			   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFa080Tit
			lRet	:= ExecBlock("FA080TIT",.F.,.F.)
		Endif

		//.....
		//    Conforme situacao do parametro abaixo, integra com o SIGAGSP
		//    MV_SIGAGSP - 0-Nao / 1-Integra
		//    Lancamento de Orcamentacao das Baixas
		//    .......
		If lRet .And. GetNewPar("MV_SIGAGSP","0") == "1" 
			lRet := GSPF050()
		EndIf

		If !lRet
			Return lRet /*Function fA080Tit*/
		EndIf	

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se modalidade do SPB é valida.								 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lSpbInUse .and. (Type('lF080Auto') =='U' .or. !lF080Auto)
			cModSpb := Substr(cModSpb,1,1)
			IF !(SpbTipo("SE2",cModSpb,SE2->E2_TIPO))
				Loop
			Endif
		Endif

		*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		*³Verifica se n„o h  campos em branco									³
		*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF Empty(cMotBx)
			Help(" ",1,"FA080MOT")
			DbSelectArea("SE2")
			If Type('lF080Auto') =='U' .or. ! lF080Auto
				Loop
			Else
				Exit
			Endif	
		EndIF
		IF (Funname() <> "FINA450" .and. Funname() <> "FINA703") .And. SE2->E2_IMPCHEQ != "S" .And. Iif(Type("lF450Auto")=="L",!lF450Auto,.T.)
			IF ((MovBcoBx(cMotBx, .T.) .and. (Empty(dBaixa) .Or. Empty(cBanco) .Or. Empty(cConta))) .Or. ;
					( nValPgto < 0 ))
				Help(" ",1,"FA080VAZ")
				DbSelectArea ("SE2")
				If Type('lF080Auto') =='U' .or. ! lF080Auto
					Loop
				Else
					Exit
				Endif	
			Endif
		Endif

		IF (nTotAbat = 0 .and. nDescont = 0 .and. nDecresc = 0 .and. nPis = 0 .and. ;
			nCofins = 0 .and. nCsll = 0 .and. nIrrf = 0 .and. nIss = 0.and. nValPgto = 0) .or. ;
				( ( nValPgto=0 .and. ( (nTotAbat+nDescont+nDecresc-nJuros-nAcresc+nPis+nCofins+nCsll+nIrrf+nIss)!=xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,nMoedaBco,dBaixa,,nTxMoeda) .and. ;
				                       nDescont > (Round(nMulta+nJuros+xMoeda(SE2->E2_SALDO-nTotAbat,SE2->E2_MOEDA,1,dBaixa,3,nTxMoeda),2)+nAcresc-nDecresc) ) ) .and.;
				!(nValPgto = 0 .and. lIRPFBaixa .and. nIrrf > 0 .and. cNccIr == "2"))
			Help(" ",1,"FA070INV")
			dbSelectArea("SE2")
			If Type('lF080Auto') =='U' .or. ! lF080Auto
				Loop
			Else
				Exit
			Endif	
		//Verifica cheque sobre titulo com valor de juros, multa ou desconto e que tornem o 
		//valor pago diferente do tratado na geracao do cheque sobre titulo (FINA390)
		ElseIf (nDescont+nMulta+nJuros > 0 .and. SE2->E2_IMPCHEQ == "S")
			IF SEF->(MSSEEK(xFilial("SEF")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_NUMBCO)))
				If !(Round(nValPgto,2) == Round(SEF->EF_VALOR,2))
					Help(" ",1,"JACHQSTIT")
					If Type('lF080Auto') =='U' .or. ! lF080Auto
						Loop
					Else
						Exit
					Endif	
				Endif
			Endif				
		Endif

	 	 If !F080VldRec()
			DbSelectArea("SE2")
			If Type('lF080Auto') =='U' .or. ! lF080Auto
				Loop
			Else
				Exit
			Endif	
		Endif
       
		IF (nValPgto-nAcresc+nDecresc) != nValLiq .And. TrazCodMot(cMotBx) == "VEN"
			Help(" ",1,"FA080BXPARC")
			dbSelectArea("SE2")
			If Type('lF080Auto') =='U' .or. ! lF080Auto
				Loop
			Else
				Exit
			Endif	
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Rotina de validacao e execucao da baixao via SPB           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lSPB 
			IF !F080BxSPB(cClearing,cTipoPgto,cStored,cHora,@cCodBar,@nEventoSpb)
				Loop
			Endif
		Endif				
		*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		*³Soma nos totalizadores									 	  ³
		*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nTotAGer += nValPgto
		nTotADesc+= nDescont+nDecresc
		nTotAMul += nMulta
		nTotAJur += nJuros+nAcresc
		nTotADesp+=Iif(SE2->E2_MOEDA<=1,nCM,0)
		VALOR := nValPgto				
		cPadrao:="530"
		*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		*³Contabiliza se existir o lan‡amento e:						    ³
		*³ - a contabiliza‡„o for feita na baixa (parƒmetro mv_ctBaixa) ou  ³
		*³ - se digitou numero de cheque ou se a contabiliza‡„o for on-line ³
		*³ Verifica existencia do lan‡amento padr„o da baixa e/ou do gera‡„o³
		*³ do t¡tulo referente ao Vendor.									³
		*³ Lan‡amento Padr„o referente a baixa   := "530"                   ³
		*³ Lan‡amento Padr„o referente ao Vendor := "518"                   ³
		*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lPadraoBx := VerPadrao(cPadrao) .And. lContabiliza
		lPadraoVd := VerPadrao( "518" ) .And. lContabiliza

	  	IF Type('lF080Auto') =='U' .or. ! lF080Auto
			// Verifica se esta utilizando multiplas naturezas
			// E chama a rotina para distribuir o valor entre as naturezas
			If MV_MULNATP .and. lMultNat
				MultNatB("SE2",.F.,STR(mv_par05,1),@lOk,@aColsSEV,@lMultNat)
			Endif
		Endif		
        
		If EMPTY(SE2->E2_BAIXA)
			lDtBaixa := .F.
		ElseIf !EMPTY(SE2->E2_BAIXA)
			lDtBaixa := .T.
		EndIf

		If lContabiliza .and. FindFunction("CtbTranUniq") 
			CtbTranUniq()
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicio da prote‡„o via TTS								  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Begin Transaction
			If FwIsInCallStack('FINA450') .And. lMVBP10925
				nValPgto := noldPcc 
			EndIf 
			aAreaSA2 := SA2->(GetArea())
			lBaixou :=	fa080Grv(lPadraoBx,lPadraoVd,AllTrim(FunName())=="FINA430",cLanca, ,nTxMoeda,dDebito,,lMultNat,lUsaFlag)
  			RestArea(aAreaSA2)
   			

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Grava título do IRRF e informações relacionadas ³ 
			//³quando IRPF na Baixa                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lBaixou 

				If lIRPFBaixa


					RestArea(aAreaSA2)
					RecLock("SE2")

					//Atualizo o valor do IR apenas para calculo antigo do IRRF na baixa	
					If !lNewIrBx .Or. SA2->A2_TIPO == "F"
						If lDtBaixa
							SE2->E2_IRRF += nIRRF
						ElseIf Empty(SE2->E2_NUMBOR) 
							SE2->E2_IRRF := nIRRF
						EndIf
					Endif

					If SE2->(FieldPos("E2_VRETIRF")) > 0 
						SE2->E2_VRETIRF += nIrrf
					Endif

					MsUnlock()

				Else
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Caso tenha havido retenção na inclusão do pagamento³
					//³antecipado efetua a exclusão do título de IR (TXA) ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SE2->E2_TIPO $ MVPAGANT .And. SE2->E2_IRRF > 0
						F241DelTxIR("FINA080",SE2->(Recno()),SE2->E2_IRRF)				
					EndIf
               	
				EndIf               		
			EndIf
			
			//Caso a retenção ocorreu na inclusão do pagamento antecipado  efetua a exclusão do título PCC
			#IFDEF TOP
			If (lContrRet .and.  SE2->E2_TIPO $ MVPAGANT .And. (SE2->(E2_PIS + E2_COFINS + E2_CSLL) > 0 .Or. SE2->E2_ISS > 0))
				//posicionar na SE5 gerada na inclusao da PA

				nRcN_PASE5 := SE5->( RecNo() )
				lPAMov := .F.
				//verifica se PA possui movimentacao bancaria
				nRecPAInc := F080MovPA(.T.,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA)
				If  nRecPAInc > 0
					SE5->(DBGoto(nRecPAInc))
					lPAMov := .T.
				EndIf
				//verifica se PA possui registro de inclusao
				nRecPAInc := F080MovPA(.F.,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA)
				If	nRecPAInc > 0
					 SE5->(DBGoto(nRecPAInc))
					 lPAMov := .T.	
				EndIf
				If 	lPAMov			
				
					aRecSE5 := FImpDelTit("SE5",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ)
					nRecSe5 := SE5->(Recno())
					For nY := 1 to Len(aRecSE5)
						SE5->(MSGoto(aRecSE5[nY]))	
						RecLock("SE5",.F.)          					
	
						//Se nao reteve somente IRRF
						If 	(!Empty(SE5->E5_PRETPIS) .And. !Empty(SE5->E5_PRETCOF) .And. !Empty(SE5->E5_PRETCSL)) .and. SE5->E5_MOTBX<>"CMP"					
							SE5->E5_PRETPIS := "1"
							SE5->E5_PRETCOF := "1"
							SE5->E5_PRETCSL := "1"
						Endif
											
						MsUnlock()
					Next
		
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Exclui os registros de relacionamentos do SFQ                                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SE5->(dbGoto(nRecSe5))
					FImpDelSFQ("SE5",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ)
	
					aRecSE2 := FImpExcTit("SE2",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA)
					For nY := 1 to Len(aRecSE2)
						SE2->(MSGoto(aRecSE2[nY]))	
						FaAvalSE2(4)
					Next
	
					//Exclui os registros de relacionamentos do SFQ
					SE5->(dbGoto(nRecSe5))
					FImpExcSFQ("SE2",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA)
					
					FDelTxBx(SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ,SE2->E2_PARCPIS,SE2->E2_PARCCOF,SE2->E2_PARCSLL)			
	
					If lInssBx .And. !lInsPub
						FDelTxInss(SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ)					
					Endif
					
					IF ( IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) .AND.;
						EMPTY(SE2->E2_NUMBOR) .And. SE5->E5_VRETISS != 0 )
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Apaga tambem os registro de impostos-ISS   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						SE5->(dbGoto(nRecSe5))
						SE2->(dbGoTo(nSalvRec))
						dbSelectArea("SE2") 
						dbSetOrder(1)
						cChavePai := SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
						If MsSeek(xFilial("SE2")+SE2->(E2_PREFIXO+E2_NUM))
							cChaveImp := SE2->(E2_PREFIXO+E2_NUM)
							cNatIss	:= AllTrim(&(GetMv("MV_ISS")))
							While !Eof() .And. E2_FILIAL+E2_PREFIXO+E2_NUM == xFilial("SE2")+cChaveImp
								IF E2_TIPO $ MVISS .And. ;
									AllTrim(E2_NATUREZ) == cNatIss .And. ;
									STR(SE2->E2_SALDO,17,2) == STR(SE2->E2_VALOR,17,2) .and. ;
									(AllTrim(SE2->E2_ORIGEM) $ "FINA050|FINA080|FINA090|FINA091") .and. ;
									SE5->E5_SEQ == SE2->E2_SEQBX .And. AllTrim(SE2->E2_TITPAI) == AllTrim(cChavePai)
									If lExistFJU 
										FinGrvEx("P")
									Endif							
									RecLock( "SE2" ,.F.,.T.)
									dbDelete( )
								EndIf
								dbSkip()
							Enddo
						Endif
					EndIf
								
					SE5->(dbGoto(nRecSe5))
					If SE5->E5_TIPODOC = "BA" .And. SE5->E5_MOTBX = "PCC"
						RecLock("SE5",.F.) 
						SE5->E5_SITUACA := "C"
						If SE5->( FieldPos( "E5_DTCANBX" ) ) > 0
							SE5->E5_DTCANBX := dDataBase
						EndIf
						SE5->(MsUnlock())
					EndIf	
				EndIf

				SE5->( dbGoTo( nRcN_PASE5 ) )
			Endif   

			#ENDIF

			If lAltBord .and. !Empty(cNumBor)
				FaGrvActBd(cNumBor,cPort240,cAgen240,cConta240,dDataBord,cModPgto,cTipoPag)
			Endif				

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Rotina de Gravacao dos dados do SPB						   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lSPB 
				RecLock("SE2")
				SE2->E2_OKSPB		:= "A"		// Em Aberto, aguardando confirmacao
				SE2->E2_CLEARIN	:= cClearing
				SE2->E2_TPPGTO		:= cTipoPgto
				SE2->E2_HORASPB	:= cHora
				SE2->E2_CODBAR		:= cCodBar
				SE2->E2_EVTSPB		:= nEventoSPB				
				MsUnlock()
			Endif				
			nTotAbat := Round(NoRound(xMoeda(nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
			ABATIMENTO := nTotAbat

			//Reposiciono o arquivo de fornecedores para a contabilizacao
			SA2->(dbSetOrder(1))
			SA2->(MsSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))

			//Reposiciono o arquivo de BANCOS para a contabilizacao
			SA6->(DbSetOrder(1))
	    	SA6->(dbSeek(xFilial("SA6")+cBanco+cAgencia+cConta))

			IF !lAut
				If cPaisLoc == "BRA" .AND. (lPccBaixa .Or. lIRPFBaixa .Or. lCalcIssBx .Or. lInssBx)
					nOldVlPis := SE2->E2_PIS
					nOldVlCof := SE2->E2_COFINS
					nOldVlCsl := SE2->E2_CSLL
					nOldVlIrf := SE2->E2_IRRF
					nOldVlIss := SE2->E2_ISS         
					
					//Armazeno os valores retidos de impostos, se os mesmos foram gerados por um bordero
					If lBordero
						nOldRetPis := SE2->E2_VRETPIS
						nOldRetCof := SE2->E2_VRETCOF               
						nOldRetCsl := SE2->E2_VRETCSL
					EndIf
					
					Reclock("SE2")																		

					If lCalcIssBx  
						SE2->E2_ISS := nOldVlIss
						SE2->E2_VRETISS += If(lISSF631,0,nIss)
					EndIf
	
					//Gravo valores retidos para o titulo permitindo a contabilizacao
					If cPaisLoc == "BRA" .AND. lPccBaixa  					
						SE2->E2_PIS := nPis
						SE2->E2_COFINS := nCofins
						SE2->E2_CSLL := nCsll
					
					  If lGerImp .And. !lMVCnbImpg
						SE2->E2_VRETPIS += nPis
						SE2->E2_VRETCOF += nCofins
						SE2->E2_VRETCSL += nCsll
					  Endif	
						
						If SE2->E2_VRETPIS == 0
							SE2->E2_PRETPIS := "1"
							SE2->E2_PRETCOF := "1"
							SE2->E2_PRETCSL := "1"
						EndIf
						
					Endif
					MsUnlock()   
					
					If lInssBx .And. cPaisLoc = "BRA" .And. Empty(SE2->E2_NUMBOR) .And. !lInsPub//!(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa							
						nParciais	:= SE2->E2_VALOR-SE2->E2_SALDO 
						nRecSE5Ins := SE5->( RecNo() ) 
						aBaixa := Sel080Baixa("VL /BA /CP /",SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,@nTotAdto,@lBaixaAbat,SE2->E2_FORNECE,SE2->E2_LOJA,@lBxCec,.F.,@lNotBax,@nTotImpost,@lAglImp,.T.)
						SE5->( dbGoTo( nRecSE5Ins ) )
						
						If Len(aBaixaSE5) == 1 //primeira baixa
							SE2->E2_INSS	:=	nInss												   
						Endif						
						If ((nInss > 0 .And. !lAcmPJ) .Or. (lAcmPJ)) .And. SA2->A2_TIPO == "J"
							If Len(aBaixaSE5) == 1 //primeira baixa
								SE2->E2_VRETINS	:= nVretInss
							Endif								
						ElseIf SA2->A2_TIPO == "F"							
							If Len(aBaixaSE5) == 1 //primeira baixa
								SE2->E2_VRETINS:= nVretInss
							Endif								
						Endif																					
					Endif	  										
					MsUnlock()   					
				Endif
					
				If MV_MULNATP .and. lMultNat .and. lOk
					lContabMNat := lContabiliza .and. mv_par03 == 1

					MultNatC( 	"SE2" /*cAlias*/,;
									@nHdlPrv /*@nHdlPrv*/,;
									@nTotal /*@nTotal*/,;
									@cArquivo /*@cArquivo*/,;
									lContabMNat /*lContabiliza*/,;
									.F. /*lBxLote*/,;
									STR( mv_par05, 1 ) /*cReplica*/,;
									 /*nTotLtEZ*/,;                                
									lOk /*lOk*/,;
									aColsSEV /*aCols*/,;
									lBaixou /*lBaixou*/,;
									aGrvLctPco /*aGrvLctPco*/,;
									lUsaFlag /*lUsaFlag*/,;
									@aFlagCTB /*@aFlagCTB*/	)

					If VerPadrao("537") .and. !lPadraoBx .and. cPadrao=="530"
						lPadraoBx := .T.
					Endif
					
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de entrada antes da contabilizacao.			³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("F080ACONT")
					ExecBlock("F080ACONT",.F.,.F.)
				EndIf				
	
				IF ( lPadraoBx .or. lPadraoVd ) .and. cLanca == "S" .and. !lMultNat
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Inicializa Lancamento Contabil                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nHdlPrv := HeadProva( cLote,;
						                      "FINA080" /*cPrograma*/,;
						                      Substr(cUsuario,7,6),;
						                      @cArquivo )
				Endif
				IF lPadraoBx .and. cLanca == "S"  .and. !lMultNat
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Prepara Lancamento Contabil                                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
							aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
						Endif
						nTotal += DetProva( nHdlPrv,;
						                    cPadrao,;
						                    "FINA080" /*cPrograma*/,;
						                    cLote,;
						                    /*nLinha*/,;
						                    /*lExecuta*/,;
						                    /*cCriterio*/,;
						                    /*lRateio*/,;
						                    /*cChaveBusca*/,;
						                    /*aCT5*/,;
						                    /*lPosiciona*/,;
						                    @aFlagCTB,;
						                    /*aTabRecOri*/,;
						                    /*aDadosProva*/ )
				Endif
				IF lPadraoVd .and. cLanca == "S" .and. TrazCodMot(cMotBx) == "VEN"  .and. !lMultNat
					dbSelectArea( "SE2" )
					IF (dbSeek( cFilial +  Left(SE2-> E2_TITORIG,nTamTitOri)) )
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Prepara Lancamento Contabil                                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
								aAdd( aFlagCTB, {"E2_LA", "S", "SE2", SE2->( Recno() ), 0, 0, 0} )
								aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
							Endif
							nTotal += DetProva( nHdlPrv,;
							                    "518" /*cPadrao*/,;
							                    "FINA080" /*cPrograma*/,;
							                    cLote,;
							                    /*nLinha*/,;
							                    /*lExecuta*/,;
							                    /*cCriterio*/,;
							                    /*lRateio*/,;
							                    /*cChaveBusca*/,;
							                    /*aCT5*/,;
							                    /*lPosiciona*/,;
							                    @aFlagCTB,;
							                    /*aTabRecOri*/,;
							                    /*aDadosProva*/ )
					Endif
				Endif        
						
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PcoDetLan("000005","01","FINA080")

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Finaliza a gravacao dos lancamentos do SIGAPCO ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PcoFinLan("000005")
				
				IF ( lPadraoBx .or. lPadraoVd ) .and. cLanca=="S" .and. lBaixou
					//-- Se for rotina automatica força exibir mensagens na tela, pois mesmo quando não exibe os lançametnos, a tela 
					//-- sera exibida caso ocorram erros nos lançamentos padronizados
					If lF080Auto
						lSetAuto := _SetAutoMode(.F.)
						lSetHelp := HelpInDark(.F.)
						If Type('lMSHelpAuto') == 'L'
							lMSHelpAuto := !lMSHelpAuto
						EndIf						
					EndIf

					lDigita	:= If( mv_par01 == 1, .T., .F. )
					lAglut	:= If( mv_par02 == 1, .T., .F. )
					If lFina080
						Execblock("FINA080",.F.,.F.)
					Endif
					
					If ( FindFunction( "UsaSeqCor" ) .And. UsaSeqCor() ) 
						aAdd(aDiario,{"SE5",SE5->(RecNo()),cCodDiario,"E5_NODIA","E5_DIACTB"})
					Else
						aDiario := {}
					EndIf               

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Efetiva Lan‡amento Contabil                                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						RodaProva( nHdlPrv,;
						           nTotal )
						cA100Incl( cArquivo,;
						           nHdlPrv,;
						           3 /*nOpcx*/,;
						           cLote,;
						           lDigita,;
						           lAglut,;
						           /*cOnLine*/,;
						           /*dData*/,;
						           /*dReproc*/,;
						           @aFlagCTB,;
						           /*aDadosProva*/,;
						           aDiario )
						aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
						
					If lF080Auto
						HelpInDark(lSetHelp)
						_SetAutoMode(lSetAuto)
						If Type('lMSHelpAuto') == 'L'
							lMSHelpAuto := !lMSHelpAuto
						EndIf
					EndIf					

					If	!Empty( cCheque ) .and.;
						left( cCheque, 1 ) != "*" .and.;
						lGerouSef .and.;
						!SEF->( Eof( ) ) .and.;
						!lUsaFlag
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Atualiza SEF apos contabiliza‡„o           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						Reclock("SEF")
						SEF->EF_LA := "S"
					Endif
				Endif
				If cPaisLoc == "BRA" .AND. lPccBaixa
					Reclock("SE2")                                            
					SE2->E2_PIS := nOldVlPis
					SE2->E2_COFINS := nOldVlCof
					SE2->E2_CSLL := nOldVlCsl
					SE2->E2_IRRF := nOldVlIrf

					//Restauro os valores retidos de impostos, se os mesmos foram gerados por um bordero
					If lBordero
						SE2->E2_VRETPIS := nOldRetPis
						SE2->E2_VRETCOF := nOldRetCof
						SE2->E2_VRETCSL := nOldRetCsl
					EndIf
							
					MsUnlock()
				Endif
			Endif
		   //Conforme situacao do parametro abaixo, integra com o SIGAGSP, solicitado em 05/10/2004 por Fernando Mazzarolo.
		   //MV_SIGAGSP - 0-Nao / 1-Integra
		   //Integração após a gravação da Baixa
		   If GetNewPar("MV_SIGAGSP","0") == "1" 
		      GSPF350()
		   EndIf
		
			If lBaixou
				PABrtComp(.T.)
			EndIf   
		
			//Envio de e-mail pela rotina de checklist de documentos obrigatorios
			IF AliasIndic("FRD") .AND. SE2->(FieldPos("E2_TEMDOCS")) > 0 .And. FindFunction("CN062ValDocs") .And. lFinVDoc
				CN062ValDocs("02",.F.,.T.)
			EndIf
		
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Final  da protecao via TTS							³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If FindFunction( "GETROTINTEG" ) .and. !lFini055 .and. FindFunction("FwHasEAI") .and. FWHasEAI("FINA080",.T.,,.T.)
				If AllTrim(FunName()) == "FINA750" //Funções Ctas a pagar
					llOpc	:= ALTERA
					ALTERA	:= .T.
				Endif
				
				FwIntegDef( 'FINA080' )
				
				If AllTrim(FunName()) == "FINA750"
					ALTERA	:= llOpc
				Endif
			Endif
		End Transaction
       
       lCnab		:= IIF(EMPTY(SE5->E5_ARQCNAB),.F.,.T.)
       cLoteFin 	:= SE5->E5_LOTE
       If !lAdiantamento
			lMovBcoBx := MovBcoBx(cMotBx, .T.)
			IF (!Empty(cCheque) .and. lMovBcoBx .and. Substr(cCheque,1,1) != "*") .and.;
					GetMV("MV_LIBCHEQ") == "S" .and. SE2->E2_IMPCHEQ != "S"
				AtuSalBco( cBanco, cAgencia, cConta, dDebito, nValPgto, "-" )
			ElseIf lCNAB .and. Empty(cLoteFin)
				AtuSalBco( cBanco, cAgencia, cConta, dDebito, nValPgto, "-" )
			ElseIf lMovBcoBx .and. (cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .or. cBanco $ GetMv("MV_CARTEIR"))
				AtuSalBco( cBanco, cAgencia, cConta, dDebito, nValPgto, "-" )
			ElseIf lMovBcoBx .and. !ChqMotBx(cMotBx) .and. !lCnab
				AtuSalBco( cBanco, cAgencia, cConta, dDebito, nValPgto, "-" )
			Endif
		Endif
                          
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Agroindustria  									          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If FindFunction("OGXUtlOrig") //Encontra a função
		   If OGXUtlOrig()
				If FindFunction("OGX120") //Encontra a função
			       OGX120() // Executa a função
			    EndIf
		    EndIf
		EndIf
		
       //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pontos de Entrada 									³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (ExistTemplate( "FA080PE" ) )
			ExecTemplate("FA080PE",.F.,.F.)
		Endif

		If (ExistBlock( "FA080PE" ) )
			ExecBlock("FA080PE",.F.,.F.)
		Endif

		If FindFunction("NGBAIXASE2") .And. GetNewPar( "MV_NGMNTFI","N" ) == 'S' 
			NGBAIXASE2(1)
			
			//--------------------------------------------
			// Função que gera uma apropriação de débito 
			// da multa, (Integração SIGAFIN - SIGAMNT).
			//---------------------------------------------
			If FindFunction( "MNT765CONF" ) //Se for executado a baixa automática de pagaento da multa;
				lPagAutFin := .F. //Variável utilizada em fonte especifico do SIGAMNT;
				MNT765CONF( 3 ) 	//Executa a função que gera APD;
			EndIf
		Endif
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Finaliza a gravacao dos lancamentos do SIGAPCO ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		PcoFinLan("000005")
	EndIF
	Exit
Enddo
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Integracao protheus X tin Baixa Manual	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

dbSelectArea(cAlias)
If nSalvRec > 0
	dbGoTo(nSalvRec)
EndIf	
dbSetOrder(nOrdem)

//Atualização TMS - Status do Contrato de Carreteiro
If lBaixou .And. AllTrim(SE2->E2_ORIGEM) == 'SIGATMS'
	aAreaSE2 := SE2->(GetArea())
	TMSA250PBx(SE2->E2_FILORIG, SE2->E2_NUM)
	RestArea(aAreaSE2)
EndIf

//Trade-Easy
//RRC - 05/12/2013 - Integração SIGACOM x SIGAESS e SIGAEIC x SIGAESS a partir dos títulos do SIGAFIN
/*Verifica se não veio do ESSPS400 pois esta chamada pode ser decorrente da própria PS400BuscFat(), ao atualizar o câmbio do SIGAESS.
Dessa forma, impede uma recursividade desnecessária*/
If AvFlags("CONTROLE_SERVICOS_AQUISICAO") .And. !IsInCallStack("ESSPS400") .And. lBaixou .And. SE2->E2_TIPO == MVNOTAFIS
   lESSCOM := GetMv("MV_COMSEIC",,.F.) .And. GetMv("MV_ESS0012",,.F.) .And. GetMv("MV_ESS0013",,.F.) .And. AllTrim(SE2->E2_ORIGEM) == "MATA100"
   lESSEIC := GetMv("MV_ESS0022",,.T.) .And. /*AllTrim(SE2->E2_ORIGEM) == "SIGAEIC"*/ AllTrim(SE2->E2_PREFIXO) == "EIC" .And. SWD->(FieldPos("WD_MOEDA")) > 0 .And. SWD->(FieldPos("WD_VL_MOE")) > 0 .And. SWD->(FieldPos("WD_TX_MOE")) > 0  // TDF - 18/06/2015
   If lESSCOM .Or. lESSEIC
      PS400BuscFat("A",If(lESSCOM,"SIGACOM","SIGAEIC"),,SE2->E2_NUM,SE2->E2_PREFIXO,.T.,SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_PARCELA)
   EndIf
EndIf

Return lRet /*Function fA080Tit*/

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fA080Lot ³ Autor ³ Wagner Xavier 		³ Data ³ 03/08/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Seleciona titulos a serem baixados						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080Lot()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA080Lot(cAlias,nReg,nOpcx)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Salva a integridade dos dados 										 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL oDlg
LOCAL oDebConta

LOCAL nSalvRec
LOCAL lGrava:=.F.
LOCAL nOrdem
LOCAL cIndex := ""
Local cLanca := Iif(mv_par03==1,"S","N")
Local cSetFilter := SE2->(DBFILTER()) // Salva o filtro
Local oVencDe
Local oVencAte
Local oLoteFin
Local oBcoLot
Local cMoedaTx, nA := 0
Local aSize := {}
Local oPanel
Local aButton := { { "PESQUISA", { || Fa070Pesq(oMark, "SE2")  }, "Pesquisar..(CTRL-P)","Pesquisar" } }
Local bSet16
Local lF080BxLote:= ExistBLock("F080BXLOTE")
Local lFinVDoc		:= IIF(GetNewPar("MV_FINVDOC","2")=="1",.T.,.F.)		//Controle de validacao de documentos obrigatorios  

PRIVATE lISSF631		:= ("FINA631" == ALLTRIM(SE2->E2_ORIGEM)) .AND. lImp
PRIVATE cBanco		:=CriaVar("E1_PORTADO")
PRIVATE cAgencia	:=CriaVar("E1_AGEDEP")
PRIVATE cConta		:=CriaVar("E1_CONTA") 
PRIVATE dBaixa	    := CriaVar("E2_BAIXA") 
PRIVATE nNroTit	:=0
PRIVATE nTotDesp	:=0
PRIVATE nTotJur	:=0
PRIVATE nTotMul	:=0
PRIVATE nDebConta	:=0
PRIVATE nTotDesc	:=0
PRIVATE nTotGer	:=0
PRIVATE nValor		:=0
PRIVATE nQtdtit	:=0
PRIVATE dVencDe	:=Ctod(Space(8))
PRIVATE cNatDe		:=CriaVar("E2_NATUREZ")
PRIVATE dVencATe	:=Ctod(Space(8))
PRIVATE cNatAte	:=CriaVar("E2_NATUREZ")
PRIVATE lInverte 	:= .F.
PRIVATE nOtrga    := 0
PRIVATE nImpSubst := 0
PRIVATE nDifCambio:= 0    
PRIVATE aTxMoedas	  := {}
PRIVATE nIss 		:= 0
PRIVATE nIrrf 	:= 0
PRIVATE nInss		:= 0

SE2->(MsUnlock())

SX3->(dbSetOrder(1))  // Queiroz Galvao

lBxLote := .T.

If cPaisLoc <> "BRA"
	Aadd(aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
	For nA	:=	2	To MoedFin()
		cMoedaTx	:=	Str(nA,IIf(nA <= 9,1,2))
	  If !Empty(GetMv("MV_MOEDA"+cMoedaTx))
		 Aadd(aTxMoedas,{GetMv("MV_MOEDA"+cMoedaTx),RecMoeda(dDataBase,nA),PesqPict("SM2","M2_MOEDA"+cMoedaTx) })
		Else
			Exit
		Endif	
	Next
EndIf

While .T.
	nTotAGer  := 0 // Variaveis para acumulo dos valores
	nTotADesp := 0 // na baixa
	nTotADesc := 0
	nTotAMul	 := 0
	nTotAJur	 := 0

	If Type("lWserver") == "U"
		cMarca := Get080Mark()	
	Else
		cMarca := ''
	EndIf	
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Salva ordem atual 												³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( cAlias )
	nOrdem 	:= IndexOrd()
	nSalvRec := Recno()
	nOpc1 	:= 1	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desenha tela padrao do browse								  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nValor := 0
	nQtdtit:= 0
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se data do movimento ‚ menor que data limite de     ³
	//³ movimentacao no financeiro                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SuperGetMv("MV_BXDTFIN",,"1") == "2" .and.!DtMovFin()
		lBxLote := .F.
		Return
	Endif



	aSize := MSADVSIZE()	
		
	If FindFunction("IsPanelFin") .and. IsPanelFin()  //Chamado pelo Painel Financeiro			
		dbSelectArea(cAlias)
		oPanelDados := FinWindow:GetVisPanel()
		oPanelDados:FreeChildren()
		aDim := DLGinPANEL(oPanelDados)
		DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Observacao Importante quanto as coordenadas calculadas abaixo: ³ 
		//³ -------------------------------------------------------------- ³ 		
		//³ a funcao DlgWidthPanel() retorna o dobro do valor da area do   ³
		//³ painel, sendo assim este deve ser dividido por 2 antes da sub- ³
		//³ tracao e redivisao por 2 para a centralizacao. 				   ³		
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
		nEspLarg := (((DlgWidthPanel(oPanelDados)/2) - 266) /2) -5		 					
		nEspLin  := 0						
	
	Else
	
		IF lF080BxLote
			cLoteFin := ExecBlock ("F080BXLOTE",.F.,.F.) 
		EndIf
		
		DEFINE MSDIALOG oDlg FROM	102,5 TO 301,552 TITLE OemToAnsi(STR0058)	PIXEL //"Baixa a Pagar em Lote"
		nEspLarg := 0 
	  	nEspLin  := 0
		
	Endif	
	
	oDlg:lMaximized := .F.
	oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20)
	oPanel:Align := CONTROL_ALIGN_ALLCLIENT    
		
	@ 02+nEspLin, 004+nEspLarg TO 98+nEspLin, 77+nEspLarg  LABEL OemToAnsi(STR0059) 	 		PIXEL OF oPanel   //"Dados Banc rios"
	@ 02+nEspLin, 079+nEspLarg TO 98+nEspLin, 180+nEspLarg LABEL OemToAnsi(STR0060) 			PIXEL OF oPanel //"Valores"
	@ 02+nEspLin, 182+nEspLarg TO 73+nEspLin, 270+nEspLarg LABEL OemToAnsi(STR0061)			PIXEL OF oPanel //"Filtragem"
	@ 15+nEspLin, 09+nEspLarg SAY OemToAnsi(STR0022)				SIZE 30, 7 	PIXEL OF oPanel //"Banco"
	@ 12+nEspLin, 35+nEspLarg MSGET oBcoLot VAR cBanco			SIZE 20, 10 PIXEL OF oPanel Hasbutton Picture "@!" F3 "SA6" Valid ;
		If(nOpc1<>0,CarregaSA6(@cBanco,,,.T.) .And. fa080BcoCx(),.T.)
	@ 29+nEspLin, 09+nEspLarg SAY OemToAnsi(STR0023)			  	SIZE 30, 7  PIXEL OF oPanel //"Agˆncia"
	@ 26+nEspLin, 35+nEspLarg MSGET cAgencia 						SIZE 25, 10 PIXEL OF oPanel Picture "@!" Valid ;
		If(nOpc1<>0,CarregaSA6(@cBanco,@cAgencia,,.T.),.T.)
	@ 42+nEspLin, 09+nEspLarg SAY OemToAnsi(STR0024)				SIZE 29, 7  PIXEL OF oPanel //"Conta"
	@ 40+nEspLin, 35+nEspLarg MSGET cConta							SIZE 38, 10 PIXEL OF oPanel Picture "@!" Valid ;
		If(nOpc1<>0,IF (CarregaSA6(@cBanco,@cAgencia,@cConta,.T.,,.T.),.T.,oBcoLot:SetFocus()),.T.)
	
	@ 56+nEspLin, 09+nEspLarg SAY OemToAnsi(STR0062)				SIZE 30, 7	PIXEL OF oPanel //"N.Titulos"
	@ 54+nEspLin, 35+nEspLarg MSGET nNroTit							SIZE 13, 10 PIXEL OF oPanel Picture "999" Valid nNroTit > 0
	@ 70+nEspLin, 09+nEspLarg SAY OemToAnsi(STR0063)				SIZE 29, 7  PIXEL OF oPanel //"Lote"
	@ 69+nEspLin, 35+nEspLarg MSGET oLoteFin VAR cLoteFin 		SIZE 19, 10 PIXEL OF oPanel ;
		When UltiLote() ;		
		Valid CheckLote("P") Picture "@!"
	@ 14+nEspLin, 084+nEspLarg SAY OemToAnsi(STR0064)	  		SIZE 53, 7  PIXEL OF oPanel //"Valor T¡tulos"
	@ 11+nEspLin, 125+nEspLarg MSGET nTotGer					SIZE 52, 08 PIXEL OF oPanel Hasbutton Picture PesqPict("SE2","E2_VALOR") Valid MontaTot(oDebConta)
	@ 27+nEspLin, 084+nEspLarg SAY OemToAnsi(STR0065)	 		SIZE 53, 7  PIXEL OF oPanel //"Total Despesas"
	@ 25+nEspLin, 125+nEspLarg MSGET nTotDesp					SIZE 52, 08 PIXEL OF oPanel Hasbutton Picture PesqPict("SE2","E2_VALOR") Valid MontaTot(oDebConta)
	@ 42+nEspLin, 084+nEspLarg SAY OemToAnsi(STR0066) 			SIZE 53, 7  PIXEL OF oPanel //"Total Descontos"
	@ 39+nEspLin, 125+nEspLarg MSGET nTotDesc					SIZE 52, 08 PIXEL OF oPanel Hasbutton Picture PesqPict("SE2","E2_VALOR") Valid MontaTot(oDebConta)
	@ 56+nEspLin, 084+nEspLarg SAY OemToAnsi(STR0067)			SIZE 53, 7	PIXEL OF oPanel //"Total Multas"
	@ 54+nEspLin, 125+nEspLarg MSGET nTotMul 					SIZE 52, 08 PIXEL OF oPanel Hasbutton Picture PesqPict("SE2","E2_VALOR") Valid MontaTot(oDebConta)
	@ 70+nEspLin, 084+nEspLarg SAY OemToAnsi(STR0068)			SIZE 53, 7	PIXEL OF oPanel //"Total Juros"
	@ 69+nEspLin, 125+nEspLarg MSGET nTotJur 					SIZE 52, 08 PIXEL OF oPanel Hasbutton Picture PesqPict("SE2","E2_VALOR") Valid MontaTot(oDebConta)
	@ 85+nEspLin, 084+nEspLarg SAY OemToAnsi(STR0069)	  		SIZE 53, 7  PIXEL OF oPanel //"D‚bito em C/C"
	@ 83+nEspLin, 125+nEspLarg MSGET oDebConta VAR nDebConta	SIZE 52, 08 PIXEL OF oPanel Hasbutton Picture PesqPict("SE2","E2_VALOR")

	@ 16+nEspLin, 187+nEspLarg SAY OemToAnsi(STR0070) 			SIZE 44, 7	PIXEL OF oPanel //"Do Vencto."
	@ 14+nEspLin, 225+nEspLarg MSGET oVencDe VAR dVencDe		SIZE 45, 10 PIXEL OF oPanel Hasbutton Valid ! Empty(dVencDe)
	oVencDe:cReadVar := "DVENCINI"  // Help
	@ 30+nEspLin, 187+nEspLarg SAY OemToAnsi(STR0071) 			SIZE 42, 7	PIXEL OF oPanel //"Até o Vencto."
	@ 28+nEspLin, 225+nEspLarg MSGET oVencAte VAR dVencAte		SIZE 45, 10 PIXEL OF oPanel Hasbutton Valid dVencAte >= dVencDe
	oVencAte:cReadVar := "DVENCFIM" // Help
	@ 45+nEspLin, 187+nEspLarg SAY OemToAnsi(STR0072) 	  		SIZE 39, 7  PIXEL OF oPanel //"Da Natureza"
	@ 42+nEspLin, 225+nEspLarg MSGET cNatDe						SIZE 45, 10 PIXEL OF oPanel Hasbutton Picture "@!" F3 "SED"
	@ 59+nEspLin, 187+nEspLarg SAY OemToAnsi(STR0073)   		SIZE 45, 7  PIXEL OF oPanel //"At‚ a Natureza"
	@ 57+nEspLin, 225+nEspLarg MSGET cNatAte 					SIZE 45, 10 PIXEL OF oPanel Hasbutton Picture "@!" Valid cNatAte >= cNatDe F3 "SED"

	
	If FindFunction("IsPanelFin") .and. IsPanelFin()  //Chamado pelo Painel Financeiro			
		oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])			
		ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,;
		{||,nOpc1 := 1,IIF(Empty(cLoteFin),(oLoteFin:SetFocus(),nOpc1 := 0),oDlg:End())},;
		{||,nOpc1 := 0,oDlg:End()});
		VALID (iif(nOpc1==1,Fa080Cont().and. ValidaTot(cLoteFin),.t.))		
		
		FinVisual(cAlias,FinWindow,(cAlias)->(Recno()),.T.)

		
	Else
		DEFINE SBUTTON FROM 80, 214 TYPE 1 ENABLE OF oDlg ACTION (nOpc1 := 1,IIF(Empty(cLoteFin),(oLoteFin:SetFocus(),nOpc1 := 0),oDlg:End()))
		DEFINE SBUTTON FROM 80, 244 TYPE 2 ENABLE OF oDlg ACTION (nOpc1 := 0,oDlg:End())
	
	ACTIVATE MSDIALOG oDlg VALID (iif(nOpc1==1,Fa080Cont().and. ValidaTot(cLoteFin),.t.)) CENTERED
	Endif
	
	If nOpc1 != 1
		Exit
	Endif

	dbSelectArea( cAlias )
	
	//Acerto a moeda do banco
	nMoedaBco := Max( MoedaBco(cBanco,cAgencia,cConta), 1 )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Execblock a ser executado antes da Indregua                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ExistBlock("F080FIL")
		cFil080 := ExecBlock("F080FIL",.f.,.f.)
	Else
		cFil080 := ""
	Endif  

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Filtra o arquivo para titulos em abertos					 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cIndex := CriaTrab(nil,.f.)
	cChave	:= IndexKey()
	IndRegua("SE2",cIndex,cChave,,FA080ChecF(),OemToAnsi(STR0074) ) //"Selecionando Registros..."
	nIndex := RetIndex("SE2")
	dbSelectArea("SE2")
	#IFNDEF TOP
		dbSetIndex(cIndex+ordBagExt())
	#ENDIF
	dbSetOrder(nIndex+1)
	DbGoTop()
	IF BOF() .and. EOF()
		Help(" ",1,"RECNO")
		Exit
	EndIF

	nValor	:= 0		// valor total dos T¡tulos,mostrado no rodape do browse
	nQtdtit	:= 0		// quantidade de T¡tulos,mostrado no rodape do browse
	nOpca	:= 0      

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz o calculo automatico de dimensoes de objetos     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aSize := MSADVSIZE()	

	DEFINE MSDIALOG oDlg1 TITLE STR0075 From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd PIXEL //"Baixa em Lote"
	oDlg1:lMaximized := .T.

	Dbeval( { |a| FA080Dbeva() } )

	oPanel := TPanel():New(0,0,'',oDlg1,, .T., .T.,, ,15,15,.T.,.T. )
	oPanel:Align := CONTROL_ALIGN_TOP

	@003,005 Say STR0076 PIXEL Of oPanel // "Valor Total:"
	@003,060 Say oValor VAR nValor Picture PesqPict("SE2","E2_VALOR") PIXEL Of oPanel
	@003,120 Say STR0077 PIXEL Of oPanel// "Quantidade:"
	@003,150 Say oQtda VAR nQtdTit Picture "@E 99999" SIZE 50,10 PIXEL of oPanel

	oMark := MsSelect():New(cAlias,"E2_OK","!E2_SALDO",,@lInverte,@cMarca,{35,oDlg1:nLeft,oDlg1:nBottom,oDlg1:nRight})
	oMark:bMark := {| | finaDisplay(cMarca,lInverte,oValor,oQtda,"P")}
	oMark:bAval	:= {|| Fa080bAval(cAlias,cMarca,oValor,oQtda)}
	oMark:oBrowse:lhasMark = .t.
	oMark:oBrowse:lCanAllmark := .t.
	oMark:oBrowse:bAllMark := { || FA080Inverte(cMarca,oValor,oQtda) }
	oMark:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
	bSet16 := SetKey(16,{||Fa070Pesq(oMark,"SE2")})   
   
	If FindFunction("IsPanelFin") .and. IsPanelFin()  //Chamado pelo Painel Financeiro			
	   ACTIVATE MSDIALOG oDlg1 ON INIT FaMyBar(oDlg1,{||nOpca := 1,oDlg1:End()},{|| nOpca := 2,oDlg1:End()},aButton) 				
	Else
		ACTIVATE MSDIALOG oDlg1 ON INIT EnchoiceBar(oDlg1,{|| nOpca := 1,oDlg1:End()},{|| nOpca := 2,oDlg1:End()},,aButton) CENTERED
	Endif   
	
	SetKey(16,bSet16)																

	IF nOpcA == 1
				
		IF AliasIndic("FRD") .AND. (SE2->(FieldPos("E2_TEMDOCS")) > 0) .And. FindFunction("CN062ValDocs") .And. lFinVDoc
			SE2->(dbGoTo(RECNO()))
			If CN062ValDocs("04",.T.)
				lGrava := fA080Grava(cLanca)
			EndIf
		Else
			lGrava := fA080Grava(cLanca)
		EndIf
	Endif
	Exit

EndDO
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura os indices 								     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE2")
RetIndex("SE2")
#IFNDEF TOP
	IF cIndex != ""
		FErase (cIndex+OrdBagExt())
	EndIF
#ENDIF

dbSetOrder(nOrdem)
If nSalvRec > 0
	dbGoTo(nSalvRec)
EndIf	
cLoteFin := SPACE(TamSX3("E2_LOTE")[1])
// Restaura o filtro, para que o usuario que utilizar filtro atraves do PE F080BROW
// nao perca este filtro.
Set Filter to &cSetFilter.
lBxLote := .F.
Return /*Function FA080Lot*/

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fa080Can ³ Autor ³ Wagner Xavier 		³ Data ³ 06/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Rotina de Cancelamento de Baixa a pagar					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fa080can(ExpC1,ExpN1,ExpN1)								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa080Can(cAlias,nReg,nOpcx,aEncho,nOpBaixa)    
Local lPrjCni 		:= FindFunction("ValidaCNI") .And. ValidaCNI()
Local lPanelFin := If (FindFunction("IsPanelFin"),IsPanelFin(),.F.)
LOCAL oDlg
LOCAL lOk := .F.
LOCAL lDigita := IIF(mv_par01==1,.T.,.F.)
LOCAL lAglut  := IIF(mv_par02==1,.T.,.F.)
LOCAL nHdlPrv := 0
LOCAL nTotal := 0
LOCAL lPadraoBx
LOCAL nOrdem
LOCAL lPadraoVd
LOCAL cArquivo
LOCAL nSalvRec := 0
LOCAL cParcela
LOCAL cNum
LOCAL cPrefixo
LOCAL dBaixa 
Local dDebito
LOCAL cAgencia	:= CriaVar("E1_AGEDEP")
LOCAL cCheque	:= CriaVar("EF_NUM")
LOCAL cFornece
LOCAL cMoeda
LOCAL cTitAnt
LOCAL cDescrMo	:= " "
LOCAL aBaixa 	:= {}
LOCAL cTipo
LOCAL nJuros 	:= 0
LOCAL nMulta 	:= 0
LOCAL nCorrec 	:= 0
LOCAL nDescont := 0
LOCAL nAcresc   := 0
LOCAL nDecresc  := 0
LOCAL dDataAnt
LOCAL lBaixaAbat	:= .F.
LOCAL cSequencia 	:= "  "
LOCAL cParcCanc   := ""
LOCAL nRegB
LOCAL lVend 		:= .F.
LOCAL nRegV
LOCAL lCheque 		:= .F.
LOCAL cBenef 		:= ""
LOCAL lContabilizou
LOCAL cNumCheq		:= CRIAVAR("EF_NUM")
LOCAL lEstorna
LOCAL nTotAdto 	:= 0
LOCAL cSeqSe5 	:= Space(TamSX3("E5_SEQ")[1])
LOCAL nTxMoeda := 0
LOCAL cTipoDoc := ""
LOCAL aAux := {}
LOCAL nI := 0
LOCAL nRecDelSef := 0
LOCAL nRecSe5    := 0
Local lRet := .T.
Local lFa080Own := ExistBlock("FA080OWN")
Local lFa080Est := ExistBlock("FA080EST")  
Local lFa080VEst := ExistBlock("FA080VEST")
Local lEst   :=  .T.
Local aMotBx:= ReadMotBx()
Local cPadrao
Local cTitOriV := CRIAVAR("E2_TITORIG")
Local lBaixaOk	:= .T.
Local nOrdSa6, nRecSa6
Local nDifCambio := 0
Local nImpSubst   := 0
Local nOtrga     := 0
Local nAtraso := 0
Local lSPB := VerCpoSPB()  // Bank of America
Local lLanca	:= Iif(mv_par03==1,.T.,.F.)
Local lCnab 	:= .F.
Local cModSPB := "1"	// Modalidade de SPB
Local aModalSpb := {"TED","CIP","COMP"}
Local cDescSpb := "TED"
Local lSpbInUse := SpbInUse()
Local nTamTitOri := TamParcela("E2_PARCELA",19,20,21)
Local lSetDeleted := SET(_SET_DELETED)
Local cSefOrigem := ""
Local lDeleted		:= .F.
Local cEfImpress	:= ""
Local lBxCEC 		:= .F.  //Verificador de existencia de baixa por compensacao entre carteiras
Local lMVBP10925  := SuperGetMv("MV_BP10925",.F., "1") == "2" // Default (Bruto)
Local lAcreDecre := .F.
Local nMoedaBco  := 1
Local nMoedaTit  := SE2->E2_MOEDA
Local nTxModBco  := 0
Local nTxModTit  := 0
//Controla o Pis Cofins e Csll na baixa
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

Local lContrRet := !Empty( SE2->( FieldPos( "E2_VRETPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE2->( FieldPos( "E2_VRETCSL" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETPIS" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_PRETCOF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETCSL" ) ) )

Local nPis := 0
Local nCofins := 0 
Local nCsll := 0

//Variaveis utilizadas na contabilizacao do estorno
Local nPisOld	:= 0
Local nCofOld	:= 0
Local nCslOld	:= 0
Local nVRPisOld := 0
Local nVRCofOld := 0
Local nVRCslold := 0


Local aImp := {}
Local nLinha := 0
Local nX := 0
Local lNotBax 	:= .F.
Local lAglImp  := .F. 
LOCAL aHelpPor 	:= {}
LOCAL aHelpEng 	:= {}
LOCAL aHelpSpa 	:= {}
Local nCentMd1	:= MsDecimais(1)
Local nTotImpost 	:= 0  //Valores de baixas de por geracao de impostos
Local nTotaIRPF   := 0
Local lIRPFBaixa := .F.
Local nIrrf := 0
Local lRetSoIrf := .F.  //Baixa reteve apenas IRRF
Local cParcPis := ""
Local cParcCof := ""
Local cParcCsl := ""
Local lAchouRel := .F.
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" )
Local nIss := 0                                    
Local lBxConc  := GetNewPar("MV_BXCONC","2") == "1"                            
Local lExclusao := .F. //Para tratar a exclusao de baixa (BOPS 134077)
Local lIntegracao := IF(GetMV("MV_EASYFIN")=="S",.T.,.F.)
Local lEECFAT  := SuperGetMv("MV_EECFAT",.F.,.F.)

Local lPaBruto	:= GetNewPar("MV_PABRUTO","2") == "1"  //Indica se o PA terá o valor dos impostos descontados do seu valor
Local lCb10925 := GetNewPar("MV_CB10925","2") == "1"
Local lFina379 := IsInCallStack("FINA379")
Local lRecalcPCC := GetNewPar("MV_RC10925","2") == "1" 
Local lBdVcImp	:= SuperGetMV("MV_BDVCIMP",.T.,.F.)
Local oTipo
Local oPrefixo
Local oNumero
Local oParcela
Local oBanco
Local dVencRea

Local aFlagCTB := {}
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/) 
Local lAtuSldNat := FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW") 
Local a450ListBx := {}
Local cNatIss	:= ""
Local cChavePai := ""
Local lBxLiq	:= .F.
Local aDiario	:= {}
Local nPosMotBx := 0
Local lESSCOM   := .F. //Trade-Easy - RRC - 17/07/2013 - Integração SIGACOM x SIGAESS: Geração automática das invoices e parcelas de câmbio a partir do documento de entrada
Local lESSEIC   := .F. //Trade-Easy - RRC - 05/12/2013 - Integração SIGAEIC x SIGAESS: Geração automática das parcelas de câmbio a partir dos títulos
Local cFilBor		:= ""
Local lInssBx 	:=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )
Local nInss 		:= 0                                    
Local nInssParc	:=	0
Local nVlRetin	:=	SuperGetMv("MV_VLRETIN",.F.,0)		
Local lAltVr		:=	.T.
Local lRetTit	:= .F. //Verifica se titulo com retenção de Inss na baixa tem titulo retido nele.
Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0) 
Local nLimInss 	:= GetMv("MV_LIMINSS",.F.,0)
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 		:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao.
Local lCanBorder := GetMv("MV_CANBORP") == "S"//Cancelamento do borderô
Local cTpBxCtb   := ""
Local lCtbEstn   := .F.
								
local aAreaSE2 	:= {}
Local aAreaSE5 	:= {}
Local aAreaSA0	:= {}
Local lExistFJU := AliasIndic("FJU") .and. FindFunction("FinGrvEx")	
Local lCpRet	:= .F.
Local aAreaE5	:= {}
Local cTpDesc   := ""
Local lTpDesc   := SE5->( FieldPos( "E5_TPDESC" ) ) > 0
//Help DARF
Local aArea := GetArea()
Local lvldarf := 	SuperGetMv("MV_VLDARF",,.F.)
Local aBorrado

Default nOpBaixa := 1
                             
nPagtoParcial	:=	0
PRIVATE aBaixaSE5 := {}
PRIVATE lBdImp	:= .F.
PRIVATE aRecBorra := {}

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
	lCalcIssBx := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Procura pelas baixas deste titulo                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aBaixa := Sel080Baixa("VL /BA /CP /",SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,@nTotAdto,;
								@lBaixaAbat,SE2->E2_FORNECE,SE2->E2_LOJA,@lBxCec,.T.,@lNotBax,@nTotImpost,@lAglImp;
								,If((Funname() == "FINA450" .or. Funname() == "FINA703") .and. Type("lF080Auto")<>"U",.T.,.F.) ,lFina379,@nTotaIRPF,SE2->E2_IDENTEE,@lBxLiq) // Recalculo do PCC (FINA379))
//ordena array de abaixa pelo sequencia E5_SEQ
aSort(aBaixa,,,{|x,y| SubStr(x,Len(x)-1,Len(x)) < SubStr(y,Len(y)-1,Len(y))})
aSort(aBaixaSE5,,, {|x,y| x[9] < y[9] } )
								

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Titulo nao sofreu nenhuma baixa 						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF Empty(SE2->E2_BAIXA) .And. ( Len(aBaixa)<=0 )
	Help(" ",1,"TITNAOXADO")
	Return /*Function fa080Can*/
EndIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha sido gerado pelo SigaEic e do tipo PR nao podera se baixado se nao for pela rotina automatica ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. lIntegracao .and.  SE2->E2_TIPO = "PR "  .and. UPPER(SE2->E2_ORIGEM) = "SIGAEIC"
	HELP(" ",1,"FAORIEIC")
	Return /*Function fa080Can*/
Endif                                                                                                                   

//DFS - 16/03/11 - Deve-se verificar se os títulos foram gerados por módulos Trade-Easy, antes de apresentar a mensagem.
// TDF - 26/12/11 - Acrescentado o módulo EFF para permitir liquidação
// NCF - 25/03/13 - Acrescentado o módulo SIGAESS (Siscoserv)
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .And. (UPPER(Alltrim(SE2->E2_ORIGEM)) $ "SIGAEEC/SIGAEDC/SIGAECO/SIGAESS" .AND. nOpcx == 6 .AND. !(cModulo $ "EEC/EDC/ECO/EFF/ESS") .AND.;
    Posicione("SA2",1,xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA),"A2_PAIS") <> "105" .AND. SE2->E2_MOEDA > 1) 
	HELP(" ",1,"FAORIEEC")
	Return
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha sido gerado pelo SigaEic e do tipo INV e do BRASIL   ³
//³ nao podera se baixado se nao for pela rotina automatica         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. lIntegracao .and. cPaisloc = "BRA" .and.  SE2->E2_TIPO = "INV"  .and. UPPER(SE2->E2_ORIGEM) = "SIGAEIC"
	HELP(" ",1,"FAORIEIC")
	Return /*Function fa080Can*/
Endif  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Titulo teve cheque sobre titulo						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF !Empty(SE2->E2_IMPCHEQ) 
	Help(" " , 1 , "FA080TEMCH")
	Return /*Function fa080Can*/
EndIF

If (ALLTRIM(SE2->E2_ORIGEM) $ "FINA667|FINA677") .and. !(FINVERRES(SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA),SE2->E2_ORIGEM, "P"))
	Help(" " , 1 , "FAVIAGEM")
	Return /*Function fa080Can*/
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ AAF - Titulos originados no SIGAEFF não devem ser alterados   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lF080Auto .AND. "SIGAEFF" $ SE2->E2_ORIGEM
   Help(" ",1,"FAORIEFF")
   Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se data do movimento n„o ‚ menor que data limite de ³
//³ movimentacao no financeiro    								 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcx == 5 // cancelamento
	If SuperGetMv("MV_BXDTFIN",,"1") == "2" .and.!DtMovFin()
		Return
	Endif
Elseif nOpcx==6 //exclusao
	If SuperGetMv("MV_BXDTFIN",,"1") == "2" .and.!DtMovFin(dBaixa)
		Return
	Endif
Endif/*
*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Verifica se ‚ um registro Principal									³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF SE2->E2_TIPO $ MVABATIM
	Help(" ",1,"NAOPRINCIP")
	Return /*Function fa080Can*/
Endif

//Caso a rotina esteja cadastrada no adapter, so pode ser enviada como 'Sincrona'. Uma baixa enviada como assincrona 
//sera concretizada mesmo que de erro no sistema integrado.
If !lFini055
	If !(FA080Integ(.T.))
		Return
	Endif
Endif
//verifica se existem os campos de valores de acrescimo e decrescimo no SE5
If SE5->(FieldPos("E5_VLACRES")) > 0 .and. SE5->(FieldPos("E5_VLDECRE")) > 0
	lAcreDecre := .T.
Endif           

If (ALLTRIM(SE2->E2_ORIGEM) == "FINA770")
	Help(" ",1,"F770CAN")
	Return 
Endif

If AliasInDic("SA0")
	aAreaSA0	:= GetArea()
	dbSelectArea("SA0")
	dbSetOrder(2)
	if SA0->(dbSeek(xFilial("SA0")+SE2->E2_NUM+SE2->E2_PREFIXO+SE2->E2_FORNECE+SE2->E2_LOJA))
		If SA0->A0_ORIGEM == SE2->E2_ORIGEM
			If SA0->A0_STATUS = "1"
				Help(" ",1,"F770CN2")
				Return
			EndIf
		EndIf
	EndIf
	RestArea(AareaSA0)
EndIf
dbSelectArea("SE2")
nOrdem:=IndexOrd()
dbSetOrder(1)
If cPaisLoc<>"BRA"
	nCentMd1:=4
EndIf
cMoeda := IIF(Empty(SE2->E2_MOEDA),"1",AllTrim(Str(SE2->E2_MOEDA,2)))
nSalvRec := SE2->( RecNO() )
cNum		:= SE2->E2_NUM
cPrefixo := SE2->E2_PREFIXO
cParcela := SE2->E2_PARCELA
cFornece := SE2->E2_FORNECE
cTipo 	:= SE2->E2_TIPO
cLoja 	:= SE2->E2_LOJA
nTotAbat := 0
nValPgto := SE2->E2_VALLIQ

If !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa Empresa Publica
	If lInssBx .And. !Empty(SE2->E2_NUMBOR) .And. !lPccBaixa .And. SE2->E2_PRETINS == '4' //Titulo com bordero e pcc na emissao devo descontar o valor do inss gerado. 
		nValPgto := nValPgto + SE2->E2_VRETINS	
	Endif
Endif
	
dBaixa	:= SE2->E2_BAIXA
nTotAbat := SumAbatPag( cPrefixo, cNum, cParcela, cFornece, SE2->E2_MOEDA,"V",dBaixa,cLoja )
If cPaisLoc == "CHI"
	nOtrga     := IIf (SE2->(FieldPos("E2_OTRGA"))> 0,SE2->E2_OTRGA,0)              		
	nDifCambio := IIf (SE2->(FieldPos("E2_CAMBIO"))> 0,SE2->E2_CAMBIO,0)              		
	nImpSubst  := IIf (SE2->(FieldPos("E2_IMPSUBS"))> 0,SE2->E2_IMPSUBS,0)              		
EndIf
nAcresc  := SE2->E2_ACRESC
nDecresc := SE2->E2_DECRESC
SE2->( dbGoTo( nSalvRec ) )
SA2->(dbSetOrder(1))
SA2->(MSSEEK(xFilial("SA2")+SE2->(E2_FORNECE+SE2->E2_LOJA)))

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If !(Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto))
	lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT
EndIf

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar INSS
If (Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto))
	lInssBx	:=	.F.
Endif
lIRProg := IIf(SA2->(FieldPos("A2_IRPROG")) # 0, IIf(!Empty(SA2->A2_IRPROG), SA2->A2_IRPROG, "2"), "2")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Escolhe Baixa a ser cancelada									 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type('lF080Auto') =='U' .or. ! lF080Auto
	If Len(aBaixa) > 1
		cListBox := aBaixa[1]
		nOpbaixa := 1
		DEFINE MSDIALOG oDlg FROM 5, 5 TO 14, 53 TITLE OemToAnsi(STR0080) //"Escolha A Baixa"
	
		@	.5, 2 LISTBOX nOpBaixa ITEMS aBaixa SIZE 160 , 40 Font oDlg:oFont
		DEFINE SBUTTON FROM 055,112	TYPE 1 ACTION (lOk := .T.,oDlg:End()) ENABLE OF oDlg
		DEFINE SBUTTON FROM 055,139.1 TYPE 2 ACTION (lOk := .F.,oDlg:End()) ENABLE OF oDlg
	
		ACTIVATE MSDIALOG oDlg CENTERED
		If !lOk .Or. !F080CanBx(aBaixa,nOpBaixa,lPccBaixa)
			Return Nil /*Function fa080Can*/
		Endif   
	Else
	   nOpbaixa := 1
	EndIF		
Else
	If nOpBaixa > Len(aBaixa)
		nOpBaixa := 1
	Endif	
Endif	
If Len(aBaixa) == 0 .And.(!Empty( SE2->E2_FATURA ) .AND. SE2->E2_FATURA <> "NOTFAT")
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Procura pelas compensa‡”es										    ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lBxCEC  //Compensacao entre carteiras
		Help(" ",1,"BX_CEC")
	ElseIf  SE5->(dbSeek(xFilial("SE5")+"CP"+cPrefixo+cNum+cParcela+cTipo)) .And. !SE5->(dbSeek(xFilial("SE5")+"ES"+cPrefixo+cNum+cParcela+cTipo))
		Help(" ",1,"TITULOADT")
	ElseIf  SE2->E2_TIPO $ MVPAGANT .and. SE5->(dbSeek(xFilial("SE5")+"BA"+cPrefixo+cNum+cParcela+cTipo))
		Help(" ",1,"TITULOADT")		
	ElseIf SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG .and. !lBaixaAbat
		Help(" ",1,"TITULOADT")
	Elseif (SE2->E2_TIPO $ MVPROVIS .and. FunName() <> "FINA040" .and. !lF080Auto) 
   		Help(" ",1,"TITULOPRV",,STR0178,1) //"Titulo Provisorio não pode ser estornado diretamente, exclua o título efetivo gerado na substituiçao!"
	ElseIf lBxLiq .and. Len(aBaixa) == 0   // Se houver baixa por Liquidacao
		Help(" ",1,"BXLIQUIDAC")
	ElseIf lNotBax	  
		//ÚÄÄÄÄÄÄ¿
		//³HELP'S³
		//ÀÄÄÄÄÄÄÙ
	 	// Espanhol
 		Aadd(aHelpSpa,"No se encontro ninguna baja que pueda"   )
 		Aadd(aHelpSpa,"ser anulada por esta rutina."            )
	 	// Portugues
 		Aadd(aHelpPor,"Nao foi encontrada nenhuma baixa que"    )
 		Aadd(aHelpPor,"possa ser cancelada por esta rotina."    )
	 	// Ingles
 		Aadd(aHelpEng,"No post. was found that can be canceled" )
 		Aadd(aHelpEng,"by this process."                        )
		PutHelp("PA080ORDREC",aHelpPor,aHelpEng,aHelpSpa,.F.)
 		Help(" ",1,"A080ORDREC")
 	ElseIf (nTotImpost > 0 .or. nTotaIRPF > 0) .and. !Empty(SE2->E2_NUMBOR)
		Help(" ",1,"BXBORD",,STR0151 +CHR(13)+CHR(10)+CHR(13)+CHR(10)+ STR0152,1,1) // "Baixa realizada por geração de impostos via borderô. Para o cancelamento desta, utilize a rotina de Cancelamento do borderô."
	ElseIf lAglImp
		Help(" ",1,"BXAGLUT",,STR0154+CHR(13)+CHR(10)+CHR(13)+CHR(10)+STR0155,1,1) //"O titulo de imposto selecionado sofreu aglutinação. Para o cancelamento" ## "desta baixa, utilize a rotina de Aglutinação de Impostos (FINA378)." 
	Elseif Empty( SE2 -> E2_FATURA ) .and. SuperGetMv("MV_NRASDSD",.F.,.F.) == .F.
		Help(" ",1,"MVNRASDSD")
	Elseif Empty( SE2 -> E2_FATURA )
		
		// Portugues
 		Aadd(aHelpPor,"Ocorreu algum problema durante a gra-")
 		Aadd(aHelpPor,"vação da tabela SE5 que interrompeu o")
 		Aadd(aHelpPor,"processamento. Ex: queda de servidor")
 		Aadd(aHelpPor,"ou de rede, problemas na infra-estrutura")
 		Aadd(aHelpPor,",queda de energia, etc. ")
	 	PutHelp("PBAIXTITINC",aHelpPor,,,.T.)
	 	
		aHelpPor 	:= {}			
	 	// Portugues
 		Aadd(aHelpPor,"Verifique alguns dos fatores citados")
 		Aadd(aHelpPor,"e os registros da tabela mencionada,")
 		Aadd(aHelpPor,"refaça a operação. Contate a equipe")
 		Aadd(aHelpPor,"de Suporte Técnico da Totvs e informe ")
 		Aadd(aHelpPor,"a ocorrência desse problema.")
	   PutHelp("SBAIXTITINC",aHelpPor,,,.T.)
		
		Help(" ",1,"BAIXTITINC")
	Else
		Help(" ",1,"TITFATURAD")
	EndIF
	Return /*Function fa080Can*/
EndIF




//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³PARA OS QUE NÃO SE APLICA EM NENHUMA DAS VALIDAÇÕES ANTERIORES, 
//VERIFICAR SE OCORREU BAIXA ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF Len(aBaixa)<=0 
	Help(" ",1,"TITNAOXADO")
	Return /*Function fa080Can*/
EndIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Pega os Valores da Baixa Escolhida 									 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dBaixa		:= aBaixaSE5[nOpBaixa,07]
dDebito     := aBaixaSE5[nOpBaixa,14]
cSequencia 	:= aBaixaSE5[nOpBaixa,09]
cChave      := SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+Dtos(dBaixa)+cFornece+cLoja+cSequencia
cParcCanc 	:= aBaixaSE5[nOpBaixa,03]
If lInssBx .And. cPaisLoc == "BRA" .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa 
	nInssParc		:=	aBaixaSE5[nOpBaixa,27]
Endif

aAreaE5	:= SE5->(GETAREA())
If SE5->(dbSeek(xFilial("SE5")+"BA"+cPrefixo+cNum+cParcela+cTipo))
	While SE5->(!Eof()) .and. SE5->E5_FILIAL == xFilial("SE5") .and. SE5->E5_TIPODOC == "BA" .and. SE5->E5_PREFIXO == cPrefixo ;
	.and. SE5->E5_NUMERO == cNum .and. SE5->E5_PARCELA == cParcela .and. SE5->E5_TIPO == cTipo
		If SE5->E5_TIPODOC == "BA" .AND. !Empty(SE5->E5_DOCUMEN) .AND. SE5->E5_MOTBX $ "PCC#IRF" .and. SE5->E5_SITUACA <> "C" .And. SE5->E5_CLIFOR == cFornece .And. SE5->E5_LOJA == cLoja
			If SE5->E5_SEQ > cSequencia
			Aadd(aHelpPor,"Este título esta em borderô, para"    )
	 		Aadd(aHelpPor,"cancelar, cancele primeiramente"    )
	 		Aadd(aHelpPor,"o borderô"    )
			PutHelp("PA080BORBX",aHelpPor,aHelpEng,aHelpSpa,.F.)
	 		Help(" ",1,"A080BORBX")
	 		Return /*Function fa080Can*/
	 		EndIf
	 	EndIf
	 	Se5->(Dbskip())
	EndDo
EndIf

If SE5->(dbSeek(xFilial("SE5")+"BA"+cPrefixo+cNum+cParcela+cTipo))
	If SE5->E5_MOTBX $ "TRF" .AND. SE5->E5_TIPODOC $ "BA" .And. !FwIsInCallStack( "Fa631Exc" )
		MsgStop(STR0207)
		Return /*Function fa080Can*/
	Endif
Endif	
RestArea(aAreaE5) 
 		
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se utilizar PCC na CEC (Compens. entre Carteiras) e PCC na Baixa. 	 ³
//³ Nao pode canelar	as baixas fora de ordem. Necessário cancelar a(s)   ³
//³ compensação(ões) primeiro															 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto))
	If SuperGetMV( "MV_CC10925" , , 1) == 2 .and. FindFunction('Sel450Baixa')
		//chamada para alimentar o array a450ListBx
		Sel450Baixa("VL /BA /CP /CEC",SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA,,@a450ListBx)
		IF cPaisLoc == "BRA" .AND. lPCCBaixa .and.; // usa PCC na Comp.Carteiras e PCC na Baixa
			(aBaixaSE5[nOpBaixa][15] <> 0 .or. aBaixaSE5[nOpBaixa][16] <> 0 .and. aBaixaSE5[nOpBaixa][17] <> 0)	// essa baixa reteve impostos
			For nX := 1 to Len(a450ListBx)
		   	 If a450ListBx[nX][09] > cSequencia .and. a450ListBx[nX][18] == "CEC" .and.; 
			     (a450ListBx[nX][11] <> 0 .or. aBaixaSE5[nX][12] <> 0 .and. aBaixaSE5[nX][13] <> 0)
	
			    	nX := Len(a450ListBx)+1
					//"Para títulos com impostos na Compensação entre Carteiras não é permitido cancelar 
					// uma baixa intermediária. É necessário que cancele a partir da ultima baixa."
					aHelpEng:= aHelpSpa := aHelpPor := {}
	
					AADD(aHelpPor,'Para títulos com impostos gerados pela  ')
					AADD(aHelpPor,'Compensacao entre Carteiras não é permi-')
					AADD(aHelpPor,'tido cancelar uma baixa intermediária.  ') 
					AADD(aHelpPor,'É necessário que cancele a partir da    ') 
					AADD(aHelpPor,'última baixa.   								 ')
					aHelpEng := aHelpSpa := aHelpPor
					PutSX1Help("PFIN80ICEC",aHelpPor,aHelpEng,aHelpSpa)
	
					aHelpEng:= aHelpSpa := aHelpPor := {}
	
					AADD(aHelpPor,'Cancelar as Compensações Entre Carteiras')
					AADD(aHelpPor,'efetuadas após essa baixa que está      ')
					AADD(aHelpPor,'tentando cancelar.                      ') 
					aHelpEng := aHelpSpa := aHelpPor
					PutSX1Help("SFIN80ICEC",aHelpPor,aHelpEng,aHelpSpa)
		
					Help(" ",1,"FIN80ICEC") //nao pode cancelar fora de ordem
					Return /*Function fa080Can*/
	
			    EndIf
			Next nX
		EndIF
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se data do cancelamento ‚ menor que a data da baixa ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If dBaixa > dDataBase
	Help(" ",1,"DTBAIXA")
	Return /*Function fa080Can*/
Endif

dbSelectArea("SE5")
SE5->(dbSetOrder(2))
cTipoDoc := "CM/CX/DC/MT/JR/BA/VL/"
IIf(cPaisloc == "CHI",cTipoDoc += "IS/",.T.)
For nI := 1 to len( cTipoDoc) Step 3
	IF SE5->( dbSeek(xFilial("SE5")+substr(cTipoDoc,nI,2)+cChave) )
		nMoedaBco  := Max( Val(SE5->E5_MOEDA), 1)
		If ( cPaisloc <> "BRA" )
			nMoedaTit  := SE2->E2_MOEDA
			nTxModBco  := If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA, RecMoeda(SE5->E5_DATA,nMoedaBco) )
			nTxModTit  := RecMoeda(SE5->E5_DATA,nMoedaTit)
		Endif
		If substr(cTipoDoc,nI,2 ) $ "CM/CX"
			If ( cPaisLoc <> "BRA" )
				If ( cPaisloc <> "CHI" )
					nCorrec		:= xMoeda( SE5->E5_VALOR, nMoedaBco, 1, SE5->E5_DATA,, nTxModBco )
				Else
					nDifcambio	:= xMoeda( SE5->E5_VALOR, nMoedaBco, 1, SE5->E5_DATA,, nTxModBco )
				Endif
			Else
				nCorrec := SE5->E5_VALOR
			Endif
		ElseIf substr(cTipoDoc,nI,2 ) $ "DC"
			If ( cPaisLoc <> "BRA" )
				nDescont:= xMoeda( SE5->E5_VALOR, nMoedaBco, 1, SE5->E5_DATA,, nTxModBco )
			Else
				nDescont:= SE5->E5_VALOR
			Endif
		ElseIf substr(cTipoDoc,nI,2 ) $ "MT"
			If ( cPaisLoc <> "BRA" )
				nMulta	:= xMoeda( SE5->E5_VALOR, nMoedaBco, 1, SE5->E5_DATA,, nTxModBco )
			Else
				nMulta	:= SE5->E5_VALOR
			Endif
		ElseIf substr(cTipoDoc,nI,2 ) $ "JR"
			If ( cPaisLoc <> "BRA" )
				If ( cPaisloc <> "CHI" )
					nJuros := xMoeda( SE5->E5_VALOR, nMoedaBco, 1, SE5->E5_DATA,, nTxModBco )
				Else
					nOtrga := xMoeda( SE5->E5_VALOR, nMoedaBco, 1, SE5->E5_DATA,, nTxModBco )
				Endif
			Else
				nJuros := SE5->E5_VALOR
			Endif
		ElseIf substr(cTipoDoc,nI,2 ) $ "BA/VL"
			If cPaisLoc <> "BRA" .And. !Empty(SE5->E5_BANCO)
				SA6->(DbSetOrder(1))
				SA6->(MsSeek(xFilial()+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))
				If( Max(IIf(Type("SA6->A6_MOEDAP")=="U" .Or. SA6->A6_MOEDAP == 0,SA6->A6_MOEDA,SA6->A6_MOEDAP),1) )== 1
			  	  	nValPgto := SE5->E5_VALOR
				   	nValestrang := SE5->E5_VLMOED2
			   Else
				   	nValestrang := SE5->E5_VALOR
			  		nValPgto := SE5->E5_VLMOED2
				Endif
			Else
				nValPgto := SE5->E5_VALOR
				
				If !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa Empresa Publica				
					If lInssBx .And. !Empty(SE2->E2_NUMBOR) .And. !lPccBaixa .And. SE2->E2_PRETINS == '4' //Titulo com bordero e pcc na emissao devo descontar o valor do inss gerado. 
						nValPgto := nValPgto + SE2->E2_VRETINS	
					Endif
				Endif
				
				nValestrang := SE5->E5_VLMOED2
			Endif
			cHist070 := SE5->E5_HISTOR
			cMotBx   := SE5->E5_MOTBX
			cNumBor  := SubStr(SE5->E5_DOCUMEN,1,6)
			cLoteFin := SE5->E5_LOTE
			nRecSe5  := SE5->(RecNo())
			
			cHistCan070 := PADR(IIF(Empty(SE5->E5_LOTE),STR0114,STR0113+SE5->E5_LOTE),TamSx3("E5_HISTOR")[1]) // Cancelamento de baixa###"Canc Baixa Lote "
			cMultNat	:= SE5->E5_MULTNAT
			cSeqSE5	:= SE5->E5_SEQ
			nPis := nCofins := nCsll := nIrrf := nIss := 0 
	
			If lIRPFBaixa .AND. IIF(lNewIrBx, .T., EMPTY(SE2->E2_NUMBOR))
				If Empty(SE5->E5_PRETIRF)
					nIrrf := SE5->E5_VRETIRF
				Endif
			Endif

			If cPaisLoc == "BRA" .AND. lPccBaixa
				If Empty(SE5->E5_PRETPIS)
					nPis := SE5->E5_VRETPIS
				Endif
				If Empty(SE5->E5_PRETCOF)
					nCofins := SE5->E5_VRETCOF
				Endif
				If Empty(SE5->E5_PRETCSL)
					nCsll := SE5->E5_VRETCSL
				Endif
				If AllTrim(SE5->E5_TIPO)=="FT" .and. (Empty(SE5->E5_PRETCOF) .and. Empty(SE5->E5_PRETPIS) .and. Empty(SE5->E5_PRETCSL))
					// Impostos da Fatura voltam a ficar dependentes de retenção
					RecLock("SE5")
					SE5->E5_PRETCOF := '1'  
					SE5->E5_PRETPIS := '1'
					SE5->E5_PRETCSL	:= '1'
					MSUnlock()
				Endif
					
					
			Endif

			If lCalcIssBx .AND. EMPTY(SE2->E2_NUMBOR)
				nIss := SE5->E5_VRETISS
			Endif

			If lInssBx  .And. cPaisLoc == "BRA" .And. Empty(SE2->E2_NUMBOR)			
				If SE2->E2_INSS > 0//Verifico se titulo tem outros retidos nele.				   
			   		lRetTit	:=	.F.
				   SFQ->(dbSetOrder(1)) 
					If SFQ->(DbSeek(xFilial("SFQ")+"SE5"+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+SE2->E2_FORNECE+SE2->E2_LOJA))
							    
						    While SFQ->(!Eof()) .And. SFQ->FQ_FILIAL == xFilial("SFQ") .And.;
							    							SFQ->FQ_ENTORI == "SE5"    				.And. ;
							    							SFQ->FQ_PREFORI == SE2->E2_PREFIXO 		.And.;
							    							SFQ->FQ_NUMORI  == SE2->E2_NUM  			.And.;
							    							SFQ->FQ_PARCORI == SE2->E2_PARCELA 		.And. ;
							    							SFQ->FQ_TIPOORI == SE2->E2_TIPO    		.And. ;
							    							SFQ->FQ_CFORI   == SE2->E2_FORNECE  	.And.;
															SFQ->FQ_LOJAORI == SE2->E2_LOJA					
						
									If SFQ->FQ_TPIMP == "INS"        
										lRetTit	:=	.T.
									Endif
									SFQ->(Dbskip())
							Enddo
						Endif									
				Endif								
				
				If SE5->E5_VRETINS > nVlRetin  .Or. ( SE5->E5_VRETINS <= nVlRetin .And. Empty(SE5->E5_PRETINS)) 
					If SE2->E2_INSS > SE2->E2_VRETINS .And. Len(aBaixaSe5) == 1 .And. 	lRetTit
						nInss := SE2->E2_INSS //Titulo que retem outros.
					Else
						nInss := SE5->E5_VRETINS					
					Endif
				Endif				
								
			Endif	
		ElseIf substr(cTipoDoc,nI,2 ) $ "IS" 	//Localizacao Chile
			If ( cPaisLoc <> "BRA" )
				nImpsubst := xMoeda( SE5->E5_VALOR, nMoedaBco, 1, SE5->E5_DATA,, nTxModBco )
			Else
				nImpsubst := SE5->E5_VALOR
			Endif
		EndIF
	EndIF
Next

lEstorna 	 := Iif(Empty(cNumBor),.F.,.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se foi utilizada taxa contratada para moeda > 1          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbGoTo(nRecSe5)		//volta para o registro principal

//Nao permito cancelamento de baixa se a mesma foi conciliada e se
//o parametro MV_BXCONC estiver como 2(Padrao) - Nao permite
If !lBxConc
	If !Empty(SE5->E5_RECONC)
		Help(" ",1,"BXCONCIL")
		dbSelectArea("SE2")
		Return /*Function fa080Can*/
	ElseIf !Empty(SE5->E5_LOTE) .And. !Empty(SE5->E5_DOCUMEN) //Titulos em bordero    
		nSaveRec := SE5->(Recno())
		nSaveIdx := SE5->(IndexOrd())
		nLote    := SE5->E5_LOTE
		SE5->(DbSetOrder(5))  
		If SE5->(DbSeek(xFilial("SE5")+nLote))
			While SE5->( ! Eof() .And. E5_FILIAL == xFilial("SE5") .And. E5_LOTE == nLote )
				If !Empty(SE5->E5_RECONC) .AND. SE5->E5_RECPAG == 'P'
					Help(" ",1,"F080BORD",,STR0167+CHR(13)+STR0168+CHR(13)+STR0169,1,0)  //"Esta baixa nao pode ser cancelada, pois "###"o titulo esta em bordero e um ou mais"###"titulos ja foram conciliados. "
					SE5->(DbSetOrder(nSaveIdx))
					SE5->(DbGoTo(nSaveRec))		
					dbSelectArea("SE2")
					Return /*Function fa080Can*/
				EndIf		
				SE5->(DbSkip())
			EndDo
		EndIf
		SE5->(DbSetOrder(nSaveIdx))
		SE5->(DbGoTo(nSaveRec))		
	Endif
EndIf

If cPaisLoc <>"BRA"
	SA6->( DbSetOrder(1) )
	SA6->( MsSeek(xFilial("SA6")+SE5->(E5_BANCO+E5_AGENCIA+E5_CONTA) ) )
	If Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,SA6->A6_MOEDAP),1) == 1
		
		If SE2->E2_MOEDA > 1 .AND. Round(NoRound(xMoeda(nValpgto,1,SE2->E2_MOEDA,dBaixa,3),3),2) != SE5->E5_VLMOED2
			nTxMoeda := Noround((SE5->E5_VALOR / SE5->E5_VLMOED2),5)
		Else
			nTxMoeda := RecMoeda(dBaixa,SE2->E2_MOEDA)
		Endif
	Else
		If SE2->E2_MOEDA > 1 .and. Round(NoRound(xMoeda(nValpgto,1,SE2->E2_MOEDA,dBaixa,3),3),2) != SE5->E5_VALOR
			nTxMoeda := Noround((SE5->E5_VLMOED2/SE5->E5_VALOR),5)
		Else
			nTxMoeda := RecMoeda(dBaixa,SE2->E2_MOEDA)
		Endif        
	EndIf
Else	
	If SE5->E5_TXMOEDA == 0
		If SE2->E2_MOEDA > 1 .and. Round(NoRound(xMoeda(nValpgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,3),3),2) != SE5->E5_VLMOED2
			nTxMoeda := Noround((SE5->E5_VALOR / SE5->E5_VLMOED2),5)
		Else
			nTxMoeda := RecMoeda(dBaixa,SE2->E2_MOEDA)
		Endif
	Else
		nTxMoeda := SE5->E5_TXMOEDA
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso moeda ==1 a funcao RecMoeda iguala nTxMoeda = 0. Iguala-se    ³
//³nTxMoeda = 1 p/ evitar problema c/ calculos de abatimento e outros.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTxMoeda := IIF(nTxMoeda == 0 , 1 , nTxMoeda)

// Se nao for titulo de imposto, verifica se um dos titulos de impostos já foi baixado e nao permite a exclusao
If !SE2->E2_TIPO $ MVISS+"/"+MVTAXA+"/"+MVTXA+"/"+MVINSS+"/"+"SES"+"/"+"INA"
	
	If Fa080InsBx() //Verifica se existe titulo de Inss na Baixa e se ele está baixado não permite a baixa do titulo principal. 
		Help(" ",1,"NODELETA",,STR0153, 4, 0) // "Este titulo possui impostos e"+chr(13)+"um desses impostos sofreu baixa."
		Return .F.  /*Function fa080Can*/
	Endif
	
	If !Fa050Filho(.T.)		
		If !lCb10925 .or. Fa080IrBx()//se o imposto baixado for Imposto de Renda gerado na baixa -> nao deixa cancelar baixa do principal.
			Help(" ",1,"NODELETA",,STR0153, 4, 0) // "Este titulo possui impostos e"+chr(13)+"um desses impostos sofreu baixa."
			Return .F.  /*Function fa080Can*/
		Else
			If SE5->E5_PRETPIS=='2' .or. SE5->E5_PRETCOF=='2' .or. SE5->E5_PRETCSL=='2'
				If (ExistBlock("F080PCBX") .and. ExecBlock("F080PCBX",.F.,.F.)==.F.)
					//"Essa baixa possui impostos retidos em outra baixa. E necessario cancelar primeiro a baixa responsavel pela retenção dos impostos"
					MsgStop(STR0163 +chr(13)+STR0164,STR0143)	
					Return .F. /*Function fa080Can*/
				EndIf			
			EndIf
			//Mesmo permitindo o cancelamento MV_CB10925 = 1, será feita uma pergunta de confirmação
			//caso exista algum título filho que já tenha sido baixado.
			If !MsgYesNo(STR0153+chr(13)+STR0159,STR0143)	//"Este titulo possui impostos e"+chr(13)+"um desses impostos sofreu baixa."
																			//"Deseja mesmo cancelar ?"
				Return .F. /*Function fa080Can*/
			EndIf		
		EndIf
	ElseIf !Fa050Filho(.F.)   //verifica se esse título tem TX filhos, sem verificar se esses TXs foram baixados
		If SE5->E5_PRETPIS=='2' .or. SE5->E5_PRETCOF=='2' .or. SE5->E5_PRETCSL=='2'  
			If (ExistBlock("F080PCBX") .and. ExecBlock("F080PCBX",.F.,.F.)==.F.)
				//"Essa baixa possui impostos retidos em outra baixa. E necessario cancelar primeiro a baixa responsavel pela retenção dos impostos"
				If (Type("lF080Auto")<>"U" .and. !lF080Auto)
					MsgStop(STR0163 +chr(13)+STR0164,STR0143)	
				Else
					Help(" ",1, STR0143,,STR0163+chr(13)+STR0164,4,0)
				EndIf
				Return .F. /*Function fa080Can*/					
			ElseIf cPaisLoc == "BRA" .AND. lPccBaixa
				If !MsgYesNo(STR0192)//Essa baixa possui impostos retidos em outra baixa, deseja continuar ?
					Return .F.
				Endif
			EndIf			
		EndIf
	ElseIf lPccBaixa
		If SE5->E5_PRETPIS=='2' .or. SE5->E5_PRETCOF=='2' .or. SE5->E5_PRETCSL=='2'  
				If !MsgYesNo(STR0192)//Essa baixa possui impostos retidos em outra baixa, deseja continuar ?
					Return .F.
				Endif
		EndIf		
	Endif	
Endif
                                                                            
//Se vier da integração Protheus X Tin e tiver sido baixado pro Distrato ou Aditivo, não pode excluir
If Upper(AllTrim(SE5->E5_MOTBX))== "TIN"  .And. Alltrim(SE2->E2_ORIGEM)=="FINI055"
	HELP(" ",1,"ProtheusXTIN" ,,STR0179,2,0)//"Títulos baixados por DISTRATO ou ADITIVO na Integração Protheus X TIN não podem ter a baixa cancelada!"
	Return 
Endif

*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Verifica se foi ja foi gerado cheque para esta baixa; se o cheque ³
*³ ja foi gerado nao permite o cancelamento						    ³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SEF")
dbSetOrder(3)
If !(SE5->E5_TIPO $ MVPAGANT)
		// Devido a verificacao do "MV_CTBAIXA" $ "BA" 
	// nao conseguiamos contabilizar o LP 531 quando o cheque era gerado
	// no momento da baixa do titulo, a contabilizacao efetuada pelo LP 530 e o
	// MV_CTBAIXA fosse igual a C. Para cancelar a baixa, o usuario precisa cancelar o
	// cheque primeiro. Entao pesquisamos com Set Deleted Off para verificar
	// se o cheque gerado para a baixa e permitir a contabilizacao do LP 531.
	SET(_SET_DELETED, .F.)	// Habilita pesquisa nos cheques deletados, para verificar
									// se a contabilizacao deva ocorrer pelo 531
	If SEF->(dbSeek(FWxFilial("SEF",SE5->E5_FILIAL)+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO))
		cSeqSe5 := SE5->E5_SEQ

		While SEF->( !Eof()) .and. ;
				EF_TITULO == SE5->E5_NUMERO	.and. ;
				EF_PARCELA== SE5->E5_PARCELA .and. ;
				EF_PREFIXO== SE5->E5_PREFIXO .and. ;
				EF_TIPO   == SE5->E5_TIPO		

			If Str(SE5->E5_VALOR,17,2)	 == Str(SEF->EF_VALOR,17,2)	.And.;
				SEF->EF_SEQUENC == cSeqSe5			.And.;
				SE5->E5_CLIFOR  == SEF->EF_FORNECE
				
				nRecDelSef	:= SEF->( RecNo() )
				lEstorna 	:= .F.  //achou cheque para esta baixa
				cEfImpress	:= SEF->EF_IMPRESS
				cSefOrigem	:= SEF->EF_ORIGEM
				lDeleted		:= SEF->(Deleted())
				lCheque		:= .F.

				// Permite a baixa se houver cheque cancelado.
				IF SEF->EF_IMPRESS # "C"
					lCheque		:= .T.
					cNumCheq		:= SEF->EF_NUM
					cBenef		:= SEF->EF_BENEF 
				Endif
				// Como o SET DELETED esta desligado, verifica se o registro eh valido
				// para sair do LOOP, pois o que vale sao os dados do utlimo cheque
				// gravado no SEF, quando existirem registros identicos mas, um ou mais
				// registros estiverem deletados.
				If SEF->(!Deleted())
					Exit
				Endif	
			Endif
			SEF->( dbSkip() )
		Enddo
	Endif
EndIf
dbSelectArea("SEF")
dbSetOrder(1)

lContabilizou:= Iif(SE5->E5_LA="S",.T.,.F.) .and. !IsInCallStack('FINA450')

nValPadrao	:= nValPgto-(nJuros+nMulta-nDescont-nPis-nCoFins-nCsll-nIrrf-nIss-nInss)
nSalDup		:= SE2->E2_SALDO-nValPadrao

cBanco := aBaixaSE5[nOpbaixa,11]
cAgencia := aBaixaSE5[nOpBaixa,12]
cConta := aBaixaSE5[nOpBaixa,13]

dbSelectArea("SEF")
dbSetOrder(1)
If (lCheque .and. !Empty(cNumcheq)) .Or. (!Empty(SE2->E2_NUMBCO) .and. !Empty(cEfImpress) .and. !SE2->E2_TIPO $ MVPAGANT )
	If !lDeleted // Achou um cheque e este nao esta deletado, avisa e nao permite o 
					 // cancelamento da baixa
		SET(_SET_DELETED,lSetDeleted) // Restaura ambiente
		Help(" " , 1 , "FA080TEMCH")
		dbSelectArea("SE2")
		Return /*Function fa080Can*/
	Endif	
Endif

nPosMotBx := Ascan(aMotBx,{|e| AllTrim(Upper(cMotBx))==AllTrim(Upper(Substr(e,1,3)))})

//Se nao contabiliza por Cheque
//Motivo de baixa nao e Vendor
//E o banco nao eh caixa (neste caso contabiliza sem emissao de cheque)
If !GetMv("MV_CTBAIXA") $ "BA" .And. !TrazCodMot(cMotBx) $ "VEN/DEB/PCC/DAC" .and. ;
		!(cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .or. cBanco$GetMV("MV_CARTEIR")) .and. ;
		(Iif( nPosMotBx>0, substr(aMotBx[ nPosMotBx ],41,01)=="S", .T.))
	lContabilizou := .F.
EndIf

If (SE2->E2_TIPO $ MVPAGANT)
	If SE2->(E2_PIS + E2_COFINS + E2_CSLL) > 0
		If (Type("lF080Auto")<>"U" .and. !lF080Auto)
			MsgStop(STR0199,STR0143) //"Cancelamento da baixa de pagamento adiantado com cálculo de impostos não permitida."
		Else
			Help(" ",1, STR0143,,STR0199,4,0)	//"Atenção"###"Cancelamento da baixa de pagamento adiantado com cálculo de impostos não permitida."
		EndIf

		Return
	EndIf 
EndIf


SET(_SET_DELETED,lSetDeleted) // Restaura ambiente
dbSelectArea("SE5")
dbGoTo(nRecSe5)		//volta para o registro principal

nI :=  Ascan(aMotBx, {|x| Substr(x,1,3) == Upper(cMotbx) })
cDescrMo := if( nI > 0,Substr(aMotBx[nI],07,10),"" )

SA2->(dbseek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
dbSelectArea("SE2")
If RecLock("SE2",.F.,,.T.)
	cNomeFor      := SE2->E2_FORNECE + " " + SA2->A2_NOME
	cTitulo := SE2->E2_PREFIXO + " " + SE2->E2_NUM+ " " + SE2->E2_PARCELA
	nPagtoParcial := SE2->E2_VALOR-SE2->E2_SALDO
	cTexto	     := OemToAnsi(STR0084) + SubStr(GetMV("MV_SIMB"+cMoeda),1,3)  //"Valor Original "
	
	If lSpbInUse
		cModSpb	:= IIF(!Empty(SE5->E5_MODSPB),SE5->E5_MODSPB,"1")
		cDescSpb := aModalSpb[Val(cModSpb)]
	Endif     
	
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada antes das baixas a serem Canceladas.          		  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lFa080Est
	   ExecBlock('FA080EST',.F.,.F.)
	Endif 
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Recebe os dados do t¡tulo a ser baixado 								 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nOpc1 := 0  
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada para validar dados antes das baixas a serem Canceladas.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lFa080VEst
	  lEst:= ExecBlock('FA080VEST',.F.,.F.)
	Endif 
	
	IF lPCCBaixa .and. lvldarf
		If !Fa080FDarf()
			Help(" ",1,'SE2DARFB') // "Esta Baixa nao podera ser excluida ""pois gerou títulos de impostos que""fazem parte de uma DARF."
			lEst := .F.		
		Endif
	Endif  
	
	
	
	If lEst
	 If Type('lF080Auto') =='U' .or. ! lF080Auto
	
		DEFINE MSDIALOG oDlg FROM	31,15 TO 527,574 TITLE OemToAnsi(STR0085)  PIXEL OF oMainWnd //  "Cancelamento de Baixas a Pagar"
		
		//DADOS DO TITULO
		oPanel1 := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,45,45,.f.,.f. )
		oPanel1:Align := CONTROL_ALIGN_TOP
	
		//DADOS GERAIS E DA BAIXA
		oPanel2 := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,30,30,.f.,.f. )
		oPanel2:Align := CONTROL_ALIGN_ALLCLIENT
	
		@ 001,002 GROUP oGrp1 TO 043, 272 LABEL STR0015 OF oPanel1 PIXEL //"Principal"
		@ 001,002 GROUP oGrp2 TO If(cPaisLoc=="BRA",178,165), 133 LABEL STR0013 OF oPanel2  PIXEL //"Dados Gerais"
		@ 001,139 GROUP oGrp3 TO If(cPaisLoc=="BRA",178,165), 272 LABEL STR0014 OF oPanel2  PIXEL //"Valores da Baixa"
	
		
		@ 008,004 SAY STR0092				SIZE 31,07 OF oPanel1 PIXEL //Prefixo
		@ 008,027 MSGET SE2->E2_PREFIXO	SIZE 25,08 OF oPanel1 PIXEL When .F. 
		@ 008,060 SAY STR0093 				SIZE 31,07 OF oPanel1 PIXEL //Numero 
		@ 008,085 MSGET SE2->E2_NUM		SIZE 70,08 OF oPanel1 PIXEL When .F.
		@ 008,165 SAY STR0094 				SIZE 31,07 OF oPanel1 PIXEL //Parcela
		@ 008,188 MSGET SE2->E2_PARCELA	SIZE 25,08 OF oPanel1 PIXEL When .F.
		@ 008,220 SAY STR0095				SIZE 31,07 OF oPanel1 PIXEL //Tipo
		@ 008,238 MSGET oTipo VAR cTipo	F3 "SE2RDO" SIZE 30,08 OF oPanel1 PIXEL HASBUTTON
		oTipo:lReadOnly := .T.   
	
		@ 019,004 SAY STR0019 SIZE 22,07 OF oPanel1 PIXEL //"Fornecedor"
		@ 019,027 MSGET oCodFor VAR SE2->E2_FORNECE F3 "SA2" SIZE 70,08 OF oPanel1 PIXEL HASBUTTON
		oCodFor:lReadOnly := .T.	
		@ 019,105 MSGET SA2->A2_NOME SIZE 165,08 OF oPanel1 PIXEL When .F.
	
		@ 030,004 SAY STR0098 				SIZE 31,07 OF oPanel1 PIXEL //"Natureza"
		@ 030,027 MSGET oNaturez VAR SE2->E2_NATUREZ	F3 "SED" SIZE 70,08 OF oPanel1 PIXEL HASBUTTON
		oNaturez:lReadOnly := .T.
		
		@ 030,105 SAY STR0017 				SIZE 31,07 OF oPanel1 PIXEL //"Emiss„o"
		@ 030,133 MSGET SE2->E2_EMISSAO	SIZE 48,08 OF oPanel1 PIXEL When .F.
		@ 030,189 SAY STR0018 				SIZE 49,07 OF oPanel1 PIXEL //"Vencto.Atual"
		@ 030,222 MSGET SE2->E2_VENCREA	SIZE 48,08 OF oPanel1 PIXEL When .F.
			
		//dados gerais   
		nUltLin := 10
		
		@ nUltLin,005 SAY OemToAnsi(STR0020)	 		SIZE 38,07 OF oPanel2 PIXEL //"Hist.Emiss„o"
		@ nUltLin,065 MSGET SE2->E2_HIST 				SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0021)		  	SIZE 39,07 OF oPanel2 PIXEL //"Portador"
		@ nUltLin,065 MSGET SE2->E2_PORTADO				SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
			
		@ nUltLin,005 SAY OemToAnsi(STR0022)			SIZE 40,07 OF oPanel2 PIXEL //"Banco"
		@ nUltLin,065 MSGET oBanco VAR aBaixaSE5[nOpBaixa,11]	F3 "SA6" SIZE 65, 08 OF oPanel2 PIXEL Hasbutton
		oBanco:lReadOnly := .T.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0023)		  	SIZE 39,07 OF oPanel2 PIXEL //"Agˆncia"
		@ nUltLin,065 MSGET aBaixaSE5[nOpBaixa,12]	SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0024)			SIZE 41,07 OF oPanel2 PIXEL //"Conta"	
		@ nUltLin,065 MSGET aBaixaSE5[nOpBaixa,13]	SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0089) 			SIZE 38,07 OF oPanel2 PIXEL //"Data Receb."
		@ nUltLin,065 MSGET dBaixa 					SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0149) 	SIZE 39,07 OF oPanel2 PIXEL //"Data Debito"
		@ nUltLin,065 MSGET dDebito					SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0026)	  		SIZE 39,07 OF oPanel2 PIXEL //"Hist.Baixa"
		@ nUltLin,065 MSGET cHist070						SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0027)	  		SIZE 40,07 OF oPanel2 PIXEL //"Cheque No."
		@ nUltLin,065 MSGET cNumCheq		 				SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0028)			SIZE 36,07 OF oPanel2 PIXEL //"Beneficiário"
		@ nUltLin,065 MSGET cBenef 						SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY OemToAnsi(STR0029)			SIZE 37,07 OF oPanel2 PIXEL //"Mot.Baixa"
		@ nUltLin,065 MSGET cDescrMo 				  		SIZE 65, 08 OF oPanel2 PIXEL When .F.
		nUltLin +=12
		
		@ nUltLin,005 SAY STR0131 SIZE 32, 07 OF oPanel2 PIXEL // //"Hist.Cancel."
		@ nUltLin,065 MSGET cHistCan070					SIZE 65, 08 OF oPanel2 PIXEL 
		nUltLin +=12
		
		If lSpbInUse
			@ nUltLin,005 SAY STR0128 SIZE 32, 07 OF oPanel2 PIXEL  //"Modalidade SPB"
			@ nUltLin,065 MSGET cDescSpb SIZE 56, 10 OF oPanel2 PIXEL When .F.
			nUltLin +=12
		Endif
		
		
		//dados baixa
		nUltLin := 10
		If cPaisLoc <> "CHI"
			@ nUltLin,144 SAY cTexto  	SIZE 53,07 OF oPanel2 PIXEL //"Valor Original"
			@ nUltLin,204 MSGET SE2->E2_VALOR			SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VALOR")
			nUltLin +=12
			
			@ nUltLin,144 SAY OemToAnsi(STR0035)		SIZE 53,07 OF oPanel2 PIXEL //"- Abatimentos"
			@ nUltLin,204 MSGET nTotAbat					SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VALOR")
			nUltLin +=12
		Else
			@ nUltLin,144 SAY OemToAnsi(STR0034)  	SIZE 53,07 OF oPanel2 PIXEL //"Valor Original"
			@ nUltLin,204 MSGET SE2->E2_VLCRUZ  		SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VLCRUZ")
		   nUltLin +=12
		   
		   @ nUltLin,144 SAY OemToAnsi(STR0118)			SIZE 53,07 OF oDlg PIXEL //"+ Otros Gastos"
		   @ nUltLin,204 MSGET nImpSubst 					SIZE 65, 08 OF oDlg PIXEL When .F. Picture PesqPict("SE2","E2_IMPSUBS")
		   nUltLin +=12
		EndIf
		@ nUltLin,144 SAY OemToAnsi(STR0036)  		SIZE 53,07 OF oPanel2 PIXEL //"- Pagtos.Parciais"
		@ nUltLin,204 MSGET nPagtoParcial				SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VALOR")
		nUltLin +=12
		
		@ nUltLin,144 SAY OemToAnsi(STR0037)	 		SIZE 53,07 OF oPanel2 PIXEL //"- Descontos"
		@ nUltLin,204 MSGET nDescont						SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_DESCONT")
		nUltLin +=12
		
		@ nUltLin,144 SAY OemToAnsi(STR0038)		  	SIZE 53,07 OF oPanel2 PIXEL //"+ Multa"
		@ nUltLin,204 MSGET nMulta 						SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_MULTA")
		nUltLin +=12
		
		If cPaisLoc <> "CHI"
			@ nUltLin,144 SAY OemToAnsi(STR0039) 		SIZE 53,07 OF oPanel2 PIXEL //"+ Tx.Permanenc."
			@ nUltLin,204 MSGET nJuros 					SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_JUROS")
			nUltLin +=12
		Else
		   @ nUltLin,144 SAY OemToAnsi(STR0117) 		 SIZE 53,7 OF oPanel2 PIXEL //"+ Impuesto Subst."
		   @ nUltLin,204 MSGET nOtrga					    SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_OTRGA")
		   nUltLin +=12
		EndIf
	
		nLinha := nUltLin
	
		//Get do ISS na baixa
		If lCalcIssBx .and. cPaisLoc == "BRA"
			@ nLinha, 144 SAY "- Iss"	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha, 204 MSGET nIss	SIZE 65, 08 OF oPanel2 PIXEL  When .F. Picture PesqPict("SE2","E2_ISS")  
			nLinha +=12
		Endif
	
		If lInssBx .And. cPaisLoc	== "BRA" .And. nInss > 0 //Inss Baixa 		
			@ nLinha, 144 SAY "- Inss"	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha, 204 MSGET nInss	SIZE 65,08 OF oPanel2 PIXEL  When .F. Picture PesqPict("SE2","E2_INSS")				
			nLinha +=12
		Endif
		
		If lIRPFBaixa .And. cPaisLoc == "BRA"
		
			@ nLinha, 144 SAY "- Irrf"	SIZE 53,07 OF oPanel2 PIXEL
			@ nLinha, 204 MSGET nIrrf	SIZE 65,08 OF oPanel2 PIXEL  When .F. Picture PesqPict("SE2","E2_IRRF")  ;
				Valid ( Fa080Val(nIrrf))
			nLinha +=12
		Endif
		
			If lPccBaixa .and. cPaisLoc == "BRA"
	
				@ nLinha, 144 SAY "- Pis"	SIZE 53,07 OF oPanel2 PIXEL
				@ nLinha, 204 MSGET nPis	SIZE 65, 08 OF oPanel2 PIXEL When .F.  Picture PesqPict("SE2","E2_PIS")
				nLinha +=12
				@ nLinha, 144 SAY "- Cofins" 	SIZE 53,07 OF oPanel2 PIXEL
				@ nLinha, 204 MSGET nCofins	SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_COFINS") 
				nLinha +=12
				@ nLinha, 144 SAY "- Csll"	SIZE 53,07 OF oPanel2 PIXEL
				@ nLinha, 204 MSGET nCsll	SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_CSLL")
				nLinha +=12
			Endif
	
		@ nLinha, 144 SAY OemToAnsi(STR0041)  		SIZE 53,07 OF oPanel2 PIXEL //"= Valor Pago"
		@ nLinha, 204 MSGET nValPgto					SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VALLIQ")
		
		IF SE2->E2_MOEDA > 1
			nLinha+=12	
			@ nLinha, 144 SAY OemToAnsi(STR0042)  + SubStr(GetMV("MV_SIMB"+cMoeda),1,3)    SIZE 53,07 OF oPanel2 PIXEL //"Valor "
			@ nLinha, 204 MSGET nValEstrang			SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VALOR")
			nLinha+=12
			If cPaisLoc <> "CHI"
				@ nLinha,144 SAY OemToAnsi(STR0040)  SIZE 53,07 OF oPanel2 PIXEL //"+ Corr.Monet ria"
				@ nLinha,204 MSGET nCorrec				SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_CORREC")
			Else
				@ nLinha,144 SAY OemToAnsi(STR0119)  SIZE 53,07 OF oPanel2 PIXEL //"+/- Dif. Cambio"
				@ nLinha,204 MSGET nDifCambio		   SIZE 65, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_CAMBIO")
			EndIf
		ENDIF
		
		
		If lPanelFin	
			ACTIVATE MSDIALOG oDlg CENTERED ON INIT FaMyBar(oDlg,{||nOpc1:=1,oDlg:End()},{||oDlg:End()})
		Else
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpc1:=1,oDlg:End()},{||oDlg:End()}) CENTERED
	  	Endif	
	  		
	Else 
		// rotina automatica
		nOpc1 := 1
	Endif	
	SE2->(MSUnlock())   
   EndIf	
Else
	nOpc1 := 0
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA P/ PERMISSAO DE CANCELAMENTO DE BAIXA DE TITULO		  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lFa080Own
	lEst := ExecBlock('FA080OWN',.F.,.F.,{nOpcx})
Endif   

If !lEst
	Return /*Function fa080Can*/
Endif
  
if lPrjCni
	If Alltrim(Upper(cMotBx)) == "TRF" .and. Alltrim(Upper(FunName())) != "FINA631" .And. (SE2->(FieldPos("E2_NUMSOL")) > 0 .AND. !Empty(SE2->E2_NUMSOL))
		Help(" ",1,"A070NAOPOD",,STR0183, 4, 0 ) 
		Return
	Endif	  
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Consiste MV_DATAFIN antes de cancelar baixa ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .and. SuperGetMv("MV_BXDTFIN",,"1") == "2"	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ A data da baixa deve ser passada como parametro, pois tanto ³
	//³ o cancelamento como a exclusao devem ser validados pela     ³
	//³ data de baixa e nao pela data base do sistema.              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	// Depois de conversar com a liderança da inovação, ficou claro que o parametro MV_DATAFIN
	// foi criado para definir uma data para impedir a ATUALIZAÇÃO DE SALDO de um banco
	// Logo, caso seja um cancelamento, a atualização de saldo é na data base e
	// caso uma exclusão, será exclusão do movimento na data da movimentação (tem que impedir baseando-se na data do movimento)
//	lRet := DtMovFin(dDataBase)	
	If nOpcx == 5 // cancelamento
		lRet := DtMovFin()
	Elseif nOpcx==6 //exclusao
		lRet := DtMovFin(dBaixa)
	Endif
Endif

//......
//     Conforme situacao do parametro abaixo, integra com o SIGAGSP
//     MV_SIGAGSP - 0-Nao / 1-Integra
//     Efetua o Estorno do Lancamento de Baixa de Orcamentacao
//.......
If lRet .And. GetNewPar("MV_SIGAGSP","0") == "1" 
	nGSPx := nOpcx
	lRet := GSPF080()
EndIf

If !lRet
	Return /*Function fa080Can*/
EndIf	

IF nOpc1 == 1
	lCpRet:= SLDRMSG(If(lPCCBaixa,dDatabase,SE2->E2_EMISSAO), nValPgto,SE2->E2_NATUREZ,"P",SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_TIPO)
	If lCpRet
		If !MSGNoYes(STR0203)//"Essa baixa possui impostos retidos em outra baixa, deseja continuar ?"
			Return	
		Endif
	Endif
	If lSPB
		If SE2->E2_OKSPB == "B" // Titulo Baixado via SPB com aceite de pagamento
			Help(" " , 1 , "NOCANCBX")
			dbSelectArea("SE2")
			Return /*Function fa080Can*/
		ElseIf SE2->E2_OKSPB == "A" //Titulo baixado via SPB com aceite de pagto em aberto
			If !ChkPsw(104)
				dbSelectArea("SE2")
				Return /*Function fa080Can*/
			Endif
		Endif
	Endif
        
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicia a gravacao dos lancamentos - SIGAPCO ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000005")

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³ Inicio da protecao via TTS										³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nOrdSa6 := SA6->(INDEXORD())
	nRecSa6 := SA6->(RECNO())

	If lContabiliza .and. FindFunction("CtbTranUniq") 
		CtbTranUniq()
	Endif	

	Begin Transaction
		SED->( dbSeek(cFilial+SE2->E2_NATUREZ) )
		SA6->( DbSetOrder(1) )
		SA6->( DbSeek(xFilial("SA6")+SE5->(E5_BANCO+E5_AGENCIA+E5_CONTA) ) )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Apaga Titulo de Vendor Gerado				  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lBaixaOk := .T.
		IF TrazCodMot(cMotBx) == "VEN"
			dbSelectArea("SE2")
			cTitOriV := Left(SE2->E2_TITORIG,nTamTitOri)
			nTamParc := TamSx3("E2_PARCELA")[1]
			IF SE2->( dbSeek(xFilial("SE2")+Left(SE2->E2_TITORIG,nTamTitOri)) )
				lVend := .T.
				nRegV := SE2->( Recno() )
			Endif

			If lBaixaOk
				dbGoto(nReg)
				RecLock("SE2",.F.)
				Replace SE2->E2_TITORIG With Space(TamSx3("E2_TITORIG")[1])
			Endif
		Endif
		If lBaixaOk
			*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			*³Gravar valores no SE2												³
			*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE2->E2_OK <> 'TA'
			
				Reclock( "SE2" )
				SE2->E2_VALLIQ := nValPgto
				If cPaisloc <> "CHI"
					SE2->E2_JUROS	:= nJuros
					SE2->E2_CORREC := nCorrec
				Else
					SE2->E2_JUROS	:= nOtrga + nImpsubst
					SE2->E2_CORREC := nDifCambio
				   IIf(SE2->(FieldPos("E2_OTRGA"))  > 0,SE2->E2_OTRGA  :=nOtrga,.T.)              		
				   IIf(SE2->(FieldPos("E2_CAMBIO")) > 0,SE2->E2_CAMBIO :=nDifCambio,.T.)              		
				   IIf(SE2->(FieldPos("E2_IMPSUBS"))> 0,SE2->E2_IMPSUBS:=nImpSubst,.T.)              		   
				EndIf
				SE2->E2_MULTA	:= nMulta
				SE2->E2_DESCONT:= nDescont
	
				*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				*³Gera lancamento contabil de estorno 								³
				*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cPadrao := "531"    //cancelamento de baixa
				lPadraoBx := (VerPadrao(cPadrao) .and. lContabilizou)
	
				nRegB := SE2->( Recno() )
				lPadraoVd := VerPadrao("519") //cancelamento de baixa vendor
				dbSelectArea( "SE2" )
				dbGoto(nRegB)
	
				IF lVend
					lPadraoBx := VerPadrao( "531" ) //cancelamento
				Endif
				nTotAbat := NoRound((nTotAbat * nTxMoeda),3)
				ABATIMENTO := nTotAbat
	
				//Guardo valores antigos para contabilizar impostos no cancelamento
				If cPaisLoc == "BRA" .AND. lPccBaixa
					nPisOld		:= SE2->E2_PIS
					nCofOld		:= SE2->E2_COFINS
					nCslOld		:= SE2->E2_CSLL
					nVRPisOld	:= SE2->E2_VRETPIS
					nVRCofOld	:= SE2->E2_VRETCOF
					nVRCslold	:= SE2->E2_VRETCSL
					
					Reclock("SE2")	
					Replace E2_PIS		With nPis
					Replace E2_COFINS	With nCofins
					Replace E2_CSLL		With nCsll
					Replace E2_VRETPIS	With nPis
					Replace E2_VRETCOF	With nCofins
					Replace E2_VRETCSL	With nCsll
					MsUnlock()
				Endif   
	
				If lIRPFBaixa
					Reclock("SE2")
					If SE2->(FieldPos("E2_VRETIRF")) > 0 
						SE2->E2_VRETIRF -= nIrrf
						If !lNewIrBx .Or. SA2->A2_TIPO == "F"
							SE2->E2_IRRF -= nIrrf
						Endif
					Endif
					MsUnlock()				
	
					If (nIRRf > 0 .And. Empty(SE2->E2_NUMBOR)) .or. (nIRRf > 0 .And. !Empty(SE2->E2_NUMBOR) .And. lCanBorder )//Quando a taxa possuir um bordero nao deve ser excluida. 
						If lAtuSldNat
							dVencRea := F050VIMP("IRRF",SE2->E2_EMISSAO,SE2->E2_EMIS1,SE2->E2_VENCREA,'',SA2->A2_TIPO,lIRPFBaixa)
							AtuSldNat(GetMV("MV_UNIAO"),dVencRea, SE2->E2_MOEDA, "2", "P",nIRRf,0, If(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG,"+","-"),,FunName(),"SE2",SE2->(Recno()),nOpcx)					
						EndIf
						
						F241DelTxIR( "FINA080", SE2->( Recno() ), nIRRF )
					EndIf	
				Else
	
					//Gera novamente o titulo de IR para o adiantamento
					If SE2->E2_PRETIRF = '1' .AND. AllTrim( SE2->E2_TIPO ) $ MVPAGANT
						nIRRF := SE2->E2_IRRF
						dVencRea := F050VIMP("IRRF",SE2->E2_EMISSAO,SE2->E2_EMIS1,SE2->E2_VENCREA,'',SA2->A2_TIPO,lIRPFBaixa) 					
	
						FGrvIRRF("FINA050",dVencRea,dDataBase,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_TIPO,nIRRF,SE2->E2_MOEDA,SE2->E2_LA,SE2->E2_DIRF,SE2->E2_CODRET,.F.,;
						{},{},SE2->(Recno()),"SE2",.T.)
						
						nIRRF := 0
						
					EndIf
				
				EndIf
				
				If lCalcIssBx 
					Reclock("SE2")
					If SE2->(FieldPos("E2_VRETIRF")) > 0 .AND. SE2->E2_VRETISS > 0
						SE2->E2_VRETISS -= nIss
					EndIf
					MsUnlock()
				EndIf
				
				//Atualiza o status de viagem
				If (ALLTRIM(SE2->E2_ORIGEM) $ "FINA667|FINA677")
					FINATURES(SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA),.F.,SE2->E2_ORIGEM,"P")
				EndIf
				
				If !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa Empresa Publica			
					If !lInsPub 
						If SED->ED_CALCINS == "S" .and. SA2->A2_RECINSS == "S" .And. lInssBx .And. cPaisLoc = "BRA" //Inss Baixa 		
							Reclock("SE2")
							If SE2->(FieldPos("E2_VRETINS")) > 0 .And. SE2->E2_VRETINS > 0 .And. nInss > nVlRetin .And. lAltVr 
								SE2->E2_VRETINS -= nInss
								SE2->E2_INSS 		-= nInss
							EndIf
							If SE2->E2_PRETINS	==	"2"
								SE2->E2_PRETINS	:=	"1"
							Endif
							MsUnlock()
						EndIf
					Else
						SE2->E2_VRETINS -= nInss									
					Endif	
				Endif
			Else
				RecLock("SE2")	
				SE2->E2_OK := ''			    		
				MsUnlock() 
				
				*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				*³Gera lancamento contabil de estorno 								³
				*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cPadrao := "531"    //cancelamento de baixa
				lPadraoBx := (VerPadrao(cPadrao) .and. lContabilizou)
	
				nRegB := SE2->( Recno() )
				lPadraoVd := VerPadrao("519") //cancelamento de baixa vendor
				dbSelectArea( "SE2" )
				dbGoto(nRegB)
	
				IF lVend
					lPadraoBx := VerPadrao( "531" ) //cancelamento
				Endif
	
			
			EndIf	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se contabiliza on-line o estorno da baixa		  ³
			//³Estorno de Vendor deve ser on-line.
			//³Caso a baixa do titulo tenha sido contabilizada;
			//³força a contabilização ON-LINE do cancelamento para que ; ³
			//³não fique nenhuma perna na contabilidade.                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nOpcx == 5 .and. !lVend .and. SE5->E5_TIPODOC == "VL"
				lLanca := IIF(mv_par03 == 1 .or. SE5->E5_LA = "S" , .T.,.F.) 
			Else
				lLanca := .T.
			Endif

			cTpBxCtb := SE5->E5_TIPODOC
			//Condições para ser lançada a linha de estorno, a linha de estorno pode não ser gerada por conta de exclusão de lançamento ou movimentações que são apenas canceladas
			lCtbEstn := nOpcx == 5 .Or. ( nOpcx == 6 .And. ( ( cTpBxCtb =="BA" .And. !Empty(cLoteFin) .And. !Empty( SE5->E5_ARQCNAB ) ) .Or. ( lBxConc .And. !Empty( SE5->E5_RECONC ) ) ) )
			lCtbEstn := lCtbEstn .And. ( cTpBxCtb $ "VL" .Or. ( cTpBxCtb =="BA" .And. !Empty( cLoteFin ) .And. !Empty( SE5->E5_ARQCNAB ) ) )

			If cMultNat == "1"
				DelMNatBx("SE2",@nHdlPrv,@nTotal,@cArquivo,nOpcx != 5,cSeqSE5,lLanca,lUsaFlag,@aFlagCTB) // Apaga as naturezas geradas para o titulo
			Else	
				If lAtuSldNat
					AtuSldNat(SE2->E2_NATUREZ, SE2->E2_BAIXA, SE2->E2_MOEDA, "3", "P", If(SE2->E2_MOEDA > 1,nValEstrang,nValPgto),If(SE2->E2_MOEDA > 1, nValPgto, nValEstrang), If(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG,"+","-"),,FunName(),"SE2",SE2->(Recno()),nOpcx)
				Endif
				IF (lPadraoBx .or. lPadraoVd ) .and. lContabilizou .and. lLanca
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Inicializa Lancamento Contabil                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nHdlPrv := HeadProva( cLote,;
						                      "FINA080" /*cPrograma*/,;
						                      Substr( cUsuario, 7, 6 ),;
						                      @cArquivo )

				Endif
				IF lPadraoBx .and. lContabilizou .and. lLanca
					ABATIMENTO := nTotAbat
					If !lCtbEstn
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Prepara Lancamento Contabil                                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
							aAdd( aFlagCTB, {"E2_LA", "S", "SE2", SE2->( Recno() ), 0, 0, 0} )
						Endif
						nTotal += DetProva( nHdlPrv,;
						                    cPadrao,;
						                    "FINA080" /*cPrograma*/,;
						                    cLote,;
						                    /*nLinha*/,;
						                    /*lExecuta*/,;
						                    /*cCriterio*/,;
						                    /*lRateio*/,;
						                    /*cChaveBusca*/,;
						                    /*aCT5*/,;
						                    /*lPosiciona*/,;
						                    @aFlagCTB,;
						                    /*aTabRecOri*/,;
						                    /*aDadosProva*/ )
					EndIf
				Endif
				IF lPadraoVd .and. lContabilizou .And. lLanca
					IF lVend
						dbSelectArea( "SE2" )
						SE2->( dbGoto(nRegV) )
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Prepara Lancamento Contabil                                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
								aAdd( aFlagCTB, {"E2_LA", "S", "SE2", SE2->( Recno() ), 0, 0, 0} )
							Endif
							nTotal += DetProva( nHdlPrv,;
							                    "519" /*cPadrao*/,;
							                    "FINA080" /*cPrograma*/,;
							                    cLote,;
							                    /*nLinha*/,;
							                    /*lExecuta*/,;
							                    /*cCriterio*/,;
							                    /*lRateio*/,;
							                    /*cChaveBusca*/,;
							                    /*aCT5*/,;
							                    /*lPosiciona*/,;
							                    @aFlagCTB,;
							                    /*aTabRecOri*/,;
							                    /*aDadosProva*/ )
					Endif
				Endif
			Endif
			IF TrazCodMot(cMotBx) == "VEN"
				dbSelectArea("SE2")
				dbSetOrder(1)
				If dbSeek(xFilial("SE2")+cTitOriV) .And. SE2->E2_ORIGEM != "FINA090"
					If SE2->E2_SALDO == SE2->E2_VALOR
						If lExistFJU 
							FinGrvEx("P")
						Endif					
						Reclock("SE2",.F.,.T.)
						dbDelete()
					Else
						Help(" ",1,"BXVENDOR",,Subs(cTitOriV,1,3)+" "+Subs(cTitOriV,4,6)+;
							" "+Subs(cTitOriV,10,nTamParc)+" "+Subs(cTitOriV,10+nTamParc,3),5,1)
						lBaixaOk := .F.
					Endif
				ElseIf SE2->(!Eof()) .And. Alltrim(SE2->E2_ORIGEM) == "FINA090" .And. SuperGetMv("MV_BXAUTVE",.F.,.F.)
					Aviso(	STR0143, STR0141 + Chr(13)+; // "Atenção", "Existe um titulo de vendor gerado por esta baixa! Porém, como ele foi gerado pela rotina de baixa automática, seu valor não será alterado."
								STR0142 + Subs(cTitOriV,1,3)+" "+Subs(cTitOriV,4,6)+; // "Prefixo/Numero/Parcela/Tipo do titulo de VENDOR gerado: "
								" "+Subs(cTitOriV,10,nTamParc)+" "+Subs(cTitOriV,10+nTamParc,3),{"Ok"})
				Endif
			EndIf
			SE2->( dbGoto(nRegB) )
			*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			*³Volta titulo para carteira 										³
			*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Reclock( "SE2" )
			nTotAbat := IIF( SE2->E2_SALDO!=0,0,nTotAbat)
			dDataAnt := Iif(nOpBaixa==Len(aBaixa),Iif(Len(aBaixa)==1,CtoD(""),;
			aBaixaSE5[Len(aBaixa)-1][7]),E2_BAIXA)

			IF SE2->E2_MOEDA == 1
				nValor :=SE2->E2_SALDO+(nValPgto-(nJuros+nOtrga+nImpSubst)-nMulta+nDescont+nTotAbat+nPis+nCoFins+nCsll+nInss)
				
				If lIRPFBaixa
					nValor += nIrrf
				EndIf
				
				nValor += nIss
			Else 
				nValor :=SE2->E2_SALDO+NoRound(xMoeda(((nValPgto-(nJuros+nOtrga+nImpSubst)-nMulta+nDescont+nTotAbat+nPis+nCoFins+nCsll+;
								nIrrf+nIss+nInss)),nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1)
				If nValor <> SE2->E2_VALOR
					// Verifica se o valor original convertido para moeda estrangeira é o mesmo do nValPgto
					// pois pode ter diferença de centavos devido arrendondamento de casas decimais
					If  nValPgto == Round(Noround(xMoeda(((SE2->E2_VALOR-(nJuros+nOtrga+nImpSubst)-nMulta+nDescont+nTotAbat+nPis+nCoFins+nCsll+nIrrf+nIss+nInss)),SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda,/*nTxMoeda*/),nCentMd1+1),nCentMd1) 
						nValor := SE2->E2_VALOR
					EndIf
				EndIf	
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Volta valor original do titulo se for o cancelamento final das baixas, se nao ³
			//³houverem compensa‡oes e se o titulo, ou parte dele, nao estiver em fatura.    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Len(aBaixa) == 1 .and. nTotAdto == 0 .and. nTotImpost == 0 .And. nTotaIRPF == 0 .and. ;
				! SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG .And.;
				( Empty(SE2->E2_FATURA) .Or. LTrim(SubStr(SE2->E2_FATURA,1,6)) == "NOTFAT" );
				.And. !(SE2->E2_SALDO == 0)
				
				nValor := SE2->E2_VALOR
			Endif
			If lIRPFBaixa .and. nIrrf > SE2->E2_VALOR
				SE2->E2_SALDO := 	IIf( nValor < 0 , 0 , SE2->E2_VALOR )
			Else
				SE2->E2_SALDO := 	IIf( nValor < 0 , 0 , nValor )	
			EndIf
			
			//Danilo
			If SE2->(FieldPos("E2_NUMSOL")) > 0 
				SE2->E2_NUMSOL := ""
			EndIf
			
			IF Str( E2_SALDO,   17, 2 ) == Str( E2_VALOR,   17, 2 ) .AND. ;
			   Str( E2_SDACRES, 17, 2 ) == Str( E2_ACRESC,  17, 2 ) .AND. ;
			   Str( E2_SDDECRE, 17, 2 ) == Str( E2_DECRESC, 17, 2 ) .AND. ;
			   Len(aBaixa) == 1 //Se for a ultima baixa, pois pode ocorrer de haver baixa somente dos juros,logo os valores sao iguais com mais de uma baixa
			   
				SE2->E2_BAIXA :=	 CtoD("")
			Else
				//A baixa por compensação não aparece no array de aBaixa
				If !( Empty( dDataAnt ) .And. Len(aBaixa) == 1 .And. SE2->E2_SALDO < SE2->E2_VALOR .And. !Empty( SE2->E2_BAIXA ) )
					SE2->E2_BAIXA	:= dDataAnt
				EndIf
			EndIf
			
			If lIRPFBaixa
				SE2->E2_PRETIRF := IIf(SE2->E2_SALDO > 0,"1"," ")
			EndIf
			
			If !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa Empresa Publica			
				If SED->ED_CALCINS == "S" .and. SA2->A2_RECINSS == "S" .And. lInssBx .And. cPaisLoc = "BRA" //Inss Baixa 		
					If SE2->E2_PRETINS == "2"
						SE2->E2_PRETINS := "1"
					Endif	
				EndIf
			Endif
			
			//restaura o saldo original do título.
			If (SE2->E2_JUROS > 0) .And. SE2->E2_SALDO > SE2->E2_VALOR
				SE2->E2_SALDO -= SE2->E2_JUROS
			EndIf		
				
			SE2->E2_DESCONT:= 0
			SE2->E2_MULTA	:= 0
			SE2->E2_JUROS	:= 0
			SE2->E2_CORREC	:= 0
			SE2->E2_VALLIQ	:= 0
			SE2->E2_LOTE 	:= Space(Len(SE2->E2_LOTE))
			SE2->E2_NUMBCO	:=	Space(Len(SE2->E2_NUMBCO))
			If cPaisLoc == "CHI"
				IIf (SE2->(FieldPos("E2_OTRGA"))  > 0,SE2->E2_OTRGA    := 0,.T.)   
				IIf (SE2->(FieldPos("E2_CAMBIO")) > 0,SE2->E2_CAMBIO   := 0,.T.)      
				IIf (SE2->(FieldPos("E2_IMPSUBS"))> 0,SE2->E2_IMPSUBS  := 0,.T.)         
				IIf (SE2->(FieldPos("E2_TXMOEDA"))> 0,SE2->E2_TXMOEDA  := 0,.T.)                  
			EndIf
			//Caso exista solicitacao de NCP eh necessario atualizar o campo CU_DTBAIXA... 
			If cPaisLoc <> "BRA"
				A055AtuDtBx("2",SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_NUM,SE2->E2_PREFIXO,SE2->E2_BAIXA)
			EndIf
			If lSPB
				SE2->E2_OKSPB		:= " "
				SE2->E2_CLEARIN	:= Space(3)
				SE2->E2_TPPGTO		:= Space(2)
				SE2->E2_HORASPB	:= Space(5)
			Endif
			If (SE2->E2_SALDO == SE2->E2_VALOR .AND. EMPTY(SE2->E2_BAIXA))
				SE2->E2_SDACRES := SE2->E2_ACRESC
				SE2->E2_SDDECRE := SE2->E2_DECRESC
			ElseIf lAcreDecre                         
				If SE2->E2_MOEDA > 1 .AND. cPaisLoc == "BRA"
					//Se o valor do acrescimo do SE5 for igual ao valor do acrescimo do SE2 convertido na moeda local, utilizar o proprio acrescimo SE2
					If Round(NoRound(xMoeda(SE2->E2_ACRESC,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1) == ;
						Round(NoRound(SE5->E5_VLACRES,nCentMd1+1),nCentMd1)
					
						SE2->E2_SDACRES += Round(Noround(SE2->E2_ACRESC,nCentMd1+1),nCentMd1)						
					Else
						SE2->E2_SDACRES += Round(Noround(xMoeda(SE5->E5_VLACRES,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
					Endif
					//Se o valor do decrescimo do SE5 for igual ao valor do decrescimo do SE2 convertido na moeda local, utilizar o proprio decrescimo SE2
					If Round(NoRound(xMoeda(SE2->E2_DECRESC,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1) == ;
						Round(NoRound(SE5->E5_VLDECRE,nCentMd1+1),nCentMd1)
					
						SE2->E2_SDDECRE += Round(Noround(SE2->E2_DECRESC,nCentMd1+1),nCentMd1)						
					Else
						SE2->E2_SDDECRE += Round(Noround(xMoeda(SE5->E5_VLDECRE,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
					Endif
					
				Else
					SE2->E2_SDACRES += Round(Noround(xMoeda(SE5->E5_VLACRES,1,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
					SE2->E2_SDDECRE += Round(Noround(xMoeda(SE5->E5_VLDECRE,1,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
				Endif
				IF( Str(E2_SALDO,17,2) == Str(E2_VALOR,17,2) .and. Str(E2_SDACRES,17,2) = Str(E2_ACRESC,17,2) .and. Len(aBaixa) == 1  )//Se for a ultima baixa, pois pode ocorrer de haver baixa somente dos juros,logo os valores sao iguais com mais de uma baixa
					SE2->E2_BAIXA := CtoD("")	
				EndIf
			EndIf

			//Guardo as parcelas de impostos para deleção correta dos mesmos         
			If cPaisLoc == "BRA"
				cParcPis := SE2->E2_PARCPIS
				cParcCof := SE2->E2_PARCCOF
				cParcCsl := SE2->E2_PARCSLL      
			EndIf
			
			If lPccBaixa .And. cPaisLoc == "BRA"
				cParcPis := SE2->E2_PARCPIS						
			Endif

			If lPccBaixa .And. cPaisLoc == "BRA"
				//Guardo valores antigos para contabilizar impostos no cancelamento
				SE2->E2_PIS	    := nPisOld
				SE2->E2_COFINS	:= nCofOld
				SE2->E2_CSLL	:= nCslOld
				SE2->E2_VRETPIS := nVRPisOld
				SE2->E2_VRETCOF := nVRCofOld
				SE2->E2_VRETCSL := nVRCslOld
				SE2->E2_DIRF:= IF (!EMPTY(SE2->E2_CODRET).AND. (SE2->E2_VALOR-SE2->E2_SALDO)==0, "1", "2")
				

				//Verifica se o titulo em questao ja foi retido em outro titulo
				If AliasIndic("SFQ") 
					aAreaSE2 := SE2->(GetArea())
					dbSelectArea("SFQ")
					dbSetOrder(2)
					lAchouRel := MsSeek(xFilial("SFQ")+cAlias+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA))
					RestArea(aAreaSE2)
				EndIf            

				//Se o titulo estiver em bordero, permanece os campos de retencao do bordero
				If !Empty(SE2->E2_NUMBOR) .And. !lCanBorder
					If SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL) > 0
						SE2->E2_PRETPIS := "4"
						SE2->E2_PRETCOF := "4"
						SE2->E2_PRETCSL := "4"
					ElseIf lAchouRel
						SE2->E2_PRETPIS := "2"
						SE2->E2_PRETCOF := "2"
						SE2->E2_PRETCSL := "2"                     
					Else 
						SE2->E2_PRETPIS := "1"
						SE2->E2_PRETCOF := "1"
						SE2->E2_PRETCSL := "1"                     
						SE2->E2_PRETIRF := "1"
					EndIf
				Elseif !SE2->E2_TIPO $ MVPAGANT //Se for PA (geracao de tx's pela emissao), nao exclui o numero da parcela. 
					SE2->E2_PRETPIS := "1"
					SE2->E2_PRETCOF := "1"
					SE2->E2_PRETCSL := "1"
					SE2->E2_VRETPIS := Iif((nVRPisOld - nPis) < 0.00,0,(nVRPisOld - nPis))
					SE2->E2_VRETCOF := Iif((nVRCofOld - nCofins) < 0.00,0,(nVRCofOld - nCofins))
					SE2->E2_VRETCSL := Iif((nVRCslOld - nCSLL) < 0.00,0,(nVRCslOld - nCSLL))
					SE2->E2_PARCPIS := Space(Len("E2_PARCPIS"))
					SE2->E2_PARCCOF := Space(Len("E2_PARCCOF"))
					SE2->E2_PARCSLL := Space(Len("E2_PARCSLL"))
				  	If SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL) > 0
				   			cPret:=FinRtPret(SE5->E5_SEQ)  
				   			SE2->E2_PRETPIS := cPret
					   		SE2->E2_PRETCOF := cPret
					  		SE2->E2_PRETCSL := cPret
					  		If cPret == "7"
					  			SE2->E2_PRETIRF := cPret 
					  		Endif
					Else
						SE2->E2_PRETPIS := "1"
						SE2->E2_PRETCOF := "1"
						SE2->E2_PRETCSL := "1"
				    Endif
				EndIf
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Valida se o titulo está em Borderô de Impostos FINA241 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aAreaSE2 := GetArea()
			DbSelectArea("SEA")				
			SEA->(DbSetOrder(2))
			If SEA->(MsSeek(xFilial("SEA")+SE2->E2_NUMBOR+"P"+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)))
				If SEA->(FieldPos("EA_ORIGEM")) > 0 .And. "FINA241" $ SEA->EA_ORIGEM
					lBdImp := .T.
				EndIf
			EndIf
			RestArea(aAreaSE2)

			//Altera data de vencimento dos titulos de impostos
			If Empty(SE2->E2_BAIXA) .and. (!lPccBaixa .Or. (lBdVcImp .And. lBdImp))
				AltvencImp(SE2->E2_VENCREA)
			Endif

			//Altera valor dos impostos
			If !lPccBaixa
				F080Impost(SE2->(RECNO()),.T.,nJuros,nMulta,nDescont,nValPgto)
			Endif
		
			*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			*³Verifica se h  abatimentos para voltar a carteira					³
			*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			SE2->(DBSetorder(1))
			If SE2->(dbSeek(cFilial+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA))
				cTitAnt := (SE2->E2_FILIAL+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA)
				While !SE2->(Eof()) .and. cTitAnt == (SE2->E2_FILIAL+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA)
					IF !SE2->E2_TIPO $ MVABATIM
						SE2->(dbSkip())
						Loop
					EndIF
					IF SE2->E2_FORNECE+SE2->E2_LOJA != cFornece+cLoja
						SE2->(dbSkip())
						Loop
					EndIF
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Volta titulo para carteira 				³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					Reclock("SE2")
					SE2->E2_BAIXA	:= dDataAnt
					SE2->E2_SALDO	:= E2_VALOR
					SE2->E2_DESCONT:= 0
					SE2->E2_JUROS	:= 0
					SE2->E2_MULTA	:= 0
					SE2->E2_CORREC	:= 0
					SE2->E2_VARURV	:= 0
					SE2->E2_LOTE	:= Space(Len(E2_LOTE))
					SE2->E2_VALLIQ	:= 0
					SE2->E2_NUMBCO	:= Space(Len(SE2->E2_NUMBCO))

					If lCanBorder
						SE2->E2_NUMBOR := Space(Len(SE2->E2_NUMBOR))
					Endif

					If cPaisLoc == "CHI"
			         IIf(SE2->(FieldPos("E2_OTRGA"))  > 0,SE2->E2_OTRGA    := 0,.T.)   
			         IIf(SE2->(FieldPos("E2_CAMBIO")) > 0,SE2->E2_CAMBIO   := 0,.T.)      
			         IIf(SE2->(FieldPos("E2_IMPSUBS"))> 0,SE2->E2_IMPSUBS  := 0,.T.)         
			         IIf(SE2->(FieldPos("E2_TXMOEDA"))> 0,SE2->E2_TXMOEDA  := 0,.T.)
					EndIf	         
					SE2->(dbSkip())
				Enddo
			Endif

			SE2->( dbGoTo( nSalvRec ) )

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ PONTOS DE ENTRADA							        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistTemplate("FA080CAN")
				ExecTemplate("FA080CAN",.F.,.F.,{nOpcx})
			Endif

			If ExistBlock("FA080CAN")
				ExecBlock("FA080CAN",.F.,.F.,{nOpcx})
			Endif
			 
			If ExistBlock("FA080REC")
				ExecBlock("FA080REC",.F.,.F.,{nJuros,nMulta,dDataAnt})
			EndIf	

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³LOCALiza na movimenta‡„o banc ria, os registros referentes a baixa³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			//Limpo referencias de apuracao de impostos.
			//Verifica cancelamentos apenas se o imposto realmente foi retido na baixa.
			//Exemplo abaixo:
			//Cancelamento de baixa de titulo cuja retenção ocorreu no bordero e nao na baixa
			If (lContrRet .and. lPccBaixa .and. !(nTotImpost > 0 .and. nPis+nCofins+nCsll == 0)) .Or.;
				(lIRPFBaixa .And. nTotaIRPF > 0) .Or. (lInssBx .And. nInssParc > 0) 
	
				dbSelectArea("SE5")
				dbSetOrder(2)
				dbGoto(nRecSe5)				
				If lIRPFBaixa .AND. (SA2->A2_TIPO == "F" .OR. (SA2->A2_TIPO == "J" .AND. lIRProg == "1")) .AND. Empty(SE5->E5_PRETIRF) .and. ;
					!Empty(SE5->E5_PRETPIS)
					lRetSoIrf := .T.
				Endif				
					 		
				aRecSE5 := FImpDelTit("SE5",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ)
				For nX := 1 to Len(aRecSE5)
					SE5->(MSGoto(aRecSE5[nX]))	
					RecLock("SE5",.F.)          					

					//Se nao reteve somente IRRF
					If !lRetSoIrf .And. (((!SE5->E5_TIPO $ MVPAGANT) .Or. (SE5->E5_TIPO $ MVPAGANT)) .And.;
						!Empty(SE5->E5_PRETPIS) .And. !Empty(SE5->E5_PRETCOF) .And. !Empty(SE5->E5_PRETCSL)) .and. SE5->E5_MOTBX<>"CMP"					
						SE5->E5_PRETPIS := "1"
						SE5->E5_PRETCOF := "1"
						SE5->E5_PRETCSL := "1"
					Endif
					If lIRPFBaixa .and. !Empty(SE5->E5_PRETIRF).and. SE5->E5_MOTBX<>"CMP" .and. SE5->E5_PRETIRF <> "4"
						SE5->E5_PRETIRF := "1"
					EndIf												
					If lInssBx	.And. SE5->E5_PRETINS ==	"2" .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa 
						SE5->E5_PRETINS	:=	"1"
					Endif												
					SE5->(MsUnlock())
				Next
	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Exclui os registros de relacionamentos do SFQ                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SE5->(dbGoto(nRecSe5))
				FImpDelSFQ("SE5",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ)

				aRecSE2 := FImpExcTit("SE2",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,,SE5->E5_SEQ)
				For nX := 1 to Len(aRecSE2)
					SE2->(MSGoto(aRecSE2[nX]))	
					FaAvalSE2(4)
				Next

				//Exclui os registros de relacionamentos do SFQ
				SE5->(dbGoto(nRecSe5))
				FImpExcSFQ("SE2",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA)
				
				FDelTxBx(SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ,cParcPis,cParcCof,cParcCsl)			

				If lInssBx .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa
					FDelTxInss(SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ,lAltVr)					
				Endif								
				SE5->(dbGoto(nRecSe5))
			Endif         

			IF nIss != 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Apaga tambem os registro de impostos-ISS   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SE5->(dbGoto(nRecSe5))
				SE2->(dbGoTo(nSalvRec))
				dbSelectArea("SE2") 
				dbSetOrder(1)
				cChavePai := SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
				If MsSeek(xFilial("SE2")+SE2->(E2_PREFIXO+E2_NUM))
					cChaveImp := SE2->(E2_PREFIXO+E2_NUM)
					cNatIss	:= AllTrim(&(GetMv("MV_ISS")))
					While !Eof() .And. E2_FILIAL+E2_PREFIXO+E2_NUM == xFilial("SE2")+cChaveImp
						IF E2_TIPO $ MVISS .And. ;
							AllTrim(E2_NATUREZ) == cNatIss .And. ;
							STR(SE2->E2_SALDO,17,2) == STR(SE2->E2_VALOR,17,2) .and. ;
							(AllTrim(SE2->E2_ORIGEM) $ "FINA080|FINA090|FINA091") .and. ;
							SE5->E5_SEQ == SE2->E2_SEQBX .And. AllTrim(SE2->E2_TITPAI) == AllTrim(cChavePai)
							If lExistFJU 
								FinGrvEx("P")
							Endif							
							RecLock( "SE2" ,.F.,.T.)
							dbDelete( )
						EndIf
						dbSkip()
					Enddo
				Endif
			EndIf
			
			SE5->(dbGoto(nRecSe5))
			SE2->(dbGoTo(nSalvRec))
	
			dbSelectArea("SE5")
			dbSetOrder(2)

			aAux := { "VL","CM","CX","DC","MT","JR","BA"}
			IIf(cPaisloc == "CHI",AADD(aAux,"IS"),.T.)

			For nI := 1 to len(aAux)

				If SE5->( dbSeek(xFilial("SE5")+aAux[ni]+cChave))

					cBanco	:= SE5->E5_BANCO
					cAgencia := SE5->E5_AGENCIA
					cConta   := SE5->E5_CONTA
					cTitulo	:= SE5->E5_NUMERO
					cCheque	:= SE5->E5_NUMCHEQ
					lCnab	:= IIF(EMPTY(SE5->E5_ARQCNAB),.F.,.T.)
					cTpDesc := ""

					If lTpDesc
						cTpDesc := SE5->E5_TPDESC
					EndIf

					If lAcreDecre
						nAcresc := SE5->E5_VLACRES
						nDecresc := SE5->E5_VLDECRE
					Endif
					If lContrRet .and. (lPccBaixa .Or. lIRPFBaixa .Or. lCalcIssBx)
					
						aImp := {SE5->E5_VRETPIS,SE5->E5_VRETCOF,SE5->E5_VRETCSL,SE5->E5_PRETPIS,SE5->E5_PRETCOF,SE5->E5_PRETCSL,/*E5_VRETIRF*/,/*E5_PRETIRF*/,/*E5_VRETISS*/}
						
						If lIRPFBaixa
							aImp[7] := SE5->E5_VRETIRF
							aImp[8] := SE5->E5_PRETIRF
						EndIf
						
						If lCalcIssBx
							aImp[9] := SE5->E5_VRETISS
						Endif
					Endif
					If nOpcx == 5 .Or. (nOpcx == 6 .And. ((aAux[nI]=="BA" .And. !Empty(cLoteFin) .And. lCnab) .Or.(lBxConc .and. !Empty(SE5->E5_RECONC))))
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Cancela as baixas gerando um lancamento de estorno no SE5         ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If aAux[nI] $ "VL" .or. (aAux[nI]=="BA" .and. !Empty(cLoteFin).and. lCnab )
							Reclock("SE5",.T.)
							SE5->E5_FILIAL    := xFilial("SE5")
							SE5->E5_BANCO     := cBANCO
							SE5->E5_AGENCIA   := cAGENCIA
							SE5->E5_CONTA     := cCONTA
							SE5->E5_DATA      := dDatabase
							If cPaisLoc <>"BRA"
								SA6->(DbSetOrder(1))
								SA6->(MsSeek(xFilial()+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))
								If( Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,SA6->A6_MOEDAP),1) )== 1
									SE5->E5_VALOR     := nValPgto
									SE5->E5_VLMOED2   := nValEstrang
								Else
									SE5->E5_VALOR     := nValEstrang
									SE5->E5_VLMOED2   := nValPgto
								EndIf
							ElseIf SE2->E2_MOEDA<>1 .and. (SE2->E2_TIPO$MVPAGANT)
									SE5->E5_VALOR     := nValPgto
									SE5->E5_VLMOED2   := SE2->E2_MOEDA*nValEstrang
									SE5->E5_TXMOEDA   := nTxMoeda
							Else
									SE5->E5_VALOR     := nValPgto//- IIF(lPccBaixa .And. !lMVBP10925 .And. SE2->(E2_SALDO<E2_VALOR),SE2->(E2_PIS-E2_VRETPIS+E2_COFINS-E2_VRETCOF+E2_CSLL-E2_VRETCSL),0)
									SE5->E5_VLMOED2   := nValEstrang   
									SE5->E5_TXMOEDA   := nTxMoeda
							EndIf
					
							SE5->E5_NATUREZ   := SE2->E2_NATUREZ
							SE5->E5_RECPAG    := Iif(SE2->E2_TIPO$MVPAGANT+"/"+MV_CPNEG,"P","R")
							SE5->E5_TIPO      := cTIPO
							SE5->E5_LA        := Iif((lPadraoBx .OR. lPadraoVd ) .and. lContabilizou .and. lLanca .and. !lUsaFlag,"S","N")
							SE5->E5_TIPODOC   := "ES"
							SE5->E5_LOTE      := cLoteFin
							SE5->E5_PREFIXO   := cPREFIXO
							SE5->E5_NUMERO    := cTITULO
							SE5->E5_PARCELA   := cPARCELA
							SE5->E5_FORNECE   := cFORNECE
							SE5->E5_CLIFOR    := cFORNECE
							SE5->E5_LOJA      := cLOJA
							SE5->E5_BENEF     := SE2->E2_NOMFOR
							SE5->E5_DTDIGIT   := dDataBase
							SE5->E5_MOTBX     := TrazCodMot(cMotBx)
							SE5->E5_SEQ       := cSEQUENCIA
							SE5->E5_DTDISPO   := dDataBase
							SE5->E5_NUMCHEQ	:= cCheque
							SE5->E5_DOCUMEN   := cNumBor
							SE5->E5_HISTOR		:= cHistCan070
							SE5->E5_MULTNAT	:= cMultNat
							SE5->E5_VLJUROS	:= nJuros
							SE5->E5_VLDESCO	:= nDescont
							SE5->E5_VLMULTA	:= nMulta
							SE5->E5_VLCORRE	:= nCorrec  
							SE5->E5_FILORIG := SE2->E2_FILORIG

							If lTpDesc
								SE5->E5_TPDESC  := cTpDesc
							EndIf

							If cPaisLoc <> "BRA"
								SE5->E5_MOEDA:= StrZero(nMoedaTit,2)
								SE5->E5_TXMOEDA:= nTxModBco
	    					EndIf
							If lAcreDecre
								SE5->E5_VLACRES := nAcresc
								SE5->E5_VLDECRE := nDecresc
							Endif

							If lSpbInUse
								SE5->E5_MODSPB	 := cModSpb
							Endif

							If lContrRet .and. (lPccBaixa .Or. lIRPFBaixa .Or. lCalcIssBx)
   	
								SE5->E5_VRETPIS := aImp[1]
								SE5->E5_VRETCOF := aImp[2]
								SE5->E5_VRETCSL := aImp[3]
		         	                              
								SE5->E5_PRETPIS := aImp[4]
								SE5->E5_PRETCOF := aImp[5]
								SE5->E5_PRETCSL := aImp[6]
   	
								If lIRPFBaixa
									SE5->E5_VRETIRF := aImp[7]
									SE5->E5_PRETIRF := aImp[8]								
								Endif   	
								
								If lCalcIssBx
									SE5->E5_VRETISS := aImp[9]
								Endif
								
								SE5->(MsUnLock())
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Prepara Lancamento Contabil                                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
								aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
							Endif
							AADD(aRecBorra,{SE5->( Recno() ),"N"})

							If lPadraoBx .and. lContabilizou .and. lLanca .And. aAux[nI] $ cTpBxCtb .And. lCtbEstn
								nTotal += DetProva( nHdlPrv,;
								                    cPadrao,;
								                    "FINA080" /*cPrograma*/,;
								                    cLote,;
								                    /*nLinha*/,;
								                    /*lExecuta*/,;
								                    /*cCriterio*/,;
								                    /*lRateio*/,;
								                    /*cChaveBusca*/,;
								                    /*aCT5*/,;
								                    /*lPosiciona*/,;
								                    @aFlagCTB,;
								                    /*aTabRecOri*/,;
								                    /*aDadosProva*/ )
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ PONTO DE ENTRADA F080EST                            ³
							//³ PE para grava‡äes complementares do cancelamento    ³
							//³ da baixa                                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							IF EXISTBLOCK("F080EST")
								ExecBlock("F080EST",.F.,.F.)
							Endif
						Else
							Reclock("SE5")
							SE5->E5_SITUACA := "C"
							If SE5->( FieldPos( "E5_DTCANBX" ) ) > 0
								SE5->E5_DTCANBX := dDataBase
							EndIf
							SE5->(MsUnlock())
						EndIf
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ PONTO DE ENTRADA F080EST2                           ³
						//³ PE para grava‡oes complementares do cancelamento    ³
						//³ da baixa                                            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						IF EXISTBLOCK("F080EST2")
							ExecBlock("F080EST2",.F.,.F.)
						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava os lancamentos das contas orcamentarias - SIGAPCO    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If SE5->E5_TIPODOC == "ES"
							PcoDetLan("000005","02","FINA080")
						Else	                              
							PcoDetLan("000005","01","FINA080",.T.,"00000601")
							PcoDetLan("000006","01","FINA090",.T.)							
						EndIf	
							
					Else
						Reclock("SE5",.F.,.T.)
						dbDelete()
						MsUnlock()
						lExclusao := .T.
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava os lancamentos das contas orcamentarias - SIGAPCO    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If SE5->E5_TIPODOC == "ES"
							PcoDetLan("000005","02","FINA080")
						Else	                              
							PcoDetLan("000005","01","FINA080",.T.)
							PcoDetLan("000006","01","FINA090",.T.)							
						EndIf	
					
					EndIf
				Endif
			Next

			dbSetOrder(1)
			dbGoTo(nRecSe5)		//volta para o registro principal
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Deleta Cheque gerado pela baixa				    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nRecNo := 0
			nValor := 0
			dbSelectArea("SEF")
			If nRecDelSef > 0
				dbGoto( nRecDelSef )
				If SEF->EF_IMPRESS != "C"
					Reclock("SEF",.F.,.T.)
					nValor := SEF->EF_VALOR
					dbDelete()
					MsUnlock()
				Endif
			Endif
			dbSetOrder(1)
			nRecNo := 0
			nValor := 0

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza o totalizador							   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SubStr(cCheque,1,1) = "*" .And. nRecNo != 0
				dbGoTo( nRecNo )
				Reclock("SEF")
				SEF->EF_VALOR -= nValor
				IF SEF->EF_VALOR == 0
					Reclock("SEF",.F.,.T.)
					SEF->(dbDelete())
					MsUnlock()
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza o Cadastro de Fornecedores							 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA2")
			If !Eof()
				RecLock( "SA2" )
				If SE2->E2_MOEDA > 1 .Or. cPaisLoc<>"BRA"
					nValPadrao := Round(NoRound(xMoeda(nValPadrao,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1),nCentMd1+1),nCentMd1)
					nValPadrao := Round(NoRound(xMoeda(nValPadrao,SE2->E2_MOEDA,nMoedaBco,SE2->E2_EMISSAO,nCentMd1+1),nCentMd1+1),nCentMd1)
				Endif
				IF SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
					SA2->A2_SALDUP		:= A2_SALDUP - nValPadrao
					SA2->A2_SALDUPM	:= A2_SALDUPM-xMoeda(nValPadrao,nMoedaBco,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO)
      		Else
					SA2->A2_SALDUP		:= A2_SALDUP + nValPadrao
					SA2->A2_SALDUPM	:= A2_SALDUPM+xMoeda(nValPadrao,nMoedaBco,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO)
				Endif
				nAtraso:=dBaixa-SE2->E2_VENCTO
				If nAtraso > 1
					IF Dow(SE2->E2_VENCTO) == 1 .Or. Dow(SE2->E2_VENCTO) == 7
						IF Dow(dBaixa) == 2 .and. nAtraso <= 2
							nAtraso := 0
						EndIF
					EndIF
					nAtraso:=IIF(nAtraso<0,0,nAtraso)
					If SA2->A2_MATR < nAtraso
						Replace A2_MATR With nAtraso
					EndIf
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³	Atualiza saldos banc rios. 										 ³
			//³	No cancelamento de baixa de adiantamento, o saldo do caixa/banco ³
			//³	deve diminuir, pois o capital saiu do caixa e voltou a quem      ³
			//³	solicitou o PA. 												 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SE2")
			SE2->( dbGoto(nReg) )

			IF SE2->E2_TIPO $ MVPAGANT
				AtuSalBco(aBaixaSE5[nOpBaixa,11],aBaixaSE5[nOpBaixa,12],aBaixaSE5[nOpBaixa,13],If(lExclusao,aBaixaSE5[nOpBaixa,7],dDataBase),nValPgto,"-")
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³	Caixa ou Bordero sem Cheque ou Debto.CC							   ³
			//³	Quando for Debito em C.Corrente tem que estornar o saldo Bancario  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica o modulo para definir o tratamento do Caixa		   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (lEstorna .and. MovBcoBx(cMotBx, .T.) .and. SE5->E5_TIPODOC <>"BA") .or. ;
				Left(aBaixaSE5[nOpBaixa,11],TamSX3("A6_COD")[1]) == Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .or. aBaixaSE5[nOpBaixa,11] $ GetMv("MV_CARTEIR")
				AtuSalBco(aBaixaSE5[nOpBaixa,11],aBaixaSE5[nOpBaixa,12],aBaixaSE5[nOpBaixa,13],If(lExclusao,aBaixaSE5[nOpBaixa,7],dDataBase),nValPgto,"+")
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza saldo bancario quando motivo de baixa movimenta banco mas ³
				//³ este motivo de baixa nao gera cheque                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If	(MovBcoBx(cMotBx) .and. !ChqMotBx(cDescrMo)).and. (!(Left(aBaixaSE5[nOpBaixa,11],3) ==;
					Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1])) .and. !(aBaixaSE5[nOpBaixa,11] $ GetMv("MV_CARTEIR"))) .and. !(SE2->E2_TIPO $ MVPAGANT)
					AtuSalBco(aBaixaSE5[nOpBaixa,11],aBaixaSE5[nOpBaixa,12],aBaixaSE5[nOpBaixa,13],If(lExclusao,aBaixaSE5[nOpBaixa,7],dDataBase),nValPgto,"+")			
				Endif
			EndIf

			If lCanBorder
				If (lPccBaixa .and. ((SE2->E2_PIS > 0 .or. SE2->E2_CSLL > 0 .or. SE2->E2_COFINS > 0) .AND. !Empty(SE2->E2_NUMBOR) .AND. ;
					(SE2->E2_PRETPIS != '1' .or. SE2->E2_PRETCSL != '1' .or. SE2->E2_PRETCOF != '1'))) .OR.;
					(lIRPFBaixa .And. SE2->E2_IRRF > 0 .And. SE2->E2_VRETIRF > 0 .And. !Empty(SE2->E2_NUMBOR)) .OR. ; 
					(lCalcIssBx .And. SE2->E2_ISS > 0 .And. SE2->E2_VRETISS > 0 .And. !Empty(SE2->E2_NUMBOR)) 
					//"Atencao"
					//"Embora o parâmetro MV_CANBORP esteja 'S', o borderô nao foi cancelado pois "+;
					//"possui impostos Pis Cofins CSLL. Para cancelar esse borderô utilize a rotina de "+;
					//"manutenção de borderô. Sugerimos também que utilize o parâmetro MV_CANBORP = 'N'",;						
					Aviso(STR0143,STR0160 + STR0177 +STR0162,{STR0078})
				Else
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Apaga registro do titulo no SEA retirando-o do bordero		   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !Empty(SE2->E2_NUMBOR)
						nOrdem 	:= SEA->(IndexOrd())
						dbSelectArea("SEA")
						DbSetOrder(1)
						If Fa150PesqBord(SE2->E2_NUMBOR,@cFilBor)
							If SEA->(dbseek(cFilBor+SE2->(E2_NUMBOR+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)))
								While !Eof() .and. SEA->(EA_FILIAL+EA_NUMBOR+EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA) == ;
									SE2->(cFilBor+E2_NUMBOR+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
									If SEA->EA_CART == "P"
										Reclock("SEA",.F.,.T.)
										dbDelete()
										Exit
									Endif
									DbSkip()
								Enddo
							Endif
						EndIf	
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Restaura os indices 												 ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dbSelectArea("SEA")
						dbSetOrder(nOrdem)					
					Endif	
					RecLock("SE2",.F.)
					SE2->E2_NUMBOR := Space(Len(SE2->E2_NUMBOR))
				EndIf
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera lan‡amento cont bil de estorno					   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF nHdlPrv > 0 .And. (lPadraoBx .Or. lPadraoVd) .and. lContabilizou .and. lLanca
				//-- Se for rotina automatica força exibir mensagens na tela, pois mesmo quando não exibe os lançametnos, a tela 
				//-- sera exibida caso ocorram erros nos lançamentos padronizados
				If lF080Auto
					lSetAuto := _SetAutoMode(.F.)
					lSetHelp := HelpInDark(.F.)
					If Type('lMSHelpAuto') == 'L'
						lMSHelpAuto := !lMSHelpAuto
					EndIf						
				EndIf

				lDigita := If( mv_par01 == 1, .T., .F. )
				lAglut  := If( mv_par02 == 1, .T., .F. )
				
				If ( FindFunction( "UsaSeqCor" ) .And. UsaSeqCor() ) 
					aAdd(aDiario,{"SE5",SE5->(RecNo()),cCodDiario,"E5_NODIA","E5_DIACTB"})
				Else
					aDiario := {}
				EndIf     
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Efetiva Lan‡amento Contabil                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					RodaProva( nHdlPrv,;
					           nTotal )
					cA100Incl( cArquivo,;
					           nHdlPrv,;
					           3 /*nOpcx*/,;
					           cLote,;
					           lDigita,;
					           lAglut,;
					           /*cOnLine*/,;
					           /*dData*/,;
					           /*dReproc*/,;
					           @aFlagCTB,;
					           /*aDadosProva*/,;
					           aDiario )
					aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

				If lF080Auto
					HelpInDark(lSetHelp)
					_SetAutoMode(lSetAuto)
					If Type('lMSHelpAuto') == 'L'
						lMSHelpAuto := !lMSHelpAuto
					EndIf
				EndIf					
			Endif
		Endif		

		//Conforme situacao do parametro abaixo, integra com o SIGAGSP, solicitado em 05/10/2004 por Fernando Mazzarolo.
		//MV_SIGAGSP - 0-Nao / 1-Integra
		//Integração após a gravação do cancelamento da Baixa
		If GetNewPar("MV_SIGAGSP","0") == "1" 
			If ( "U" == Valtype(nGSPx) ) .or. ( "N" <> Valtype(nGSPx) )
				nGSPx := nOpcx
			Endif
			GSPF360()
		EndIf
 
		//Se for PABruto volta o valor dos impostos PCC 		
		If lPaBruto .and. nOpBaixa == 1 .and. TRIM(SE2->E2_TITADT) == "1"
			PABrtComp(.F.,.T.)
		EndIf 		
 		
		//O recalculo do PCC (FINA379) nao deverá ocorrer quando a baixa cancelada nao reteve
		//os impostos e os mesmos foram retidos no titulo e em bordero
		If lPccBaixa .and. lRecalcPcc .and. !(nTotImpost > 0 .and. nPis+nCofins+nCsll == 0)
			//1 - Mês do periodo de verificacao
			//2 - Ano do periodo de verificacao
			//3 - Fornecedor De
			//4 - Fornecedor Até														
			//5 - Mostra tela Contabilizacao (NAO, para este caso)
			SaveInter()
			aPar379 := {}			
			aPar379 := {Month(dDatabase),Year(dDatabase),SE2->E2_FORNECE,SE2->E2_FORNECE,2}
			//proteção para não disposicionar a tabela
			aAreaSE2 := SE2->(GETAREA())
			aAreaSE5 := SE5->(GETAREA())			
			Fina379()	
			RestArea(aAreaSE5)
			RestArea(aAreaSE2)			
			RestInter()
			Pergunte("FIN080",.F.)
		Endif				
		If FindFunction("FA373Bx")
	 		FA373Bx(.F.)
	 	EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Final da prote‡„o via TTS				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If FindFunction("NGBAIXASE2") .And. GetNewPar( "MV_NGMNTFI","N" ) == 'S'
			NGBAIXASE2(2)
			
			//--------------------------------------------
			// Função que gera uma apropriação de débito 
			// da multa, (Integração SIGAFIN - SIGAMNT).
			//---------------------------------------------
			If FindFunction( "MNT765CONF" ) //Se for executado a baixa automática de pagaento da multa;
				lPagAutFin := .F. //Variável utilizada em fonte especifico do SIGAMNT;
				MNT765CONF( 3 ) 	//Executa a função que gera APD;
			EndIf
			
		Endif
		If FindFunction( "GETROTINTEG" ) .and. !lFini055 .and. FindFunction("FwHasEAI") .and. FWHasEAI("FINA080",.T.,,.T.)
			If AllTrim(FunName()) == "FINA750" //Funções Ctas a pagar
				llOpc	:= ALTERA
				ALTERA	:= .F.
			Endif
			
			FwIntegDef( 'FINA080' )
			
			If AllTrim(FunName()) == "FINA750"
				ALTERA	:= llOpc
			Endif
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//--Efetua a exclusão da Parcela no PAMCARD - SIGATMS		³	
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If FindFunction("PamCanBx")                               
			If SE2->(FieldPos("E2_CODOPE")) > 0
				If !PamCanBx(SE2->E2_FILORIG,SE2->E2_NUM,SE2->E2_CODOPE)
					DisarmTransaction()	
				EndIf
			EndIf	
		EndIf
	End Transaction
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Integracao protheus X tin Cancelamento da Baixa	³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	
							
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Finaliza a gravacao dos lancamentos do SIGAPCO ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoFinLan("000005")
	
	SA6->(DbSetOrder(nOrdSa6), DbGoto(nRecSa6)) 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada para pos-gravação do cancelamento  ³ 
	//³ e contabilização da baixa				            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF ExistBlock("F080PCAN")
			ExecBlock("F080PCAN",.f.,.f.)
		Endif  
Endif

dbSelectArea(cAlias)
If nSalvRec > 0
	dbGoTo(nSalvRec)
EndIf	
dbSetOrder(nOrdem)

//Atualização TMS - Status do Contrato de Carreteiro
If AllTrim(SE2->E2_ORIGEM) == 'SIGATMS'
	aAreaSE2 := SE2->(GetArea())
	TMSA250PBx(SE2->E2_FILORIG, SE2->E2_NUM)
	RestArea(aAreaSE2)
EndIf

//Trade-Easy
//RRC - 05/12/2013 - Integração SIGACOM x SIGAESS e SIGAEIC x SIGAESS a partir dos títulos do SIGAFIN
/*Verifica se não veio do ESSPS400 pois esta chamada pode ser decorrente da própria PS400BuscFat(), ao atualizar o câmbio do SIGAESS.
Dessa forma, impede uma recursividade desnecessária*/
If AvFlags("CONTROLE_SERVICOS_AQUISICAO") .And. !IsInCallStack("ESSPS400") .And. Empty(SE2->E2_BAIXA) .And. SE2->E2_TIPO == MVNOTAFIS
   lESSCOM := GetMv("MV_COMSEIC",,.F.) .And. GetMv("MV_ESS0012",,.F.) .And. GetMv("MV_ESS0013",,.F.) .And. AllTrim(SE2->E2_ORIGEM) == "MATA100"
   lESSEIC := GetMv("MV_ESS0022",,.T.) .And. /*AllTrim(SE2->E2_ORIGEM) == "SIGAEIC"*/ AllTrim(SE2->E2_PREFIXO) == "EIC" .And. SWD->(FieldPos("WD_MOEDA")) > 0 .And. SWD->(FieldPos("WD_VL_MOE")) > 0 .And. SWD->(FieldPos("WD_TX_MOE")) > 0 //MCF - 01/06/2016 
   If lESSCOM .Or. lESSEIC
      PS400BuscFat("A",If(lESSCOM,"SIGACOM","SIGAEIC"),,SE2->E2_NUM,SE2->E2_PREFIXO,.T.,SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_PARCELA)
   EndIf
EndIf
//Uso para bajas de anticipos, modifica la situación del antiticipo bajado
//y se elinima el movimiento generado en SE% para la baja.
IF cPaisloc == "MEX" .and. FUNNAME() == "MATA101N" .and. lF080Auto
	aBorrado := GetArea()
		FOR nX := 1 to Len(aRecBorra)
			If aRecBorra[nX][2] == "M"
			SE5->(dbGoto(aRecBorra[nX][1]))
			RecLock("SE5",.F.)
				SE5->E5_SITUACA := "C"
				SE5->E5_HISTOR	:= PADR(SE5->E5_HISTOR,Len(SE5->E5_HISTOR)-16)+"###["+DTOS(dDatabase)+"]###"
			SE5->(MsUnlock())
		elseif aRecBorra[nX][2] == "N"
			SE5->(dbGoto(aRecBorra[nX][1]))
			RecLock("SE5",.F.)
					SE5->(DbDelete())
				SE5->(MsUnlock())
			EndIf
		NEXT
	RestArea(aBorrado)
	aRecBorra := {}
endif
Return /*Function fa080Can*/

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA080Grava³ Autor ³ Wagner Xavier 	    ³ Data ³ 06/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Grava as baixas 											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA080Grava(void)											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nao Tem													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA080Grava(cLanca)
Local nx,cArquivo
Local lDigita:=IIF(mv_par01==1,.T.,.F.),nTotal:=0,nHdlPrv:=0
Local lAglut :=IIF(mv_par02==1,.T.,.F.),lPadraoBx:=.F.,lHdlPrv:= .F.
Local cLoteOrig
LOCAL cPadrao := "530"
Local nTotLtEZ := 0	//Totalizador da Bx Lote Mult Nat CC
Local nRecSeV	:= 0
Local nRecSeZ	:= 0
Local lAcessMul	:= .T.
Local lAcessJur	:= .T.
Local lAcessDes	:= .T.
Local aCposDes		:= {}
Local nT 			:= 0
Local aFlagCTB := {}
Local aDiario	:= {}

//Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso o usu rio configure que deseja usar o lote financeiro, o   ³
//³ sistema becapeia o lote cont bil original e depois o restaura.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cLoteOrig := cLote
If GetMv("MV_LOTEFIN") == "S" .and. !Empty( cLoteFin )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Somente atualiza o lote contabil com o lote financeiro se o tamanho do ³
	//³ lote financeiro for menor ou igual ao do lote contabil.                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If TamSX3("E2_LOTE")[1] > 4 .And. TamSX3("E2_LOTE")[1] <= TamSX3( "CT2_LOTE" )[1]
		cLote := cLoteFin
	EndIf
Endif

//Ponto de entrada para desabilitar campos de Multa, Juros ou Descontos
If ExistBlock("F080DCNB")
	aCposDes:=ExecBlock("F080DCNB",.F.,.F.)
	If Len(aCposDes) > 0
		IF (nT := ascan(aCposDes,'MULTA')) > 0	
			lAcessMul := .F.
		Endif
		IF (nT := ascan(aCposDes,'DESCONTO')) > 0	
			lAcessDes := .F.
		Endif
		IF (nT := ascan(aCposDes,'JUROS')) > 0	
			lAcessJur := .F.
		Endif		
	Endif
Endif

dbSelectArea("SE2")
dbGotop()

While ! SE2->(Eof())

	If SE2->E2_FILIAL != cFilial
		dbSkip()
		Loop
	Endif

	SE2->( dbskip() )				
	nX	 := SE2->( Recno() )
	SE2->( dbSkip( -1 )  )

	Fa080TitW(cMarca,@nTotal,@nHdlPrv,@lHdlPrv,@lPadraoBx,@cArquivo,@cPadrao,@nTotLtEZ,lAcessMul,lAcessJur,lAcessDes)

EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Avisa quando totais nao baterem 						  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF Str(nTotGer,16,2) != Str(nTotAGer,16,2)
   Help(" ",1,"TOTGERAL",, STR0122 +;
                           Space(1) + Trans(nTotGer, "@E 99,999,999,999.99") +;
                           Chr(10)  + STR0123 +;
                           Space(1) + Trans(nTotAGer, "@E 99,999,999,999.99"), 4, 0)
Elseif Str(nTotDesp,16,2) != Str(nTotADesp,16,2)
   Help(" ",1,"TOTDESP",, STR0122 +;
                           Space(1) + Trans(nTotDesp, "@E 99,999,999,999.99") +;
                           Chr(10)  + STR0123 +;
                           Space(1) + Trans(nTotADesp, "@E 99,999,999,999.99"), 4, 0)
Elseif Str(nTotDesc,16,2) != Str(nTotADesc,16,2)
   Help(" ",1,"TOTDESC",, STR0122 +;
                          Space(1) + Trans(nTotDesc, "@E 99,999,999,999.99") +;
                          Chr(10)  + STR0123 +;
                          Space(1) + Trans(nTotADesc, "@E 99,999,999,999.99"), 4, 0)
Elseif Str(nTotMul,16,2) != Str(nTotAMul,16,2)
   Help(" ",1,"TOTMULT",, STR0122 +;
                          Space(1) + Trans(nTotMul, "@E 99,999,999,999.99") +;
                          Chr(10)  + STR0123 +;
                          Space(1) + Trans(nTotAMul, "@E 99,999,999,999.99"), 4, 0)
Elseif Str(nTotJur,16,2) != Str(nTotAJur,16,2)
   Help(" ",1,"TOTJUROS",, STR0122 +;
                           Space(1) + Trans(nTotJur, "@E 99,999,999,999.99") +;
                           Chr(10)  + STR0123 +;
                           Trans(nTotAJur, "@E 99,999,999,999.99"), 4, 1)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia para Lancamento Contabil, se gerado arquivo   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF nTotal > 0 .And. nHdlPrv > 0
	dbSelectArea( "SE2" )
	nRecSe2 := RecNo()
	dbGoBottom()
	dbSkip()

	dbSelectArea( "SEV" )
	nRecSeV := RecNo()
	dbGoBottom()
	dbSkip()

	dbSelectArea( "SEZ" )
	nRecSeZ := RecNo()
	dbGoBottom()
	dbSkip()
	
	dbSelectArea( "SE5" )
	nRecSe5 := RecNo()
	dbGoBottom()
	dbSkip()

	If nTotAGer != 0
		//Contabilizar totalizador exceto o rateado por MultNat C.Custo
		VALOR := nTotaGer - nTotLtEZ
		ABATIMENTO := 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Prepara Lancamento Contabil                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTotal += DetProva( nHdlPrv,;
			                    cPadrao,;
			                    "FINA080" /*cPrograma*/,;
			                    cLote,;
			                    /*nLinha*/,;
			                    /*lExecuta*/,;
			                    /*cCriterio*/,;
			                    /*lRateio*/,;
			                    /*cChaveBusca*/,;
			                    /*aCT5*/,;
			                    /*lPosiciona*/,;
			                    /*@aFlagCTB*/,;
			                    /*aTabRecOri*/,;
			                    /*aDadosProva*/ )

		//Contabilizar totalizador dos rateios MultNat com C.Custo
		If nTotLtEZ > 0
			VALOR := nTotLtEZ   
			ABATIMENTO := 0
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Prepara Lancamento Contabil                                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nTotal += DetProva( nHdlPrv,;
				                    "537" /*cPadrao*/,;
				                    "FINA080" /*cPrograma*/,;
				                    cLote,;
				                    /*nLinha*/,;
				                    /*lExecuta*/,;
				                    /*cCriterio*/,;
				                    /*lRateio*/,;
				                    /*cChaveBusca*/,;
				                    /*aCT5*/,;
				                    /*lPosiciona*/,;
				                    /*@aFlagCTB*/,;
				                    /*aTabRecOri*/,;
				                    /*aDadosProva*/ )
		Endif
	Endif

		If ( FindFunction( "UsaSeqCor" ) .And. UsaSeqCor() ) 
			aAdd(aDiario,{"SE5",SE5->(RecNo()),cCodDiario,"E5_NODIA","E5_DIACTB"})
		Else
			aDiario := {}
		EndIf  

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Efetiva Lan‡amento Contabil                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RodaProva( nHdlPrv,;
		           nTotal)                               

		cA100Incl( cArquivo,;
		           nHdlPrv,;
		           3 /*nOpcx*/,;
		           cLote,;
		           lDigita,;
		           lAglut,;
		           /*cOnLine*/,;
		           /*dData*/,;
		           /*dReproc*/,;
		           @aFlagCTB,;
		           /*aDadosProva*/,;
		           aDiario )
		aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

	dbSelectArea( "SE2" )
	SE2->( dbGoTo( nRecSe2 ) )        

	dbSelectArea("SEV")
	SEV->(dbGoTo(nRecSeV))

	dbSelectArea("SEZ")
	SEZ->(dbGoTo(nRecSeZ))
	
	dbSelectArea("SE5")
	SE5->(dbGoTo(nRecSe5))
	
Endif
cLote := cLoteOrig
Return .T. /*Function fA080Grava*/

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fa080Cheq  ³ Autor ³ Wagner Xavier		  ³ Data ³ 23/03/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Consistencia do numero do cheque 							³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fa080Cheq() 													³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa080Cheq(lHelp)
Local cAlias	:= Alias()
Local lRet		:= .T.

DEFAULT lHelp := .T.

IF Empty(cCheque) .or. SE2->E2_IMPCHEQ == "S"
		dbSelectArea(cAlias)
		Return(.T.) /*Function fa080Cheq*/
Endif
dbSelectArea("SEF")
dbSetOrder(1)
	
If Existblock("Fa080chq")
		lRet:=Execblock("Fa080chq",.F.,.F.)
EndIf
If lRet	
	If SEF->( dbSeek(cFilial+cBanco+cAgencia+cConta+cCheque) )
		If Subs(cCheque,1,1) != "*"
			If lHelp
				Help(" ",1,"CHEQEXIST")
			Endif
			lRet:=.F.
		Else
			lRet:=.T.
		Endif
		If lRet
			lRet := VldUser("EF_NUM") // Chama a validacao de usuario
		Endif	
		dbSelectArea(cAlias)
	EndIf
EndIf

Return lRet  /*Function fa080Cheq*/

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080ChecF³ Autor ³ Antonio Maniero Jr.   ³ Data ³ 17/03/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Retorna Expresao para Indice Condicional					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Fa080ChecF() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Generico													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA080ChecF()
Local cFiltro := ""

cFiltro := 'E2_FILIAL=="'+xFilial("SE2")+'".And.'
cFiltro += '!(E2_TIPO $ "'+MVPROVIS+"/"+MVPAGANT+"/"+MVABATIM+"/"+MV_CPNEG+'").and.'
cFiltro += 'E2_NATUREZ>="'+cNatDe+'".and.E2_NATUREZ<="'+cNatAte+'".and.'
cFiltro += 'DTOS(E2_VENCREA)>="'+DTOS(dVencDe)+'".and.DTOS(E2_VENCREA)<="'+DTOS(dVencAte)+'"'

// Se trabalha com liberacao de pagto., filtra os registros que ultrapassem o valor
// minimo 
If GetMv("MV_CTLIPAG")
	If TcSrvType() == "AS/400" .or. TcSrvType() == "iSeries"  //"iSeries" eh o retorno do Top4 para AS/400
		cFiltro += '.And. !(SE2->E2_DATALIB == CTOD("") .And. (SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE)>'+Str(GetMV("MV_VLMINPG"),17,2)+')'
	Else
		cFiltro += '.And. !(Empty(SE2->E2_DATALIB).And.(SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE)>'+Str(GetMV("MV_VLMINPG"),17,2)+')'
	Endif
Endif	

If !Empty(cFil080)
	cFiltro := '(' +cFiltro+ ').and.(' +cFil080+')'
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o titulo esta bloqueado - Gestao de Contratos ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(SE2->(FieldPos("E2_MSBLQL")))
	cFiltro += ".And. E2_MSBLQL != '1'"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ AAF - Titulos originados no SIGAEFF não devem ser alterados   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFiltro += ".AND. !('SIGAEFF' $ E2_ORIGEM) "

// Para o Brasil, apresenta somente os titulos cuja moeda e' a mesma do banco
// selecionado para baixa.
// Caso a moeda do banco estiver vazia ou caso o motivo de baixa nao movimente banco, considero apenas a moeda forte
If FindFunction( "FXMultSld" ) .AND. FXMultSld() 
	If SA6->A6_MOEDA > 1
		cFiltro += ".AND. E2_MOEDA == " + StrZero( SA6->A6_MOEDA, 2 ) + " "
		If cPaisLoc=="BRA" .AND. FindFunction( "FXVldBxBco" )
			cFiltro+=" .and. Eval({||FXVldBxBco('"+cBanco+"','"+cAgencia+"','"+cConta+"',SE2->E2_NATUREZ, SE2->E2_MOEDA,.F.)}) "
		Endif
	Endif
EndIf

#IFNDEF TOP
	cFiltro := "("+cFiltro+").And.(E2_SALDO>0 .Or. E2_OK='xx')"
#ELSE
	If TcSrvType() == "AS/400" .or. TcSrvType() == "iSeries"  //"iSeries" eh o retorno do Top4 para AS/400
		cFiltro := "("+cFiltro+").And.(E2_SALDO>0 .Or. E2_OK='xx')"
	Else	
		cFiltro += " .And. E2_SALDO >0 "
	Endif
#ENDIF

Return cFiltro /*Function FA080ChecF*/

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA080Estra ³ Autor ³ Wilson Junior		  ³ Data ³ 20/05/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao utilizada para consistir o valor digitado em M.Forte  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA080ESTRANG() 												³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA080Estrang(nTxMoeda,nTolerCp)

Local lRet := .f.
Local nValEstAnt := 0
DEFAULT nTxMoeda := 0
DEFAULT nTolerCp := SuperGetMv("MV_TOLERCP",.F.,0)

If ExistBlock("FA080CMI")
	ExecBlock("FA080CMI",.F.,.F.)
Endif

nValEstAnt := Round(nValEstrang - Round(NoRound(xMoeda(nJuros+nMulta-nDescont+nOtrga+nImpSubst+nAcresc-nDecresc+nTolerCp,nMoedaBco,SE2->E2_MOEDA,,3,,nTxMoeda),3),2),2) 
IF nValEstAnt <= SE2->E2_SALDO
	lRet := .T.
ElseIf cPaisLoc == "CHI"
	If Abs( nValEstAnt - SE2->E2_SALDO ) <= ( (1/(10**( MsDecimais(SE2->E2_MOEDA)-1)))/2 )
		lRet := .T.
	Endif
Endif
Return lRet /*Function FA080Estrang*/

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080GrVen³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 19/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que grava os dados do VENDOR 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080GrVen(cTitOrig,lPadraoVd)							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080GrVen( cTitOrig, lPadraoVd, cLanca, aVendor, cOrigem, lUsaFlag )

Local cAlias		:= Alias()
Local nRec
Local cBcoVen
Local cLojVen
Local nMoeda	:= 1
Local cFilOrig	:= ""
Default lUsaFlag := SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/ )

	If cOrigem != Nil
		cFilOrig := cFilant
	else
		cFilOrig := SE2->E2_FILORIG
	EndIf

	dbSelectArea( "SA6" )
	dbSeek( xFilial("SA6") + SE9->E9_BANCO + SE9->E9_AGENCIA + SE9->E9_CONTA )

	cBcoVen := Space(Len(SA2->A2_COD))
	cLojVen := Space(Len(SA2->A2_LOJA))
    If SA6->(FieldPos("A6_MOEDA")>0)
    	nMoeda	:= SA6->A6_MOEDA
    Endif
	dbSelectArea("SA2") // Seleciona Fornecedores
	dbSetOrder(1)
	
	If Empty(cBcoVen)
		cBcoVen := If(Empty(SA6->A6_CODFOR),Pad(SA6->A6_COD,Len(SA2->A2_COD)),SA6->A6_CODFOR)
	Endif	
	If Empty(cLojVen)
		//Para o campo loja com tamanho 2 era utilizado 01 fixo entao deixei ainda sendo utilizado respeitando o legado. 
		If Len(Alltrim(SA6->A6_LOJFOR)) == TamSX3("A6_LOJFOR")[1] .And. TamSX3("A6_LOJFOR")[1] > 2
			cLojVen := SA6->A6_LOJFOR
		Else
			cLojVen := "01"+Space(Len(SA6->A6_LOJFOR)-2)
		Endif			
	Endif	                                          

	If ! dbSeek( xFilial("SA2") + cBcoVen + cLojVen )
		RecLock("SA2",.T.) // Novo Registro - Fornecedores
		SA2->A2_FILIAL	:= xFilial("SA2")
		SA2->A2_COD		:= cBcoVen
		SA2->A2_LOJA	:= cLojVen
		SA2->A2_NOME	:= SA6->A6_NOME
		SA2->A2_END		:= Iif(Empty(SA6->A6_END),"...",SA6->A6_END)
		SA2->A2_MUN		:= Iif(Empty(SA6->A6_MUN),"...",SA6->A6_MUN)
		SA2->A2_EST		:= Iif(Empty(SA6->A6_EST),"SP",SA6->A6_EST)
		SA2->A2_NREDUZ	:= Iif(Empty(SA6->A6_NREDUZ),Subs(SA6->A6_NOME,1,20),SA6->A6_NREDUZ)
		MSUnlock()
	Endif

	If Valtype( aVendor ) == "A"
		cPrefV		:= aVendor[4]
		cNumV			:= aVendor[5]
		cParcV		:= aVendor[6]
		cTipV			:= aVendor[7]
		dDataVencV	:= aVendor[8]
		nTxAcresv	:= aVendor[9]
		cNaturV		:= aVendor[10]
		nValTitV		:= aVendor[11]
	Endif	
	
	dbSelectArea("SE2") // Seleciona Contas a Pagar
	nRec := Recno()
	RecLock( "SE2", .T. ) // Novo Registro

	SE2-> E2_FILIAL 	:= xFilial("SE2")
	SE2-> E2_PREFIXO	:= cPrefv
	SE2-> E2_NUM 		:= cNumV
	SE2-> E2_PARCELA	:= cParcV
	SE2-> E2_TIPO		:= cTipv
	SE2-> E2_NOMFOR 	:= SA2->A2_NREDUZ
	SE2-> E2_EMIS1		:= dDatabase
	SE2-> E2_VALOR		:= nValTitV
	SE2-> E2_SALDO		:= nValTitV
	SE2-> E2_VLCRUZ 	:= nValTitV
	SE2-> E2_EMISSAO	:= dDataBase
	SE2-> E2_VENCORI	:= dDataVencV
	SE2-> E2_RATEIO 	:= "N"

	If !lUsaFlag
		If lPadraoVd .And. cLanca == "S"
			SE2-> E2_LA		:= "S"
		Else
			SE2-> E2_LA		:= "N"
		EndIf
	Endif

	SE2-> E2_VENCTO 	:= dDataVencV
	SE2-> E2_VENCREA	:= DataValida(SE2->E2_VENCTO,.T.)
	SE2-> E2_FORNECE	:= SA2 -> A2_COD
	SE2-> E2_LOJA		:= cLojVen
	SE2-> E2_MOEDA		:= nMoeda
	SE2-> E2_NATUREZ	:= cNaturV
	SE2-> E2_MOVIMEN	:= dDataBase
	SE2-> E2_FILORIG	:= cFilOrig

	Fa080CalcV(nTxAcresv) // Funcao que calcula o valor do titulo de VENDOR
	SE2-> E2_ACRESC 	:= nValAcres
	SE2-> E2_SDACRES	:= nValAcres

	If cOrigem != Nil
		SE2->E2_ORIGEM := cOrigem	
	Endif

	//Ponto de entrada para tratamento complementar a gravação do titulo de VENDOR
	If ExistBlock("F080VEND")
		ExecBlock("F080VEND",.F.,.F., { nRec } )
	Endif
   
	MSUnlock( )

	dbGoto( nRec )
	cTitOrig := cPrefV + cNumV + cParcV + cTipV + SA2->A2_COD
	dbSelectArea( cAlias )
Return .T. /*Function Fa080GrVen*/

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080CalcV³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que calcula o valor do titulo de VENDOR			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080CalcV(nTaxa) 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080CalcV(nTaxa)
Local cAlias := Alias(), lRet := .T.

	If nTaxa == Nil
		nTaxa := 1
	Endif
	nValAcres := (SE2->E2_VALOR * (1 + (nTaxa / 100))) - SE2->E2_VALOR

dbSelectArea(cAlias)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080VerVd³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que verifica dados obrigatorios do vendor			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fa080VerVd(void)											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080VerVd()

Local lErro := .F.
Local lRet	:= .T.
Local lF080VdOk := ExistBlock("F080VDOK")

If Empty(cContrato)
	lErro := .T.
ElseIf Empty(cNumV)
	lErro := .T.
ElseIf Empty(cTipV)
	lErro := .T.
ElseIf Empty(cNaturV)
	lErro := .T.
ElseIf !lF080VdOk .and. Empty(nTxAcresV)
	lErro := .T.
ElseIf Empty(dDataVencV)
	lErro := .T.
Endif

If lErro
	Help(" " , 1 , "FA080DADVEND")
	lRet := .F.
Else
	If lF080VdOk
		lRet := ExecBlock("F080VDOK",.F.,.F.)
	Endif
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080digit³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que permite ou nao a digitacao dos dados bancarios  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fa080digit(void)											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
function fa080digit()
lRet := .t.
If !MovBcoBx( cMotBx, .T. ) .or. SE2->E2_IMPCHEQ == "S" .or. lChqPre
		lRet := .f.
Endif
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fa080Adiant ³ Autor ³ Vincius S. Barreira	  ³ Data ³ 26/10/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Processa baixa de adiantamento.								³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fa080Adiant( )												³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa080Adiant( lPadrao, cLanca, nTxMoeda, lusaFlag )
Local nTamSeq		:= TamSX3("E5_SEQ")[1]
Local cSequencia	:= Replicate("0",nTamSeq)
Local aTipoSeq := {}
Local nLaco
Local nMoedaBco := Max( MoedaBco(cBanco,cAgencia,cConta), 1 )
Local nMoedaTit := SE2->E2_MOEDA
Local nTxModBco := If( cPaisLoc<>"BRA", aTxMoedas[Max(nMoedaBco		,1)][2]	, 0 )
Local nTxModTit := If( cPaisLoc<>"BRA", aTxMoedas[Max(SE2->E2_MOEDA	,1)][2]	, 0 )
Local nRecBA
Local lAcreDecre := .F.
Local cTipo := ALLTRIM(SE2->E2_TIPO)
local cModalid := nil

DEFAULT nTxMoeda := 0
Default lUsaFlag := SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/ )

If cPaisLoc == "MEX"
	cModalid := IIF(!empty(MaFisRet(,"NF_NATUREZA")) , MaFisRet(,"NF_NATUREZA") , cNatureza)
EndIf

If MovBcoBx(cMotBx, .T.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Estorna saldo bancario. 												 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AtuSalBco(cBanco,cAgencia,cConta,dBaixa,nValPgto,"+")
Endif       

//verifica se existem os campos de valores de acrescimo e decrescimo no SE5
If SE5->(FieldPos("E5_VLACRES")) > 0 .and. SE5->(FieldPos("E5_VLDECRE")) > 0
	lAcreDecre := .T.
Endif  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Para numerar as sequencias o sistema precisa procurar os   ³
//³ registros com  tipodoc igual a vl, ba ou cp.			   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aTipoSeq := { "VL","BA","CP" }
dbSelectArea("SE5")
SE5->(dbSetOrder(2))
For nLaco := 1 to len(aTipoSeq)
	SE5->(dbSeek(xFilial("SE5") + aTipoSeq[nLaco] + SE2->E2_PREFIXO + SE2->E2_NUM + ;
		SE2->E2_PARCELA + SE2->E2_TIPO) )

	While !SE5->(Eof()) .And. ;
			SE5->E5_FILIAL	== xFilial("SE5") .And. ;
			SE5->E5_TIPODOC == aTipoSeq[nLaco] .And. ;
			SE5->E5_PREFIXO == SE2->E2_PREFIXO .And. ;
			SE5->E5_NUMERO	== SE2->E2_NUM .And. ;
			SE5->E5_PARCELA == SE2->E2_PARCELA .And. ;
			SE5->E5_TIPO 	== SE2->E2_TIPO

		If SE5->(E5_CLIFOR+E5_LOJA) == SE2->(E2_FORNECE+E2_LOJA)
			If PadL(AllTrim(cSequencia),nTamSeq,"0") < PadL(AllTrim(SE5->E5_SEQ),nTamSeq,"0")
				cSequencia := SE5->E5_SEQ
			Endif
      Endif
		SE5->(dbSkip())
	Enddo
Next
If Len(AllTrim(cSequencia)) < nTamSeq
	cSequencia := PadL(cSequencia,nTamSeq,"0")
Endif
cSequencia := Soma1(cSequencia,nTamSeq)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Gera movimentacao bancaria a pagar - baixa do adiantamento			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Reclock( "SE5", .T. )
SE5 -> E5_FILIAL := xFilial()
SE5 -> E5_NUMERO := SE2->E2_NUM
SE5 -> E5_PREFIXO:= SE2->E2_PREFIXO
SE5 -> E5_RECPAG := IIF(cPaisLoc == "MEX" .AND. cTipo $ "PA" .AND. FUNNAME() == "MATA101N", "P" , "R" )
SE5 -> E5_TIPO   := SE2->E2_TIPO
SE5 -> E5_PARCELA:= SE2->E2_PARCELA
SE5 -> E5_TIPODOC:= Iif(MovBcoBx(cMotBx, .T.) .And. !FwIsInCallStack("FA450CMP"), "VL", "BA")
SE5 -> E5_MOTBX  := TrazCodMot(cMotBx)
SE5 -> E5_BANCO  := cBanco
SE5 -> E5_AGENCIA:= cAgencia
SE5 -> E5_CONTA  := cConta
SE5 -> E5_DATA   := dBaixa
SE5 -> E5_VALOR  := nValPgto
SE5 -> E5_NATUREZ:= IIF(cPaisLoc == "MEX" .AND. cTipo $ "PA" .AND. FUNNAME() == "MATA101N", cModalid , SE2->E2_NATUREZ)
SE5 -> E5_FILORIG:= SE2->E2_FILORIG
If !lUsaFlag
	If lPadrao .And. cLanca == "S"
		SE5 -> E5_LA	:= "S"
	Else
		SE5 -> E5_LA	:= "N"
	EndIf
Endif	
SE5->E5_HISTOR := If(!Empty(cHist070),cHist070,OemToAnsi( STR0112 )) //"BAIXA DE ADIANTAMENTO"
SE5->E5_LOTE   := cLoteFin
SE5->E5_FORNECE := SE2->E2_FORNECE
SE5->E5_CLIFOR := SE2->E2_FORNECE
SE5->E5_LOJA   := SE2->E2_LOJA
SE5->E5_BENEF  := SE2->E2_NOMFOR
SE5->E5_DTDIGIT:= dDataBase
SE5->E5_SEQ		:= cSequencia
SE5->E5_DTDISPO:= SE5->E5_DATA
SE5->E5_MOEDA := StrZero(nMoedaBco,2)

If ( cPaisLoc <> "BRA" )
	If SE5->(FieldPos("E5_TXMOEDA")) > 0
		SE5->E5_TXMOEDA := nTxModBco
	Endif
Endif
If nValEstrang != 0
	SE5->E5_VLMOED2	:= nValEstrang
	SE5->E5_TXMOEDA	:= nTxMoeda
Else
	SE5->E5_VLMOED2  := xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,,,,nTxMoeda)
Endif
If SpbInUse()
	SE5->E5_MODSPB := cModSpb
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava os valores agregados ao titulo no totalizador ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SE5->E5_VLMULTA := nMulta
SE5->E5_VLDESCO := nDescont
If cPaisloc <> "CHI"
	SE5->E5_VLJUROS := nJuros
	SE5->E5_VLCORRE := nCm
Else
	SE5->E5_VLJUROS := nOtrga + nImpSubst
	SE5->E5_VLCORRE := nDifcambio
EndIf  
If lAcreDecre
	SE5->E5_VLACRES := nAcresc
	SE5->E5_VLDECRE := nDecresc
Endif

nRecBA := SE5->(Recno())

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gravação de Dados Complementares SE5 para: Pagamentos ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("FA080ADTSE5")
	ExecBlock("FA080ADTSE5",.F.,.F.)
EndIf
If cPaisloc <> "CHI"
	If nJuros > 0
		Reclock( "SE5", .T. )
		SE5 -> E5_FILIAL := cFilial
		SE5 -> E5_NUMERO := SE2->E2_NUM
		SE5 -> E5_PREFIXO:= SE2->E2_PREFIXO
		SE5 -> E5_RECPAG := "R"
		SE5 -> E5_TIPO   := SE2->E2_TIPO
		SE5 -> E5_PARCELA:= SE2->E2_PARCELA
		SE5 -> E5_TIPODOC:= "JR"
		SE5 -> E5_MOTBX  := TrazCodMot(cMotBx)
		SE5 -> E5_BANCO  := cBanco
		SE5 -> E5_AGENCIA:= cAgencia
		SE5 -> E5_CONTA  := cConta
		SE5 -> E5_DATA   := dBaixa
		SE5 -> E5_NATUREZ:= SE2->E2_NATUREZ
		If !lUsaFlag
			If lPadrao .And. cLanca == "S"
				SE5 -> E5_LA  := "S"
			Else
				SE5 -> E5_LA  := "N"
			EndIf
		Endif	
		SE5 -> E5_HISTOR := OemToAnsi( STR0112 ) //"BAIXA DE ADIANTAMENTO"
		SE5 -> E5_LOTE   := cLoteFin
		SE5 -> E5_FORNECE:= SE2->E2_FORNECE
		SE5 -> E5_CLIFOR := SE2->E2_FORNECE
		SE5 -> E5_LOJA   := SE2->E2_LOJA
		SE5 -> E5_BENEF  := SE2->E2_NOMFOR
		SE5 -> E5_DTDIGIT:= dDataBase
		SE5 -> E5_SEQ	  := cSequencia
		SE5 -> E5_DTDISPO:= SE5->E5_DATA
		SE5->E5_MOEDA := StrZero(nMoedaBco,2)
		
		If ( cPaisLoc != "BRA" ) 
			SE5 -> E5_VALOR  := xMoeda( nJuros, 1, nMoedaBco,,,, nTxModBco )
			SE5 -> E5_VLMOED2:= xMoeda( nJuros, 1, nMoedaTit,,,, nTxModTit )		
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=nTxModBco,.T. )
		Else
			SE5 -> E5_VALOR  := nJuros
			SE5 -> E5_VLMOED2:= xMoeda(nJuros,nMoedaBco,SE2->E2_MOEDA,,,,nTxMoeda)
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: Juros ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA080ADTSE5")
			ExecBlock("FA080ADTSE5",.F.,.F.)
		EndIf
	EndIf
	If nCm != 0
		Reclock( "SE5", .T. )
		SE5 -> E5_FILIAL := cFilial
		SE5 -> E5_NUMERO := SE2->E2_NUM
		SE5 -> E5_PREFIXO:= SE2->E2_PREFIXO
		SE5 -> E5_RECPAG := "R"
		SE5 -> E5_TIPO   := SE2->E2_TIPO
		SE5 -> E5_PARCELA:= SE2->E2_PARCELA
		SE5 -> E5_TIPODOC:= "CM"
		SE5 -> E5_MOTBX  := TrazCodMot(cMotBx)
		SE5 -> E5_BANCO  := cBanco
		SE5 -> E5_AGENCIA:= cAgencia
		SE5 -> E5_CONTA  := cConta
		SE5 -> E5_DATA   := dBaixa
		SE5 -> E5_NATUREZ:= SE2->E2_NATUREZ
		If !lUsaFlag
			If lPadrao .And. cLanca == "S"
				SE5 -> E5_LA	:= "S"
			Else
				SE5 -> E5_LA	:= "N"
			EndIf
		Endif
		SE5 -> E5_HISTOR := OemToAnsi( STR0112 ) //"BAIXA DE ADIANTAMENTO"
		SE5 -> E5_LOTE   := cLoteFin
		SE5 -> E5_FORNECE:= SE2->E2_FORNECE
		SE5 -> E5_CLIFOR := SE2->E2_FORNECE
		SE5 -> E5_LOJA   := SE2->E2_LOJA
		SE5 -> E5_BENEF  := SE2->E2_NOMFOR
		SE5 -> E5_DTDIGIT:= dDataBase
		SE5 -> E5_SEQ	  := cSequencia
		SE5 -> E5_DTDISPO:= SE5->E5_DATA
		SE5 -> E5_MOEDA  := StrZero(nMoedaBco,2)
	
		If ( cPaisLoc != "BRA" )
			SE5->E5_VALOR   := xMoeda( nCm, 1, nMoedaBco,,,, nTxModBco )
			SE5->E5_VLMOED2 := xMoeda( nCm, 1, nMoedaTit,,,, nTxModTit )
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=nTxModBco,.T. )
		Else
			SE5 -> E5_VALOR  := nCm
			SE5->E5_VLMOED2  := xMoeda(nCM,nMoedaBco,SE2->E2_MOEDA,,,,nTxMoeda)
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: Correcao Monetaria ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA080ADTSE5")
			ExecBlock("FA080ADTSE5",.F.,.F.)
		EndIf
	EndIf
Else
	If nOtrga > 0 //Localizacao Chile
		Reclock( "SE5", .T. )
		SE5 -> E5_FILIAL := cFilial
		SE5 -> E5_NUMERO := SE2->E2_NUM
		SE5 -> E5_PREFIXO:= SE2->E2_PREFIXO
		SE5 -> E5_RECPAG := "R"
		SE5 -> E5_TIPO   := SE2->E2_TIPO
		SE5 -> E5_PARCELA:= SE2->E2_PARCELA
		SE5 -> E5_TIPODOC:= "JR"
		SE5 -> E5_MOTBX  := TrazCodMot(cMotBx)
		SE5 -> E5_BANCO  := cBanco
		SE5 -> E5_AGENCIA:= cAgencia
		SE5 -> E5_CONTA  := cConta
		SE5 -> E5_DATA   := dBaixa
		SE5 -> E5_VALOR  := nOtrga
		SE5 -> E5_NATUREZ:= SE2->E2_NATUREZ
		If !lUsaFlag
			If lPadrao .And. cLanca == "S"
				SE5 -> E5_LA  := "S"
			Else
				SE5 -> E5_LA  := "N"
			EndIf
		Endif		
		SE5 -> E5_HISTOR := OemToAnsi( STR0112 ) //"BAIXA DE ADIANTAMENTO"
		SE5 -> E5_LOTE   := cLoteFin
		SE5 -> E5_FORNECE:= SE2->E2_FORNECE
		SE5 -> E5_CLIFOR := SE2->E2_FORNECE
		SE5 -> E5_LOJA   := SE2->E2_LOJA
		SE5 -> E5_BENEF  := SE2->E2_NOMFOR
		SE5 -> E5_DTDIGIT:= dDataBase
		SE5 -> E5_SEQ	  := cSequencia
		SE5 -> E5_DTDISPO:= SE5->E5_DATA
		SE5 -> E5_VLMOED2 := xMoeda(nOtrga,1,SE2->E2_MOEDA)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: Substituicao (Chile)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA080ADTSE5")
			ExecBlock("FA080ADTSE5",.F.,.F.)
		EndIf
	Endif
	If nImpsubst > 0
		Reclock( "SE5", .T. )
		SE5 -> E5_FILIAL := cFilial
		SE5 -> E5_NUMERO := SE2->E2_NUM
		SE5 -> E5_PREFIXO:= SE2->E2_PREFIXO
		SE5 -> E5_RECPAG := "R"
		SE5 -> E5_TIPO   := SE2->E2_TIPO
		SE5 -> E5_PARCELA:= SE2->E2_PARCELA
		SE5 -> E5_TIPODOC:= "IS"
		SE5 -> E5_MOTBX  := TrazCodMot(cMotBx)
		SE5 -> E5_BANCO  := cBanco
		SE5 -> E5_AGENCIA:= cAgencia
		SE5 -> E5_CONTA  := cConta
		SE5 -> E5_DATA   := dBaixa
		SE5 -> E5_NATUREZ:= SE2->E2_NATUREZ
		If !lUsaFlag
			If lPadrao .And. cLanca == "S"
				SE5 -> E5_LA  := "S"
			Else
				SE5 -> E5_LA  := "N"
			EndIf
		Endif		
		SE5 -> E5_HISTOR := OemToAnsi( STR0112 ) //"BAIXA DE ADIANTAMENTO"
		SE5 -> E5_LOTE   := cLoteFin
		SE5 -> E5_FORNECE:= SE2->E2_FORNECE
		SE5 -> E5_CLIFOR := SE2->E2_FORNECE
		SE5 -> E5_LOJA   := SE2->E2_LOJA
		SE5 -> E5_BENEF  := SE2->E2_NOMFOR
		SE5 -> E5_DTDIGIT:= dDataBase
		SE5 -> E5_SEQ	  := cSequencia
		SE5 -> E5_DTDISPO:= SE5->E5_DATA
		If ( cPaisLoc != "BRA" )
			SE5 -> E5_VALOR   := xMoeda( nImpSubst, 1, nMoedaBco,,,, nTxModBco )
			SE5 -> E5_VLMOED2 := xMoeda( nImpSubst, 1, nMoedaTit,,,, nTxModTit )
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=nTxModBco,.T. )
			SE5->E5_MOEDA := StrZero(nMoedaBco,2)
		Else
			SE5 -> E5_VALOR   := nImpsubst
			SE5 -> E5_VLMOED2 := xMoeda(nImpsubst,nMoedaBco,SE2->E2_MOEDA)
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: Outros Gastos (Chile)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA080ADTSE5")
			ExecBlock("FA080ADTSE5",.F.,.F.)
		EndIf
	EndIf
	If Round( Abs( nDifcambio), MsDecimais(nMoedaBco)) > 0 //Localizacao Chile
		Reclock( "SE5", .T. )
		SE5 -> E5_FILIAL := cFilial
		SE5 -> E5_NUMERO := SE2->E2_NUM
		SE5 -> E5_PREFIXO:= SE2->E2_PREFIXO
		SE5 -> E5_RECPAG := "R"
		SE5 -> E5_TIPO   := SE2->E2_TIPO
		SE5 -> E5_PARCELA:= SE2->E2_PARCELA
		SE5 -> E5_TIPODOC:= "CM"
		SE5 -> E5_MOTBX  := TrazCodMot(cMotBx)
		SE5 -> E5_BANCO  := cBanco
		SE5 -> E5_AGENCIA:= cAgencia
		SE5 -> E5_CONTA  := cConta
		SE5 -> E5_DATA   := dBaixa
		SE5 -> E5_NATUREZ:= SE2->E2_NATUREZ
		If !lUsaFlag
			If lPadrao .And. cLanca == "S"
				SE5 -> E5_LA	:= "S"
			Else
				SE5 -> E5_LA	:= "N"
			EndIf
		Endif
		SE5 -> E5_HISTOR := OemToAnsi( STR0112 ) //"BAIXA DE ADIANTAMENTO"
		SE5 -> E5_LOTE   := cLoteFin
		SE5 -> E5_FORNECE:= SE2->E2_FORNECE
		SE5 -> E5_CLIFOR := SE2->E2_FORNECE
		SE5 -> E5_LOJA   := SE2->E2_LOJA
		SE5 -> E5_BENEF  := SE2->E2_NOMFOR
		SE5 -> E5_DTDIGIT:= dDataBase
		SE5 -> E5_SEQ	  := cSequencia
		SE5 -> E5_DTDISPO:= SE5->E5_DATA
		SE5 -> E5_MOEDA  := StrZero(nMoedaBco,2)
		
		If ( cPaisLoc <> "BRA" )
			If( Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,SA6->A6_MOEDAP),1) )== 1
			SE5 -> E5_VALOR  := nDifCambio
			SE5 -> E5_VLMOED2:= xMoeda( nDifCambio, 1, nMoedaTit,,,, nTxModTit )
			Else
				SE5 -> E5_VALOR  := xMoeda( nDifCambio, 1, nMoedaBco,,,, nTxModBco )
				SE5 -> E5_VLMOED2:= nDifCambio 
			EndIf
			
			If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=nTxModBco,.T. )

		Else
			SE5 -> E5_VALOR  := nDifcambio
			SE5->E5_VLMOED2  := xMoeda(nDifcambio,nMoedaBco,SE2->E2_MOEDA)
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação de Dados Complementares SE5 para: Diferenca Cambio (Chile)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("FA080ADTSE5")
			ExecBlock("FA080ADTSE5",.F.,.F.)
		EndIf
	Endif
EndIf

If nMulta > 0
	Reclock( "SE5", .T. )
	SE5 -> E5_FILIAL := cFilial
	SE5 -> E5_NUMERO := SE2->E2_NUM
	SE5 -> E5_PREFIXO:= SE2->E2_PREFIXO
	SE5 -> E5_RECPAG := "R"
	SE5 -> E5_TIPO   := SE2->E2_TIPO
	SE5 -> E5_PARCELA:= SE2->E2_PARCELA
	SE5 -> E5_TIPODOC:= "MT"
	SE5 -> E5_MOTBX  := TrazCodMot(cMotBx)
	SE5 -> E5_BANCO  := cBanco
	SE5 -> E5_AGENCIA:= cAgencia
	SE5 -> E5_CONTA  := cConta
	SE5 -> E5_DATA   := dBaixa
	SE5 -> E5_NATUREZ:= SE2->E2_NATUREZ
	If !lUsaFlag
		IF lPadrao .And. cLanca == "S"
			SE5 -> E5_LA	:= "S"
		Else
			SE5 -> E5_LA	:= "N"
		EndIf
	Endif
	SE5 -> E5_HISTOR := OemToAnsi( STR0112 ) //"BAIXA DE ADIANTAMENTO"
	SE5 -> E5_LOTE   := cLoteFin
	SE5 -> E5_FORNECE:= SE2->E2_FORNECE
	SE5 -> E5_CLIFOR := SE2->E2_FORNECE
	SE5 -> E5_LOJA   := SE2->E2_LOJA
	SE5 -> E5_BENEF  := SE2->E2_NOMFOR
	SE5 -> E5_DTDIGIT:= dDataBase
	SE5 -> E5_SEQ	  := cSequencia
	SE5 -> E5_DTDISPO:= SE5->E5_DATA
	SE5 -> E5_MOEDA  := StrZero(nMoedaBco,2)

	If ( cPaisLoc != "BRA" )
		SE5 -> E5_VALOR   := xMoeda( nMulta, 1, nMoedaBco,,,, nTxModBco )
		SE5 -> E5_VLMOED2 := xMoeda( nMulta, 1, nMoedaTit,,,, nTxModTit )
		If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=nTxModBco,.T. )
	Else
		SE5 -> E5_VALOR  := nMulta
		SE5 -> E5_VLMOED2:= xMoeda(nMulta,nMoedaBco,SE2->E2_MOEDA,,,,nTxMoeda)
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravação de Dados Complementares SE5 para: Multa ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA080ADTSE5")
		ExecBlock("FA080ADTSE5",.F.,.F.)
	EndIf
Endif

If nDescont > 0
	Reclock( "SE5", .T. )
	SE5 -> E5_FILIAL := cFilial
	SE5 -> E5_NUMERO := SE2->E2_NUM
	SE5 -> E5_PREFIXO:= SE2->E2_PREFIXO
	SE5 -> E5_RECPAG := "R"
	SE5 -> E5_TIPO   := SE2->E2_TIPO
	SE5 -> E5_PARCELA:= SE2->E2_PARCELA
	SE5 -> E5_TIPODOC:= "DC"
	SE5 -> E5_MOTBX  := TrazCodMot(cMotBx)
	SE5 -> E5_BANCO  := cBanco
	SE5 -> E5_AGENCIA:= cAgencia
	SE5 -> E5_CONTA  := cConta
	SE5 -> E5_DATA   := dBaixa
	SE5 -> E5_NATUREZ:= SE2->E2_NATUREZ
	If !lUsaFlag
		If lPadrao .And. cLanca == "S"
			SE5 -> E5_LA  := "S"
		Else
			SE5 -> E5_LA  := "N"
		EndIf
	Endif	
	SE5 -> E5_HISTOR := OemToAnsi( STR0112 ) //"BAIXA DE ADIANTAMENTO"
	SE5 -> E5_LOTE   := cLoteFin
	SE5 -> E5_FORNECE:= SE2->E2_FORNECE
	SE5 -> E5_CLIFOR := SE2->E2_FORNECE
	SE5 -> E5_LOJA   := SE2->E2_LOJA
	SE5 -> E5_BENEF  := SE2->E2_NOMFOR
	SE5 -> E5_DTDIGIT:= dDataBase
	SE5 -> E5_SEQ	  := cSequencia
	SE5 -> E5_DTDISPO:= SE5->E5_DATA
	SE5 -> E5_MOEDA := StrZero(nMoedaBco,2)
	
	If ( cPaisLoc != "BRA" )
		SE5->E5_VALOR   := xMoeda( nDescont, 1, nMoedaBco,,,, nTxModBco )
		SE5->E5_VLMOED2 := xMoeda( nDescont, 1, nMoedaTit,,,, nTxModTit )
		If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=nTxModBco,.T. )
	Else
		SE5->E5_VALOR   := nDescont
		SE5->E5_VLMOED2 := xMoeda(nDescont,nMoedaBco,SE2->E2_MOEDA,,,,nTxMoeda)
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravação de Dados Complementares SE5 para: Desconto ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA080ADTSE5")
		ExecBlock("FA080ADTSE5",.F.,.F.)
	EndIf
Endif
// Retorna posicionamento ao E5 tipo BA (contabilizacao)
SE5->( DbGoto( nRecBA))
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080DtVen³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 24/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida a Data de Vencimento do VENDOR					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080DtVen()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080DtVen(dData)
Local lRet := .T.

If dData < dDataBase
	Help(" ",1,"FA080DTVEN")
	lRet := .F.
Endif
Return lRet


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fa080Corr ³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 30/01/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Sugere o valor da corr. monetaria p/ titulos <> moeda 1	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080Corr() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Program   ³ Data   ³ BOPS ³  Motivo da Alteracao                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Mauricio  ³01/12/97³05352A³ Corre‡„o do c lculo de Corr.Monet ria      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080Corr(nEstOriginal,nTxMoeda)

Local nCentMd1	:= MsDecimais(1)
Local nValor1, cAlias := Alias()
Local lF080CM := ExistBlock("F080CM")
LOCAL nBaseCorrecao := 0		// Base para Correcao Monetaria
Local lIntegracao := IF(GetMV("MV_EASYFIN")=="S",.T.,.F.)

DEFAULT nTxMoeda := 0

nEstOriginal := Iif(nEstOriginal==Nil,nValEstrang,nEstOriginal)
If GetMV("MV_TIPOCM") == "O"		// Pelo Original (O)
	nBaseCorrecao := nEstOriginal
ELSE
	nBaseCorrecao := nValEstrang				// Pelo Total (T)
EndIf   
If cPaisLoc<>"BRA"
	nCentMd1:=4
	nTxMoeda:=aTxMoedas[SE2->E2_MOEDA][2]
EndIf

If Type("lIntegracao")<>"U" .and. lIntegracao
  	If (nT := ascan(aAutoCab,{|x| x[1]='AUTTXMOEDA'}) ) > 0
		nTxMoeda	:=	aAutoCab[nT,2]	
	EndIf	    
Endif		  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o valor na moeda escolhida na data da ultima variacao   ³
//³ ou na data de emissao (caso nao tenha sofrido ainda nenhuma	    ³
//³ variacao.														³
//³ Calcula o valor na moeda escolhida para a database.				³
//³ Subtrai um valor do outro para apurar a variacao. 				³
//³ A Correcao pode ser parametrizada para ser calculada pelo Origi-³
//³ nal ou pelo Total (Parametro MV_TIPOCOM)           				³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE2")

If STR(nBaseCorrecao,17,2) == STR(SE2->E2_VALOR,17,2) .AND. Empty(SE2->E2_DTVARIA)
	nValor1 := SE2->E2_VLCRUZ
Else     
	If(SE2->(FieldPos("E2_TXMDCOR")>0 ) .And. !Empty(SE2->E2_TXMDCOR))
		nValor1 := Round(NoRound(xMoeda(nBaseCorrecao,SE2->E2_MOEDA,1,Iif(Empty(E2_DTVARIA),E2_EMISSAO,E2_DTVARIA),nCentMd1+1,SE2->E2_TXMDCOR),nCentMd1+1),nCentMd1)
	Else
		nValor1 := Round(NoRound(xMoeda(nBaseCorrecao,SE2->E2_MOEDA,1,Iif(Empty(E2_DTVARIA),E2_EMISSAO,E2_DTVARIA),nCentMd1+1,Iif(Empty(SE2->E2_DTVARIA),SE2->E2_TXMOEDA,0)),nCentMd1+1),nCentMd1)
	EndIf
Endif

If (FunName() == "FINA080" .or. FunName() == "FINA750" .or. FunName() == "FINA450" .or. FunName() == "EICAP100" .Or. UPPER(AllTrim(FunName())) $ "EECAF200/EICAP100/EFFEX400/EFFEX401") //FSM - 14/05/2012)
	 nValorM := Round(NoRound(xMoeda(nBaseCorrecao,SE2->E2_MOEDA,1,dBaixa,nCentMd1+1,Iif(empty(aTxMoedas),nTxMoeda,aTxMoedas[SE2->E2_MOEDA][2])),nCentMd1+1),nCentMd1)
Elseif ( TYPE("aTxMoedas")=="A" .AND. Len(aTxMoedas) >= SE2->E2_MOEDA )
	nValorM := Round(NoRound(xMoeda(nBaseCorrecao,SE2->E2_MOEDA,1,dBaixa,nCentMd1+1,aTxMoedas[SE2->E2_MOEDA][2]),nCentMd1+1),nCentMd1)
Else
	nValorM := Round(NoRound(xMoeda(nBaseCorrecao,SE2->E2_MOEDA,1,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
EndIf

If UPPER(SE2->E2_ORIGEM) == "SIGAEIC" .And. Type("nValEIC")<>"U"
   nValEIC := nValorM
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica atraves do parametro MV_CALCCM se sera calculada a cor-³
//³ recao monetaria.                                           	    ³
//³ Caso o parametro nao exista, sera assumido "S"					³
//³ O PE F080CM serve para calculo alternativo da Corre‡ao Monetaria³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ((Type("nMoedaBco")<>"U" .And. SE2->E2_MOEDA > 1 .And. SE2->E2_MOEDA <> nMoedaBco) .Or. ;     
	(Type("nMoedaBco")=="U" .And. SE2->E2_MOEDA > 1 .And. ; 
	("FINA340"$FUNNAME() .Or. "FINA750"$FUNNAME() .Or. "FINA450"$FUNNAME()) ) ) .And. ;
	IIf(cPaisLoc=="BRA", GetMv("MV_CALCCM") == "S" ,.T. ) 

	If lF080CM
		nCM := ExecBlock("F080CM",.F.,.F.)
	Else
		nCM := nValorM - nValor1
	Endif
Else
  If Type("lIntegracao")<>"U" .and. lIntegracao
    nCM := nValorM - nValor1
  Else
	nCM := 0
  Endif	
Endif
If Type("oDifCambio") == "O"	.And. cPaisLoc =="CHI"
	nDifCambio := (nValPgto -(nBaseCorrecao * (SE2->E2_VLCRUZ/SE2->E2_VALOR) ) )
	oDifCambio:Refresh()
EndIf
dbSelectArea(cAlias)
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fA080TitW ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para Baixa de Titulos - Windows           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA080Titw()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fA080TitW(cMarca,nTotal,nHdlPrv,lHdlPrv,lPadraoBx,cArquivo,cPadrao,nTotLtEZ,lAcessMul,lAcessJur,lAcessDes)
Local lPrjCni 	:= FindFunction("ValidaCNI") .And. ValidaCNI()
Local lPanelFin := If (FindFunction("IsPanelFin"),IsPanelFin(),.F.)
Local nOpca			
LOCAL lMovBco  	:= .T.
LOCAL lBaixou  	:= .F.

LOCAL oDlgLote
LOCAL oTitulo
LOCAL oParcela  
Local oNum
Local oPrefixo
Local oNomeFor
LOCAL oBaixa
LOCAL oHist070	
LOCAL oMotBx	
LOCAL oValor	
LOCAL oTotAbat	
LOCAL oParciais
LOCAL oDescont
LOCAL oMulta
LOCAL oJuros
LOCAL oBenef
LOCAL oAcresc
LOCAL oDecresc
Local nSalvRec  := RecNO( )
LOCAL cNomeFor
LOCAL cParcela
Local cNum    
Local cPrefixo
LOCAL cMoeda
LOCAL nValLiq  := 0
LOCAL aMotBx	:= ReadMotBx()
LOCAL aDescMotBx := {}
Local aCmc7:={}
Local lSpbInUse := SpbInUse()
LOCAL aModalSPB	:=  {"1=TED","2=CIP","3=COMP"}
LOCAL oModSpb
Local nTxMoeda := 0
Local nUltLin
Local oMultNat
Local lMultNat := .F.
Local nTolerCp := SuperGetMv("MV_TOLERCP",.F.,0)
Local nI := 0
Local nLinha := 0
LOCAL oPis
LOCAL oCofins
LOCAL oCsll
LOCAL lFa080Lt := Existblock("FA080LT")
Local dDataCan := CTOD("")
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

LOCAL oIrrf
Local lIRPFBaixa := .f.
Local lAcessImp:= .T.
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" )

Local oIss 
Local cTIPO
Local oTipo
Local nCentMd1	:= MsDecimais(1) 
Local lGerTXBord := .T.
Local aAreaSE2   := {}
Local aAreaSA2   := {}
Local aAreaSED   := {}
Local cChaveIR   := ""
Local nPgtoIRRF  := 0
Local cFormCalcIR := GetMV("MV_RCIRJBX",.F.,"1") // Valor de IR a considerar ou recalcular imposto: "1" - Recalcular IR, "2" - Considerar IR titulo (E2_IRRF)
Local cFormClcPCC := GetMV("MV_RCPCCBX",.F.,"1") // Valor de PCC a considerar ou recalcular imposto: "1" - Recalcular PCC, "2" - Considerar IR titulo (E2_IRRF)
Local lCarret     := .F.
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Inss Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )                
Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0) 
Local nLimInss 	:= GetMv("MV_LIMINSS",.F.,0)
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 		:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao.

Local oInss
Local aPAComp	:=	{}
Local nInsComp	:=	0
Local nInsEst	:=	0
Local 	aAreaSe5  := SE5->(GetArea())	
Local aPcc		:= {}
Local aValImp := {}
Local aBckImpEms := {}
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local nSalImp	:= 0	
Local lOldPCC := .T.
Local lVlrAcImp	:= FindFunction("VlrAcImp")
cBenef	:= CriaVar("E5_BENEF")

PRIVATE nBaseIRPF := 0
PRIVATE lUsaCmc7 := .F., lChqPre := .F.
PRIVATE oVlEstrang
PRIVATE oCM
PRIVATE oValPgto
PRIVATE aDadosRef := Array(7)
PRIVATE aDadosRet := Array(7)
PRIVATE aRecnosSE2 := {}
PRIVATE nOldValPgto := 0

DEFAULT lAcessMul	:= .T.
DEFAULT lAcessJur	:= .T.
DEFAULT lAcessDes	:= .T.

Private nBaseIns	:= 0 //Inss Baixa
Private nVretInss	:= 0
Private aRecnoINSS:= {}
Private aBordINSS:= {}
Private cPretIns	:= ""
Private nInss		:= 0


//IRRF - BAIXA
PRIVATE aDadosIr := Array(3)

Private lEmpPub := IIf(lIsEmpPub, IsEmpPub(), .F.)
Private nVlMPub := SuperGetMv("MV_VLMPUB" ,.T.,10)
Private lAplMinP := .F.

aFill(aDadosIr,0)
aFill(aDadosRef,0)
aFill(aDadosRet,0)

#IFDEF TOP 
	lOldPCC := .F.
#ENDIF

If (ExistBlock( "FA080CMC" ) )
	lUsaCmc7:=ExecBlock("FA080CMC",.F.,.F.)
Endif

IF ExistBlock("F080MNAT")
	lMultNat := ExecBlock("F080MNAT",.F.,.F.)
Endif

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
	lCalcIssBx := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorna o Array aDescMotbx contendo apenas a descricao do  ³
//³ motivo das Baixas. 						  				   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If len( aDescMotbx ) ==0
	For NI := 1 to Len(aMotBx)
		If Substr(aMotBx[nI],34,01) == "A" .or. Substr(aMotBx[nI],34,01) =="P"
			AADD( aDescMotbx,Substr(aMotBx[nI],07,10))
		EndIf
	Next
EndIf

While !Eof()
	If SE2->E2_OK != cMarca
		dbSKip()
		Loop
	Else	
		Exit
	EndIf
EndDo
// Se não selecionou nenhum titulo para baixar, retorna sem fazer nada.
IF SE2->(EOF())
	RETURN lBaixou
ENDIF

// Se for um titulo de adiantamento, verifica se existem cheques nao liberados, pois se existir, nao permitir a baixa
// Isso ocorre quando o parametro MV_LIBCHEQ esta igual a N, foi gerado um cheque para o adiantamento e este
// ainda nao foi liberado
If (Type('lF080Auto') =='U' .or. ! lF080Auto) .And.;
	Alltrim(SE2->E2_TIPO) $ MVPAGANT 
	SEF->(DbSetOrder(3))
	SEF->(MsSeek(xFilial("SEF")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+Pad(E2_NUMBCO,Len(SEF->EF_NUM)))))
	If SEF->EF_LIBER == "N"
		Help(" ",1,"NOCHQADT")	
		Return lBaixou
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona Fornecedor no SA2                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SA2")
SA2->(dbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))

lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT

lIRProg := IIf(SA2->(FieldPos("A2_IRPROG")) # 0, IIf(!Empty(SA2->A2_IRPROG), SA2->A2_IRPROG, "2"), "2")

If SA2->( FieldPos( "A2_MINPUB" ) ) > 0 .And. SA2->A2_MINPUB == "2"
	lAplMinP := .T.
EndIf

dbSelectArea("SE2")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega Variaveis da Baixa                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nSalvRec := RecNo()
cTitulo  := SE2->E2_PREFIXO + " " + SE2->E2_NUM+ " " + SE2->E2_PARCELA
cParcela := SE2->E2_PARCELA
dEmissao := SE2->E2_EMISSAO
dVencRea := SE2->E2_VENCREA
cTipo    := SE2->E2_TIPO
cNomeFor := SE2->E2_FORNECE + " - " + Subst(SA2->A2_NOME,1,40)
cHist    := SE2->E2_HIST
dBaixa   := CriaVar("E2_BAIXA")
dDebito  := dDatabase

If SE2->( FieldPos( "E2_DATACAN" ) ) > 0
	dDataCan	:= SE2->E2_DATACAN //FRS - Sit. Titulo
EndIf

If cPaisLoc == "BRA"
	nTxMoeda	 := If(SE2->E2_MOEDA > 1,If(SE2->E2_TXMOEDA > 0, SE2->E2_TXMOEDA,RecMoeda(dBaixa,SE2->E2_MOEDA)),0)
Endif	
dDtCredito  := dDataBase
If SE2->E2_IMPCHEQ == "S"  // Cheque s/ Titulo
	cCheque		:= SE2->E2_NUMBCO
Else
	cCheque		:= CRIAVAR("E2_NUMBCO")
Endif
cHist070	:= Criavar("E5_HISTOR")		//Inicilizador padrao
If Empty(cHist070)
	cHist070 := OemToAnsi(STR0007)+Space(Len(cHist070)-24)  // "Valor recebido s/ T¡tulo"
Endif
cMotBx		:= aDescMotBx[1] 	//NORMAL
nValor		:= SE2->E2_VALOR
nTotAbat	:= SumAbatPag(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_FORNECE,SE2->E2_MOEDA,"S",dBaixa,SE2->E2_LOJA)
dbGoto(nSalvRec)
nParciais	:= SE2->E2_VALOR-SE2->E2_SALDO
nAcrescF 	:= SE2->E2_SDACRES
nDecrescF	:= SE2->E2_SDDECRE
nAcresc		:= Round(Noround(xMoeda(SE2->E2_SDACRES,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
nDecresc	:= Round(Noround(xMoeda(SE2->E2_SDDECRE,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)

// Para titulos de vendor antigos
If STR(SE2->E2_VALOR,17,2) == STR(SE2->E2_SALDO,17,2) .and. ;
	 SE2->E2_SDACRES == 0 .and. SE2->E2_ACRESC > 0
	nAcresc	:= Round(Noround(xMoeda(SE2->E2_ACRESC,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
	nAcrescF := SE2->E2_ACRESC
Endif	

// Ponto de entrada para acrescimo
If ExistBlock("F080ACRE")
	ExecBlock("F080ACRE",.F.,.F.)
Endif

nDescont    	:= 0
nOldDescont		:= 0
nMulta      	:= 0
nOldMulta      	:= 0
nJuros      	:= 0
nOldJuros      	:= 0
nPis			:= 0
nOldPis			:= 0
nCofins			:= 0
nOldCofins		:= 0
nCsll			:= 0
nOldCsll		:= 0
nVlRetPis		:= 0
nVlRetCof		:= 0
nVlRetCsl		:= 0
nValPgto		:= 0
nOldValPgto		:= 0
nOldIrrf		:= 0
nDiferImp		:= 0
nIrrf			:= 0
nVlRetIrf		:= 0
nBaseIrpf		:= 0
nIss			:= 0
nOldIss			:= 0
nInss			:= Iif(SuperGetMv("MV_INSIRF",.F.,"2") == "2" .And. (SA2->A2_TIPO == "F" .OR. (SA2->A2_TIPO == "J" .AND. lIRProg == "1")),SE2->E2_INSS,0)//Valor do INSS descontado na emissão
nValPgto		:= Round(Noround(xMoeda(SE2->E2_SALDO-nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)+nMulta+nJuros-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss
nOldValPgto 	:= nValPgto
dOldData		:= CTOD("//")
nInss			:=	0

//Calcula ISS na Baixa
If lCalcIssBx .and. Empty(SE2->E2_NUMBOR)  // (1) Emissao, (2) Baixa
	F080IssBx()
EndIf

//Calcula Impostos pela Baixa                     
If lIRPFBaixa	
	
		//Novo calculo de IRRF pela Baixa
	If lNewIrBx
		//Calculo para o  IRRF 
		//o primeiro parametro, neste caso vai zerado pois o calculo 
		//eh feito com base no saldo do titulo 
		nIRRF := FCalcIRBx(0,SA2->A2_TIPO,dBaixa,dBaixa /*dDebito*/)   	
	Else

		If SE2->E2_PRETIRF == '1' .OR. EMPTY(SE2->E2_PRETIRF)
	                             
			//Recompoe a base de calculo do IR
			If SA2->A2_TIPO == "J"
				nBaseIRPF := nValPgto + Iif(!lInssBx,SE2->E2_INSS,0) + Iif(!lCalcIssBx, SE2->E2_ISS, 0) + Iif(!lIRPFBaixa, SE2->E2_IRRF, SE2->E2_VRETIRF) + Iif(!lPccBaixa,SE2->(E2_PIS+E2_CSLL+E2_COFINS),SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL))
			Else
				nBaseIRPF := nValPgto + Iif(!lInssBx,nInss,0) + Iif(!lCalcIssBx, SE2->E2_ISS, 0)
			EndIf
			
			//Se o título estiver em bordero, verifica se gerou título (fina241) ou nao (fina240)
			If !Empty(SE2->E2_NUMBOR)
					
				aAreaSE2 := SE2->(GetArea())
				cChaveIR := SE2->(E2_PREFIXO+E2_NUM+E2_PARCIR)+MVTAXA
				
				aAreaSA2 := SA2->(GetArea()) 
				dbSelectArea("SA2")
				If (dbSeek(xFilial("SA2")+GetMV("MV_UNIAO")))
			   		cChaveIR +=SA2->(A2_COD+A2_LOJA)				
				Endif
				
				
				dbSelectArea("SE2")
				If SE2->(dbSeek(xFilial("SE2")+cChaveIR)) 
					lGerTXBord := .F.
				Endif            
				
				SE2->(RestArea(aAreaSE2))   
				SA2->(RestArea(aAreaSA2))
			Endif
			

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Busca base de cálculo para o  IRPF ³
			//³caso não tenha sido calculada      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
			aCalcIRPF := F241BsIRPF(SE2->(Recno()),"SE2",nBaseIRPF,lGerTXBord)  					
					
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Calcula IRPF e deduz os valores retidos anteriormente³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If SA2->A2_TIPO == "F"
				nIRRF := Fa050TabIR(aCalcIRPF[1] - aCalcIRPF[4]) - aCalcIRPF[2]
			Else
				If EMPTY(SE2->E2_NUMBOR)
					If cFormCalcIR == "1" // Recalcula imposto
						nIRRF := FClcIRPJ(aCalcIRPF[1],.T.,.T.)// - aCalcIRPF[2]
					ElseIf cFormCalcIR == "2" // Considera valor calculado no título, menos o IR já retido
						nIRRF := SE2->E2_IRRF - aCalcIRPF[2]
					EndIf
				EndIf
			EndIf
		Endif
		
		If !lIRPFBaixa
			nIRRF := IIF(nIRRF <= GetMv("MV_VLRETIR",,0),0,nIRRF)
		EndIf
	EndIf	
Endif

If lPccBaixa
	fA080Data()
	If lPCCBaixa .and. (dBaixa < dLastPcc .Or. lEmpPub .or. lOldPCC)
		f080TotMes(dBaixa,.T.,,.F.)
	Else
		
		If !SE2->E2_TIPO $ MVPAGANT+"/"+MVPROVIS .And. VLDBOR(SE2->E2_NUMBOR,"P")
			nSalImp := salRefPag(SA2->A2_COD+SA2->A2_LOJA)
			nSalImp += IIF(lJurMulDes,(nMulta+nJuros-nDescont+nAcresc-nDecresc),Iif(lVlrAcImp, VlrAcImp(), 0))

			aValImp    := GetOutImp("P",nIss,nInss,nIrrf)
			aBckImpEms := { nIss , nInss , nIrrf }
			nIss       := aValImp[1]
			nInss      := aValImp[2]
			nIrrf      := aValImp[3]
			
			aPcc	 := newMinPcc(dBaixa, nSalImp,SED->ED_CODIGO,"P",SA2->A2_COD+SA2->A2_LOJA,nIss,nInss,nIRRF)
			nPis	 := aPcc[2]
			nCofins := aPcc[3]
			nCsll	 := aPcc[4]

			nIss  := aBckImpEms[ 1 ]
			nInss := aBckImpEms[ 2 ]
			nIrrf := aBckImpEms[ 3 ]
			aSize( aBckImpEms , 0 )
			aBckImpEms := Nil
		Else
			nPis    := 0
			nCofins := 0
			nCsll   := 0
		EndIf
		
	EndIf
Endif
If lEmpPub .And. lIRPFBaixa .And. lAplMinP .And. (nPis+nCoFins+nCsll+nIrrf+aDadosRet[2]+aDadosRet[3]+aDadosRet[4]+aDadosRet[5]< nVlMPub  .And. ;
	!(aDadosRet[2]+aDadosRet[3]+aDadosRet[4]+aDadosRet[5] == 0 .And. aDadosRet[1] > 0))
	nPis := nCoFins := nCsll := nIrrf := 0 
EndIf
nInss		:= 0
nBaseIns	:= 0
nVretInss	:= 0	
	
If lInssBx .And. cPaisLoc = "BRA" .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA")//Inss Baixa 		
	aAreaSED := SED->(GetArea()) 
	dbSelectArea("SED")
	SED->(DbSeek(xFilial("SED")+SE2->E2_NATUREZ))
	If SED->ED_CALCINS == "S" .And. SA2->A2_RECINSS == "S" .And. Empty(SE2->E2_NUMBOR) 						
		nOldInss	:=	nInss
		cChave		:=	''
		nInsBx		:=	0
		If lInsPub //Inss Baixa Empresa Publica			
			aPAComp	:=	{} //caso tenha PA´s que compensaram esta NF.
			nInsComp	:=	0
			nInsEst	:=	0
			//Caso o PA tenha sido compensado anteriormente com alguma nf e gerado inss devo recompor o valor do imposto do saldo.			
			aAreaSe5  := SE5->(GetArea())				
			//Quais PA's compensaram essa NF.
			DbSelectArea("SE5")
			SE5->(DbSetOrder(7))				
			SE5->(DbSeek(xFilial("SE5")+ SE2->E2_PREFIXO + SE2->E2_NUM + SE2->E2_PARCELA + SE2->E2_TIPO + SE2->E2_FORNECE + SE2->E2_LOJA  ))				
			Do While SE5->(!Eof() .And. ALLTRIM(SE5->E5_FILIAL+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA) == ALLTRIM(xFilial("SE5")+ SE2->E2_PREFIXO + SE2->E2_NUM +;
						 SE2->E2_PARCELA + SE2->E2_TIPO + SE2->E2_FORNECE + SE2->E2_LOJA))
					
				If SE5->E5_RECPAG == "P" .And. SE5->E5_TIPODOC = "CP" .And. SE5->E5_MOTBX = "CMP" 
					AAdd(aPAComp,SE5->E5_DOCUMEN)
				EndIf
				SE5->(DbSkip())
			EndDo
			//Somando os valores dos inss retidos dos PA´s que compensaram essa NF.
			DbSelectArea("SE5")
			SE5->(DbSetOrder(10))									
			If Len(aPAComp) >= 1				
				For nI	:=	1 TO Len(aPAComp)					
					SE5->(DbSeek(xFilial("SE5")+ aPAComp[nI]))				
					Do While SE5->(!Eof() .And. ALLTRIM(SE5->E5_FILIAL+SE5->E5_DOCUMEN) == ALLTRIM( xFilial("SE5") + aPAComp[nI] ))
						If SE5->E5_TIPODOC == "CP" .And. SE5->E5_RECPAG == "P" 
						    nInsComp += SE5->E5_VRETINS
						ElseIf SE5->E5_TIPODOC == "ES" .And. SE5->E5_RECPAG == "P"
							nInsEst += SE5->E5_VRETINS
						EndIf
						SE5->(DbSkip())
					EndDo																																															
				 Next
			Endif
			SE5->(RestArea(aAreaSE5))
			nInsComp	:=	nInsComp - nInsEst	 				
			nInss		:=	FCaInssBxCP(nValPgto+nInsComp ,lIRPFBaixa,lCalcIssBx,lPCCBaixa)								
		Else		
			nInss		:=	FCaInssBxCP(nValPgto,lIRPFBaixa,lCalcIssBx,lPCCBaixa)
		Endif	
		nValPgto 	-= nInss
	Endif
	SED->(RestArea(aAreaSED))   
Endif	
fa080Val(nValPgto,nTxMoeda)
nOldValPgto := nValPgto
nCM         	:= 0
cMoeda 		:= IIF(Empty(SE2->E2_MOEDA),"1",AllTrim(Str(SE2->E2_MOEDA,2)))
cDescMoeda 	:= SubStr(GetMV("MV_SIMB"+cMoeda),1,3)
cTexto1	 	:= OemToAnsi(STR0084) + SubStr(GetMV("MV_SIMB"+cMoeda),1,3) //"Valor Original "
If Empty(cBenef)
	dbSelectArea("SA2")
	SA2->(dbSeek(cFilial+SE2->E2_FORNECE+SE2->E2_LOJA))
	dbSelectArea("SE2")
	cBenef   := Padr(SA2->A2_NOME,TamSx3("EF_BENEF")[1])
Endif

*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Analisa se o titulo foi gerado a partir de um cheque pre datado.		³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lChqPre := .f.
dbSelectArea("SE5")
dbSetOrder(2)
If SE5->(dbSeek( xFilial("SE5") + "CD" + SE2->E2_PREFIXO + ;
		SE2->E2_NUM + SE2->E2_PARCELA + SE2->E2_TIPO + dToS(SE2->E2_EMISSAO )+;
		SE2->E2_FORNECE + SE2->E2_LOJA ))

	lChqPre := .T.
	cBanco   := SE5->E5_BANCO
	cAgencia := SE5->E5_AGENCIA
	cConta   := SE5->E5_CONTA
	cCheque  := SE5->E5_NUMCHEQ
	cBenef   := SE5->E5_BENEF
EndIf

// Carrega as variaveis bancarias
Fa080BDev()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Pr‚-inicializa a modalidade de SPB                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSpbInUse
	If !Empty(SE2->E2_MODSPB)
		cModSpb := SE2->E2_MODSPB
	Else
	   cModSpb := "1"
	Endif		
Endif

If lFa080Lt		// ponto de entrada para manipulacao do titulo antes da baixa
	Execblock("FA080LT" ,.F.,.F.)
Endif        

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³PONTO DE ENTRADA FA080ACES ³
//³ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Permite ou nao que o usuario altere os valores dos impostos da lei 10925 ³
//³ calculados automaticamente pelo sistema.                                 ³
//³ Vari veis dispon¡veis para serem alteradas :                             ³
//³                                                                          ³
//³ lAcessImp ( .T. - PERMITE  /  .F. - NAO PERMITE )						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("FA080ACES")
	lAcessImp := ExecBlock("FA080ACES",.F.,.F.)
Endif

DEFINE MSDIALOG oDlgLote FROM	31,15 TO 577,574 TITLE OemToAnsi(STR0007)  PIXEL OF oMainWnd //"Baixas a Pagar"

//DADOS DO TITULO
oPanel1 := TPanel():New(0,0,'',oDlgLote,, .T., .T.,, ,45,45,.f.,.f. )
oPanel1:Align := CONTROL_ALIGN_TOP

//DADOS GERAIS E DA BAIXA
oPanel2 := TPanel():New(0,0,'',oDlgLote,, .T., .T.,, ,30,30,.f.,.f. )
oPanel2:Align := CONTROL_ALIGN_ALLCLIENT
		
@ 001,002 GROUP oGrp1 TO 043, 272 LABEL STR0015 OF oPanel1 PIXEL //"Principal"
@ 001,002 GROUP oGrp2 TO If(cPaisLoc=="BRA",215,165), 133 LABEL STR0013 OF oPanel2  PIXEL //"Dados Gerais"
@ 001,139 GROUP oGrp3 TO If(cPaisLoc=="BRA",215,165), 272 LABEL STR0014 OF oPanel2  PIXEL //"Valores da Baixa"

If lUsaCmc7
	aCmc7:=LjLeCmc7(1)
	If Len(aCmc7) > 0
		cBanco  :=aCmc7[1]
		cAgencia:=aCmc7[2]
		cConta  :=aCmc7[3]
		cCheque :=aCmc7[4]
	Endif
Endif


@ 008,004 SAY STR0092				SIZE 31,07 OF oPanel1 PIXEL //Prefixo
@ 008,027 MSGET oPrefixo VAR SE2->E2_PREFIXO	SIZE 25,08 OF oPanel1 PIXEL When .F. 
@ 008,060 SAY STR0093 				SIZE 31,07 OF oPanel1 PIXEL //Numero 
@ 008,085 MSGET oTitulo VAR SE2->E2_NUM		SIZE 70,08 OF oPanel1 PIXEL When .F.
@ 008,165 SAY STR0094 				SIZE 31,07 OF oPanel1 PIXEL //Parcela
@ 008,188 MSGET oParcela VAR SE2->E2_PARCELA	SIZE 25,08 OF oPanel1 PIXEL When .F.
@ 008,220 SAY STR0095				SIZE 31,07 OF oPanel1 PIXEL //Tipo
@ 008,238 MSGET oTipo VAR cTipo	F3 "SE2RDO" SIZE 30,08 OF oPanel1 PIXEL HASBUTTON
oTipo:lReadOnly := .T.

@ 019,004 SAY STR0019 SIZE 22,07 OF oPanel1 PIXEL //"Fornecedor"
@ 019,027 MSGET oCodFor VAR SE2->E2_FORNECE F3 "SA2" SIZE 70,08 OF oPanel1 PIXEL HASBUTTON
oCodFor:lReadOnly := .T.
@ 019,105 MSGET oNomeFor VAR SA2->A2_NOME SIZE 165,08 OF oPanel1 PIXEL When .F.

@ 030,004 SAY STR0098 				SIZE 31,07 OF oPanel1 PIXEL //"Natureza"
@ 030,027 MSGET oNaturez VAR SE2->E2_NATUREZ	F3 "SED" SIZE 70,08 OF oPanel1 PIXEL HASBUTTON
oNaturez:lReadOnly := .T.
@ 030,105 SAY STR0017 				SIZE 31,07 OF oPanel1 PIXEL //"Emiss„o"
@ 030,133 MSGET SE2->E2_EMISSAO	SIZE 48,08 OF oPanel1 PIXEL When .F.
@ 030,189 SAY STR0018 				SIZE 49,07 OF oPanel1 PIXEL //"Vencto.Atual"
@ 030,222 MSGET SE2->E2_VENCREA	SIZE 48,08 OF oPanel1 PIXEL When .F.

nUltLin := 10

@ nUltLin,005 SAY OemToAnsi(STR0020)		SIZE 38,07 OF oPanel2 PIXEL //"Hist.Emiss„o"
@ nUltLin,065 MSGET oHist VAR cHist			SIZE 65,08 OF oPanel2 PIXEL When .F.
nUltLin += 12

@ nUltLin,005 SAY OemToAnsi(STR0021)		SIZE 39,07 OF oPanel2 PIXEL //"Portador"
@ nUltLin,065 MSGET oPortado VAR cPortado	SIZE 65,08 OF oPanel2 PIXEL When .F.
nUltLin += 12

@ nUltLin,005 SAY OemToAnsi(STR0029)		SIZE 37,07 OF oPanel2 PIXEL //"Mot.Baixa"

if lPrjCni
	@ nUltLin,065 COMBOBOX oMotBx VAR cMotBx ITEMS aDescMotbx SIZE 65,47 OF oPanel2 PIXEL ;
		ON CHANGE (fa080ChkVdr(),oBanco:lReadOnly := !fa080digit()) Valid fa080BDev() .and. FA080VlNat(cMotBx)
Else
	@ nUltLin,065 COMBOBOX oMotBx VAR cMotBx ITEMS aDescMotbx SIZE 65,47 OF oPanel2 PIXEL ;
		ON CHANGE (fa080ChkVdr(),oBanco:lReadOnly := !fa080digit()) Valid fa080BDev()
EndIf	
	
nUltLin += 12

@ nUltLin,005 SAY OemToAnsi(STR0022)		SIZE 40,07 OF oPanel2 PIXEL //"Banco"
@ nUltLin,065 MSGET oBanco VAR cBanco 		SIZE 65,08 OF oPanel2 PIXEL HASBUTTON F3 "SA6" Valid (!MovBcobx(cMotBx, .T.) .and. Empty(cBanco)) .or. (CarregaSA6(@cBanco,,,.T.) .and. fa080BcoCx() .and. f080AltBco(nTxMoeda,oJuros, oMulta, oDescont, oCm))
oBanco:lReadOnly := !fa080digit()
nUltLin += 12

@ nUltLin,005 SAY OemToAnsi(STR0023)		SIZE 39,07 OF oPanel2 PIXEL //"Agˆncia"
@ nUltLin,065 MSGET oAgencia VAR cAgencia	SIZE 65,08 OF oPanel2 PIXEL When fa080digit() Valid ;
	CarregaSA6(@cBanco,@cAgencia,,.T.) .and. f080AltBco(nTxMoeda,oJuros, oMulta, oDescont, oCm)
nUltLin += 12

@ nUltLin,005 SAY OemToAnsi(STR0024)		SIZE 41,07 OF oPanel2 PIXEL //"Conta"
@ nUltLin,065 MSGET oConta VAR cConta 		SIZE 65,08 OF oPanel2 PIXEL When fa080digit() Valid ;
	If(CarregaSA6(@cBanco,@cAgencia,@cConta,.T.,,.T.) .AND. ( FindFunction( "FXVldBxBco" ) .AND. FXVldBxBco( cBanco, cAgencia, cConta, SE2->E2_NATUREZ, SE2->E2_MOEDA ) ),FaPrNumChq(cBanco,cAgencia,cConta,@oCheque,@cCheque) .And. ;
	f080AltBco(nTxMoeda,oJuros, oMulta, oDescont, oCm),oBanco:SetFocus())

nUltLin += 12

@ nUltLin,005 SAY OemToAnsi(STR0027)		SIZE 40,07 OF oPanel2 PIXEL //"Cheque No."
@ nUltLin,065 MSGET oCheque VAR cCheque	SIZE 65,08 OF oPanel2 PIXEL  Picture PesqPict( "SEF","EF_NUM") When (fa080digit() .and. faDigiChq()) Valid fa080Cheq()
nUltLin += 12

@ nUltLin,005 SAY OemToAnsi(STR0025)		SIZE 38,07 OF oPanel2 PIXEL //"Data Pagto."
@ nUltLin,065 MSGET oBaixa VAR dBaixa 		SIZE 65,08 OF oPanel2 PIXEL HASBUTTON ON CHANGE (lDtPag:=.T.,f080TotMes(dBaixa,.T.,,.F.,dOldData # dBaixa),If(lIRPFBaixa.and.FunName()<>"FINA415", Fa080Irrf(nPgtoIRRF,dBaixa,lCarret,.T.,nOldIrrf) , .T.)) Valid Iif((dOldData # dBaixa) .OR. (dBaixa < SE2->E2_EMISSAO), fa080Data(@nTxMoeda), .T.) .and. Iif(SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dBaixa), .T.);
														When !(AllTrim(SE2->E2_ORIGEM)=='FINI055') 
dOldData := dBaixa
dDebito  := dBaixa
nUltLin += 12    
nOldIrrf := nIrrf

@ nUltLin,005 SAY OemToAnsi(STR0026)		SIZE 39,07 OF oPanel2 PIXEL //"Hist.Baixa"
@ nUltLin,065 MSGET oHist070 VAR cHist070	SIZE 65,08 OF oPanel2 PIXEL Picture "@!" VALID CheckSX3("E5_HISTOR") When VisualSX3("E5_HISTOR")
nUltLin += 12

@ nUltLin,005 SAY OemToAnsi(STR0028)	 	SIZE 36,07 OF oPanel2 PIXEL //"Beneficiário"
@ nUltLin,065 MSGET oBenef VAR cBenef		SIZE 65,08 OF oPanel2 PIXEL Picture "@!" When cNivel >= NivelSx3("E5_BENEF") .and. fa080digit()
nUltLin += 12

If cPaisLoc == "BRA" 
	@ nUltLin,005 SAY STR0129 	SIZE 53, 07 OF oPanel2 PIXEL //"Taxa contratada"
	@ nUltLin,065 MSGET nTxMoeda  SIZE 65,08 OF oPanel2 PIXEL Hasbutton Picture PesqPict( "SM2","M2_MOEDA"+AllTrim(Str(SE2->E2_MOEDA))) ;
				 When SE2->E2_MOEDA > 1	 Valid Fa080Val(0,nTxMoeda,.T.)
	nUltLin += 12
Endif	                   
If lSpbInUse
	@ nUltLin,005 SAY STR0128 SIZE 32, 07 OF oPanel2 PIXEL //"Modalidade SPB"
	@ nUltLin,065 COMBOBOX oModSPB VAR cModSpb ITEMS aModalSpb SIZE 65,47 OF oPanel2 PIXEL ;
					  When MovBcoBx(cMotBx,.T.) 
	nUltLin+= 12	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Somente exibe a opcao Rateio Multiplas Naturezas se parametro MV_MULNATP = .T.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ       
If MV_MULNATP
	@ nUltLin,005 SAY STR0132 SIZE 100, 07 OF oPanel2 PIXEL   //"Rateio Mult.Naturezas"
	@ nUltLin,065 CHECKBOX oMultNat VAR lMultNat PROMPT "" SIZE 11,11 OF oPanel2 PIXEL
	nUltLin += 12
Endif


nUltLin := 10

@ nUltLin,144 SAY oTexto1 VAR cTexto1 		SIZE 53,07 OF oPanel2 PIXEL //"Valor Original"
@ nUltLin,204 MSGET oValor VAR nValor		SIZE 65,08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VALOR")
nUltLin+= 12	

@ nUltLin,144 SAY OemToAnsi(STR0035)		SIZE 53,07 OF oPanel2 PIXEL //"- Abatimentos"
@ nUltLin,204 MSGET oTotAbat VAR nTotAbat	SIZE 65,08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VALOR")
nUltLin+= 12	

@ nUltLin,144 SAY OemToAnsi(STR0036)  		SIZE 53,07 OF oPanel2 PIXEL //"- Pagtos.Parciais"
@ nUltLin,204 MSGET oParciais VAR nParciais	SIZE 65,08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE2","E2_VALOR")
nUltLin+= 12	

@ nUltLin,144 SAY OemToAnsi(STR0121)	   SIZE 53,07 OF oPanel2 PIXEL //"- Decrescimo"
@ nUltLin,204 MSGET oDecresc VAR nDecresc	SIZE 65,08 OF oPanel2 PIXEL Picture PesqPict("SE2","E2_SDDECRE") When .f. //Valid Fa080Val(nDecresc) .and. nDecresc<=Moeda(SE2->E2_SALDO,1,"P",dBaixa)
nUltLin+= 12	

@ nUltLin,144 SAY OemToAnsi(STR0120)  		SIZE 53,07 OF oPanel2 PIXEL //"+ Acrescimo"
@ nUltLin,204 MSGET oAcresc VAR nAcrescF 	SIZE 65,08 OF oPanel2 PIXEL Picture PesqPict("SE2","E2_SDACRES") When .f. //Valid Fa080Val(nAcresc)
nUltLin+= 12	

@ nUltLin,144 SAY OemToAnsi(STR0037)	   SIZE 53,07 OF oPanel2 PIXEL //"- Descontos"
@ nUltLin,204 MSGET oDescont VAR nDescont	SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_DESCONT") Valid Iif(nOldDescont # nDescont, (Fa080Val(nDescont,nTxMoeda,.T.),nOldDescont := nDescont), .T.);
																									When !(AllTrim(SE2->E2_ORIGEM)=='FINI055') 
oDescont:SetEnable( lAcessDes )
nUltLin+= 12	
                   
@ nUltLin,144 SAY OemToAnsi(STR0038)		SIZE 53,07 OF oPanel2 PIXEL //"+ Multa"
@ nUltLin,204 MSGET oMulta VAR nMulta 		SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_MULTA") Valid Iif(nOldMulta # nMulta, (Fa080Val(nMulta,nTxMoeda,.T.),nOldMulta := nMulta), .T.);
																									When !(AllTrim(SE2->E2_ORIGEM)=='FINI055')
oMulta:SetEnable( lAcessMul )
nUltLin+= 12	

@ nUltLin,144 SAY OemToAnsi(STR0039)  		SIZE 53,7 OF oPanel2 PIXEL //"+ Tx.Permanenc."
@ nUltLin,204 MSGET oJuros VAR nJuros 		SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_JUROS") Valid Iif(nOldJuros # nJuros, (Fa080Val(nJuros,nTxMoeda,.T.),nOldJuros := nJuros), .T.);
																								When !(AllTrim(SE2->E2_ORIGEM)=='FINI055')
oJuros:SetEnable( lAcessJur)                                                      
nUltLin+= 12	

nLinha := nUltLin

//Get do ISS na baixa
If cPaisLoc == "BRA"

	//ISS
	@ nLinha, 144 SAY "- Iss"	SIZE 53,07 OF oPanel2 PIXEL
	@ nLinha, 204 MSGET oIss VAR nIss	SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ")  ;
	Valid ( Iif(nOldIss # nIss, (Fa080Val(nIss,,,.T.),nOldIss := nIss), .T.)) ;
	WHEN (lCalcIssBx  .and. nIss > 0 ) .and.  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
	nLinha +=12

	If !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //PA de Inss Baixa Empresa Publica
		@ nLinha,144 SAY "- Inss"	SIZE 53,07 OF oPanel2 PIXEL
		@ nLinha,204 MSGET oInss VAR nInss	SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALLIQ")  ;
				 Valid ( Iif(nOldInss # nInss, Fa080Val(nInss,,,.T.), .T.));
		WHEN (lInssBx .And. nInss > 0 ) .and.  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
		nLinha +=12
	Endif
	
	//IRRF
	@ nLinha,144 SAY "- Irrf"	SIZE 53,07 OF oPanel2 PIXEL
	@ nLinha,204 MSGET oIrrf VAR nIrrf	SIZE 65,08 OF oPanel2 When lIRPFBaixa PIXEL HASBUTTON  Picture PesqPict("SE2","E2_IRRF")  ;
	Valid ( Iif(nOldIRRF # nIrrf, Fa080Val(nIrrf,,,.T.), .T.)) WHEN lIRPFBaixa .and.  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
	nLinha +=12
                                                               
	//PCC
	If lPccBaixa 

		@ nLinha,144 SAY "- Pis"	SIZE 53,07 OF oPanel2 PIXEL
		@ nLinha,204 MSGET oPis VAR nPis	SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_PIS")  ;
		Valid ( Iif(nOldPIS # nPis, Fa080Val(nPis,,,.T.), .T.)) When  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
		oPis:SetEnable( lAcessImp )
		nOldPIS := nPis
		nLinha +=12
	
		@ nLinha,144 SAY "- Cofins" 	SIZE 53,07 OF oPanel2 PIXEL
		@ nLinha,204 MSGET oCofins VAR nCofins SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_COFINS") ;
		Valid ( Iif(nOldCofins # nCofins, Fa080Val(nCofins,,,.T.), .T.)) when  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
		oCofins:SetEnable( lAcessImp )
		nOldCofins := nCofins
		nLinha +=12
	
		@ nLinha,144 SAY "- Csll"	SIZE 53,07 OF oPanel2 PIXEL
		@ nLinha,204 MSGET oCsll VAR nCsll	SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_CSLL") ;
		Valid ( Iif(nOldCSLL # nCsll, Fa080Val(nCsll,,,.T.), .T.)) when  !(ALLTRIM(SE2->E2_ORIGEM) =="FINI055") 
		oCsll:SetEnable( lAcessImp )
		nOldCSLL := nCsll 
		nLinha +=12                       
	EndIf
Endif

nValTot	     := SE2->E2_VLCRUZ
nValEstrang  := SE2->E2_SALDO-nTotAbat-SE2->E2_SDACRES+SE2->E2_SDDECRE
nValOrig     := SE2->E2_SALDO-nTotAbat
nEstOriginal := nValEstrang-(xMoeda(nJuros+nMulta-nDescont,nMoedaBco,SE2->E2_MOEDA,,3,,nTxMoeda))
nValMoeda   := Round(Noround(xMoeda(nValOrig,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
nValMoeda1  := Round(NoRound(xMoeda(SE2->E2_VALOR-nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
nValPgto    := nValMoeda+nMulta+nJuros-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
IF (nMulta+nJuros+nDescont+nAcresc+nDecresc+nPis+nCoFins+nCsll) > 0 .or. Round(nValEstrang - xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,3,,nTxMoeda),2 ) > 0.01
	nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
EndIF
nValLiq	    := nValPgto-nMulta-nJuros+nDescont-nAcresc+nDecresc+nPis+nCoFins+nCsll-nIrrf-nIss+nInss
FA080CORR(nEstOriginal,nTxMoeda)

@ nLinha,144 SAY OemToAnsi(STR0041)	 	SIZE 53,07 OF oPanel2 PIXEL //"= Valor Pago"
@ nLinha,204 MSGET oValPgto VAR nValPgto	SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALOR")  ;
	Valid ( oValPgto:Refresh(),;
	FA080REFRE(1),;
	Fa080ValVR(nTxMoeda,nTolerCp,,lIRPFBaixa,,lBaixou))
nLinha += 12	

cTexto2 	:= OemToAnsi(STR0042) + SubStr(GetMV("MV_SIMB"+cMoeda),1,3) //"Valor "
@ nLinha,144 SAY oTexto2 VAR cTexto2 SIZE 53,07 OF oPanel2 PIXEL //"Valor "
@ nLinha,204 MSGET oVlEstrang VAR nValEstrang		SIZE 65,08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE2","E2_VALOR")  ;
				When SE2->E2_MOEDA > 1 Valid FA080Estrang(nTxMoeda,nTolerCP) .and.  FA080REFRE() .And. Fa080ValEstrang(	nValEstrang,@nTxMoeda,@nValPgto,dBaixa,oValPgto,,;
																											nJuros,nMulta,nDescont,nOtrga,nImpSubst,nEstOriginal)
nLinha += 12	

@ nLinha, 144 SAY OemToAnsi(STR0040) 		SIZE 53,07 OF oPanel2 PIXEL //"+ Corr.Monet ria"
@ nLinha, 204 MSGET oCM VAR nCM				SIZE 65,08 OF oPanel2 PIXEL Hasbutton Picture PesqPict("SE2","E2_CORREC") ;
	When SE2->E2_MOEDA > 1 .and. (IIf(GetMv("MV_CALCCM") == "S",.T.,.F.))
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Atualiza o valor caso seja necessario calcular juros no titulo          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
nValMax := SE2->E2_SALDO		
fa080Data()

If lPanelFin  //Chamado pelo Painel Financeiro					
	ACTIVATE MSDIALOG oDlgLote  CENTERED ON INIT FaMyBar(oDlgLote,{||nOpca := 1,;
																Fa080But(nOpca,lMovBco,@lBaixou,@cTitulo,@oTitulo,;
																@cParcela,@oParcela,@cNomeFor,@oNomeFor,;
																@cBanco,@oBanco,@cAgencia,@oAgencia,@cConta,@oConta,;
																@oBaixa,@oBenef,@cHist070,@oHist070,@cMotBx,@oMotBx,;
																@aDescMotBx,@nValor,;
																@oValor,@nTotAbat,@oTotAbat,@nParciais,@oParciais,@oDescont,;
																@oMulta,@oJuros,@oValPgto,@oVlEstrang,@oCM,@oDlgLote,cMarca,;
																@nTotal, @nHdlPrv, @lHdlPrv, @lPadraoBx,@cArquivo,@nValLiq,@cPadrao,;
																@cHist,@oHist,@oAcresc,@oDecresc,@nAcrescF,@nDecrescF,;
																aModalSpb,@oModSpb,lSpbInUse,nTxMoeda,@oMultNat,@lMultNat,@nTotLtEZ,nTolerCp,aMotBx,;
																@nPis,@nCoFins,@nCsll,@oPis,@oCoFins,@oCsll,lPccBaixa,@nOldValPgto,@nIrrf,@oIrrf,@nIss,;
																@oIss,@cTipo,@oTipo,@nBaseIrpf, @dDataCan,@nInss,@oInss)},;
																{||nOpca := 0,;
																Fa080But(nOpca,lMovBco,@lBaixou,@cTitulo,@oTitulo,;
																@cParcela,@oParcela,@cNomeFor,@oNomeFor,;
																@cBanco,@oBanco,@cAgencia,@oAgencia,@cConta,@oConta,;
																@oBaixa,@oBenef,@cHist070,@oHist070,@cMotBx,@oMotBx,;
																@aDescMotBx,@nValor,;
																@oValor,@nTotAbat,@oTotAbat,@nParciais,@oParciais,@oDescont,;
																@oMulta,@oJuros,@oValPgto,@oVlEstrang,@oCM,@oDlgLote,cMarca,;
																@nTotal, @nHdlPrv, @lHdlPrv, @lPadraoBx,@cArquivo,@nValLiq,@cPadrao,;
																@cHist,@oHist,@oAcresc,@oDecresc,@nAcrescF,@nDecrescF,;
																aModalSpb,@oModSpb,lSpbInUse,nTxMoeda,@oMultNat,@lMultNat,@nTotLtEZ,nTolerCp,aMotBx,;
																@nPis,@nCoFins,@nCsll,@oPis,@oCoFins,@oCsll,lPccBaixa,@nOldValPgto,@nIrrf,@oIrrf,@nIss,;
																@oIss,@cTipo,@oTipo,@nBaseIrpf, @dDataCan,@nInss,@oInss)})


Else		
	ACTIVATE MSDIALOG oDlgLote ON INIT EnchoiceBar(oDlgLote,{||nOpca := 1,;
																Fa080But(nOpca,lMovBco,@lBaixou,@cTitulo,@oTitulo,;
																@cParcela,@oParcela,@cNomeFor,@oNomeFor,;
																@cBanco,@oBanco,@cAgencia,@oAgencia,@cConta,@oConta,;
																@oBaixa,@oBenef,@cHist070,@oHist070,@cMotBx,@oMotBx,;
																@aDescMotBx,@nValor,;
																@oValor,@nTotAbat,@oTotAbat,@nParciais,@oParciais,@oDescont,;
																@oMulta,@oJuros,@oValPgto,@oVlEstrang,@oCM,@oDlgLote,cMarca,;
																@nTotal, @nHdlPrv, @lHdlPrv, @lPadraoBx,@cArquivo,@nValLiq,@cPadrao,;
																@cHist,@oHist,@oAcresc,@oDecresc,@nAcrescF,@nDecrescF,;
																aModalSpb,@oModSpb,lSpbInUse,nTxMoeda,@oMultNat,@lMultNat,@nTotLtEZ,nTolerCp,aMotBx,;
																@nPis,@nCoFins,@nCsll,@oPis,@oCoFins,@oCsll,lPccBaixa,@nOldValPgto,@nIrrf,@oIrrf,@nIss,;
																@oIss,@cTipo,@oTipo,@nBaseIrpf, @dDataCan,@nInss,@oInss)},;
																{||nOpca := 0,;
																Fa080But(nOpca,lMovBco,@lBaixou,@cTitulo,@oTitulo,;
																@cParcela,@oParcela,@cNomeFor,@oNomeFor,;
																@cBanco,@oBanco,@cAgencia,@oAgencia,@cConta,@oConta,;
																@oBaixa,@oBenef,@cHist070,@oHist070,@cMotBx,@oMotBx,;
																@aDescMotBx,@nValor,;
																@oValor,@nTotAbat,@oTotAbat,@nParciais,@oParciais,@oDescont,;
																@oMulta,@oJuros,@oValPgto,@oVlEstrang,@oCM,@oDlgLote,cMarca,;
																@nTotal, @nHdlPrv, @lHdlPrv, @lPadraoBx,@cArquivo,@nValLiq,@cPadrao,;
																@cHist,@oHist,@oAcresc,@oDecresc,@nAcrescF,@nDecrescF,;
																aModalSpb,@oModSpb,lSpbInUse,nTxMoeda,@oMultNat,@lMultNat,@nTotLtEZ,nTolerCp,aMotBx,;
																@nPis,@nCoFins,@nCsll,@oPis,@oCoFins,@oCsll,lPccBaixa,@nOldValPgto,@nIrrf,@oIrrf,@nIss,;
																@oIss,@cTipo,@oTipo,@nBaseIrpf, @dDataCan,@nInss,@oInss)}) CENTERED
Endif

Return lBaixou

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fA080OK   ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se dados digitados esta OK                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA080ok()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa080OK(cBanco,cAgencia,cConta,nValPgto,dBaixa,nJuros,nCM,nMulta,;
	nDescont,nTotAbat,lMovBco,nValliq,aDescMotBx,lSpbinUse,nTxMoeda,nTolerCp,;
	nPis,nCoFins,nCsll,nIrrf,nIss,nInss)

Local nOrdSEF := SEF->(IndexOrd())
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se valor da baixa ‚ maior que o valor m ximo a receber       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF Str(nValPgto,17,2) > Str((xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda)+nJuros+nMulta-nDescont-nTotAbat+nAcresc-nDecresc+nTolerCp-nPis-nCoFins-nCsll-nIrrf-nIss-nInss),17,2)
	Help(" ",1,"ValorMaior")
	If ( SE2->E2_MOEDA == 1 )
		Return .F.
	EndIf
	//    Avisa o usu rio, por‚m deixa o usuario efetuar a baixa
	//    pois ocorre de o cliente receber o mesmo numero de US$
	//    com a cota‡„o acima a data cota‡„o di ria
Endif

dbSelectArea("SE2")
If Empty(cMotBx)
	cMotBx := aDescMotBx[1]  //NORMAL
Endif
IF Empty(dBaixa) .or. (nValPgto < 0 ) .or. Empty(cMotBx)
	Help(" ",1,"FA070INV")
	DbSelectArea("SE2")
	Return .F.
EndIF

IF (nTotAbat = 0 .and. nDescont = 0 .and. nDecresc = 0 .and. nPis = 0 .and. ;
	nCofins = 0 .and. nCsll = 0 .and. nIrrf = 0 .and. nIss = 0.and. nValPgto = 0) .or. ;
	(nValPgto=0.and.(nTotAbat+nDescont+nDecresc+nPis+nCofins+nCsll+nIrrf+nIss+nInss)!=xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,nMoedaBco,dBaixa,,nTxMoeda))
	Help(" ",1,"FA070INV")
	Return .F.
EndIF

*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Caso motivo seja VENDOR, dever   ser contabilizado na baixa. 			   ³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF SE2->E2_IMPCHEQ != "S"
	IF ((MovBcoBx(cMotBx, .T.) .and. (Empty(dBaixa) .Or. Empty(cBanco) .Or. Empty(cConta))) .Or. ;
			( nValPgto < 0 ))
		Help(" ",1,"FA080VAZ")
		DbSelectArea ("SE2")
		Return .F.
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se cheque existe e nÆo foi gerado por rotina cheques s/Titulo   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF !Empty(cCheque) .and. Substr(cCheque,1,1) != "*" .and. !lChqPre .and. SE2->E2_IMPCHEQ != "S"
	nOrdSEF := SEF->(IndexOrd())
	SEF->(dbSetOrder(1))
	If SEF->(dbSeek(xFilial("SEF")+cBanco+cAgencia+cConta+cCheque))
		Help(" ",1,"CHEQEXIST")
		dbSelectArea("SE2")
		Return .F.
	Endif
	SEF->(dbSetOrder(nOrdSEF))	
Endif
If SE5->(FieldPos("E5_VLACRES")) == 0  .and. SE5->(FieldPos("E5_VLDECRE")) == 0
	IF nValPgto < (nMulta+nJuros+nAcresc)
		Help(" ",1,"FA070INV")
		DbSelectArea("SE2")
		Return .F.
	Endif
EndIf

If TrazCodMot(cMotBx) == "VEN"
	IF (nValPgto-nAcresc+nDecresc) != nValLiq 
		Help(" ",1,"FA080BXPARC")
		dbSelectArea("SE2")
		Return .F.
	// Verifica os dados preenchidos para geracao do titulo de vendor
	ElseIf !FA080VerVd()	
		dbSelectArea("SE2")
		Return .F.
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se modalidade do SPB é valida.								 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSpbInUse
	cModSpb := Substr(cModSpb,1,1)
	IF !(SpbTipo("SE2",cModSpb,SE2->E2_TIPO))
		Return .f.
	Endif
Endif

if lPrjCni          
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se natureza tem mov bancario e vice versa de acordo com o motivo da baixa ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !FA080VlNat(cMotBx)
		Return .f.
	Endif
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA080But  ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Recarrega Variaveis                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Fa080But()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa080But(nOpca,lMovBco,lBaixou,cTitulo,oTitulo,;
	cParcela,oParcela,cNomeFor,oNomeFor,;
	cBanco,oBanco,cAgencia,oAgencia,cConta,oConta,;
	oBaixa,oBenef,cHist070,oHist070,cMotBx,oMotBx,aDescMotBx,nValor,;
	oValor,nTotAbat,oTotAbat,nParciais,oParciais,oDescont,;
	oMulta,oJuros,oValPgto,oVlEstrang,oCM,oDlgLote,cMarca,;
	nTotal, nHdlPrv, lHdlPrv, lPadraoBx,cArquivo,nValLiq,cPadrao,;
	cHist,oHist,oAcresc,oDecresc,nAcrescF,nDecrescF,;
	aModalSpb,oModSpb,lSpbInUse,nTxMoeda,oMultNat,lMultNat,nTotLtEZ,nTolerCp,aMotBx,;
	nPis,nCoFins,nCsll,oPis,oCoFins,oCsll,lPccBaixa,nOldValPgto,nIrrf,oIrrf,nIss,;
	oIss,cTipo,oTipo,nBaseIrpf, dDataCan,nInss,oInss)

Local nSalvRec
LOCAL lPadraoVd
LOCAL cContabiliza := GETMV("MV_CTBAIXA")
LOCAL lContabiliza
Local cLanca	:= Iif(mv_par03==1,"S","N")
Local lFa080tit := Existblock("FA080TIT")
LOCAL lRet:=.T.
Local nTamTitOri := TamParcela("E2_PARCELA",19,20,21)
Local lOk := .F. //Controla se foi confirmada a distribuicao 
Local aColsSEV := {}
Local lContabMnat
Local nOldVlPis := 0
Local nOldVlCof := 0
Local nOldVlCsl := 0
Local nOldVlIrf := 0
Local lIRPFBaixa := IIf(	!Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
		              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;				 
								 	!Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. ;
								 	!Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
									!Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. ;
									!Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
									!SE2->E2_TIPO $ MVPAGANT
						 
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" )
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")

Local nI
Local aCopiaDesc
Local aGrvLctPco := {	{"000005","03","FINA080"}, ;
						{"000005","04","FINA080"}  }
Local aFlagCTB := {}
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/) 

Local nCentMd1	:= MsDecimais(1)
Local aAreaSA2  := {}
Local lFinVDoc	:= IIF(GetNewPar("MV_FINVDOC","2")=="1",.T.,.F.)		//Controle de validacao de documentos obrigatorios
Local lDtBaixa	:= .F.

Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Inss Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )                
Local nLimInss  := GetMv("MV_LIMINSS",.F.,0)
Local lAcmPJ 	 := SuperGetMv("MV_INSACPJ",.T.,"2") == "1"  //1 = Acumula    2= Não acumula
Local aAreaSED	:=	SED->(GetArea())
Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0) 
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 		:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao. 
Local aPCC       := {} 
Local aValImp    := {}
Local aBckImpEms := {}
Local lOldPCC := .T.
Local lVlrAcImp	:= FindFunction("VlrAcImp")

DEFAULT nTxMoeda := 0

#IFDEF TOP 
	lOldPCC := .F.
#ENDIF	
If nOpca == 1
	
	#IFDEF TOP
	If lBxLote .And. (nDescont+nMulta+nJuros > 0 .and. SE2->E2_IMPCHEQ == "S")
		If !Empty(AllTrim(cCheque))
			If !(Round(nValPgto,2) == Round(ValCheq(),2))
				Help(" ",1,"JACHQSTIT")
				nValPgto 	+= nDescont - (nJuros + nMulta) 
				nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1) 
				nDescont	:= 0
				nMulta		:= 0
				nJuros		:= 0
				lBaixou := .F.
				Return lBaixou
			Endif
		Endif
	EndIf
	#ENDIF
		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada - para confirmacao da baixa			   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lFa080Tit
		lRet	:= ExecBlock("FA080TIT",.F.,.F.)
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-Ä¿
	//³ Conforme situacao do parametro abaixo, integra com o SIGAGSP ³
	//³             MV_SIGAGSP - 0-Nao / 1-Integra                   ³                
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÙ
	If lRet .And. GetNewPar("MV_SIGAGSP","0") == "1" 
		lRet := GSPF050()
	EndIf
	
	If !lRet
		Return lRet
	EndIf	
	If MovBcoBx(cMotBx) .and. !CarregaSa6(cBanco,cAgencia,cConta,.T.,,.T.)
		Return .F.
	EndIf
	//Verifica se motivo de baixa para titulo cancelado possui movimentacao financeira
	If SE2->(FieldPos( "E2_DATACAN" )) > 0
		If !FA080VlCan(SE2->E2_DATACAN, cMotBx)
			Return .F.
		EndIf			               
	EndIf

	//Verifica se motivo de baixa para titulo cancelado possui movimentacao financeira
	If SE2->( FieldPos( "E2_DATACAN" ) ) > 0 .AND. !FA080VlCan(SE2->E2_DATACAN, cMotBx)
		Return .F.
	EndIf

	If !( FindFunction( "FXVldBxBco" ) .AND. FXVldBxBco( cBanco, cAgencia, cConta, SE2->E2_NATUREZ, SE2->E2_MOEDA ) )	
		Return .F.
	EndIf


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se data do movimento ‚ menor que data limite de     ³
	//³ movimentacao no financeiro                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SuperGetMv("MV_BXDTFIN",,"1") == "2" .and.!DtMovFin()
		Return
	Endif
	
	
	If !Fa080OK(cBanco,cAgencia,cConta,nValPgto,dBaixa,nJuros,;
			nCM,nMulta,nDescont,nTotAbat,lMovBco,nValLiq,aDescMotBx,lSpbInUse,nTxMoeda,nTolerCp,nPis,nCoFins,nCsll,nIrrf,nIss,nInss)
		Return .F.
	EndIf			
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso esteja ligado o controle de solicitacao de notas de credito e exista alguma ³
	//³ pendencia para este titulo                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc <> "BRA"
		SCU->(DbSetOrder(2))
	Endif	
	If cPaisloc <> "BRA" .And. SuperGetMv('MV_SOLNCP') .And. SE2->E2_TIPO == MVNOTAFIS ;
			.And. SCU->(MsSeek(xFilial()+SE2->E2_FORNECE+SE2->E2_LOJA+SE2->E2_NUM+SE2->E2_PREFIXO)).And. Empty(SCU->CU_NCRED)
		HELP(" ",1,"SOLNCPAB")
		Return .F.
	Endif  

	nValPadrao := nValPgto-(nJuros+Iif(SE2->E2_MOEDA<=1,nCM,0)+nMulta-nDescont-nTotAbat+nAcresc-nDecresc-nPis-nCoFins-nCsll-nInss)
	
	/*
	 * Verifica se já possui data de baixa, indicando que ocorreram baixas no título anteriormente
	 */
	If EMPTY(SE2->E2_BAIXA)
		lDtBaixa := .F.
	Else
		lDtBaixa := .T.
	EndIf
	If !lIRPFBaixa
		nValPadrao -= nIrrf 
	EndIf
	
	If !lCalcIssBx
		nValPadrao -= nIss
	EndIf
	
	If Empty( cMotBx )
		cMotBx := aDescMotBx[1]  //NORMAL
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Identifica se contab. deve ocorrer na baixa ou gera‡„o de cheques e se³
	//³ o tipo do titulo for PA e existir cheque deve ser contabilizado  	  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SEF")
	dbSetOrder(3)
	If SE2->E2_TIPO $ MVPAGANT .and. SEF->(dbseek(xFilial("SEF")+SE2->E2_PREFIXO+SE2->E2_NUM+;
			SE2->E2_PARCELA+SE2->E2_TIPO))
		lContabiliza := .T.
	Else
		lContabiliza := IIf(cContabiliza = "B" .Or. cContabiliza = "A", .T., .F.)
	EndIf
	SEF->( dbSetOrder(1))
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³ Verifica onde ocorrer  a contabiliza‡„o 										  	³
	*³ Se for informado num. do cheque, deve contabilizar pela baixa			  	³
	*³ Se n„o informou num. do cheque ou num. cheque come‡ar com "*" na gera‡„o³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (!Empty( cCheque ) .and. SubStr( cCheque, 1, 1 ) != "*" .and. SE2->E2_IMPCHEQ != "S") .or. ;
			cContabiliza = "B" .Or. cContabiliza = "A" .or. ;
			cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .or. cBanco$GetMV("MV_CARTEIR")
		lContabiliza := .T.
	Endif
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Caso motivo seja VENDOR, dever   ser contabilizado na baixa. 			   ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If TrazCodMot(cMotBx) $ "VEN/DEB"
		lContabiliza := .T.
	EndIF

	If MovBcoBx(cMotBx, .T.) .and. !ChqMotBx(cMotBx)
		lContabiliza := .T.
	EndIF
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Soma nos totalizadores										  ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTotAGer += nValPgto
	nTotADesc+= nDescont+nDecresc
	nTotAMul += nMulta
	nTotAJur += nJuros+nAcresc
	nTotADesp+=Iif(SE2->E2_MOEDA<=1,nCM,0)
	cPadrao:="530"
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Contabiliza se existir o lan‡amento e:							³
	*³ - a contabiliza‡„o for feita na baixa (parƒmetro mv_ctBaixa) ou  ³
	*³ - se digitou numero de cheque ou se a contabiliza‡„o for on-line ³
	*³ Verifica existencia do lan‡amento padr„o da baixa e/ou do gera‡„o³
	*³ do t¡tulo referente ao Vendor.									³
	*³ Lan‡amento Padr„o referente a baixa   := "530"                   ³
	*³ Lan‡amento Padr„o referente ao Vendor := "518"                   ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lPadraoBx := VerPadrao(cPadrao) .And. lContabiliza
	lPadraoVd := VerPadrao( "518" ) .And. lContabiliza
	VALOR := 0	
	ABATIMENTO := nTotAbat
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicio da prote‡„o via TTS							³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nRegSE2:= SE2->(Recno())

	cNumBor := SE2->E2_NUMBOR
	
	If MV_MULNATP .and. lMultNat
		MultNatB("SE2",.F.,STR(mv_par05,1),@lOk,@aColsSEV,@lMultNat)
	Endif
                      
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000005")

	Begin Transaction
		aAreaSA2 := SA2->(GetArea())
		lBaixou :=	fa080Grv(lPadraoBx,lPadraoVd,,cLanca,,nTxMoeda,,,lMultNat)
		RestArea(aAreaSA2)
		IF lBaixou
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Grava título do IRRF e informações relacionadas ³ 
			//³quando IRPF na Baixa                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lIRPFBaixa
				RestArea(aAreaSA2)
				RecLock("SE2")
				If SE2->(FieldPos("E2_VRETIRF")) > 0 
					SE2->E2_VRETIRF += nIrrf
					If SA2->A2_TIPO == "F" 
						If lDtBaixa
							SE2->E2_IRRF += nIrrf
						Else
							SE2->E2_IRRF := nIrrf
						EndIf
					EndIf
				Endif
				MsUnlock()			
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Caso tenha havido retenção na inclusão do pagamento³
				//³antecipado efetua a exclusão do título de IR (TXA) ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SE2->E2_TIPO $ MVPAGANT .And. SE2->E2_IRRF > 0
					F241DelTxIR("FINA080",SE2->(Recno()),SE2->E2_IRRF)				
				EndIf
			EndIf
			

			/*
			 * Gravação do valor retido de ISS na Baixa
			 */
			If lCalcIssBx .AND. !lISSF631
            	RecLock("SE2")
				If SE2->(FieldPos("E2_VRETISS")) > 0 
					SE2->E2_VRETISS += nIss
				Endif
				SE2->(MsUnlock())                                              
			EndIf
			If lPccBaixa
				nOldVlPis := SE2->E2_PIS
				nOldVlCof := SE2->E2_COFINS
				nOldVlCsl := SE2->E2_CSLL
				nOldVlIrf := SE2->E2_IRRF				
				nOldVlIss := SE2->E2_ISS				
				
				Reclock("SE2")
				SE2->E2_VRETPIS += nPis
				SE2->E2_VRETCOF += nCofins
				SE2->E2_VRETCSL += nCsll
				
				MsUnlock()
			Endif
	
			If lInssBx .And. cPaisLoc = "BRA"	.And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa 										
				If !lInsPub
					SE2->E2_INSS		:=	nInss													
					If ((nInss > 0 .And. !lAcmPJ) .Or. (lAcmPJ)) .And. SA2->A2_TIPO == "J"
						SE2->E2_VRETINS	:= nVretInss
					ElseIf SA2->A2_TIPO == "F"
						SE2->E2_VRETINS:= nVretInss
					Endif
				ElseIf SE2->E2_VRETINS + nVretInss <= SE2->E2_INSS
					SE2->E2_VRETINS	+= nVretInss
				Endif								
			Endif					
			// Verifica se esta utilizando multiplas naturezas
			// Chama rotina de gravacao do SEV e SEZ
			If MV_MULNATP .and. lMultNat .and. lOk
				lContabMNat := lContabiliza .and. mv_par03 == 1

				MultNatC( 	"SE2" /*cAlias*/,;
								@nHdlPrv /*@nHdlPrv*/,;
								@nTotal /*@nTotal*/,;
								@cArquivo /*@cArquivo*/,;
								lContabMNat /*lContabiliza*/,;
								.T. /*lBxLote*/,;
								STR( mv_par05, 1 ) /*cReplica*/,;
								@nTotLtEZ /*nTotLtEZ*/,;
								lOk /*lOk*/,;
								aColsSEV /*aCols*/,;
								lBaixou /*lBaixou*/,;
								aGrvLctPco /*aGrvLctPco*/,;
								lUsaFlag /*lUsaFlag*/,;
								@aFlagCTB /*@aFlagCTB*/	)
				
				lHdlPrv := nHdlPrv > 0
			Endif

			//Reposiciono o arquivo de bancos para a contabilizacao
			SA6->(DbSetOrder(1))
	    	SA6->(dbSeek(xFilial()+cBanco+cAgencia+cConta))

			//Reposiciono o arquivo de fornecedores para a contabilizacao
			SA2->(dbSetOrder(1))
			SA2->(MsSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
			
			IF ( lPadraoBx .or. lPadraoVd ) .and. cLanca == "S" .and. !lHdlPrv
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Inicializa Lancamento Contabil                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nHdlPrv := HeadProva( cLote,;
					                      "FINA080" /*cPrograma*/,;
					                      Substr( cUsuario, 7, 6 ),;
					                      @cArquivo )

				lHdlPrv := .T.
			Endif
			IF lPadraoBx .and. cLanca == "S" .and. !lMultNat
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Prepara Lancamento Contabil                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
						aAdd( aFlagCTB, {"E2_LA", "S", "SE2", SE2->( Recno() ), 0, 0, 0} )
					Endif
					nTotal += DetProva( nHdlPrv,;
					                    cPadrao,;
					                    "FINA080" /*cPrograma*/,;
					                    cLote,;
					                    /*nLinha*/,;
					                    /*lExecuta*/,;
					                    /*cCriterio*/,;
					                    /*lRateio*/,;
					                    /*cChaveBusca*/,;
					                    /*aCT5*/,;
					                    /*lPosiciona*/,;
					                    @aFlagCTB,;
					                    /*aTabRecOri*/,;
					                    /*aDadosProva*/ )
			Endif
			IF lPadraoVd .and. cLanca == "S" .and. TrazCodMot(cMotBx) == "VEN" .and. !lMultNat
				dbSelectArea( "SE2" )
				IF (dbSeek( cFilial +  Left(SE2-> E2_TITORIG,nTamTitOri) ) )
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Prepara Lancamento Contabil                                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
							aAdd( aFlagCTB, {"E2_LA", "S", "SE2", SE2->( Recno() ), 0, 0, 0} )
						Endif
						nTotal += DetProva( nHdlPrv,;
						                    "518" /*cPadrao*/,;
						                    "FINA080" /*cPrograma*/,;
						                    cLote,;
						                    /*nLinha*/,;
						                    /*lExecuta*/,;
						                    /*cCriterio*/,;
						                    /*lRateio*/,;
						                    /*cChaveBusca*/,;
						                    /*aCT5*/,;
						                    /*lPosiciona*/,;
						                    @aFlagCTB,;
						                    /*aTabRecOri*/,;
						                    /*aDadosProva*/ )
				Endif
			Endif
			If lPccBaixa
				Reclock("SE2")
				SE2->E2_PIS := nOldVlPis
				SE2->E2_COFINS := nOldVlCof
				SE2->E2_CSLL := nOldVlCsl
				MsUnlock()
			Endif	
		
			PcoDetLan("000005","01","FINA080")
			
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Final  da protecao via TTS							³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If FindFunction( "GETROTINTEG" ) .and. !lFini055 .and. FindFunction("FwHasEAI") .and. FWHasEAI("FINA080",.T.,,.T.)
			FwIntegDef( 'FINA080' )
		Endif
	End Transaction
	
	//Envio de e-mail pela rotina de checklist de documentos obrigatorios
	IF AliasIndic("FRD") .AND. (SE2->(FieldPos("E2_TEMDOCS")) > 0) .And. FindFunction("CN062ValDocs") .And. lFinVDoc
		CN062ValDocs("04",.F.,.T.)
	EndIf		

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Finaliza a gravacao dos lancamentos do SIGAPCO          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoFinLan("000005")
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pontos de Entrada								    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (ExistTemplate( "FA080PE" ) )
		ExecTemplate("FA080PE",.F.,.F.)
	Endif
	If (ExistBlock( "FA080PE" ) )
		ExecBlock("FA080PE",.F.,.F.)
	Endif

	If FindFunction("NGBAIXASE2") .And. GetNewPar( "MV_NGMNTFI","N" ) == 'S'
		NGBAIXASE2(1)
		
		//--------------------------------------------
		// Função que gera uma apropriação de débito 
		// da multa, (Integração SIGAFIN - SIGAMNT).
		//---------------------------------------------
		If FindFunction( "MNT765CONF" ) //Se for executado a baixa automática de pagaento da multa;
			lPagAutFin := .F. //Variável utilizada em fonte especifico do SIGAMNT;
			MNT765CONF( 3 ) 	//Executa a função que gera APD;
		EndIf
		
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Integracao protheus X tin Baixa por Lote	³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	
	dbSelectArea("SE2")
	dbGoTo(nRegSE2)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Limpa marca para titulo com baixa abortada.                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE2")
	Begin Transaction
		RecLock ("SE2",.F.)
		Replace E2_OK with ""
	End Transaction
Endif

While !Eof()
	If SE2->E2_OK != cMarca
 		If SE2->E2_OK == "xx"
   		dbSKip()
     		nProxRec := Recno()
         dbSkip(-1) 
         RecLock ("SE2",.F.)
         Replace E2_OK with ""
         dbGoto(nProxRec)
		Else
   		dbSKip()
  		Endif
 	Else
   	Exit
  	Endif
EndDo		

If Eof()
//	lVldLote := .T. // Proteção para que ao finalizar o objeto, a rotina não valide novamente o campo CHEQUE, caso esteja em Foco.
	oDlgLote:End()
	Return lBaixou
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona Fornecedor no SA2                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SA2")
SA2->(dbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))

lIRPFBaixa := IIf(	! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
	           IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
						 	!Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. ;
						 	!Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
							!Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. ;
							!Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
							!SE2->E2_TIPO $ MVPAGANT 

lIRProg := IIf(SA2->(FieldPos("A2_IRPROG")) # 0, IIf(!Empty(SA2->A2_IRPROG), SA2->A2_IRPROG, "2"), "2")

dbSelectArea("SE2")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega Variaveis da Baixa                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nSalvRec    := RecNo()
cTitulo		:= SE2->E2_PREFIXO + " " + SE2->E2_NUM+ " " + SE2->E2_PARCELA
cParcela    := SE2->E2_PARCELA
cTipo		:= SE2->E2_TIPO
dEmissao    := SE2->E2_EMISSAO
dVencRea    := SE2->E2_VENCREA
cNomeFor    := SE2->E2_FORNECE + " - " + Subst(SA2->A2_NOME,1,40)
cHist		:= SE2->E2_HIST
dBaixa      := CriaVar("E2_BAIXA")
dDebito		:= dDatabase	

If cPaisLoc == "BRA"
	nTxMoeda	 := If(SE2->E2_MOEDA > 1,If(SE2->E2_TXMOEDA > 0, SE2->E2_TXMOEDA,RecMoeda(dBaixa,SE2->E2_MOEDA)),0)
Endif	
dDtCredito  := dDataBase
cHist070    := Criavar("E5_HISTOR")		//Inicilizador padrao
If Empty(cHist070)
   cHist070 := OemToAnsi(STR0007)+Space(Len(cHist070)-24)  // "Valor recebido s/ T¡tulo"
Endif
nValor	    := SE2->E2_VALOR
nTotAbat    := SumAbatPag(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_FORNECEn,SE2->E2_MOEDA,"S",dBaixa,SE2->E2_LOJA)
dbGoto(nSalvRec)
nParciais   := SE2->E2_VALOR-SE2->E2_SALDO
nDescont    := 0
nMulta      := 0
nJuros      := 0
nAcrescF 	:= SE2->E2_SDACRES
nDecrescF	:= SE2->E2_SDDECRE
nAcresc		:= Round(Noround(xMoeda(SE2->E2_SDACRES,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
nDecresc		:= Round(Noround(xMoeda(SE2->E2_SDDECRE,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)

// Para titulos de vendor antigos
If STR(SE2->E2_VALOR,17,2) == STR(SE2->E2_SALDO,17,2) .and. ;
	 SE2->E2_SDACRES == 0 .and. SE2->E2_ACRESC > 0
	nAcresc	:= Round(Noround(xMoeda(SE2->E2_ACRESC,SE2->E2_MOEDA,nMoedaBcodBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
	nAcrescF := SE2->E2_ACRESC
Endif	
// Ponto de entrada para alterar o valor do acrescimo
If ExistBlock("F080ACRE")
	ExecBlock("F080ACRE",.F.,.F.)
EndIF	

nPis			:= 0
nCofins			:= 0
nCsll			:= 0
nVlRetPis		:= 0
nVlRetCof		:= 0
nVlRetCsl		:= 0
nValPgto		:= 0
nOldJuros		:= 0
nOldMulta		:= 0
nOldDescont		:= 0
nOldValPgto		:= 0
nDiferImp		:= 0
nIrrf			:= 0
nIss			:= 0
nInss			:=	0
lBaixou		:= .F.
nValPgto		:= Round(Noround(xMoeda(SE2->E2_SALDO-nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)+nMulta+nJuros-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
nOldValPgto 	:= nValPgto

//IRRF - BAIXA
nVlRetIrf		:= 0
aDadosIr		:= Array(3)
aFill(aDadosIR,0)

aDadosRef := Array(7)
AFill( aDadosRef, 0 ) 

F080IssBx()

//Calcula Impostos pela Baixa                     
If lIRPFBaixa
	
	//Novo calculo de IRRF pela Baixa
	If lNewIrBx
		//Calculo para o  IRRF 
		//o primeiro parametro, neste caso vai zerado pois o calculo 
		//eh feito com base no saldo do titulo 
		nIRRF := FCalcIRBx(0,SA2->A2_TIPO,dBaixa,dDebito)   
		nOldValPgto 	:= nValPgto
	Else

		If SE2->E2_PRETIRF = '1' 
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Busca base de cálculo para o  IRPF ³
			//³caso não tenha sido calculada      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ					
			If SA2->A2_TIPO == "J"
				nBaseIRPF := nValPgto + Iif(!lInssBx,SE2->E2_INSS,0) + Iif(!lCalcIssBx, SE2->E2_ISS, 0)
				aCalcIRPF := F241BsIRPF(SE2->(Recno()),"SE2",nBaseIRPF,Empty(SE2->E2_NUMBOR))  					
			Else
				aCalcIRPF := F241BsIRPF(SE2->(Recno()),"SE2",nValPgto,Empty(SE2->E2_NUMBOR))  					
			EndIf
					
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Calcula IRPF e deduz os valores retidos anteriormente³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SA2->A2_TIPO == "F"
				nIRRF := Fa050TabIR(aCalcIRPF[1]) - aCalcIRPF[2]
				nIRRF := IIF(nIRRF <= GetMv("MV_VLRETIR",,0),0,nIRRF)
			Else
				nIRRF := FClcIRPJ(aCalcIRPF[1],.T.,.T.)// - aCalcIRPF[2]
			EndIf
		Endif
	Endif
Endif

If Type("lEmpPub") <> "L"
	lEmpPub	:= IIf(lIsEmpPub, IsEmpPub(), .F.)
EndIf

If Type("nVlMPub") <> "N"
	nVlMPub	:= 	SuperGetMv("MV_VLMPUB" ,.T.,10)
EndIf

If lPccBaixa
	fA080Data()
	If (dBaixa < dLastPcc .Or. lEmpPub .or. lOldPCC)
		f080TotMes(dBaixa,.T.,,.F.)
	Else
		
		If !SE2->E2_TIPO $ MVPAGANT+"/"+MVPROVIS .And. VLDBOR(SE2->E2_NUMBOR,"P")
			nSalImp := salRefPag(SA2->A2_COD+SA2->A2_LOJA)
			nSalImp += IIF(lJurMulDes,(nMulta+nJuros-nDescont+nAcresc-nDecresc),Iif(lVlrAcImp, VlrAcImp(), 0))

			aValImp    := GetOutImp("P",nIss,nInss,nIrrf)
			aBckImpEms := { nIss , nInss , nIrrf }
			nIss       := aValImp[1]
			nInss      := aValImp[2]
			nIrrf      := aValImp[3]

			aPcc    := newMinPcc(dDataBase, nSalImp,SED->ED_CODIGO,"P",SA2->A2_COD+SA2->A2_LOJA,nIss,nInss,nIRRF)
			nPis    := aPcc[2]
			nCofins := aPcc[3]
			nCsll   := aPcc[4]

			nIss  := aBckImpEms[ 1 ]
			nInss := aBckImpEms[ 2 ]
			nIrrf := aBckImpEms[ 3 ]
			aSize( aBckImpEms , 0 )
			aBckImpEms := Nil
		Else
			nPis    := 0
			nCofins := 0
			nCsll   := 0
		EndIf
	EndIf
Endif

If Type("lAplMinP") <> "L"
	lAplMinP := .F.
	If SA2->( FieldPos( "A2_MINPUB" ) ) > 0 .And. SA2->A2_MINPUB == "2"
		lAplMinP := .T.
	EndIf
EndIf

If lEmpPub .And. lAplMinP .And. lIRPFBaixa .And. (nPis+nCoFins+nCsll+nIrrf+aDadosRet[2]+aDadosRet[3]+aDadosRet[4]+aDadosRet[5]< nVlMPub  .And. ;
	!(aDadosRet[2]+aDadosRet[3]+aDadosRet[4]+aDadosRet[5] == 0 .And. aDadosRet[1] > 0))
	nPis := nCoFins := nCsll := nIrrf := 0 
EndIf

If lInssBx .And. cPaisLoc = "BRA" .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa 		
	aAreaSED := SED->(GetArea()) 
	dbSelectArea("SED")
	SED->(DbSeek(xFilial("SED")+SE2->E2_NATUREZ))
	If SED->ED_CALCINS == "S" .And. SA2->A2_RECINSS == "S" .And. Empty(SE2->E2_NUMBOR) 						
		nOldInss	:=	nInss
		nInss		:=	FCaInssBxCP(nValPgto,lIRPFBaixa,lCalcIssBx,lPCCBaixa)
		nValPgto 	-= nInss
	Endif
	SED->(RestArea(aAreaSED))   
Endif

fa080Val(nValPgto,nTxMoeda)
cMoeda 	   := IIF(Empty(SE2->E2_MOEDA),"1",AllTrim(Str(SE2->E2_MOEDA,2)))
cDescMoeda	:= SubStr(GetMV("MV_SIMB"+cMoeda),1,3)
cTexto1	   := OemToAnsi(STR0084) + SubStr(GetMV("MV_SIMB"+cMoeda),1,3)  //"Valor Original "
cTexto2	 	:= OemToAnsi(STR0042) + SubStr(GetMV("MV_SIMB"+cMoeda),1,3) //"Valor "
If Type("oTexto1")=="O"
	oTexto1:Refresh()
Endif
If Type("oTexto2")=="O"
	oTexto2:Refresh()
Endif
If SE2->E2_IMPCHEQ == "S"  // Cheque s/ Titulo
	cCheque		:= SE2->E2_NUMBCO
Else
	cCheque		:= CRIAVAR("E2_NUMBCO")
Endif
nValTot	    := SE2->E2_VLCRUZ
nValEstrang := nValOrig	  := SE2->E2_SALDO-nTotAbat
nEstOriginal:= nValEstrang-(xMoeda(nJuros+nMulta-nDescont,nMoedaBco,SE2->E2_MOEDA,,3,,nTxMoeda))
nValMoeda   := Round(Noround(xMoeda(nValOrig,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
nValMoeda1  := Round(NoRound(xMoeda(SE2->E2_VALOR-nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
nValPgto    := nValMoeda+nMulta+nJuros-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
nOldValPgto := nValPgto
IF (nMulta+nJuros+nDescont+nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss+nInss) > 0 .or. Round(nValEstrang - xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,3,,nTxMoeda),2 ) > 0.01
   nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
EndIF
FA080Corr(nEstOriginal,nTxMoeda)
nValLiq	    := nValPgto-nMulta-nJuros+nDescont-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss+nInss
cBenef	    := CriaVar("E5_BENEF")
*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Analisa se o titulo foi gerado a partir de um cheque pre datado.		³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lChqPre := .f.
dbSelectArea("SE5")
dbSetOrder(2)
If SE5->(dbSeek( xFilial("SE5") + "CD" + SE2->E2_PREFIXO + ;
		SE2->E2_NUM + SE2->E2_PARCELA + SE2->E2_TIPO + dToS(SE2->E2_EMISSAO )+;
		SE2->E2_FORNECE + SE2->E2_LOJA ))

	lChqPre := .T.
	cBanco   := SE5->E5_BANCO
	cAgencia := SE5->E5_AGENCIA
	cConta   := SE5->E5_CONTA
	cCheque  := SE5->E5_NUMCHEQ
	cBenef   := SE5->E5_BENEF
EndIf

If Empty(cBenef)
	dbSelectArea("SA2")
	SA2->(dbSeek(cFilial+SE2->E2_FORNECE+SE2->E2_LOJA))
	dbSelectArea("SE2")
	cBenef   := SA2->A2_NOME
Endif

lMultNat		:= .F.

IF ExistBlock("F080MNAT")
	lMultNat := ExecBlock("F080MNAT",.f.,.f.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Pesquisa o codigo do motivo da baixa e atribui a descricao do motivo da baixa            ³
//³a variavel cMotBx, pois eh assim que o ComboBox le os motivos da baixa (pela descricao). ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(CriaVar("E5_MOTBX"))
	cMotBx := CriaVar("E5_MOTBX")
Endif         

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorna o Array aDescMotbx contendo apenas a descricao do  ³
//³ motivo das Baixas. 						  				   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCopiaDesc := aDescMotBx
aDescMotbx := {}
For NI := 1 to Len(aMotBx)
	AADD( aDescMotbx,Substr(aMotBx[nI],07,10))
Next

nAscan := Ascan(aMotBx,{|e| AllTrim(Upper(cMotBx))==AllTrim(Upper(Substr(e,7,10)))})
cMotBx := If(Empty(cMotBx) .Or. nAscan = 0,aDescMotBx[1],aDescMotBx[nAscan]) 	//NORMAL
aDescMotBx := aCopiaDesc
Fa080BDev()

oTitulo :Refresh()
oNomeFor:Refresh()
oTipo:Refresh()
oBanco  :Refresh()
oBanco  :SetFocus()
oAgencia:Refresh()
oConta  :Refresh()
oCheque :Refresh()
oBaixa  :Refresh()
oHist070:Refresh()	
oMotBx  :Refresh()
oValor  :Refresh()
oTotAbat:Refresh()
oParciais:Refresh()
oDescont:Refresh()
oMulta  :Refresh()
oJuros  :Refresh()
oValPgto:Refresh()
oBenef  :Refresh()
oHist   :Refresh()
oAcresc :Refresh()
oDecresc:Refresh()
If MV_MULNATP
	oMultNat:Refresh()
Endif

If SE2->E2_MOEDA > 1 .And. Type("oValEstrang") == "O"
   oVlEstrang:Refresh()
   oCM:Refresh()
Endif

If cPaisLoc == "BRA"
	If lIRPFBaixa
		oIrrf:Refresh()
	Endif
	//Tratamento de impostos Pis Cofins e Csll na baixa
	If lPccBaixa
		oPis		:Refresh()
		oCofins	:Refresh()
		oCsll		:Refresh()
	Endif
	If lInssBx .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA")
		oInss		:Refresh()
	Endif
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Pr‚-inicializa a modalidade de SPB                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSpbInUse
	If !Empty(SE2->E2_MODSPB)
		cModSpb := SE2->E2_MODSPB
	Else
	   cModSpb := "1"
	Endif		
	oModSpb:Refresh()
Endif
fa080ChkVdr()

Return lBaixou

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fA080Data³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao utilizada para consistir a Data 			          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA080Data()						                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	     ³ Generico 						                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA080Data(nTxMoeda,lButOk,lHelp)
Local lPrjCni 	:= FindFunction("ValidaCNI") .And. ValidaCNI()
LOCAL lRet			:=	.T.
Local cNomeCpo		:=	'E2_EMISSAO'
Local nJurAuto		:=	0
DEFAULT nTxMoeda	:=	0
DEFAULT lButOk		:= .F.  //Se a chamada da funcao foi feita do botao OK
DEFAULT lHelp		:= .F.

If ExistBlock("F080FILEMI")
	cNomeCpo := ExecBlock("F080FILEMI",.F.,.F.,{})
	If SE2->(FieldPos(cNomeCpo)) ==0
		cNomeCpo := 'E2_EMISSAO'
	EndIf
EndIf
// TRECHO RETIRADO A PEDIDOS DO VP WILSON
/*If !empty(SM0->M0_DTVLD) .and. dBaixa > SM0->M0_DTVLD
	If Type('lF080Auto') == 'U' .OR. !lF080Auto
		Help( " ", 1, "DTINVALSM0",, "",1,0 ) //"Data não pode ser maior do que a data limite autorizada no SIGAMAT utilizado.
	Endif
	lRet := .F.	
Endif*/
IF (dBaixa < SE2->(&cNomeCpo))//.or. dBaixa > dDataBase)
	IF lHelp
		Help( " ", 1, "DATAERRP",, STR0150,1,0 ) //"Data do pagamento não pode ser menor que a data de emissâo do título correspondente"
	Endif
	lRet := .F.
Endif


If (ExistBlock("FA080DT") )
	lRet := ExecBlock( "FA080DT", .F., .F.,dBaixa)
EndIf

//Quando chamado do botao ok, nao efetuar os calculos novamente
If !lButOk .and. lRet
	dbSelectArea("SE2")     
	              
	if lPrjCni
		If FunName() <>"FINA631"
			fa080Juros(nMoedaBco)  
		EndIf
	Else
		fa080Juros(nMoedaBco)  
	EndIf
	//nJuros += SE2->E2_ACRESC
	If cPaisLoc == "BRA"
	   If Type("lIntegracao")<>"U" .and. lIntegracao
  		  If (nT := ascan(aAutoCab,{|x| x[1]='AUTTXMOEDA'}) ) > 0
			 nTxMoeda	:=	aAutoCab[nT,2]	
		  EndIf	         
 		Else		
			nTxMoeda	 := If(SE2->E2_MOEDA > 1,If(SE2->E2_TXMOEDA > 0, SE2->E2_TXMOEDA,RecMoeda(dBaixa,SE2->E2_MOEDA)),0)
 		Endif		
	Endif	  
	If IsInCallStack("FA080TIT")
		If nJuros == 0 .And. (SE2->E2_VALJUR == 0 .Or. SE2->E2_PORCJUR == 0) 
			nJuros := nOldJuros
		EndIf
	EndIf
	fa080Val(1,nTxMoeda,,,.T.)
Endif
dOldData := dBaixa
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Fa080Dbeva³ Autor ³ Wagner Xavier         ³ Data ³ 20/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Trata o dbeval para marcar e desmarcar item		          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Fa080dbeva()						                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080							                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA080Dbeva()
Local lSavTTS
Local lBxTit 	:= .T.
Local lBxTitVL	:= .T.
Local nSaldo 	:= xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,nMoedaBco)

IF nValor <= nTotGer .And. nValor+nSaldo <= nTotGer .And. nQtdtit <= nNroTit
	lSavTTS := __TTSInUse
	__TTSInUse := .f.

	RecLock("SE2",.f.)
	SE2->E2_OK := cMarca
	SE2->(MsUnlock())
	lBxTit := .T.          
	lBxTitVL := .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ PONTO DE ENTRADA F080BXLT                                     ³
	//³ Verifica se titulo pode ser marcado para baixa ou nÆo. Caso	  ³
	//³ tenha sido alterada a marca‡Æo do titulo, ExecBlock dever     ³
	//³ retornar .F., para nÆo haver altera‡Æo dos acumuladores de    ³
	//³ valores e numero de titulos.                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF (ExistBlock("F080BXLT")) .and. !Empty(E2_OK)
		lBxTit := ExecBlock("F080BXLT",.F.,.F.)
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de entrada que permite ao usuário determinar se um    ³
	//³título deve ou não ser selecionado, de acordo com as regras ³
	//³estabelecidas no ponto de entrada.  O PE F080BXLT não       ³
	//³controlava a marcação dos títulos, sendo necessário criar   ³
	//³este novo PE por questão de legado. Retorno .F. impede sel. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (ExistBlock("F080BXVL")) .and. !Empty(E2_OK)
		lBxTitVL := ExecBlock("F080BXVL",.F.,.F.)
		If ValType(lBxTitVL) == "L" .AND. !lBxTitVL
			If SE2->E2_OK == cMarca
				RecLock("SE2",.F.)
				SE2->E2_OK := "  "
				SE2->(MsUnlock())
			Endif    
		Else         
			lBxTitVL := .T.
		Endif
	Endif						
	
	__TTSInUse := lSavTTS
	If lBxTit .AND. lBxTitVL
		nValor+=nSaldo
		nQtdtit++
	Endif
Else
	lSavTTS := __TTSInUse
	__TTSInUse := .f.
	RecLock("SE2",.f.)
	SE2->E2_OK := "  "
	SE2->(MsUnlock())
	__TTSInUse := lSavTTS
EndIF
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080ValVR³ Autor ³ Antonio Maniero Jr.   ³ Data ³ 13/05/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao utilizada para consistir o valor digitado			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080ValVR(Valor) 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/                                               		
Function fa080ValVR(nTxMoeda,nTolerCp,lCalcRet,lIRPFBaixa,lAtOldPgto,lBaixou)
Local nCentMd1	:= MsDecimais(1)
Local lRet
Local lAltValor := STR(nValPgto,17,2) != STR(nOldValPgto,17,2) .or. IsInCallStack('FINA450')
Local lValPgto := SuperGetMv("MV_BP10925",.T.,"1") == "2" //1- Valor bruto da baixa parcial / 2- Valor da baixa parcial menos os impostos
Local nTxMdaOr:=0 
Local nTxCorre := 0
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")  
Local nPgAux	 := 0
Local aImp		 := {nIrrf,nPis,nCofins,nCsll,nIss} 
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )
Local nLimInss 	:= GetMv("MV_LIMINSS",.F.,0)
Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0)
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 		:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao.				 		
				 		
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) .And.	!SE2->E2_TIPO $ MVPAGANT

Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )
Local cNccIr     := SuperGetMv("MV_NCCIR",.F.,"2")				 
Local aPcc       := {}			 
Local aValImp    := {}
Local aBckImpEms := {} 	
Local lResta1 := ExistBlock("RESTAUM")
Local lRestaUM := .T.	
Local lMVBP10925  := SuperGetMv("MV_BP10925",.F., "1") == "2" // Default (Bruto)
Local lJaSubtPCC := .F.
Local lOldPCC := .T. 
Local lMVCNBImpg := GetNewPar("MV_CNBIMPG",.F.)
Local lMVImpAcr	:= SuperGetMV("MV_IMPACR",,"2") == "1"
Local cMVImpDcr	:= SuperGetMV("MV_IMPDCR",,"2")

DEFAULT nTxMoeda := 0
DEFAULT nTolerCp := SuperGetMv("MV_TOLERCP",.F.,0)
DEFAULT lCalcRet := .T.  
DEFAULT lIRPFBaixa := .F.
DEFAULT lAtOldPgto := .F. //atualiza nOldValPgto no final das validações, mas somente se lValPgto = .T.
DEFAULT lBaixou := .F.
lBxLote := IIf(Type("lBxLote")=="U",.F.,lBxLote)   

#IFDEF TOP 
	lOldPCC := .F.
#ENDIF	

If Type("cTpDesc") == "U"
	cTpDesc:="I"
Endif 

If Type("lEmpPub") != "L"
	lEmpPub := lIsEmpPub .And. IsEmpPub()
EndIf

If Type("lAplMinP") != "L"
	lAplMinP := .F.	
	If SA2->( FieldPos( "A2_MINPUB" ) ) > 0 .And. SA2->A2_MINPUB == "2"
		lAplMinP := .T.
	EndIF
EndIF

If lResta1 
	lRestaUM := ExecBlock("RestaUM",.F.,.F.)
Endif

/*
 * Recarrega o valor da variável de valor de pagamento zerado após a baixa do título a pagar
 */
If lBaixou .AND. IsInCallStack("fA080TitW")
	nValPgto := 0
EndIf
If cPaisLoc<>"BRA"  
    nCentMd1:=4
	nTxMoeda:=Iif(nMoedaBco>0,aTxMoedas[nMoedaBco][2],1)
	nTxMdaOr:=aTxMoedas[SE2->E2_MOEDA][2]
EndIf

If lF080Auto
	lRet	:=	.T.
Endif
if !(SE2->(EOF()))
	If !((SE2->E2_IMPCHEQ == "S" .or. lChqPre) .And. Round(nValPgto,2) != Round((nValMoeda+nMulta+nJuros-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss),2))
	
		nValTot		:= SE2->E2_VLCRUZ
		nValEstrang := SE2->E2_SALDO-nTotAbat
		nValOrig	:= nValEstrang
		
		If cPaisLoc <> "BRA"
			nValMoeda1	:= xMoeda( SE2->E2_VALOR - nTotAbat	, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1,, nTxMoeda )
			nValMoeda	:= xMoeda( nValOrig					, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1,, nTxMoeda )
			nAcresc     := xMoeda( SE2->E2_SDACRES			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1,, nTxMoeda )
			nDecresc    := xMoeda( SE2->E2_SDDECRE			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1,, nTxMoeda )
		Else
			nValMoeda1	:= xMoeda( SE2->E2_VALOR - nTotAbat	, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
			nValMoeda	:= xMoeda( nValOrig					, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+2, nTxMoeda )
			nAcresc     := xMoeda( SE2->E2_SDACRES			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
			nDecresc    := xMoeda( SE2->E2_SDDECRE			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
		EndIf	
	
		nValMoeda1	:= Round( NoRound( nValMoeda1, nCentMd1+1 ), nCentMd1 )
		nValMoeda	:= Round( NoRound( nValMoeda , nCentMd1+1 ), nCentMd1 )
		nAcresc     := Round( NoRound( nAcresc   , nCentMd1+1 ), nCentMd1 )
		nDecresc    := Round( NoRound( nDecresc  , nCentMd1+1 ), nCentMd1 )
	    
		// Ponto de entrada para alterar o valor do acrescimo
		If ExistBlock("F080ACRE")
			ExecBlock("F080ACRE",.F.,.F.)
		EndIf	
	                                     
		If cPaisLoc <> "BRA"
			nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,nTxMoeda,nTxMdaOr),nCentMd1+1),nCentMd1)
		ElseIf nMoedaBco == SE2->E2_MOEDA .And. cPaisloc == "BRA" 
			nValPgto :=  Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1,,nTxMoeda),nCentMd1+1),nCentMd1)   
			nValEstrang := nValPgto
		Else	                                
			If SE2->E2_MOEDA > 1 .and. nValPgto == SE2->E2_VLCRUZ
				nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1-2)
            Else                                                                                                                                     
				nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
			Endif 
		EndIf
			
		If lCalcRet .And. lAltValor //Executa o recalculo de retencao
			
			nOldPgto	:=	nValPgto
			
			F080IssBx( @lJaSubtPCC ) 
			lJaSubtPCC := lJaSubtPCC .And. IsInCallStack( "FINA450" )//Verificar somente para compensacao entre carteiras
	
			If lIRPFBaixa .And. !lF080Auto 
	
				//Novo calculo de IRRF pela Baixa
				If lNewIrBx
					//Calculo para o  IRRF 
					//o primeiro parametro, neste caso NAO vai zerado pois o calculo 
					//eh feito com base no valor digitado
						If nValPgto == 0.01 
							nIRRF := FCalcIRBx(SE2->E2_SALDO,SA2->A2_TIPO,dBaixa,dDebito,lAltValor)
						Else
							If !(nValPgto == nMulta) .and. !(nValPgto == nJuros)
								nIRRF := FCalcIRBx(nValPgto,SA2->A2_TIPO,dBaixa,dDebito,lAltValor)
							Endif
						Endif
				Else
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Busca base de cálculo para o  IRPF ³
					//³caso não tenha sido calculada      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ							   
					aCalcIRPF := F241BsIRPF(SE2->(Recno()),"SE2",nValPgto,Empty(SE2->E2_NUMBOR),,,,,.T.,.T.)  					
						
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Calcula IRPF e deduz os valores retidos anteriormente³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SA2->( DbSetOrder(1) )
					SA2->( DbSeek( xFilial("SA2") + SE2->(E2_FORNECE + E2_LOJA) ) )

					If SA2->A2_TIPO == "F"
						nIRRF := Fa050TabIR(aCalcIRPF[1]) - aCalcIRPF[2]
						nIRRF := IIF(nIRRF <= GetMv("MV_VLRETIR",,0),0,nIRRF)
					Else
						nIRRF := FClcIRPJ(aCalcIRPF[1],.T.,.T.)				
					EndIf			
				Endif
				If lPCCBaixa 
					If (dBaixa < dLastPcc .Or. lEmpPub .or. lOldPCC)		
						F080TotMes(dBaixa,.T.,,,,.T.)
					Else

						If !SE2->E2_TIPO $ MVPAGANT+"/"+MVPROVIS .And. VLDBOR(SE2->E2_NUMBOR,"P")
							nSalImp := nValPgto
							If lJurMulDes
								nSalImp += IIF(VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nMulta",nMulta,0)
								nSalImp += IIF(VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nJuros",nJuros,0)
								nSalImp += IIF(VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nDescont",nDescont,0)
							ElseIf lMVImpAcr .Or. cMVImpDcr != '2'
								If VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nValPgto" .AND. !(nValPgto - Iif(lMVImpAcr, nMulta + nJuros, 0) + Iif(cMVImpDcr == '1' .Or. ( cMVImpDcr == '3' .And. cTpDesc == 'I'), nDescont, 0) > SE2->E2_SALDO)
									nSalImp := nSalImp - Iif(lMVImpAcr, nMulta + nJuros, 0) + Iif(cMVImpDcr == '1' .Or. ( cMVImpDcr == '3' .And. cTpDesc == 'I'), nDescont, 0)
								EndIf
							Else
								If VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nValPgto" .AND. !(nValPgto - nMulta - nJuros + nDescont > SE2->E2_SALDO)
									nSalImp := nSalImp - nMulta - nJuros + nDescont
								EndIf
							EndIF

							aValImp    := GetOutImp("P",nIss,nInss,nIrrf)
							aBckImpEms := { nIss , nInss , nIrrf }
							nIss       := aValImp[1]
							nInss      := aValImp[2]
							nIrrf      := aValImp[3]
							
							aPcc    := newMinPcc(dBaixa, nSalImp ,SED->ED_CODIGO,"P",SA2->A2_COD+SA2->A2_LOJA,nIss,nInss,nIRRF)
							nPis    := aPcc[2]
							nCofins := aPcc[3]
							nCsll   := aPcc[4]

							nIss  := aBckImpEms[ 1 ]
							nInss := aBckImpEms[ 2 ]
							nIrrf := aBckImpEms[ 3 ]
							aSize( aBckImpEms , 0 )
							aBckImpEms := Nil
						Else
							nPis    := 0
							nCofins := 0
							nCsll   := 0
						EndIf
					EndIF
				EndIf
			Else			
				If (!lF080Auto .AND.  !FwIsInCallStack('FINA450')) 
					If lPCCBaixa
						If (dBaixa < dLastPcc .Or. lEmpPub .or. lOldPCC)
							F080TotMes(dBaixa,.T.,,!lBxLote)
						Else
							
							If !SE2->E2_TIPO $ MVPAGANT+"/"+MVPROVIS .And. VLDBOR(SE2->E2_NUMBOR,"P")
								nSalImp := nValPgto
								If lJurMulDes
									nSalImp += IIF(VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nMulta",nMulta,0)
									nSalImp += IIF(VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nJuros",nJuros,0)
									nSalImp += IIF(VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nDescont",nDescont,0)
								ElseIf lMVImpAcr .Or. cMVImpDcr != '2'
									If VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nValPgto" .AND. !(nValPgto - Iif(lMVImpAcr, nMulta + nJuros, 0) + Iif(cMVImpDcr == '1' .Or. ( cMVImpDcr == '3' .And. cTpDesc == 'I'), nDescont, 0) > SE2->E2_SALDO)
										nSalImp := nSalImp - Iif(lMVImpAcr, nMulta + nJuros, 0) + Iif(cMVImpDcr == '1' .Or. ( cMVImpDcr == '3' .And. cTpDesc == 'I'), nDescont, 0)
									EndIf
								Else
									If VALTYPE(__ReadVar)=="C" .and. __ReadVar == "nValPgto" .AND. !(nValPgto - nMulta - nJuros + nDescont > SE2->E2_SALDO)
										nSalImp := nSalImp - nMulta - nJuros + nDescont
									EndIf
								EndIF

								aValImp    := GetOutImp("P",nIss,nInss,nIrrf)
								aBckImpEms := { nIss , nInss , nIrrf }
								nIss       := aValImp[1]
								nInss      := aValImp[2]
								nIrrf      := aValImp[3]
								
								aPcc    := newMinPcc(dBaixa, nSalImp ,SED->ED_CODIGO,"P",SA2->A2_COD+SA2->A2_LOJA,nIss,nInss,nIRRF)
								nPis    := aPcc[2]
								nCofins := aPcc[3]
								nCsll   := aPcc[4]

								nIss  := aBckImpEms[ 1 ]
								nInss := aBckImpEms[ 2 ]
								nIrrf := aBckImpEms[ 3 ]
								aSize( aBckImpEms , 0 )
								aBckImpEms := Nil
							Else
								nPis    := 0
								nCofins := 0
								nCsll   := 0
							EndIf
						EndIF
					EndIf
	          Endif
			EndIf
			If lEmpPub .And. lAplMinP .And. lIRPFBaixa .And. (nPis+nCoFins+nCsll+nIrrf+aDadosRet[2]+aDadosRet[3]+aDadosRet[4]+aDadosRet[5]< nVlMPub .And. ;
				!(aDadosRet[2]+aDadosRet[3]+aDadosRet[4]+aDadosRet[5] == 0 .And. aDadosRet[1] > 0))
				nPis := nCoFins := nCsll := nIrrf := 0 
				nValPgto := nOldPgto
			EndIf
			If lInssBx .And. cPaisLoc="BRA" .And. Empty(SE2->E2_NUMBOR) .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA")  //Inss Baixa				
				nInss		:= FCaInssBxCP(nValPgto,lIRPFBaixa,lCalcIssBx,lPCCBaixa)				
			Endif						
		Endif
		If lAltValor .and. dBaixa >= dLastPCC 
			If lMVBP10925
				If lJaSubtPCC
					nValPgto	:= nValPgto-nInss
				Else
					nValPgto	:= nValPgto-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
				EndIf
			EndIf
			nValPgto -= IIF(VALTYPE(__ReadVar)=="C" .and. __ReadVar <> "nValPgto",(nAcresc-nDecresc),0)
			nValLiq		:= nValPgto-nMulta+nJuros+nDescont-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss+nInss
			nEstOriginal := nValEstrang-(Round(NoRound(xMoeda(nJuros+nMulta-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss,nMoedaBco,SE2->E2_MOEDA,,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1))
			
		EndIf	       
		If (lValPgto .or. nValPgto >= SE2->E2_SALDO ) .And. lAltValor 
			nOldValPgto	:= nValPgto
			If nValPgto == SE2->E2_BASEPIS .and. SE2->E2_MOEDA = 1
				nValPgto := nValPgto - Iif(!lInssBx,SE2->E2_INSS,0)-Iif(lIRPFBaixa,0,SE2->E2_IRRF)
			EndIf	
			If !lJurMulDes .And. !lMVImpAcr .And. cMVImpDcr == "2"  
				If (nPis+nCoFins+nCsll+nIrrf+nIss+nInss) == 0
					nValPgto := nValPgto-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
				EndIf	
			EndIf
			If nValPgto < 0 
				nValPgto := nOldValPgto
			Endif		
	
			If SE2->E2_MOEDA == 1
				nValEstrang := nValPgto // nValEstrang = variavel que contem o valor do campo "valor pago" na baixa
			EndIf   
			
			If lAtOldPgto .or. (lAltValor .and. nOldValPgto <> nValPgto) 
				nOldValPgto	 := nValPgto			
			EndIf
		EndIf
		
		If !lF080Auto
			// Calcula a correcao monetaria
			nTxCorre := If(Empty(SE2->E2_DTVARIA) .And. Empty(nTxMoeda),SE2->E2_TXMOEDA,If(nTxMoeda>0,nTxMoeda,RecMoeda(dBaixa,SE2->E2_MOEDA)))
			fa080Corr(nEstOriginal,nTxCorre)
	  		lRet :=  (nValEstrang <= SE2->(E2_SALDO+E2_SDACRES-E2_SDDECRE)+;
					 	Round(NoRound(xMoeda(nMulta+nJuros-nDescont+nTolerCP-nPis-nCoFins-nCsll-nIrrf-nIss + Iif(!lInssBx,SE2->E2_INSS,0) + ;
					 			Iif(lIRPFBaixa,0,SE2->E2_IRRF),nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1))	 
			If nTxMoeda > 0 
				nValMax := SE2->E2_SALDO - ( (aImp[1] + aImp[2] + aImp[3] + aImp[4] + aImp[5]) / nTxMoeda)
			Else
				nValMax := SE2->E2_SALDO - aImp[1] - aImp[2] - aImp[3] - aImp[4] - aImp[5]
			EndIf 
			nValMax += nMulta + nJuros + nAcresc
            
			If nJuros > 0 .and. nMulta > 0
				nPgAux  :=  nValPgto - nJuros - nMulta
			ElseIf nJuros > 0
				nPgAux  :=  nValPgto - nJuros
			ElseIf nMulta > 0  
				nPgAux  :=  nValPgto - nMulta
			Else
				nPgAux  :=  nValPgto
			Endif
			                                                                            
			If lRet                            
				lRet := IIF(nTxMoeda>0,Round(NoRound(nValMax*nTxMoeda ,nCentMd1+1),nCentMd1)>= nPgAux,nValMax>=nPgAux)
			Endif  			

			If !lRet
				If lIRPFBaixa .and. nValPgto < nIrrf 
					lRet := .T.
				ElseIf lRestaUM
					Help(" ",1,"ValorMaior")
				EndIf			
				If lCalcRet .And. lAltValor .And. !lIRPFBaixa .And. !lF080Auto 
				   nValPgto := nValmax + nInss
				Endif           
			Endif
			
		Endif
	Else
		nValPgto := nOldValPgto
		lRet := .F.
	EndIf

	nOldIRRF := nIrrf
	nOldIss	:= nIss
	nOldInss	:= nInss
	If (lF080Auto .And. (nPis+nCofins+nCsll)>0 .and. nPgtoAuto ==  nValOrig) //baixa total do título
		If !(FwIsInCallStack("Fa450cmp")) .And. ( !lMVCNBImpg .Or. ( lMVCNBImpg .And. !(FwIsInCallStack("Fa430gera"))))
			nValPgto	:=	nValPgto - (nPis+nCofins+nCsll)
		EndIf
	Endif
EndIF   

If  (!lBxLote .or. Type("nValLiq")!="U" ) .and. lValPgto .and. (nValLiq != nValPgto)    //é baixa parcial .AND. é baixa parcial Líquida
	If cPaisLoc <> "BRA"
		nValMoeda1	:= xMoeda( nValPgto - nTotAbat	, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMdaOr, nTxMoeda )
		nValMoeda	:= xMoeda( nValPgto					, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMdaOr, nTxMoeda )
		nAcresc     := xMoeda( SE2->E2_SDACRES			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMdaOr, nTxMoeda )
		nDecresc    := xMoeda( SE2->E2_SDDECRE			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMdaOr, nTxMoeda )
	Else
		nValMoeda1	:= xMoeda( nValPgto - nTotAbat	, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
		nValMoeda	:= xMoeda( nValPgto					, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
		nAcresc     := xMoeda( SE2->E2_SDACRES			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
		nDecresc    := xMoeda( SE2->E2_SDDECRE			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
	EndIf

	nValMoeda1	:= Round( NoRound( nValMoeda1, nCentMd1+1 ), nCentMd1 )
	nValMoeda	:= Round( NoRound( nValMoeda , nCentMd1+1 ), nCentMd1 )
	nAcresc     := Round( NoRound( nAcresc   , nCentMd1+1 ), nCentMd1 )
	nDecresc    := Round( NoRound( nDecresc  , nCentMd1+1 ), nCentMd1 )
	
	
	If lValPgto .And. lAltValor
		If  (nPis+nCoFins+nCsll+nIrrf+nIss) == 0 .and. lJurMulDes
			nValPgto 	:= nValMoeda+nOtrGa+nImpSubst+nAcresc-nDecresc
		ElseIf (lMVImpAcr .Or. cMVImpDcr == "1" .Or. (cMVImpDcr=='3' .And. cTpDesc == "I") ) .And. (nPis+nCoFins+nCsll+nIrrf+nIss) == 0
			nValPgto 	:= nValMoeda+nOtrGa+nImpSubst+ Iif(lMVImpAcr,nAcresc,0) - Iif(cMVImpDcr == "1" .Or. (cMVImpDcr == "3" .And. cTpDesc == "I"),nDecresc,0) 
		EndIf 

		nOldValPgto	 := nValPgto
	EndIf		 
EndIf	

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fA080Val ³ Autor ³ Wagner Xavier 		³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao utilizada para consistir o valor digitado			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080Val(Valor)											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA080Val(nVal,nTxMoeda,lCalcImp,lAtuVlr,lDtBaix)
Local nCentMd1	:= MsDecimais(1)
LOCAL nValLiq := 0
Local nTxMdaOr:=0
Local nTxCorre	:= 0
Local lAtuPgtJur := .F.       
Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )				 		
Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0) 
Local nLimInss 	:= GetMv("MV_LIMINSS",.F.,0)
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 	:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao. 
Local cNccIr     := SuperGetMv("MV_NCCIR",.F.,"2")		
Local nValNArred := 0		 		                
Local lCalcIssBx := IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) 
Local lPCCBaixa  := SuperGetMv("MV_BX10925",.T.,"2") == "1"
Local aPcc       := {}
Local aValImp    := {}
Local aBckImpEms := {}
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lData      := .F.
Local lBP10925   := (SuperGetMv("MV_BP10925",.t.,"2") == "2")
Local nAntImp    := 0
Local lOldPCC    := .T.
Local lVlrAcImp	:= FindFunction("VlrAcImp")
Local lMVImpAcr	:= SuperGetMV("MV_IMPACR",,"2") == "1"
Local cMVImpDcr	:= SuperGetMV("MV_IMPDCR",,"2")
//Controla o Pis Cofins e Csll na baixa
Default lCalcImp := .F.
Default lAtuVlr  := .F. 
Default lDtBaix  := .F.

#IFDEF TOP 
	lOldPCC := .F.
#ENDIF	

If (Type("lDtPag")<>"U" .and. lDtPag .And. Type("dOldData")<>"U" .And. dBaixa == dOldData .AND.;
	Type("dDebito")<>"U" .And. Type("dOldDeb")<>"U" .And. dDebito == dOldDeb )
	lDtPag := .F.  
	Return (.T.)
ElseIf (Type("lDtPag")<>"U" .and. lDtPag .And. ((Type("dOldData")<>"U" .And. dBaixa <> dOldData) .Or. ; // Se muda a data tem que recalcular os impostos
 (Type("dDebito")<>"U" .And. dBaixa <> dDebito )))
	lCalcImp := .T.
	lData		:= .T.
EndIf

If Type("lDtPag")<>"U" .and. lDtPag
	nOldPgto := nValPgto
Endif

If Type("lEmpPub") != "L"
	lEmpPub := lIsEmpPub .And. IsEmpPub()
EndIf

If Type("cTpDesc") == "U"
	cTpDesc := "I"
EndIf

If cPaisLoc <>"BRA"
	nCentMd1:=4
	nTxMoeda:=Iif(nMoedaBco>0,aTxMoedas[nMoedaBco][2],1)
	nTxMdaOr:=aTxMoedas[SE2->E2_MOEDA][2] 
EndIf	

If !(nDescont<=xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,1,dBAIXA,,nTxMoeda) .and. ((SE2->E2_IMPCHEQ == "S" .or. lChqPre) .And. !(nDescont+nMulta+nJuros > 0)))

	nOtrGa      := If (Type("nOtrGa") != "N",0,nOtrGa)
	nDifCambio  := If (Type("nDifCambio") != "N",0,nDifCambio)
	nImpSubst   := If (Type("nImpSubst") != "N",0,nImpSubst)
	nAcresc     := If (Type("nAcresc") != "N",0,nAcresc)
	nDecresc    := If (Type("nDecresc") != "N",0,nDecresc)

	IF nVal<0
		Help(" ",1,"VALNEGAT")
		Return .F.
	Endif
	DEFAULT nTxMoeda := 0

	nValTot		:= SE2->E2_VLCRUZ
	nValEstrang := SE2->E2_SALDO-nTotAbat
	nValOrig    := SE2->E2_SALDO-nTotAbat

	If cPaisLoc <> "BRA"
		nValMoeda1	:= xMoeda( SE2->E2_VALOR - nTotAbat	, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMdaOr, nTxMoeda )
		nValMoeda	:= xMoeda( nValOrig					, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMdaOr, nTxMoeda )
		nAcresc     := xMoeda( SE2->E2_SDACRES			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMdaOr, nTxMoeda )
		nDecresc    := xMoeda( SE2->E2_SDDECRE			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMdaOr, nTxMoeda )
	Else

		nValMoeda1	:= xMoeda( SE2->E2_VALOR - nTotAbat	, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
		nValMoeda	:= xMoeda( nValOrig					, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+2, nTxMoeda )

		nAcresc     := xMoeda( SE2->E2_SDACRES			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
		nDecresc    := xMoeda( SE2->E2_SDDECRE			, SE2->E2_MOEDA, nMoedaBco, dBaixa, nCentMd1+1, nTxMoeda )
	EndIf

	nValMoeda1	:= Round( NoRound( nValMoeda1, nCentMd1+1 ), nCentMd1 )
	nValNArred	:= nValMoeda
	nValMoeda	:= Round( NoRound( nValMoeda , nCentMd1+1 ), nCentMd1 )
	nAcresc     := Round( NoRound( nAcresc   , nCentMd1+1 ), nCentMd1 )
	nDecresc    := Round( NoRound( nDecresc  , nCentMd1+1 ), nCentMd1 )
	
	// Ponto de entrada para alterar o valor do acrescimo
	If ExistBlock("F080ACRE")
		ExecBlock("F080ACRE",.F.,.F.)
	EndIf	
	//Calculo os impostos de Pis Cofins e Csll
	If lCalcImp
		If VALTYPE(__ReadVar)=="C" .and. __ReadVar$"nMulta#nDescont#nJuros#nValPgto" 
			// *************************************************************
			// Bloco novo utilizado somente para o calculo do campo Multa *
			// *************************************************************
			nValPgto 	:= nValMoeda
			nValPgto += IIF(lJurMulDes ,nAcresc-nDecresc, Iif(lVlrAcImp, VlrAcImp(nAcresc,nDecresc), 0) )//+nMulta+nJuros-nDescont+nOtrGa+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss
		Else
			// *******************************************************
			// Bloco Antigo não tirado para evitar incopatibilidade *
			// *******************************************************
			nValPgto 	:= nValMoeda+nMulta+nJuros-nDescont+nOtrGa+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss
       EndIf
       //Volta saldo caso tenha baixas parciais, e esteja informando multa,juros e desconto.
       If VALTYPE(__ReadVar)=="C" .and. __ReadVar$ "nMulta#nDescont#nJuros" .And. (nMulta+nDescont+nJuros) # (nOldMulta+nOldDescont+nOldJuros)
    		nValPgto := salRefPag(SE2->E2_FORNECE+SE2->E2_LOJA)
    	EndIf
		
		nOldValPgto	 := nValPgto
		F080IssBx() 

		//Evita o sistema calcular o IRRF para documento de entrada que nao teve retencao
		//de IRRF ( itens ) mesmo possuindo um fornecedor e natureza que calcule (MATA100)	
		If lIRPFBaixa .And. !lF080Auto .And.;
			!( "MATA100" $ SE2->E2_ORIGEM .And. Empty( SE2->E2_BASEIRF ) .And. Empty( SE2->E2_IRRF ) )
			
			//Novo calculo de IRRF pela Baixa
			If lNewIrBx
			//Calculo para o  IRRF 
			//o primeiro parametro, neste caso NAO vai zerado pois o calculo 
			//eh feito com base no valor digitado
				nIRRF := FCalcIRBx(0,SA2->A2_TIPO,dBaixa,dDebito,, nTxMoeda)
			Endif
		Endif	
		If SED->ED_CALCINS == "S" .and. SA2->A2_RECINSS == "S" .And. lInssBx .And. cPaisLoc="BRA" .And. Empty(SE2->E2_NUMBOR)//Inss Baixa				
			If !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //PA de Inss Baixa Empresa Publica			
				FCaInssBxCP(nValPgto,lIRPFBaixa,lCalcIssBx,lPCCBaixa)
			Endif						
		Endif
		If lPCCBaixa .and. (dBaixa < dLastPcc .Or. lEmpPub .or. lOldPCC)
			F080TotMes(dBaixa,.T.)
		Else

			If lPCCBaixa .And. !SE2->E2_TIPO $ MVPAGANT+"/"+MVPROVIS .And. VLDBOR(SE2->E2_NUMBOR,"P")
				
				nSalImp := nValPgto
				If lData // ao alterar a data deve ser levado em conta o valor alterado para calculo do imposto
					nAntImp	:= nPis+nCofins+nCsll+nIrrf+nIss
					If nOldPgto <> nValPgto 
						If nOldPgto+nPis+nCofins+nCsll+nIrrf+nIss == SE2->E2_SALDO // NÃO ALTEROU O VALOR
							nSalImp	:= SE2->E2_SALDO // Não alterou o valor
						Else
							nSalImp	:= nOldPgto //deve ser visto o valor alterado
						EndIf
					Else
						nSalImp	:= SE2->E2_SALDO // se mudou a data tem que recalcular os impostos de acordo com o saldo
					EndIf
				EndIf
				
				IF lJurMulDes
					nSalImp += (nMulta+nJuros-nDescont)
				ElseIf lMVImpAcr	.Or. ( cMVImpDcr == "1" .Or. (cMVImpDcr=='3' .And. cTpDesc == "I") )
					nSalImp += (Iif(lMVImpAcr,nMulta+nJuros,0) - Iif(cMVImpDcr == "1" .Or. (cMVImpDcr=='3' .And. cTpDesc == "I"),nDescont,0))
				EndIf
				If lDtBaix .or. !lAtuVlr
					nSalImp := salRefPag(SA2->A2_COD+SA2->A2_LOJA)
				Endif
				
				nSalImp := xMoeda(nSalImp,SE2->E2_MOEDA,1,dBaixa,3,nTxMoeda)
				
				aValImp    := GetOutImp("P",nIss,nInss,nIrrf)
				aBckImpEms := { nIss , nInss , nIrrf }
				nIss       := aValImp[1]
				nInss      := aValImp[2]
				nIrrf      := aValImp[3]

				If !FwIsInCallStack('FINA450')
					aPcc	:= newMinPcc(dBaixa, nSalImp,SED->ED_CODIGO,"P",SA2->A2_COD+SA2->A2_LOJA,nIss,nInss,nIRRF,,,,nTxmoeda)
					nPis	:= aPcc[2]
					nCofins	:= aPcc[3]
					nCsll	:= aPcc[4]
				EndIf

				nIss  := aBckImpEms[ 1 ]
				nInss := aBckImpEms[ 2 ]
				nIrrf := aBckImpEms[ 3 ]
				aSize( aBckImpEms , 0 )
				aBckImpEms := Nil
			Else
				nPis    := 0
				nCofins := 0
				nCsll   := 0
			EndIf
		EndIf
		If __ReadVar$"nMulta#nDescont#nJuros"
			lAtuPgtJur := .T.
	Endif
	If __ReadVar$"dBaixa#dDebito"
		lAtuPgtJur := .T.
	Endif
	EndIf
	
	If lData
		If nOldPgto+nAntImp == SE2->E2_SALDO // NÃO ALTEROU O VALOR
			nValPgto 	:= nValMoeda+nMulta+nJuros-nDescont+nOtrGa+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
		Else
			If lBP10925
				If nOldPgto == nValPgto
					nValPgto 	:= nValMoeda+nMulta+nJuros-nDescont+nOtrGa+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
				Else
					nValPgto 	:= nOldPgto+nMulta+nJuros-nDescont+nOtrGa+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
				Endif
			Else	
				nValPgto 	:= nOldPgto
			EndIf
		EndIf	
	Else
		If !lCalcImp .and.  nValPgto-nMulta-nJuros+nDescont-nOtrGa-nImpSubst-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss+nInss == nValMoeda //nao alterou o valor
			nValPgto 	:= nValMoeda+nMulta+nJuros-nDescont+nOtrGa+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
		ElseIf !lCalcImp .and. l450 .and. nValPgto-nMulta-nJuros+nDescont-nOtrGa-nImpSubst-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss+nInss <> nValMoeda //alterou o valor
			nValPgto 	:= nValPgto
		Else
			nValPgto 	:= nValMoeda+nMulta+nJuros-nDescont+nOtrGa+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss-nInss
		EndIf
		
		If lIRPFBaixa         
			nOldIRRF := nIrrf			
		Endif

		If lPccBaixa .and. cPaisLoc == "BRA"
			nOldPIS 	:= nPis
 			nOldCofins 	:= nCoFins
 			nOldCSLL 	:= nCsll
 			nOldValPgto := nValPgto
 		Endif
	EndIf
	If lAtuPgtJur 
		nOldValPgto := nValPgto
		nOldPgto := nValPgto
	Endif	
	
	If (nMulta+nJuros+nDescont+nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss) > 0 .or. Round(nValEstrang - xMoeda(nValNArred,nMoedaBco,SE2->E2_MOEDA,dBaixa,3,,nTxMoeda),2 ) > 0.01
		If cPaisLoc <> "BRA"
			nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,nTxMoeda,nTxMdaOr),nCentMd1+1),nCentMd1)
		Else
			nValEstrang := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
		EndIf	
	Endif
	nValLiq		:= nValPgto-nMulta-nJuros+nDescont-nOtrGa-nImpSubst-nAcresc+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss
	nEstOriginal := nValEstrang- Round(NoRound(xMoeda(nJuros+nMulta-nDescont+nOtrGa+nImpSubst+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss,nMoedaBco,SE2->E2_MOEDA,,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1) 
	// Calcula a correcao monetaria	 
	If Type("lIntegracao")<>"U" .and. lIntegracao
  		If (nT := ascan(aAutoCab,{|x| x[1]='AUTTXMOEDA'}) ) > 0
			nTxMoeda	:=	aAutoCab[nT,2]	
		EndIf	    
	Endif	  
	nTxCorre := If(Empty(SE2->E2_DTVARIA),nTxMoeda/*SE2->E2_TXMOEDA*/,If(nTxMoeda > 0,nTxMoeda,RecMoeda(dBaixa,SE2->E2_MOEDA)))
	FA080Corr(nEstOriginal,nTxCorre)
	
	If lAtuVlr //Atualiza o valor em memoria (antigo) com o conteudo (valor) informado.
		nOldValPgto	 := nValPgto
	Endif
Else
	If (nDescont+nMulta+nJuros > 0 .and. SE2->E2_IMPCHEQ == "S")
		IF SEF->(MSSEEK(xFilial("SEF")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_NUMBCO)))
			If !(Round(nValPgto,2) == Round(SEF->EF_VALOR,2))
				Help(" ",1,"JACHQSTIT")
			Endif
		Endif
	Endif
EndIf

If Type("lDtPag")<>"U" .and. lDtPag
	nValPgto := nOldPgto
	lDtPag := .F.
Endif

If lIRPFBaixa .and. SE2->E2_VALOR < nIrrf .and. cNccIr == "1"
	nValPgto := 0.01
	nValEstrang := nValPgto
ElseIf lIRPFBaixa .and. SE2->E2_VALOR < nIrrf .and. cNccIr == "2"
	nValPgto := 0
	nValEstrang := nValPgto
EndIf
			
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080Vdr	³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que cadastra dados para processar VENDOR 			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080Vdr(void) 											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080Vdr(aVendor, nVlrtitV, dVencTitV)
Local lPanelFin := If (FindFunction("IsPanelFin"),IsPanelFin(),.F.)
LOCAL lRet := .T.
LOCAL nOpcA
LOCAL oDlgVendor

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para o tratamento do Vendor 						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cBancoV		:= CriaVar("E9_BANCO")
cAgenciaV	:= CriaVar("E9_AGENCIA")
cContrato	:= CriaVar("E9_NUMERO")
cPrefV		:= CriaVar("E2_PREFIXO")
cNumV 		:= CriaVar("E2_NUM")
cParcV		:= CriaVar("E2_PARCELA")
cTipV 		:= CriaVar("E2_TIPO")
cNaturV		:= CriaVar("E2_NATUREZ")
nValAcres	:= CriaVar("E2_ACRESC")
dDataVencV	:= CriaVar("E2_VENCTO")
nTxAcresV	:= CriaVar("E9_TXACRES")
nValtitV 	:= 0
cFornecV 	:= Space(6)
dDataVencV	:= If(dVencTitV == Nil, SE2->E2_VENCTO, dVencTitV)
nValTitV 	:= If(nVlrtitV == Nil, SE2->E2_SALDO, nVlrtitV)
cNaturV		:= GetMV("MV_NATVEND")+Space(10-Len(GetMv("MV_NATVEND")))
aVendor		:= If(Type("aVendor") != "A",{},aVendor)

If ExistBlock("F080TITV")
	lRet := ExecBlock("F080TITV",.F.,.F.)
EndIf	

If lRet .and. TrazCodMot(cMotBx) $ "VEN"

	While .T.
		nOpca := 0
	
		DEFINE MSDIALOG oDlgVendor FROM	98,73 TO 295,495 TITLE OemToAnsi(STR0106) PIXEL //"Baixa por Vendor"
		 
		//Labels
		@ 001,003 TO 95, 098 LABEL "" OF oDlgVendor  PIXEL
		@ 001,103 TO 80, 210 LABEL "" OF oDlgVendor  PIXEL

		//lado esquerdo		
		@ 008,011 SAY OemToAnsi(STR0091) 	SIZE 40, 7 OF oDlgVendor PIXEL //"Nro.Contrato"
		@ 006,053 MSGET cContrato	 		SIZE 43,10 OF oDlgVendor PIXEL Hasbutton F3 "SE9" Picture  "@!"  Valid ( Fa080Contr(cContrato) )
		@ 023,011 SAY OemToAnsi(STR0022 )	SIZE 20, 7 OF oDlgVendor PIXEL //"Banco"
		@ 020,053 MSGET cBancoV 		 	SIZE 43,10 OF oDlgVendor PIXEL Picture  "!!!"
		@ 037,011 SAY OemToAnsi(STR0023 )	SIZE 26, 7 OF oDlgVendor PIXEL //"Agˆncia"
		@ 034,053 MSGET cAgenciaV	 		SIZE 43,10 OF oDlgVendor PIXEL Picture  "@!"
		@ 051,011 SAY OemToAnsi(STR0092 ) 	SIZE 23, 7 OF oDlgVendor PIXEL //"Prefixo"
		@ 048,053 MSGET cPrefV			 	SIZE 43,10 OF oDlgVendor PIXEL Picture  "@!"
		@ 064,011 SAY OemToAnsi(STR0093 )	SIZE 24, 7 OF oDlgVendor PIXEL //"Numero"
		@ 062,053 MSGET cNumV			 	SIZE 43,10 OF oDlgVendor PIXEL Picture  "@!"  Valid NaoVazio()
		@ 078,011 SAY OemToAnsi(STR0094 )	SIZE 25, 7 OF oDlgVendor PIXEL //"Parcela"
		@ 076,053 MSGET cParcV			 	SIZE 43,10 OF oDlgVendor PIXEL Picture  "@!"

		//lado direito		
		@ 0008,109 SAY OemToAnsi(STR0095 )	SIZE 40, 7 OF oDlgVendor PIXEL //"Tipo"
		@ 006,154 MSGET cTipV			 	SIZE 55,10 OF oDlgVendor PIXEL Hasbutton Picture  "@!" F3 "05" Valid ( Fa080NRV(cPrefV,cNumV,cParcV,cTipV) ;
				.And. Fa080Tip(cTipV) )
		@ 023,109 SAY OemToAnsi(STR0096) 	SIZE 41, 7 OF oDlgVendor PIXEL //"Data Vencto."
		@ 020,154 MSGET dDataVencV  		SIZE 55,10 OF oDlgVendor PIXEL Hasbutton Valid Fa080DtVen(dDataVencV)
		@ 037,109 SAY OemToAnsi(STR0097)  	SIZE 41, 7 OF oDlgVendor PIXEL //"Tx.Acrescimo"
		@ 034,154 MSGET nTxAcresV	 		SIZE 55,10 OF oDlgVendor PIXEL Hasbutton Picture  PesqPict("SE9", "E9_TXACRES")
		@ 051,109 SAY OemToAnsi(STR0098) 	SIZE 41, 7 OF oDlgVendor PIXEL //"Natureza"
		@ 048,154 MSGET cNaturV 		 	SIZE 55,10 OF oDlgVendor PIXEL Hasbutton Picture  "@!" Valid Fa080Nat(cNaturV) F3 "SED"
		@ 064,109 SAY OemToAnsi(STR0099)  	SIZE 40, 7 OF oDlgVendor PIXEL //"Valor T¡tulo"
		@ 062,154 MSGET nValTitV		 	SIZE 55,10 OF oDlgVendor PIXEL Hasbutton Picture  PesqPict("SE2","E2_VALOR")
		
		DEFINE SBUTTON FROM 84, 143 TYPE 1 ENABLE OF oDlgVendor ACTION ( nOpcA := 1,If(Fa080Nat(cNaturV),oDlgVendor:End(),.F.))
		DEFINE SBUTTON FROM 84, 172 TYPE 2 ENABLE OF oDlgVendor ACTION ( oDlgVendor:End() )
		ACTIVATE MSDIALOG oDlgVendor
		If nOpcA == 1
			lRet := Fa080VerVd()
			If !lRet
				Loop
			EndIF
			// Atualiza dados do vendor (matriz enviada por referencia)
			aVendor := {cContrato, cBancoV, cAgenciaV, cPrefV, cNumV, cParcV, cTipV, dDataVencV, nTxAcresV, cNaturV, nValTitV}
			Exit
		Else 
			// Se cancelar, inicializa os dados do titulo de Vendor para evitar gravacao de titulo invalido
			cContrato	:= CriaVar("E9_NUMERO")
			cBancoV		:= CriaVar("E9_BANCO")
			cAgenciaV	:= CriaVar("E9_AGENCIA")
			cPrefV		:= CriaVar("E2_PREFIXO")
			cNumV 		:= CriaVar("E2_NUM")
			cParcV		:= CriaVar("E2_PARCELA")
			cTipV 		:= CriaVar("E2_TIPO")
			dDataVencV	:= CriaVar("E2_VENCTO")
			nTxAcresV	:= CriaVar("E9_TXACRES")
			cNaturV		:= GetMV("MV_NATVEND")+Space(10-Len(GetMv("MV_NATVEND")))
			nValTitV 	:= If(nVlrtitV == Nil, SE2->E2_SALDO, nVlrtitV)
			aVendor		:= {}
			lRet := .F.
			Exit
		EndIf
	
	EndDO
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080Contr³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que procura o contrato do VENDOR					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080Contr(cBanco,cAgencia,cContrato)					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080Contr(cContr)

LOCAL cAlias := Alias(), lRet := .T.
LOCAL lF080BXVEND := ExistBlock("F080BXVEND")
LOCAL aBxVendo:= {}


dbSelectArea("SE9")
IF ! dbSeek(cFilial+cContr)
	HELP(" " , 1 , "FA080NOCONTR")
	lRet := .F.
Else

	If lF080BXVEND 
		aBxVendo := ExecBlock("F080BXVEND",.f.,.f.,{cContrato})
		cBancoV:= aBxVendo[1][1]
		cAgenciaV:= aBxVendo[1][2]
		cPrefV:= aBxVendo[1][3]
		cNumV:= aBxVendo[1][4]
		cParcV:= aBxVendo[1][5]
		cTipV:= aBxVendo[1][6]
		dDataVencV:= aBxVendo[1][7]
		nTxAcresV:= aBxVendo[1][8]
		cNaturV:= aBxVendo[1][9]
		nValTitV:= aBxVendo[1][10]
		
	Else
		nTxAcresV:= SE9->E9_TXACRES
		cBancoV	:= SE9->E9_BANCO
		cAgenciaV:= SE9->E9_AGENCIA
	EndIf
Endif

dbSelectArea(cAlias)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080NRV	³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que procura o titulo a ser gerado pelo VENDOR		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080NRV(cPrefixo,cNumero,cParcela,cTipo) 				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/                                                                                                                                      
Function fa080Nrv(cPref,cNum,cParc,cTip)

LOCAL lRet := .T., nRec

dbSelectArea("SE2")
nRec := Recno()
IF dbSeek(cFilial+cPref+cNum+cParc+cTip)
	HELP(" " , 1 , "FA080TITEX")
	lRet := .F.
Endif
dbGoto(nRec)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080Tip	³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida o tipo do titulo no VENDOR						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080Tip()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080Tip(cTipo)
LOCAL cAlias := Alias(), lRet := .T.

dbSelectArea("SX5")
If !dbSeek(cFilial+"05"+cTipo)
	Help(" ",1,"FA080NOTIP")
	lRet := .F.
Else
	If cTipo $ MVABATIM
		Help(" ",1,"FA080NOAB")
		lRet := .F.
	Endif
Endif

dbSelectArea(cAlias)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080Nat	³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/01/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida a Natureza do titulo no VENDOR					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fA080Nat()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080Nat(cNat)

Local cAlias := Alias(), lRet := .T.

dbSelectArea("SED")
IF !dbSeek(xFilial()+cNat)
	IF cNat != GetMv("MV_NATVEND")
		Help(" ",1,"FA080NONAT")
		lRet := .F.
	Else
		RecLock("SED",.T.)
		SED->ED_FILIAL		:=  xFilial("SED")
		SED->ED_CODIGO   	:=  GetMv("MV_NATVEND")
		SED->ED_DESCRIC  	:=  "Natureza de Vendor"
		SED->ED_CALCIRF  	:=  "N"
		SED->ED_CALCISS  	:=  "N"
		SED->ED_PERCIRF  	:=  0
		SED->ED_CALCCSL		:= "N"
		SED->ED_CALCCOF		:= "N"
		SED->ED_CALCPIS		:= "N"
		SED->ED_TIPO		:= "2"
		MsUnlock()
	Endif

//294 - Natureza sintetica/Analitica
ElseIf !FinVldNat( .F., cNat, 2 )
	lRet := .F.
Endif

dbSelectArea(cAlias)
Return lRet


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	  ³ fA080Grv ³ Autor ³ Wagner Xavier 		 ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o  ³ Fun‡„o utilizada para atualizar a baixa efetuada		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	  ³ fA080Grv(lPadraoBx,PadraoVd)		                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso	  	  ³ Generico 												   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador³ Data   ³ BOPS ³  Motivo da Alteracao                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Pedro Lima |10/12/07³137418³ Correcao para baixa de PA com ratio de Mult³±±
±±³  TI6434   |        ³ V912 ³ naturezas.                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA080Grv(lPadraoBx,lPadraoVd,lCNAB,cLanca,cArqEnt,nTxMoeda,dDebito,nVlImpPCC,lMultNat,lUsaFlag)
Local nSaldo
Local i
Local cTpDoc:=""
Local cHistMov:=""
Local cNum
Local cPrefixo
Local cParcela
Local nSalvRec
Local cFornece
Local nRecNo:=0
Local lAdiantamento := .f.
Local nTamSeq 		:= TamSX3("E5_SEQ")[1]
Local cSequencia 	:= Replicate("0",nTamSeq)
Local aTipoSeq 	:= {}
Local lFina390 	:= Iif(SE2->E2_IMPCHEQ == "S",.T.,.F.)
Local lFa080VIR	:= ExistBlock("FA080VIR")
Local cChave_EF	
Local nOrdbx
Local nAtraso 		:= 0
Local nToler 		:= SuperGetMv("MV_TOLERCP",.F.,0)
Local lMovBcoBx 	:= .T.
Local lSpbInUse 	:= SpbInUse()
Local lSE5FI080 	:= ExistBlock("SE5FI080")
Local nLaco
Local lAcreDecre := .F.
Local cModRetPIS := GetNewPar( "MV_RT10925", "1" ) 
Local cGeraDirf  	:= ""
Local aArea
Local cChave		:= ""
Local aAreaSED 	:= {}
//Considero juros multa ou desconto na base do imposto.
// 1 = Considera valores juros multa ou desconto
// 2 = Nao considera valores juros multa ou desconto
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lContrRet := !Empty( SE2->( FieldPos( "E2_VRETPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE2->( FieldPos( "E2_VRETCSL" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETPIS" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_PRETCOF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETCSL" ) ) )

Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )


Local nVlMinImp := GetNewPar("MV_VL10925",5000)
Local nSavRec := 0
Local lRetParc := .T.
Local aRecnos := {}
Local aRecSFQ := {}
Local nLoop := 0
Local cPrefOri  := SE2->E2_PREFIXO
Local cNumOri   := SE2->E2_NUM
Local cParcOri  := SE2->E2_PARCELA
Local cTipoOri  := SE2->E2_TIPO
Local cCfOri    := SE2->E2_FORNECE
Local cLojaOri  := SE2->E2_LOJA
Local nMoedaBco := Max( MoedaBco(cBanco,cAgencia,cConta), 1 )
Local nMoedaTit := SE2->E2_MOEDA
Local nTxModBco := If( cPaisLoc<>"BRA", aTxMoedas[Max(nMoedaBco		,1)][2]	, 0 )
Local nTxModTit := If( cPaisLoc<>"BRA", aTxMoedas[Max(SE2->E2_MOEDA	,1)][2]	, 0 )

Local lBaseSE2 := SuperGetMv("MV_BS10925",.T.,"1") == "1"  .and. ;
						(	!Empty( SE1->( FieldPos( "E1_BASEPIS" ) ) ) .And.;
							!Empty( SE1->( FieldPos( "E1_BASECOF" ) ) ) .And. ; 
							!Empty( SE1->( FieldPos( "E1_BASECSL" ) ) ) .And. ; 
							!Empty( SE2->( FieldPos( "E2_BASEPIS" ) ) ) .And.;
							!Empty( SE2->( FieldPos( "E2_BASECOF" ) ) ) .And. ; 
							!Empty( SE2->( FieldPos( "E2_BASECSL" ) ) )	)

Local nBaseRet := 0  //Base de retencao                    

//1-Cria NCC/NDF referente a diferenca de impostos entre emitidos (SE2) e retidos (SE5)
//2-Nao Cria NCC/NDF, ou seja, controla a diferenca num proximo titulo
//3-Nao Controla
Local cNccRet  := SuperGetMv("MV_NCCRET",.F.,"1")

Local lSest := SE2->(FieldPos("E2_SEST"))	> 0  //Verifica campo de SEST

Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT

Local lAplVlMin := .T.
Local lRetManual:= .F.
Local cSeqCheque	:= Replicate("0",TamSX3("EF_SEQUENC")[1])
Local cContabiliza := GETMV("MV_CTBAIXA")
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) 
Local lLibCheq := GetMv("MV_LIBCHEQ") == "S"
Local nRegSEF := 0
Local lBordero   := If (lContrRet,(SE2->E2_PRETPIS = '4' .OR. SE2->E2_PRETCOF = '4' .OR. SE2->E2_PRETCSL = '4') .And.;
				 				!Empty(SE2->E2_NUMBOR),.F.)

Local lBaseIRPF	:= If (FindFunction('F050BIRPF'),F050BIRPF(2),.F.)

Local nCentMd1	:= MsDecimais(1)
Local lAtuSldNat := FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")
Local lTpDesc		:= SE5->(FieldPos("E5_TPDESC"))	> 0 //Verifica campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)
Local lE2TpDesc		:= SE2->(FieldPos("E2_TPDESC"))	> 0 //Verifica campo TPDESC na tabela SE2 (<C>ondicional ou <I>ncondicional)
Local lGerTXBord := .T. // .T. nao gerou os TX na geracao do bordero
Local aAreaSE2 := {}
Local aAreaSE5 := {}
Local cChaveIR := ""
Local aAreaSA2 := {}
Local cFilter  := ""
Local lBdVcImp	:= SuperGetMV("MV_BDVCIMP",.T.,.F.)
Local lE5Orig		:= SE5->(FieldPos("E5_ORIGEM"))	> 0 //Verifica campo E5_ORIGEM na tabela SE5

Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ;  //Inss Baixa
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )				 		               
Local nLimInss 	:= 	SuperGetMv("MV_LIMINSS",.F.,0)	 
	
Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0) 
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 		:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao.
	
Local cCodRetIr 	:= " "
Local cModSpb		:= "1"
Local nRecOld		:= 0
Local lAcmPJ 	 	:= SuperGetMv("MV_INSACPJ",.T.,"2") == "1"  //1 = Acumula    2= Não acumula
Local lAltInss	:=	.T.
Local aBaixa		:=	{}
Local lNotBax 	:= .F.
Local lAglImp  := .F. 
Local lFina379 := IsInCallStack("FINA379")
LOCAL nTotAdto 	:= 0
LOCAL lBaixaAbat	:= .F.
Local lBxCEC 		:= .F.  //Verificador de existencia de baixa por compensacao entre carteiras
Local nTotImpost 	:= 0  //Valores de baixas de por geracao de impostos
Local nTotaIRPF   := 0
Local lBxLiq	:= .F.	
Local nParciais	:=	0
Local lMVBP10925  := SuperGetMv("MV_BP10925",.F., "1") == "2" // Default (Bruto)

//Ponto de entrada para deletar provisorios ao inves de baixa-los
Local lF50DelPr	:= ExistBlock("F50DELPR")         
Local lDelProvis	:= If(lF50DelPr, ExecBlock("F50DELPR",.F.,.F.), .F.)
Local lSubstPR	:= IsInCallStack("Fa050Subst")
Local cNccIr		:= SuperGetMv("MV_NCCIR",.F.,"2")
Local nDifIr		:= 0
Local nValNArred	:= 0
Local lBxTxa := SuperGetMv("MV_BXTXA",.F.,"1") == "1"
Local cTipoCM := GetMV("MV_TIPOCM")
Local nSaldoAtu := 0
Local nSalTit	:= 0
Local lBxParc := .F.
Local nValRa := 0
Local nX		:= 0
Local aCamposSE2	:= {}
Local mv050old	:= ""
Local lMVCNBImpg := GetNewPar("MV_CNBIMPG",.F.)

cArqEnt  := Iif(cArqEnt==Nil," ",cArqEnt)		// Oriundo do Fina430 (Arquivo Cnab)
// feita por lote.
Private cTitOrig 
Private aBaixaSE5 := {}
Private lBdImp	:= .F.

Default dDebito		:= dBaixa
Default nVlImpPCC	:= 0
Default lMultNat	:= .F.
Default lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/ )
If lSpbInUse
	cModSpb := IIf(Empty(SE2->E2_MODSPB), "1",SE2->E2_MODSPB)
Endif

If FunName() != "FINA080"
	lGerImp := !(FWIsInCallStack("FINA631") .And. (SuperGetMv("MV_IMPTRAN",.F.,"1") == "2" ))
EndIf

If Type("aDadosRet") == "U"
	aDadosRet := Array(7)
	aFill(aDadosRet,0)
Endif

//IRRF - BAIXA
If Type("aDadosIr") == "U"
	aDadosIR := Array(3)
	aFill(aDadosIR,0)
Endif

If Type("aRecnosSE2") == "U"
	aRecnosSE2 := {}
Endif      

If Type("cTpDesc") == "U"
	cTpDesc:="I"
Endif  

If Type("lEmpPub") != "L"
	lEmpPub := lIsEmpPub .And. IsEmpPub()
EndIf

If Type("lAplMinP") != "L"
	lAplMinP := .F.	
	If SA2->( FieldPos( "A2_MINPUB" ) ) > 0 .And. SA2->A2_MINPUB == "2"
		lAplMinP := .T.
	EndIF
EndIF

If Type("nVretInss") != "N" 
	nVretInss := 0
EndIf

If Type("cPretIns") != "N" 
	cPretIns := ""
EndIf

If lPCCBaixa .and. dBaixa >= dLastPcc .And. !lEmpPub
	nVlMinImp	:= 0
EndIf

If Type("lVlrMaior") == "U"
	Private lVlrMaior := .F.
EndIf

If Type("nVlrMaior") == "U"
	Private nVlrMaior := 0
EndIf

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
	lCalcIssBx := .F.
EndIf

lCNAB		:= Iif(lCNAB==Nil,.F.,lCnab)
nOtrGa      := If (Type("nOtrGa") != "N",0,nOtrGa)
nDifCambio  := If (Type("nDifCambio") != "N",0,nDifCambio)
nImpSubst   := If (Type("nImpSubst") != "N",0,nImpSubst)
nAcresc     := If (Type("nAcresc") != "N",0,nAcresc)
nDecresc    := If (Type("nDecresc") != "N",0,nDecresc)
cModSpb		:= If (Type("cModSpb") != "C","1",cModSpb)
cAutentica	:= If (Type("cAutentica") != "C",Space(25),cAutentica)
nPis		:= If (Type("nPis") != "N",0,nPis)
nCofins		:= If (Type("nCofins") != "N",0,nCofins)
nCsll		:= If (Type("nCsll") != "N",0,nCsll)
nVlRetPis 	:= If (Type("nVlRetPis") != "N",0,nVlRetPis)
nVlRetCof 	:= If (Type("nVlRetCof") != "N",0,nVlRetCof)
nVlRetCsl	:= If (Type("nVlRetCsl") != "N",0,nVlRetCsl)
nDiferImp	:= If (Type("nDiferImp") != "N",0,nDiferImp)
nIrrf		:= If (Type("nIrrf") != "N",0,nIrrf)
nVlRetIrf 	:= If (Type("nVlRetIrf") != "N",0,nVlRetIrf)
nBaseIrpf 	:= If (Type("nBaseIrpf") != "N",0,nBaseIrpf)
nIss		:= If (Type("nIss") != "N",0,nIss)
nInss		:= If (Type("nInss") != "N",0,nInss)

If lCnab .and. !lMVCNBImpg
	lPccBaixa := .F.
Endif

//Verificar ou nao o limite de 5000 para Pis cofins Csll
// 1 = Verifica o valor minimo de retencao
// 2 = Nao verifica o valor minimo de retencao
If !Empty( SE2->( FieldPos( "E2_APLVLMN" ) ) ) .and. SE2->E2_APLVLMN == "2"
	lAplVlMin := .F.
Endif

If lBaseSE2 .And. SE2->(E2_BASEPIS + E2_BASECOF + E2_BASECSL) > 0 .And.;
 (nValPgto+nPis+nCofins+nCsll+nIrrf+nIss+nDescont+nTotAbat-nJuros-nMulta) > If(!Empty(SE2->E2_BASEPIS),SE2->E2_BASEPIS,If(!Empty(SE2->E2_BASECOF),SE2->E2_BASECOF,SE2->E2_BASECSL))
	nBaseRet := If(!Empty(SE2->E2_BASEPIS),SE2->E2_BASEPIS,If(!Empty(SE2->E2_BASECOF),SE2->E2_BASECOF,SE2->E2_BASECSL))
Else			
	nBaseRet := nValPgto+nDescont+nTotAbat-nJuros-nMulta		
	If !lPccBaixa
		nBaseRet += nPis+nCofins+nCsll
	EndIf	
		
	If !lInssBx
		nBaseRet += nInss
	EndIf		
		
	If !lIRPFBaixa
		nBaseRet += nIrrf
	EndIf
		
	If !lCalcIssBx
		nBaseRet += nIss
	EndIf
		
	If !lSest
		nBaseRet += SE2->E2_SEST
	Endif
	
Endif

DEFAULT nTxMoeda := 0
If SE2->E2_SALDO + SE2->E2_SDACRES == 0
	Return .f. /*Function fA080Grv*/
Endif

lGerouSef := .F.

//verifica se existem os campos de valores de acrescimo e decrescimo no SE5
If SE5->(FieldPos("E5_VLACRES")) > 0 .and. SE5->(FieldPos("E5_VLDECRE")) > 0
	lAcreDecre := .T.
	If  nAcresc > nValPgto .And. Funname() == "FINA450"
  		nAcresc	:= nValPgto   
 	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava Dados do Vendor										 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If TrazCodMot(cMotBx) == "VEN"
	Fa080GrVen( @cTitOrig, lPadraoVd, cLanca )
End

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza a baixa do titulo									 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lIRPFBaixa .and. nValPgto < nIrrf .and. nValPgto != 0.01 .and. cNccIr == '1'
	nValPadrao := nValPgto
ElseIf lIRPFBaixa .and. nValPgto < nIrrf .and. cNccIr == '2' 
	If nValPgto == 0
		nValPadrao := SE2->E2_SALDO
	Else
		nValPadrao := nValPgto
	EndIf
Else
	nValPadrao := nValPgto- (Iif(SE2->E2_MOEDA<=1,nCM,0)+nJuros+nMulta-nDescont+nOtrga+nImpSubst+nAcresc-nDecresc)
	nValPadrao += IIF(lPccBaixa ,nPis+nCoFins+nCsll, 0)
	nValPadrao += IIF(lIRPFBaixa ,nIrrf, 0)
	nValPadrao += IIF(lCalcIssBx ,nIss, 0)
	nValPadrao += IIF(lInssBx ,nInss,0)
EndIf
*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
*³Verifica se saldo estava em outra moeda, caso estiver, converte valor ³
*³recebido pela taxa diaria da moeda									³
*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc<>"BRA"
	nMoedaBco:=Iif(nMoedaBco>0,nMoedaBco,1)
	nTxMoeda:=Iif (SE2->E2_MOEDA > 1 ,aTxMoedas[SE2->E2_MOEDA][2],aTxMoedas[nMoedaBco][2])
EndIF
If SE2->E2_MOEDA<=1
	nSaldo := Round(SE2->E2_SALDO-xMoeda(nValPadrao,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1)
Else
    If nModulo == 17 //Baixa SIGAEIC
    	nSaldo := Round(NoRound(SE2->E2_SALDO-nValEstrang,nCentMd1+1),nCentMd1)
    Else
		If cPaisLoc == "BRA"
			//Caso ainda nao exista baixa
			nValNArred	:= Round(SE2->E2_VALOR * nTxMoeda,4)
			If SE2->E2_SALDO == SE2->E2_VALOR
				nSaldo := Round(NoRound(SE2->E2_SALDO-xMoeda(Iif(nValPgto < nValNArred .and. nValEstrang == SE2->E2_SALDO,nValNArred,nValPadrao),nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
			Else
				nSaldo := Round(NoRound(SaldoTit(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_NATUREZ,"P",SE2->E2_FORNECE,1,,,SE2->E2_LOJA,,nTxMoeda) - nValPadrao, nCentMd1+1),nCentMd1)
			Endif
		Else
			nSaldo := Round(NoRound(SE2->E2_SALDO-xMoeda(nValPadrao,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
		Endif
	EndIf
EndIf
//Verifico se existe tolerancia de pagamento
If nSaldo != 0 .and. nToler > 0
	//Pagamentos a menor
	If nToler > 0 .And. nSaldo > 0
		If nSaldo <= nToler
			nDescont += nSaldo
			nSaldo   := 0	
		EndIf
	//Pagamentos a maior
	ElseIf nToler > 0 .and. nSaldo < 0
		nJuros += Abs(nSaldo)
		nSaldo += Abs(nSaldo)
	Endif
Else
	If nSaldo >= 0.01
		If cPaisLoc <> "BRA" .And. SE2->E2_MOEDA<=1  
			nSaldo := Round(NoRound(SE2->E2_SALDO-xMoeda(nValPadrao,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
		Else	
			If nValPadrao == 0.01 .And.	SE2->E2_SALDO == nValPadrao+nIrrf+nPis+nCsll+nCofins+nIss+nInss
				nSaldo := 0
			Else		
				nSaldo := Round(NoRound(SE2->E2_SALDO-xMoeda(nValPadrao,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
			EndIf
		EndIf	
	Else
		nSaldo := 0
	Endif
Endif	

nSalTit := Round(NoRound(xMoeda(SE2->E2_SALDO,SE2->E2_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),3),2) //Converte o saldo do titulo a moeda 1.

If lMVCNBImpg .And. lPccBaixa .And. (nSalTit == 0 .Or. (lCNAB .and. nSalTit > 0 .and. ( nSalTit < nValPadrao .Or. lVlrMaior)) )
	//Caso haja pagamento do titulo mais de uma vez e o titulo ja se encontre 
	//baixado, gero um PA para informar o pagamento a maior em minha conta bancaria.
	//Este processo somente sera "startado" se for num retorno 
	//CNAB (lCNAB = .T.) e se for parametrizado para tal (MV_PAG2TIT = "1")
	If SuperGetMv("MV_PAG2TIT",,"2") == "1" .and. lCNAB  
		//Gero PA na SE2 e seu movimento na SE5
		nSaldoAtu := nSalTit
		nValPa	 := IIF(lVlrMaior, nVlrMaior, nValPgto)
		lBxParc	 := lVlrMaior
		//Verifico se o titulo sofreu apenas uma baixa parcial antes da recepcao do CNAB
		//Neste caso o valor do adiantamento será o valor do principal pago a maior
       If nSalTit > 0 .and. nSalTit < nValPadrao
			nValPgto	:= nSaldoAtu+(nJuros+Iif(SE2->E2_MOEDA<=1,nCm,0)+nMulta-nDescont-nTotAbat+nAcresc-nDecresc)
			nValPa		:= nValPadrao - nSalTit
			nValPadrao	:= nValPgto-(nJuros+Iif(SE2->E2_MOEDA<=1,nCm,0)+nMulta-nDescont-nTotAbat+nAcresc-nDecresc)
			lBxParc		:= .T.
		Endif
		For nX := 1 To fCount() 
			IF Alltrim(FieldName(nX)) $ "E2_PREFIXO#E2_NUM#E2_NATUREZ#E2_FORNECE#E2_LOJA#E2_NOMFOR#E2_FILORIG"
				Aadd(aCamposSE2, {FieldName(nX), FieldGet(nX)})
			Endif
		Next
	   	nRecNow := SE2->(RECNO())
		nOrdNow := SE2->(IndexOrd())
		//Verifico Parcela	
		cParcPA := GetMv("MV_1DUP")
		SE2->(dbSetOrder(1))
		While SE2->(dbSeek(xFilial("SE2")+SE2->(E2_PREFIXO+E2_NUM)+cParcPA+Substr(MVPAGANT,1,3)))
			cParcPa := Soma1(cParcPa)
		Enddo
		
		aTit := {}
		For nX := 1 To Len(aCamposSE2)
			If !Empty(aCamposSE2[nX][2])
				AADD(aTit , {aCamposSE2[nX][1] , aCamposSE2[nX][2] , NIL})
			Endif	
		Next
	
		aTit	:= {}
		SE2->(DbGoTo(nRecNow))
		AADD(aTit , {"E2_FILIAL" ,xFilial("SE2")        			,NIL})	
		AADD(aTit , {"E2_PREFIXO",SE2->E2_PREFIXO       			,NIL})
		AADD(aTit , {"E2_NUM"    ,SE2->E2_NUM              		,NIL})	
		AADD(aTit , {"E2_PARCELA",SE2->E2_PARCELA       		   ,NIL})
		AADD(aTit , {"E2_TIPO"   ,MVPAGANT                  		,NIL})
		AADD(aTit , {"AUTBANCO"	, cBanco							, NIL})
		AADD(aTit , {"AUTAGENCIA", cAgencia						, NIL})
		AADD(aTit , {"AUTCONTA"	, cConta							, NIL})
		AADD(aTit , {"E2_NATUREZ",SE2->E2_NATUREZ    		      ,NIL})
		AADD(aTit , {"E2_FORNECE",SE2->E2_FORNECE          		,NIL})
		AADD(aTit , {"E2_LOJA"   ,SE2->E2_LOJA            	      ,NIL})
		AADD(aTit , {"E2_EMISSAO",Ddatabase                   ,NIL})
	   	AADD(aTit , {"E2_VENCTO" ,Ddatabase                   ,NIL})
		AADD(aTit , {"E2_VENCREA",Ddatabase   						,NIL})
		AADD(aTit , {"E2_VALOR"  ,nValPa                 		 ,NIL})
		AADD(aTit , {"E2_EMIS1"  ,Ddatabase                	 ,NIL})
		AADD(aTit , {"E2_VLCRUZ" ,nValPa           		       ,NIL})
		AADD(aTit , {"E2_HIST"   ,STR0210					    ,NIL}) //"Adiant.Bx.Duplicada-CNAB" 
		AADD(aTit , {"E2_ORIGEM" ,"FINA430"               		 ,NIL})

		Pergunte("FIN050",.F.)
		mv050old := mv_par09
		mv_par09 := 1
	
		MSExecAuto({|x, y, z| FINA050(x, y, z)}, aTit,, 3)
	
		If lMsErroAuto
			MostraErro()
		Else
			If ExistBlock("F80PCNB")		
				Execblock("F80PCNB",.F.,.F.)  // Dados complementares na PA do CNAB
			EndIf
		EndIf

		mv_par09 := mv050old
		Pergunte("AFI430",.F.)
		
		SE2->(DbGoTo(nRecNow))
		If !lBxParc
			Return .f.
		Endif
	Else
		Return .f.
	Endif
Endif

If SE2->E2_MOEDA > 1
	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³For‡a saldo = 0 quando diferen‡a == 0.01 por problema de arredondamento³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Round(NoRound(nSaldo,3),2) <= 0.01
		nSaldo := 0
	Endif
Endif

If lAtuSldNat
	// Caso seja a baixa do titulo provisório em sua subistituição não deve-se atualizar o saldo da natureza
	If !(lSubstPR .And. !lDelProvis) .And. !lMultNat
		// Nao precisa atualizar a baixa dos abatimentos, pois o valor pago jah eh liquido dos abatimentos
		AtuSldNat(SE2->E2_NATUREZ, dBaixa, SE2->E2_MOEDA, "3", "P", Iif(SE2->E2_MOEDA > 1, nValEstrang, nValpgto),Iif(SE2->E2_MOEDA > 1, nValpgto, nValEstrang) , If(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG,"-","+"),,FunName(),"SE2",SE2->(Recno()),0)	
	EndIf
Endif

If !(SE2->E2_TIPO $ MVTXA+"#"+MVPAGANT+"#"+"INA") .or. (SE2->E2_TIPO $ "INA#"+MVTXA+"#"+MVPAGANT .and. lBxTxa) //Não atualiza os campos de baixa no SE2 para titulos de INSS Antecipado
	RecLock("SE2")
	nSE2Rec := Recno()
	SE2->E2_BAIXA	  := iif(SE2->E2_BAIXA <= dBaixa, dBaixa, SE2->E2_BAIXA)
	SE2->E2_LOTE	  := cLoteFin
	SE2->E2_MOVIMEN  := dBaixa
	SE2->E2_DESCONT  := nDescont + nDecresc
	SE2->E2_MULTA	  := nMulta
	If ( cPaisLoc != "BRA" )
		If SE2->E2_MOEDA<=1
			SE2->E2_VALLIQ := Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
		Else
			SE2->E2_VALLIQ :=Round(NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
		EndIf
	Else
	  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	  	//³ Caso tenha sido gerado pelo SigaEic ³
	  	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Type("lIntegracao")<>"U" .and. lIntegracao .And. UPPER(ALLTRIM(SE2->E2_ORIGEM)) == "SIGAEIC" .And.;
	  			cTipoCM =='T' .And. FunName() <> "FINA080"
	  		SE2->E2_VALLIQ := If (E2_VLCRUZ == nValTot, nValpgto, nValTot)
		ELse
			SE2->E2_VALLIQ := nValpgto
		Endif	
	Endif

	If  Round(NoRound(nValPgto,3),2) < Round(Noround(xMoeda(SE2->E2_SDACRES,SE2->E2_MOEDA,nMoedaBco,dDataBase,3,,nTxMoeda),3),2)
		If SE2->E2_MOEDA > 1 .And. nMoedaBco == 1 //Título em moeda estrangeira com banco em moeda 1
			SE2->E2_SDACRES  -= nValEstrang
		Else
			SE2->E2_SDACRES  -= nValPgto		
		EndIf
	Else
		SE2->E2_SDACRES  := 0
	EndIf
	
	SE2->E2_SDDECRE  := 0
	If cPaisLoc == "CHI"
		IIf (SE2->(FieldPos("E2_OTRGA"))  > 0,SE2->E2_OTRGA    := nOtrga,.T.)   
	   	IIf (SE2->(FieldPos("E2_CAMBIO")) > 0,SE2->E2_CAMBIO   := SE2->E2_CAMBIO + nDifCambio,.T.)        
	   	IIf (SE2->(FieldPos("E2_IMPSUBS")) > 0,SE2->E2_IMPSUBS := nImpSubst,.T.)
		SE2->E2_JUROS	:= nOtrga + nImpsubst
		SE2->E2_CORREC	:= nDifCambio   
	Else
		SE2->E2_JUROS	:= nJuros + nAcresc
		SE2->E2_CORREC	:= nCm
	EndIf
	If !Empty(cBanco)
		SE2->E2_BCOPAG   := cBanco
	Endif
	If !Empty(cCheque)
		SE2->E2_NUMBCO   := cCheque
	Endif
	//Para TOP limpa-se a marca.
	//Para Codebase gravo "xx" para manter o titulo no filtro e possibilitar contabilizacao
	//e baixa correta.
	#IFDEF TOP
		If TcSrvType() == "AS/400" .or. TcSrvType() == "iSeries"  //"iSeries" eh o retorno do Top4 para AS/400
			SE2->E2_OK		  := Iif(E2_OK==cMarca,"xx" ,E2_OK)	
		Else
			SE2->E2_OK		  := Iif(E2_OK==cMarca,"  " ,E2_OK)
		Endif
	#ELSE
		SE2->E2_OK		  := Iif(E2_OK==cMarca,"xx" ,E2_OK)
	#ENDIF

	If !Empty(cPortado)
		SE2->E2_PORTADO  := cPortado
	Endif
	If TrazCodMot(cMotBx) == "VEN"
		SE2->E2_TITORIG	:= cTitOrig
	Endif

	//Marco que o titulo tem os impostos calculados
	//pela baixa (Pis, Cofins e Csll)
	If lContrRet .And. lPCCBaixa .and. !(lBordero .and. nSaldo <> 0) 
		SE2->E2_PRETPIS := "3"
		SE2->E2_PRETCOF := "3"
		SE2->E2_PRETCSL := "3"
	Endif
	
	IF Str(nSaldo,16,2)=Str(nTotAbat,16,2)
		nSaldo := 0
	Endif
     
	//Verifica se existe solicitacao de NCP e caso exista atualiza o campo CU_DTBAIXA...
	If cPaisLoc <> "BRA" 
		A055AtuDtBx("1",SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_NUM,SE2->E2_PREFIXO,SE2->E2_BAIXA)
	EndIf


	dbSelectArea("SE2")
	nSalvRec := SE2->( RecNo() )
	cNum	 := SE2->E2_NUM
	cPrefixo := SE2->E2_PREFIXO
	cParcela := SE2->E2_PARCELA
	cFornece := SE2->E2_FORNECE
	nOrdBx	 := IndexOrd()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Baixar titulos de abatimento se for baixa total				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF nSaldo = 0
	
		//Atualiza status do adiantamento de viagem
		If (ALLTRIM(SE2->E2_ORIGEM) $ "FINA667|FINA677")
			FINATURES(SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA),.T.,SE2->E2_ORIGEM,"P")
		EndIf
		
		If Select("__SE2") == 0
		   ChkFile("SE2",.F.,"__SE2")
		Else
	  	   DbSelectArea("__SE2")
		EndIf
		dbSetOrder(1)
		dbSeek(xFilial("SE2")+cPrefixo+cNum+cParcela)
		While !EOF() .And. E2_FILIAL==xFilial("SE2") .And. E2_PREFIXO=cPrefixo .And. ;
				E2_NUM==cNum .And. E2_PARCELA==cParcela
			IF E2_TIPO $ MVABATIM .And. E2_FORNECE==cFornece
				RecLock("__SE2")
				Replace E2_SALDO		With 0
				Replace E2_BCOPAG		With cBanco
				Replace E2_BAIXA		With dBaixa
				Replace E2_LOTE		With cLoteFin
				Replace E2_MOVIMEN	With dBaixa
				Replace E2_SDACRES  With 0
				Replace E2_SDDECRE  With 0
			Endif
			dbSkip()
		Enddo
	Endif

	dbSelectArea("SE2")
	dbGoto(nSalvRec)
ElseIf !lBxTxa .and. SE2->E2_OK <> 'TA' 
	RecLock("SE2")	
	SE2->E2_OK := 'TA'			    		
	SE2->E2_BAIXA	  := iif(SE2->E2_BAIXA <= dBaixa, dBaixa, SE2->E2_BAIXA)
	MsUnlock()
EndIf

nSalvRec := SE2->( RecNo() )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada p/ alteracao da data de vencto do IR (Salvador) ³
//³ Guardo o Recno para caso o Rdmake nao retorne ao titulo baixado, ³
//³ o sistema force isto, evitando problemas na continuidade do pro- ³
//³ cesso de baixa do titulo.                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lFa080VIR .and. !Empty(SE2->E2_IRRF)
	nRecno := SE2->(Recno())
	Execblock("FA080VIR",.F.,.F.)
	dbGoTo(nRecno)
	nRecno := 0
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza a Movimentacao Bancaria							 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lIRPFBaixa .and. nValpgto < nIrrf
	nValPadrao := nValPgto
Else
	nValPadrao := nValPgto-(nJuros+nMulta+nAcresc)+(nDescont+nDecresc+nPis+nCoFins+nCsll+nIrrf+nIss) //Valor Original
EndIf
nJuros := nJuros + nAcresc
nDescont := nDescont + nDecresc
cSequencia 	:= Replicate("0",nTamSeq)

If SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
	lAdiantamento := .t.
	fa080adiant( lPadraoBx, cLanca, nTxMoeda, lUsaFlag )
Endif

//Caso o titulo nao tenha impostos e os mesmos tenham sido digitados manualmente,
//altero variavel para gravacao dos titulos de impostos
If Empty(nVlImpPCC) .And. nPis+nCofins+nCsll > 0
	lRetManual := .T.
EndIf

If !lAdiantamento
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Para numerar as sequencias o sistema precisa procurar os   ³
	//³ registros com  tipodoc igual a vl ou ba.				   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aTipoSeq := { "VL","BA","CP" }
	dbSelectArea("SE5")
	SE5->(dbSetOrder(2))
	For nLaco := 1 to len(aTipoSeq)
		SE5->(dbSeek(xFilial("SE5") + aTipoSeq[nLaco] + SE2->E2_PREFIXO + SE2->E2_NUM + ;
			SE2->E2_PARCELA + SE2->E2_TIPO) )

		While !SE5->(Eof()) .And. ;
				SE5->E5_FILIAL == xFilial("SE5") .And. ;
				SE5->E5_TIPODOC == aTipoSeq[nLaco] .And. ;
				SE5->E5_PREFIXO == SE2->E2_PREFIXO .And. ;
				SE5->E5_NUMERO == SE2->E2_NUM .And. ;
				SE5->E5_PARCELA == SE2->E2_PARCELA .And. ;
				SE5->E5_TIPO == SE2->E2_TIPO

			If SE5->(E5_CLIFOR+E5_LOJA) == SE2->(E2_FORNECE+SE2->E2_LOJA)
				If PadL(AllTrim(cSequencia),nTamSeq,"0") < PadL(AllTrim(SE5->E5_SEQ),nTamSeq,"0")
					cSequencia := SE5->E5_SEQ
				EndIf
			EndIf

			SE5->( dbSkip() )
		Enddo
	Next
	If Len(cSequencia) < nTamSeq
		cSequencia := PadL(cSequencia,nTamSeq,"0")
	Endif
	cSequencia := Soma1(cSequencia,nTamSeq)
	For i:=1 To 6
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza a Movimentacao Bancaria 							 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF i==1
			cCpoTp := "nDescont"
			cTpDoc := "DC"
			cHistMov := OemToAnsi( STR0107 ) //"Desconto s/Pgto de Titulo"
		Elseif i==2
			cCpoTp := IIf(cPaisLoc<>"CHI","nJuros","nOtrga")
			cTpDoc := "JR"
			cHistMov := OemToAnsi( STR0108 ) //"Juros s/Pgto de Titulo"
		Elseif i==3
			cCpoTp := "nMulta"
			cTpDoc := "MT"
			cHistMov := OemToAnsi( STR0109 ) //"Multa s/Pgto de Titulo"
		Elseif i==4
			cCpoTp := IIf(cPaisLoc<>"CHI","nCM","nDifCambio")
			cTpDoc := "CM"
			cHistMov := OemToAnsi( STR0110 ) //"Correcao Monet s/Pgto de Titulo"
		Elseif i==5
			cCpoTp := "nImpSubst"
			cTpDoc := "IS"
			cHistMov := OemToAnsi( STR0108 ) //"Juros s/Pgto de Titulo"
		Elseif i==6
		   If UPPER(SE2->E2_ORIGEM) == "SIGAEIC" .And. Type("lIntegracao")<>"U" .and. lIntegracao .and. Type("nValEIC")<>"U" .And. cTipoCM =='T'
		   		cCpoTp := "nValEIC"
		   Else
				cCpoTp := "nValPgto"
		   Endif	
			cTpDoc := Iif(MovBcoBx(cMotBx, .T.),"VL","BA")
			//Se o motibo de baixa gerar cheque, pelas novas especificacoes, será gravado:
			//um movimento BA para a baixa
			//um movimento CH na geração do cheque
			If ChqMotBx(cMotBx) .or.;				
				SUBSTR(cMotBx,1,3) == "CEC" .or. SE2->E2_IMPCHEQ == "S" .or. ;
				GetMv("MV_LIBCHEQ") == "N"  .or. (lCnab .and. !Empty(cLoteFin))
				cTpDoc := "BA"
			Endif
			If (lCnab .AND. Empty(cLoteFin)) .or. ;
					(cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .and. MovBcoBx(cMotBx, .T.)) .or. ;
					(IF("FINA430" == FunName(),GetMv("MV_BXCNAB") == "N",.T.) .And. cBanco $ GetMv("MV_CARTEIR") .and. MovBcoBx(cMotBx, .T.)) .or. ;
					(MovBcoBx(cMotBx, .T.) .and. !ChqMotBx(cMotBx) .and. !lCnab)
				cTpDoc := "VL"		// For‡a mov banc ria quando CAIXA ou Via CNAB
			Endif
			cHistMov := Iif(!Empty(cHist070),cHist070,OemToAnsi( STR0111 )) //"Valor pago s /Titulo"
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe cheque j  relacionado anteriormente para  ³
		//³ este t¡tulo. Deve buscar pelo registro do Cheque com a se-   ³
		//³ quencia em branco (Cheque gerado pelo FINA390 - Cheque s/    ³
		//³ t¡tulo.                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFina390
			dbSelectArea("SEF")
			dbSetOrder(3)
			cChave_EF := xFilial("SEF")+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO
			If DbSeek(cChave_EF)
				DO WHILE (cChave_EF == SEF->EF_FILIAL + SEF->EF_PREFIXO+SEF->EF_TITULO;
					+SEF->EF_PARCELA+SEF->EF_TIPO) .and. !(SEF->(EOF()))

					IF Empty(SEF->EF_SEQUENC) .and. SEF->EF_FORNECE+SEF->EF_LOJA == SE2->E2_FORNECE+SE2->E2_LOJA
						cBanco  :=SEF->EF_BANCO
						cAgencia:=SEF->EF_AGENCIA
						cConta  :=SEF->EF_CONTA
						cCheque :=SEF->EF_NUM
						nRegSEF := RECNO()
						EXIT
					Endif
					SEF->(DbSkip())
				ENDDO
			Endif
		Endif

		IF &cCpoTp != 0 .or. i == 6 
		
		    lRet := DtMovFin(dDatabase)
		    IF !lret
		       return(.f.)
		    Endif
		        
			RecLock("SE5",.T.)
			SE5-> E5_FILIAL 	:= cFilial
			SE5-> E5_BANCO		:= cBanco
			SE5-> E5_AGENCIA	:= cAgencia
			SE5-> E5_CONTA		:= cConta
			SE5-> E5_DATA		:= dBaixa
			SE5-> E5_HISTOR 	:= cHistMov
			If ( cPaisLoc <> "BRA" )
				nMoedaBco := Max( SA6->A6_MOEDA, 1)
				SE5->E5_VALOR   := Round(NoRound(xMoeda( &cCpoTp, 1, nMoedaBco,,nCentMd1+1,, nTxModBco ),nCentMd1+1),nCentMd1)
				SE5->E5_VLMOED2 := Round(NoRound(xMoeda( &cCpoTp, 1, nMoedaTit,,nCentMd1+1,, nTxModTit ),nCentMd1+1),nCentMd1)
				If( SE5->(FieldPos("E5_TXMOEDA"))>0, SE5->E5_TXMOEDA:=nTxModBco,.T. )
				SE5->E5_MOEDA := StrZero(nMoedaBco,2)
			Else
				nMoedaBco 		:= Max( SA6->A6_MOEDA, 1)
				If lIRPFBaixa .and. nValPgto < nIrrf .and. cNccIr == "1" // se o valor do imposto for maior que o valor do saldo
					SE5->E5_VALOR	:= 0.01
					If SE2->E2_MOEDA == 1
						SE5-> E5_VLMOED2 := 0.01
					EndIf
				Else
					SE5->E5_VALOR	:= &cCpoTp
				Endif
				SE5->E5_MOEDA 	:= StrZero(nMoedaBco,2)
			EndIf
			SE5-> E5_NATUREZ	:= SE2->E2_NATUREZ
			SE5-> E5_RECPAG 	:= "P"
			SE5-> E5_TIPO		:= SE2->E2_TIPO
			SE5-> E5_NUMCHEQ	:= cCheque
		   
		   If IsInCallStack("Fa050Subst") //Baixa ref. substituicao de titulo Provisorio para Efetivo.
				SE5-> E5_LA			:= "S"
		   Else		   
				SE5-> E5_LA			:= If( lPadraoBx .And. ( cLanca == "S" ), "S", "N" )
			Endif
				
			SE5-> E5_TIPODOC	:= cTpDoc
			SE5-> E5_LOTE		:= cLoteFin
			SE5-> E5_PREFIXO	:= SE2->E2_PREFIXO
			SE5-> E5_NUMERO 	:= SE2->E2_NUM
			SE5-> E5_PARCELA	:= SE2->E2_PARCELA
			SE5-> E5_FORNECE	:= SE2->E2_FORNECE
			SE5-> E5_CLIFOR 	:= SE2->E2_FORNECE
			SE5-> E5_LOJA		:= SE2->E2_LOJA
			SE5-> E5_BENEF		:= IIF(Empty(cBenef),SE2->E2_NOMFOR,cBenef)
			If lTpDesc .AND. lE2TpDesc .and. SE2->E2_DECRESC > 0  .and. nDescont == nDecresc 
				SE5-> E5_TPDESC	:= SE2->E2_TPDESC
			ElseIf lTpDesc	
				SE5-> E5_TPDESC	:= cTpDesc			
			Endif
   		
			SE5-> E5_DTDIGIT	:= dDataBase
			SE5-> E5_MOTBX		:= TrazCodMot(cMotBx)
			
			If cPaisLoc = "BRA"
				If nValEstrang != 0 .and. i == 6  // VL ou BA
					If SE5-> E5_VLMOED2 != 0.01
						SE5-> E5_VLMOED2	:= nValEstrang
					EndIf
				Else
					SE5-> E5_VLMOED2	:= Iif(i!=4 .or. SE2->E2_MOEDA<=1,Round(NoRound(xMoeda(&cCpoTp.,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1),0)
				EndIf
			EndIf
			SE5->E5_SEQ		:= cSequencia
			SE5->E5_DOCUMEN	:= If(Empty(cNumBor),SE2->E2_NUMBOR,cNumBor) // Vem do Fina240()
			If lE5Orig
				SE5->E5_ORIGEM	:= FunName()
			Endif
			SE5->E5_DTDISPO	:= dDebito
			SE5->E5_ARQCNAB	:= cArqEnt
			SE5->E5_FILORIG	:= SE2->E2_FILORIG
			If lSpbInUse
				SE5->E5_MODSPB := cModSpb
			Endif
			//Gravo Marca da MultNat
			If MV_MULNATP .and. lMultNat
				SE5->E5_MULTNAT  := "1"
			Endif
			If cPaisLoc == "BRA" .And. SE2->E2_MOEDA > 1
				SE5->E5_TXMOEDA := nTxMoeda
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava os valores agregados ao titulo no totalizador ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If i == 6		// registro totalizador
				Replace E5_VLMULTA With nMulta
				Replace E5_VLDESCO With nDescont
				If cPaisloc <> "CHI"
					Replace E5_VLJUROS With nJuros
					Replace E5_VLCORRE With nCm
				Else
					Replace E5_VLJUROS With nOtrga + nImpSubst
					Replace E5_VLCORRE With nDifcambio
				EndIf
				If lAcreDecre
					SE5->E5_VLACRES	:= nAcresc
					SE5->E5_VLDECRE := nDecresc
				Endif	
				//Autenticacao bancaria
			   	IIf (SE5->(FieldPos("E5_AUTBCO"))> 0,SE5->E5_AUTBCO := cAutentica, .T.)   
				If lCalcIssBx 
					SE5->E5_VRETISS := nIss
				Endif

				nSavRec := SE5->( Recno() ) 

				If lIRPFBaixa
					//IRRF - BAIXA
					If SE2->E2_VALOR < nIrrf .and. cNccIr == "1"
						If nValPgto == 0.01
							nDifIr := Abs(SE2->E2_SALDO - nIrrf) + nValPgto
						Else
							nDifIr := Abs(nValPgto - nIrrf) + 0.01
						EndIf
						aAreaTit := SE2->(GetArea())
						ADupCredRt(nDifIr,"501",SE2->E2_MOEDA,.T.)
						RestArea(aAreaTit)
						SFQ->FQ_SEQORI := cSequencia
					Endif
					If lNewIrBx
						SE5->( MsUnlock() )
						FGRVSFQIR(nIrrf,nBaseIrpf,aDadosIr,cSequencia)
						SE5->( MsGoto(nSavRec) )
						RecLock("SE5",.F.)
					Else
						SE5->E5_VRETIRF := nIrrf
						If lBaseIRPF
							SE5->E5_BASEIRF := nBaseIrpf
						Endif
					Endif
					
					//Se o título estiver em bordero, verifica se gerou título IR (fina241) ou nao (fina240)
					If !Empty(SE2->E2_NUMBOR) .and. SE2->E2_VRETIRF > 0 .and. (EMPTY(SE2->E2_PRETIRF) .or. SE2->E2_PRETIRF == "1")

						aAreaSE2 := SE2->(GetArea())
						cChaveIR := SE2->(E2_PREFIXO+E2_NUM+E2_PARCIR)+MVTAXA
					
						aAreaSA2 := SA2->(GetArea()) 
						dbSelectArea("SA2")
						If (dbSeek(xFilial("SA2")+GetMV("MV_UNIAO")))
				   			cChaveIR +=SA2->(A2_COD+A2_LOJA)				
						Endif
						cFilter := SE2->(DbFilter())
						dbSelectArea("SE2")
						dbSetOrder(1)
						If !Empty(cFilter)
							//Limpa o filtro para fazer a pesquisa do titulo de IR
							//pois na baixa em lote a SE2 vem filtrada somente com os titulos selecionado
							SET FILTER TO
						EndIf
						If SE2->(dbSeek(xFilial("SE2")+cChaveIR)) 
							lGerTXBord := .F.
						Endif            
						//volta o filtro
						SET FILTER TO &cFilter.
						SE2->(RestArea(aAreaSE2))   
						SA2->(RestArea(aAreaSA2))
						If !lGerTXBord
							//grava a geracao do IR na movimentacao da baixa, para que nao seja considerado na baixa de outro titulo
							// pois já foi retido na geracao do bordero
							SE5->E5_VRETIRF := SE2->E2_VRETIRF
							SE5->E5_PRETIRF := "4"
							SE5->E5_BASEIRF := SE2->E2_BASEIRF
						Endif	
					EndIf		
					
				Endif                      
					
				If lContrRet .and. lPccBaixa 

					SE5->E5_VRETPIS := nPis
					SE5->E5_VRETCOF := nCofins
					SE5->E5_VRETCSL := nCsll
					
					If (dBaixa < dLastPCC  .Or. lEmpPub)
						Do Case 
						Case cModRetPIS == "1" 
							If (aDadosRet[1] + nBaseRet	> nVlMinImp .OR. !lAplVlMin) .AND. ;
								(nPis + nCofins + nCsll > 0)
								
								lRetParc := .T. 
						
								//Rotina para gerar titulo de adiantamento
								If cNCCRet == "1" .and. nDiferImp < 0 
									FGerCredRt(Abs(nDiferImp),SE2->E2_MOEDA,SE5->E5_SEQ)						
								Endif			
								nSavRec := SE5->( Recno() ) 
									
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Exclui a Marca de "pendente recolhimento" dos demais registros   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If aDadosRet[1] > 0
									aRecnos := aClone( aDadosRet[ 6 ] ) 
							
									cPrefOri  := SE5->E5_PREFIXO
									cNumOri   := SE5->E5_NUMERO
									cParcOri  := SE5->E5_PARCELA
									cTipoOri  := SE5->E5_TIPO
									cCfOri    := SE5->E5_CLIFOR
									cLojaOri  := SE5->E5_LOJA
											
									For nLoop := 1 to Len( aRecnos )
										
										SE5->( dbGoto( aRecnos[ nLoop ] ) )
											
										RecLock( "SE5", .F. ) 
										
										If !Empty(SE5->E5_PRETPIS) .And. !Empty(SE5->E5_PRETCOF) .And. !Empty(SE5->E5_PRETCSL);
											.and. SE5->E5_PRETPIS <> "7" .And. SE5->E5_PRETCOF <> "7" .And. SE5->E5_PRETCSL<> "7"
											SE5->E5_PRETPIS := "2"
											SE5->E5_PRETCOF := "2"
											SE5->E5_PRETCSL := "2"
										EndIf
																		
										If lIRPFBaixa .and. SE5->E5_PRETIRF == "1"
											SE5->E5_PRETIRF := "2"									
										Endif             
										
										SE5->( MsUnlock() )  																								
				
										If FindFunction("ALIASINDIC")
											If AliasIndic("SFQ") 
												If nSavRec <> aRecnos[ nLoop ] 
													dbSelectArea("SFQ")
													RecLock("SFQ",.T.)
													SFQ->FQ_FILIAL  := xFilial("SFQ")
													SFQ->FQ_ENTORI  := "SE5"
													SFQ->FQ_PREFORI := cPrefOri
													SFQ->FQ_NUMORI  := cNumOri
													SFQ->FQ_PARCORI := cParcOri
													SFQ->FQ_TIPOORI := cTipoOri										
													SFQ->FQ_CFORI   := cCfOri
													SFQ->FQ_LOJAORI := cLojaOri
													SFQ->FQ_SEQORI  := cSequencia
													
													SFQ->FQ_ENTDES  := "SE5"
													SFQ->FQ_PREFDES := SE5->E5_PREFIXO
													SFQ->FQ_NUMDES  := SE5->E5_NUMERO
													SFQ->FQ_PARCDES := SE5->E5_PARCELA                             
													SFQ->FQ_TIPODES := SE5->E5_TIPO
													SFQ->FQ_CFDES   := SE5->E5_CLIFOR
													SFQ->FQ_LOJADES := SE5->E5_LOJA
													SFQ->FQ_SEQDES  := SE5->E5_SEQ
	
													//Grava a filial de destino caso o campo exista
													If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
														SFQ->FQ_FILDES := SE5->E5_FILIAL 
													EndIf 											
	
													MsUnlock()
												Endif								
											Endif					
										Endif	
									Next nLoop 
	
									aRecSFQ := aClone( aRecnosSE2 )
													
									//Emissao
									For nLoop := 1 to Len( aRecSFQ )
								
										SE2->( dbGoto( aRecSFQ[nLoop]) )
												
										RecLock( "SE2", .F. ) 
										
										SE2->E2_PRETPIS := "2"
										SE2->E2_PRETCOF := "2"
										SE2->E2_PRETCSL := "2"
																		
										SE2->( MsUnlock() )  																								
							
										If FindFunction("ALIASINDIC")
											If AliasIndic("SFQ") 
												dbSelectArea("SFQ")
												RecLock("SFQ",.T.)
												SFQ->FQ_FILIAL  := xFilial("SFQ")
												SFQ->FQ_ENTORI  := "SE2"
												SFQ->FQ_PREFORI := cPrefOri
												SFQ->FQ_NUMORI  := cNumOri
												SFQ->FQ_PARCORI := cParcOri
												SFQ->FQ_TIPOORI := cTipoOri										
												SFQ->FQ_CFORI   := cCfOri
												SFQ->FQ_LOJAORI := cLojaOri
												
												SFQ->FQ_ENTDES  := "SE2"
												SFQ->FQ_PREFDES := SE2->E2_PREFIXO
												SFQ->FQ_NUMDES  := SE2->E2_NUM
												SFQ->FQ_PARCDES := SE2->E2_PARCELA                             
												SFQ->FQ_TIPODES := SE2->E2_TIPO
												SFQ->FQ_CFDES   := SE2->E2_FORNECE
												SFQ->FQ_LOJADES := SE2->E2_LOJA 
												SFQ->FQ_SEQORI  := cSequencia
							
												//Grava a filial de destino caso o campo exista
												If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
													SFQ->FQ_FILDES := SE2->E2_FILIAL 
												EndIf 											
												MsUnlock()
											Endif								
										EndIf
									Next nLoop
								EndIf
						
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Retorna do ponteiro do SE2 para a parcela         ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								SE5->( MsGoto( nSavRec ) ) 
								Reclock( "SE5", .F. )														 
							Else 	
								If nVlRetPis + nVlRetCof + nVlRetCsl > 0
									Reclock( "SE5", .F. ) 
									If !lRetManual
										SE5->E5_VRETPIS := nVlRetPis
										SE5->E5_VRETCOF := nVlRetCof
										SE5->E5_VRETCSL := nVlRetCsl
										SE5->E5_PRETPIS := "1"
										SE5->E5_PRETCOF := "1"
										SE5->E5_PRETCSL := "1"
									EndIf
	
									SE5->( MsUnlock() )  																								
								Else
									//nesse caso o titulo teve seus impostos retidos em outro título, porem sua baixa foi cancelada.
									SFQ->(DBSetOrder(2))
									If SFQ->(DbSeek(xFilial("SFQ")+"SE5"+SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)))       
										//Verifico se se trata realmente de PCC
										//Apos a implementacao do IRRF na Baixa, o campo FQ_TPIMP ficou
										//Vazio = PCC
										//Preenchido = sigla do imposto (IRF, por exemplo)
										If Empty(SFQ->FQ_TPIMP)
	
											Reclock( "SE5", .F. ) 
											SE5->E5_VRETPIS := SE2->E2_PIS
											SE5->E5_VRETCOF := SE2->E2_COFINS
											SE5->E5_VRETCSL := SE2->E2_CSLL
											SE5->E5_PRETPIS := "2"
											SE5->E5_PRETCOF := "2"
											SE5->E5_PRETCSL := "2"
											SE5->( MsUnlock() )
												
											//Atualiza o registro da SFQ, apontando para a baixa correta
											RecLock("SFQ", .F.)
											SFQ->FQ_SEQDES := cSequencia
											SFQ->(MsUnlock())
										EndIf
									Endif
								EndIf
								lRetParc := .F. 
							EndIf
	
						Case cModRetPIS == "2" 
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Efetua a retencao                                                 ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							nSavRec := SE5->( Recno() ) 
								
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Exclui a Marca de "pendente recolhimento" dos demais registros   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If aDadosRet[1] > 0
								aRecnos := aClone( aDadosRet [ 6 ] ) 
						
								cPrefOri  := SE5->E5_PREFIXO
								cNumOri   := SE5->E5_NUMERO
								cParcOri  := SE5->E5_PARCELA
								cTipoOri  := SE5->E5_TIPO
								cCfOri    := SE5->E5_CLIFOR
								cLojaOri  := SE5->E5_LOJA
										
								For nLoop := 1 to Len( aRecnos )
									
									SE5->( dbGoto( aRecnos[ nLoop ] ) )
										
									RecLock( "SE5", .F. ) 
									
									If !Empty(SE5->E5_PRETPIS) .And. !Empty(SE5->E5_PRETCOF) .And. !Empty(SE5->E5_PRETCSL)
										SE5->E5_PRETPIS := "2"
										SE5->E5_PRETCOF := "2"
										SE5->E5_PRETCSL := "2"
									EndIf																																									
									SE5->( MsUnlock() )  																								
			
									If FindFunction("ALIASINDIC")
										If AliasIndic("SFQ") 
											If nSavRec <> aRecnos[ nLoop ] 
												dbSelectArea("SFQ")
												RecLock("SFQ",.T.)
												SFQ->FQ_FILIAL  := xFilial("SFQ")
												SFQ->FQ_ENTORI  := "SE5"
												SFQ->FQ_PREFORI := cPrefOri
												SFQ->FQ_NUMORI  := cNumOri
												SFQ->FQ_PARCORI := cParcOri
												SFQ->FQ_TIPOORI := cTipoOri										
												SFQ->FQ_CFORI   := cCfOri
												SFQ->FQ_LOJAORI := cLojaOri
												SFQ->FQ_SEQORI  := cSequencia
																							
												SFQ->FQ_ENTDES  := "SE5"
												SFQ->FQ_PREFDES := SE5->E5_PREFIXO
												SFQ->FQ_NUMDES  := SE5->E5_NUMERO
												SFQ->FQ_PARCDES := SE5->E5_PARCELA                             
												SFQ->FQ_TIPODES := SE5->E5_TIPO
												SFQ->FQ_CFDES   := SE5->E5_CLIFOR
												SFQ->FQ_LOJADES := SE5->E5_LOJA
												SFQ->FQ_SEQDES  := SE5->E5_SEQ											
	
												//Grava a filial de destino caso o campo exista
												If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
													SFQ->FQ_FILDES := SE5->E5_FILIAL 
												EndIf 											
	
												MsUnlock()
											Endif								
										Endif					
									Endif	
								Next nLoop 
	
								aRecSFQ := aClone( aRecnosSE2 )
													
								//Emissao
								For nLoop := 1 to Len( aRecSFQ )
								
									SE2->( dbGoto( aRecSFQ[nLoop]) )
											
									RecLock( "SE2", .F. ) 
									
									SE2->E2_PRETPIS := "2"
									SE2->E2_PRETCOF := "2"
									SE2->E2_PRETCSL := "2"
																	
									SE2->( MsUnlock() )  																								
						
									If FindFunction("ALIASINDIC")
										If AliasIndic("SFQ") 
											dbSelectArea("SFQ")
											RecLock("SFQ",.T.)
											SFQ->FQ_FILIAL  := xFilial("SFQ")
											SFQ->FQ_ENTORI  := "SE2"
											SFQ->FQ_PREFORI := cPrefOri
											SFQ->FQ_NUMORI  := cNumOri
											SFQ->FQ_PARCORI := cParcOri
											SFQ->FQ_TIPOORI := cTipoOri										
											SFQ->FQ_CFORI   := cCfOri
											SFQ->FQ_LOJAORI := cLojaOri
											
											SFQ->FQ_ENTDES  := "SE2"
											SFQ->FQ_PREFDES := SE2->E2_PREFIXO
											SFQ->FQ_NUMDES  := SE2->E2_NUM
											SFQ->FQ_PARCDES := SE2->E2_PARCELA                             
											SFQ->FQ_TIPODES := SE2->E2_TIPO
											SFQ->FQ_CFDES   := SE2->E2_FORNECE
											SFQ->FQ_LOJADES := SE2->E2_LOJA
						
											//Grava a filial de destino caso o campo exista
											If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
												SFQ->FQ_FILDES := SE2->E2_FILIAL 
											EndIf 											
											MsUnlock()
										Endif								
									Endif	
								Next nLoop
							Endif	
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Retorna do ponteiro do SE1 para a parcela         ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							SE5->( MsGoto( nSavRec ) ) 
							Reclock( "SE2", .F. ) 
							lRetParc := .T. 
						Case cModRetPIS == "3" 			
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava a Marca de "pendente recolhimento" dos demais registros    ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
							If nVlRetPis + nVlRetCof + nVlRetCsl > 0
								Reclock( "SE5", .F. ) 
								SE5->E5_VRETPIS := nVlRetPis
								SE5->E5_VRETCOF := nVlRetCof
								SE5->E5_VRETCSL := nVlRetCsl
								SE5->E5_PRETPIS := "1"
								SE5->E5_PRETCOF := "1"
								SE5->E5_PRETCSL := "1"
	
								SE5->( MsUnlock() )  																								
							EndIf	
							lRetParc := .F.
						EndCase 
					EndIf			
				EndIf
				IF lContrRet .and. lPccBaixa .And. dBaixa >= dLastPCC .And. !lEmpPub
					aAreaPub := GetArea()
					DbSelectArea("SE2")
					SE2->(DbGoto(nSalvRec))
					If SE2->(E2_PIS+E2_COFINS+E2_CSLL) > 0 .And. (nPis+nCofins+nCsll) == 0 
						Reclock( "SE5", .F. )	
						SE5->E5_PRETPIS := "1"
						SE5->E5_PRETCOF := "1"
						SE5->E5_PRETCSL := "1"
						SE5->( MsUnlock() ) 
					EndIf
					RestArea(aAreaPub)
				EndIF 					
				If lEmpPub  .And. lAplMinP .And. lIRPFBaixa 
					aAreaPub := GetArea()
					DbSelectArea("SE2")
					SE2->(DbGoto(nSalvRec))
					If SE2->(E2_PIS+E2_COFINS+E2_CSLL+E2_IRRF) > 0 .And. (nPis+nIrrf+nCofins+nCsll) == 0 
						Reclock( "SE5", .F. )	
						SE5->E5_PRETPIS := "1"
						SE5->E5_PRETCOF := "1"
						SE5->E5_PRETCSL := "1"
						SE5->E5_PRETIRF := "1"
						SE5->( MsUnlock() ) 
					EndIf
					RestArea(aAreaPub)
				EndIf			
				If lInssBx .And. cPaisLoc = "BRA" .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA")//Inss Baixa			
					
					If nInss > 0.00
						cGeraDirf := Iif(SE2->( FieldPos( "E2_DIRF" )) > 0 ,SE2->E2_DIRF," ")
						cCodRetIr := Iif(SE2->( FieldPos( "E2_CODRET" ))> 0,SE2->E2_CODRET," ")
							
						DbSelectArea("SE2")
						SE2->(DbGoto(nSalvRec))
	
						aAreaSE2 := SE2->(GetArea())					
						aAreaSA2 := SA2->(GetArea()) 
						aAreaSE5 := SE5->(GetArea())
							
						//Grava titulos do imposto INSS na tabela SE2 e na tabela SFQ.					 						
						FGrvINSS(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,"","",1,SED->(Recno()),SE2->(Recno()),SE2->E2_EMISSAO,dDataBase,SE2->E2_VENCREA,nInss,.F.,{},{},;
										cGeraDirf,cCodRetIr,lSpbInUse	,cModSpb)															
			
						SE2->(RestArea(aAreaSE2))   
						SA2->(RestArea(aAreaSA2))
						SE5->(RestArea(aAreaSE5))
							
						Reclock( "SE5", .F. )
						SE5->E5_VRETINS	:= nVretInss
						SE5->E5_PRETINS	:= cPretIns
						SE5->(MsUnlock())						
					ElseIf nInss == 0 .And. ((SA2->A2_TIPO == "J" .And. lAcmPJ) .Or. SA2->A2_TIPO == "F" )
						Reclock( "SE5", .F. )
						SE5->E5_VRETINS	:= nVretInss
						SE5->E5_PRETINS	:= cPretIns
						SE5->(MsUnlock())										
					Endif
					
				Endif											 					
			Endif
         
			If i = 4
				Replace E5_IDENTEE	With SE2->E2_IDENTEE
			Endif

			// Gravacao de dados complementares da baixa
			If lSE5FI080
				ExecBlock('SE5FI080',.f.,.F.)
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Caso exista cheque j  relacionado anteriormente para este    ³
			//³ titulo, atualiza sequencia .											  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lFina390	
				dbSelectArea("SEF")
				MsGoto(nRegSEF)
				If !Eof()
					RecLock("SEF",.f.)
					SEF->EF_SEQUENC := cSequencia
				Endif
			Endif
		Endif
	Next i
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o Cadastro de Cheques Emitidos, se for em Banco				  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MovBcoBx(cMotBx, .T.) .and. !lAdiantamento .And. !lCNAB .and. TrazCodMot(cMotBx) != "DEB" .And.;
	ChqMotBx(cMotBx)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se for cheque pre-datado, nao cria novo cheque, pois este ja'          ³
	//³ foi criado quando da emissao do pre'datado.                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lChqPre .and. nValPgto > 0 .and. SE2->E2_IMPCHEQ != "S" .And.;
			!cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .And. !cBanco $ GetMv("MV_CARTEIR")
		RecLock("SEF",.T.)
		SEF->EF_FILIAL  := xfilial()
		SEF->EF_NUM 	 := cCheque
		SEF->EF_BANCO	 := cBanco
		SEF->EF_AGENCIA := cAgencia
		SEF->EF_CONTA	 := cConta
		SEF->EF_VALOR	 := nValPgto
		SEF->EF_DATA	 := dBaixa
		SEF->EF_BENEF	 := IIF(Empty(cBenef),SA2->A2_NOME,cBenef)
		SEF->EF_PORTADO := cPortado
		SEF->EF_HIST	 := cHist070
		SEF->EF_PREFIXO := SE2->E2_PREFIXO
		SEF->EF_TITULO  := SE2->E2_NUM
		SEF->EF_PARCELA := SE2->E2_PARCELA
		SEF->EF_FORNECE := SE2->E2_FORNECE
		SEF->EF_LOJA	 := SE2->E2_LOJA
		SEF->EF_TIPO	 := SE2->E2_TIPO                    
		SEF->EF_IMPRESS := If(!Empty(cCheque),"A"," ")
		SEF->EF_SEQUENC := cSequencia
		SEF->EF_ORIGEM  := "FINA080"
		SEF->EF_FILORIG := SE2->E2_FILORIG 
		MsUnlock()
		lGerouSef := .T.

		If ExistBlock("FA080SEF")
			Execblock("FA080SEF",.F.,.F.)
		Endif	
	Endif 	
   
   //Gera registro no SE5 para a geracao do cheque e gera cheque no SEF.
	If lGerouSef

		cSeqCheque := Soma1(cSequencia,nTamSeq)

		//Grava movimento do cheque
		If !Empty(cCheque) .and. lLibCheq .And. Subs(cCheque,1,1)!="*"		
			RecLock("SEF")
			SEF->EF_LIBER   := "S"
			If lPadraoBx .And. cLanca == "S" .and. cContabiliza $ "BA" .and. !lUsaFlag
				SEF->EF_LA  := "S"
			EndIf
			MsUnlock()

			// Inclui registro no SE5 para a geracao do cheque
			RecLock("SE5",.T.)
			SE5->E5_FILIAL  := cFilial
			SE5->E5_AGENCIA := cAgencia
			SE5->E5_BANCO   := cBanco
			SE5->E5_BENEF   := cBenef
			SE5->E5_CONTA   := cConta
			SE5->E5_DATA    := dBaixa
			SE5->E5_NUMCHEQ := cCheque
			SE5->E5_DTDIGIT := dDataBase
			SE5->E5_HISTOR  := cHistMov
			SE5->E5_RECPAG  := "P"
			SE5->E5_TIPODOC := "CH"
			SE5->E5_VALOR   := nValPgto
			SE5->E5_DTDISPO := dDebito
			SE5->E5_NATUREZ := SE2->E2_NATUREZ
			SE5->E5_SEQ		:= cSeqCheque
			SE5-> E5_LA		:= If( lPadraoBx .And. (cLanca == "S") .and. !lUsaFlag,"S","N")
			SE5->E5_FILORIG	:= SE2->E2_FILORIG	
			If SpbInUse()
				SE5->E5_MODSPB := "3"
			Endif
			MsUnlock()
		Endif
		If !Empty(cCheque) .And. Subs(cCheque,1,1)!="*"		
			//Gera cheque
			RecLock("SEF",.T.)
			SEF->EF_FILIAL  := xfilial()
			SEF->EF_NUM 	 := cCheque
			SEF->EF_BANCO	 := cBanco
			SEF->EF_AGENCIA := cAgencia
			SEF->EF_CONTA	 := cConta
			SEF->EF_VALOR	 := nValPgto
			SEF->EF_DATA	 := dBaixa
			SEF->EF_BENEF	 := IIF(Empty(cBenef),SA2->A2_NOME,cBenef)
			SEF->EF_PORTADO := cPortado
			SEF->EF_HIST	 := cHist070
			SEF->EF_LIBER   := If(lLibCheq,"S"," ")
			SEF->EF_SEQUENC := cSeqCheque
			SEF->EF_ORIGEM  := "FINA080" 
			SEF->EF_FILORIG := cFilAnt
			MsUnlock()		             
		Endif
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o totalizador												   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SubStr(cCheque,1,1) = "*" .and. nValPgto > 0 .And. SE2->E2_IMPCHEQ != "S"
		dbSelectArea("SEF")
		SEF->( dbSeek(cFilial+cBanco+cAgencia+cConta+cCheque+cSeqCheque) )
		nRecNo := 0
		While !SEF->( Eof() )	.And. SEF->EF_FILIAL	 =	 cFilial  ;
				.And. SEF->EF_BANCO	 =  cBanco	 ;
				.And. SEF->EF_AGENCIA =  cAgencia ;
				.And. SEF->EF_CONTA	 =  cConta	 ;
				.And. SEF->EF_NUM 	 =  cCheque
			nRecNo := IIf(Empty(SEF->EF_TITULO),SEF->(RecNo()),nRecNo)
			dbSkip( )
		Enddo
		If nRecNo == 0 .And.;
				!cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .And. !cBanco $ GetMv("MV_CARTEIR")
			RecLock("SEF",.T.)
			SEF->EF_FILIAL  := cFilial
			SEF->EF_NUM 	 := cCheque
			SEF->EF_BANCO	 := cBanco
			SEF->EF_AGENCIA := cAgencia
			SEF->EF_CONTA	 := cConta
			SEF->EF_VALOR	 := nValPgto
			SEF->EF_DATA	 := dBaixa
			SEF->EF_BENEF	 := IIf(Empty(cBenef), SA6->A6_NOME, cBenef)
			SEF->EF_SEQUENC := PadL("1",TamSX3("EF_SEQUENC")[1],"0")
			SEF->EF_ORIGEM  := "FINA080"
			MsUnlock()
		Else
			dbGoTo( nRecNo )
			RecLock("SEF")
			SEF->EF_VALOR	+= nValPgto
			SEF->EF_DATA	:= dBaixa
		Endif
	Endif
Endif
///////////////////////////////////////////////////////
// Atualiza saldo bancario na baixa por LOTE ou CNAB //
///////////////////////////////////////////////////////
If IsInCallStack('Fa080Lot') .Or. ( IsInCallStack("fa430gera") .And. !IsInCallStack("Fa080Tit") )
	If !lAdiantamento
		lMovBcoBx := MovBcoBx(cMotBx, .T.)
		IF (!Empty(cCheque) .and. lMovBcoBx .and. Substr(cCheque,1,1) != "*") .and.;
				GetMV("MV_LIBCHEQ") == "S" .and. SE2->E2_IMPCHEQ != "S"
			AtuSalBco( cBanco, cAgencia, cConta, dDebito, nValPgto, "-" )
		ElseIf lCNAB .and. Empty(cLoteFin)
			AtuSalBco( cBanco, cAgencia, cConta, dDebito, nValPgto, "-" )
		ElseIf lMovBcoBx .and. (cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .or. cBanco $ GetMv("MV_CARTEIR"))
			AtuSalBco( cBanco, cAgencia, cConta, dDebito, nValPgto, "-" )
		ElseIf lMovBcoBx .and. !ChqMotBx(cMotBx) .and. !lCnab
			AtuSalBco( cBanco, cAgencia, cConta, dDebito, nValPgto, "-" )
		Endif
	Endif
EndIf

dbSelectArea("SEF")
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o Cadastro de Fornecedores							 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE2")
dbSetOrder(nOrdBx)
SE2->( dbGotO( nSalvRec ) )
SED->( dbSeek ( cFilial + SE2 -> E2_NATUREZ ) )
IF SA2->( dbSeek(cFilial+SE2->E2_FORNECE+SE2->E2_LOJA) )
	RecLock("SA2")
	If SE2->E2_MOEDA > 1 .Or. cPaisLoc<>"BRA"	
		//Acho valor em dolares para converter para real na data de emissao
		nSaldup := Round(NoRound(xMoeda(nValPadrao,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
		//Acho valor em reais na data da emissao
		nSaldup := Round(NoRound(xMoeda(nSalDup,SE2->E2_MOEDA,nMoedaBco,SE2->E2_EMISSAO,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)	
	Else
		nSaldup := nValPadrao
	Endif			
	If SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
		SA2->A2_SALDUP		+= nSalDup
		SA2->A2_SALDUPM	+= xMoeda(nSaldup,nMoedaBco,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,3,nTxMoeda)
	Else
		SA2->A2_SALDUP		-= nSalDup
		SA2->A2_SALDUPM	-= xMoeda(nSaldup,nMoedaBco,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,3,,nTxMoeda)
	Endif
	nAtraso:=dBaixa-SE2->E2_VENCTO
	If nAtraso > 1
		IF Dow(SE2->E2_VENCTO) == 1 .Or. Dow(SE2->E2_VENCTO) == 7
			IF Dow(dBaixa) == 2 .and. nAtraso <= 2
				nAtraso := 0
			EndIF
		EndIF
		nAtraso:=IIF(nAtraso<0,0,nAtraso)
		If SA2->A2_MATR < nAtraso
			Replace A2_MATR With nAtraso
		EndIf
	Endif
	SA2->(MSUnlock())	// Destrava SA2 apos alteracoes...
	dbSelectArea("SE2")
	SE2->(dbGoTo( nSalvRec ))
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida se o titulo está em Borderô de Impostos FINA241 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Select("SEA") == 0
	DbSelectArea("SEA")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Complementa grava‡Æo da baixa tit. principal  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE2")
dbGoto(nSalvRec)

SEA->(DbSetOrder(2))
If SEA->(MsSeek(xFilial("SEA")+SE2->E2_NUMBOR+"P"+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)))
	If SEA->(FieldPos("EA_ORIGEM")) > 0 .And. "FINA241" $ SEA->EA_ORIGEM
		lBdImp := .T.
	EndIf
EndIf

//Altera o vencimento dos impostos
If !lPccBaixa .Or. (lBdVcImp .And. lBdImp)
	AltVencImp(SE2->E2_BAIXA)
Endif

//Acerto dos impostos Pis, Cofins e Csll
If (cPaisLoc=="BRA") .And. !lPccBaixa .and. (nJuros > 0 .or. nDescont > 0 .or. nMulta > 0 ) .and. (SE2->E2_PIS+SE2->E2_COFINS+SE2->E2_CSLL > 0)
	F080Impost(nSalvRec,.F.,nJuros,nMulta,nDescont,nValPgto)
Endif

If lRetManual
 	lRetParc := .T.
EndIf

//Posiciono o SE5 para titulos que não sejam adiantamendo (PA/NDF)
If !lAdiantamento
	SE5->(dbGoTo(nSavRec))
EndIf

//Gravo os titulos de impostos Pis Cofins Csll quando controlados pela baixa
If (lContrRet .and. lPccBaixa .and. lRetParc .and. lGerImp ).or. ;
	(lCalcIssBx  .and. nIss > 0) .OR. ;
	(lIRPFBaixa .AND. nIrrf > 0.00)

	cGeraDirf := If(Empty(SE2->E2_CODRET), "2", "1")
	If SE2->E2_IRRF > 0 .and. !lIRPFBaixa //teve IR na emissão
		aArea := SE2->(GetArea())
		cChave := SE2->(E2_PREFIXO+E2_NUM+E2_PARCIR)+MVTAXA                                                              
		//prefixo+loja do titulo de ir
		cChave += GetMV("MV_UNIAO")+Space(Len(E2_FORNECE)-Len(GetMV("MV_UNIAO")))+PadR( "00", Len( SE2->E2_LOJA ), "0" ) 
		SE2->(DBSetOrder(1))             
		If SE2->(DbSeek(xFilial("SE2")+cChave))
			cGeraDirf := If(Empty(SE2->E2_CODRET), "2", "1")
		EndIf
		RestArea(aArea)	
	EndIf
   aAreaSED  := SED->(GetArea())
	FGrvImpPcc(@nPis,@nCofins,@nCsll,nSalvRec,.F.,lRetParc,cSequencia,"FINA080",SE2->E2_MOEDA,cGeraDirf,nIrrf,nIss)
   RestArea(aAreaSED)
Endif

dbSelectArea("SE2")
dbGoto(nSalvRec)
If !(SE2->E2_TIPO $ "INA" + IIF(!lBxTxa,MVTXA,'')) //Não atualiza os campos de baixa no SE2 para titulos de INSS Antecipado
	RecLock("SE2")
	Replace E2_SALDO	  With nSaldo
	MsUnlock()
EndIf

If lInssBx .And. cPaisLoc = "BRA" .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA")//Inss Baixa			
	nParciais	:= SE2->E2_VALOR-SE2->E2_SALDO
	
	If (SA2->A2_TIPO == "J" .And. nInss > 0.00) .Or. SA2->A2_TIPO == "F"  
		RecLock("SE2",.F.)
		SE2->E2_PRETINS	:= cPretIns			
		
		If !lInsPub
			//Tratamento para baixa parcial.
			If SA2->A2_TIPO == "F" .And. nParciais > 0 .And. SE2->E2_VRETINS > 0 .And. nLimInss > 0 
			//Caso o titulo já possua baixa e o parametro de controle de valor limite de inss esteja preenchido.		
				If SE2->E2_VRETINS < nLimInss
					If (nVretInss == nLimInss) 
						SE2->E2_VRETINS	:= nVretInss
					Else			
						SE2->E2_VRETINS	:= SE2->E2_VRETINS + nVretInss
					Endif
				Endif			
			ElseIf SA2->A2_TIPO == "F" .And. nLimInss == 0
			//Caso o titulo já possua baixa e o parametro de controle de valor limite de inss tenha conteudo ZERO.		
			   If nParciais > 0
			 		SE2->E2_VRETINS	:= SE2->E2_VRETINS + nVretInss			
			 	Else
			 		SE2->E2_VRETINS	:= nVretInss
			 	Endif		
			Else
				SE2->E2_VRETINS	:= nVretInss
			Endif
		Else
			If  SE2->E2_VRETINS + nVretInss	 <= SE2->E2_INSS		
				SE2->E2_VRETINS	:= SE2->E2_VRETINS + nVretInss
			Endif				
		Endif	
		
		If !lInsPub
			//Valor calculado do inss menor que valor gravado no campo E2_INSS. Ou seja, respeitando o valor limite do parametro MV_LIMINSS.
			//Ou valor calculado maior no caso de inss acumulado.
			If SA2->A2_TIPO == "F" .And. (SE2->E2_INSS > nInss .Or. nInss > SE2->E2_INSS) .And. nLimInss > 0		
				//Tratamento para baixa parcial.		
				If nParciais > 0 .And. SE2->E2_INSS > 0//Titulo possui uma baixa.
					If SE2->E2_INSS < nLimInss				
						If nInss == nLimInss
							SE2->E2_INSS	:=	nInss
						Else
							SE2->E2_INSS	:=	SE2->E2_INSS + nInss
						Endif
					Endif	
				Else			     
					SE2->E2_INSS	:=	nInss
				Endif		
			ElseIf SA2->A2_TIPO == "F" .And. nLimInss == 0 //Nao respeita o valor limite do parametro MV_LIMINSS.		
				If nParciais > 0 //Titulo possui baixa.
					SE2->E2_INSS	:=	SE2->E2_INSS + nInss
				Else
					SE2->E2_INSS	:=	nInss				
				Endif
			Endif
		Endif
			
		SE2->(MsUnlock())
	Endif	
Endif
If SE2->E2_PREFIXO=="AGP" // Força a baixa dos títulos aglutinados na FI9 caso eles já tenham sido baixados na SE2
	dbSelectArea("FI9")
	dbSetOrder(3)
	If dbSeek(xFilial("FI9")+SE2->E2_FORNECE+SE2->E2_LOJA+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO)
		RecLock("FI9") 
		Replace FI9->FI9_STATUS WITH "B"
		MsUnlock() 
	Endif
	dbSelectArea("SE2")
Endif

If FindFunction("FA373Bx")
	FA373Bx(.T.)
EndIf


Return .T. /*Function fA080Grv*/

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fa080ChkVdr ³ Autor ³ Vincius S. Barreira	   ³Data  ³18/12/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se o Combo do Motivo da Baixa est  como VENDOR		³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fa080ChkVdr( )								                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa080ChkVdr()
If TrazCodMot(cMotBx) == "VEN"
	Fa080Vdr()
Endif

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ValidaTot	  ³ Autor ³ Vincius S. Barreira	  ³Data  ³18/12/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica Valor total                                   	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ValidaTot( )												   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ValidaTot(cLote)
LOCAL lRet := .t.
Do Case
Case !CarregaSa6(@cBanco,@cAgencia,@cConta,.T.,,.T.)
	lRet := .F.	
Case Empty(cLote)
	lRet := .F.
Case nTotGer+nTotDesp-nTotDesc+nTotMul+nTotJur != nDebConta //(Soma despesa)
	Help(" ",1,"VLRTOTINV")
	lRet := .f.
EndCase
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³MontaTot	  ³ Autor ³ Vincius S. Barreira	  ³Data  ³18/12/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                       	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³MontaTot(oGet)											   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MontaTot(oGet)
nDebConta := nTotGer+nTotDesp-nTotDesc+nTotMul+nTotJur
oGet:refresh()
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FA080Inverte³ Autor ³ Wagner Xavier       ³ Data ³ 07/11/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Marca e Desmarca Titulos, invertendo a marca‡†o existente  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa080Inverte()                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa080Inverte(cMarca,oValor,oQtda,lTodos)
LOCAL nReg 		:= SE2->(Recno())
LOCAL lBxTit 	:= .T.
LOCAL lBxTitVL 	:= .T.
LOCAL lVldTit 	:= .F.
Local lF080VLAD := ExistBlock("F080VLAD")
Local lFinVDoc		:= IIF(GetNewPar("MV_FINVDOC","2")=="1",.T.,.F.)		//Controle de validacao de documentos obrigatorios
Local lPrimeiro :=.T.
Local nTxMoeda := 0
Local nCentMd1	:= MsDecimais(1)
Local nCont := 0
DEFAULT lTodos := .T.

dbSelectArea("SE2")
If lTodos
	dbSeek(cFilial)
EndIf
While !lTodos .or. (!Eof() .and. cFilial == SE2->E2_FILIAL)
	If (lTodos .And. SE2->(MsRLock())) .Or. !lTodos
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Caso tenha sido gerado pelo SigaEic e do tipo INV e do BRASIL nao podera se baixado se nao for pela rotina automatica ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. Type("lIntegracao")<>"U" .and. lIntegracao .and. cPaisloc = "BRA" .and.  SE2->E2_TIPO = "INV"  .and. UPPER(SE2->E2_ORIGEM) = "SIGAEIC"
			HELP(" ",1,"FAORIEIC")                                                                                               
        //DFS - 16/03/11 - Deve-se verificar se os títulos foram gerados por módulos Trade-Easy, antes de apresentar a mensagem.
        // NCF - 25/03/13 - Acrescentado o módulo SIGAESS (Siscoserv)			
		Elseif ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. cPaisloc = "BRA" .AND. UPPER(Alltrim(SE2->E2_ORIGEM)) $ "SIGAEEC/SIGAEFF/SIGAEDC/SIGAECO/SIGAESS" .AND. !(cModulo $ "EEC/EFF/EDC/ECO/ESS")
			HELP(" ",1,"FAORIEEC")		
		Else			
			IF E2_OK == cMarca
				SE2->E2_OK := "  "
				//Calculo da Moeda caso o titulo possua taxa cadastrada
				nTxMoeda := If(SE2->E2_MOEDA > 1,If(SE2->E2_TXMOEDA > 0 .and. Empty(SE2->E2_DTVARIA), SE2->E2_TXMOEDA,RecMoeda(dBaixa,SE2->E2_MOEDA)),0)
				nValor -= xMoeda((SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE),SE2->E2_MOEDA,nMoedaBco,,,nTxMoeda)
				nQtdtit--
				nValor := Iif(nValor<0,0,nValor)
				nQtdTit:= Iif(nQtdTit<0,0,nQtdTit)
			Else
				lBxTit := .T.
				lBxTitVL := .T.
				lVldTit:=.F.
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Adiantamento ou Devolucao ³
				//³ para o Fornecedor do título a ser baixado.   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If GetNewPar("MV_VLTITAD",.F.) .And. !(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG)
					nBusca := F090BuscAD( "__SE2", SE2->E2_FORNECE, SE2->E2_LOJA )
					If nBusca <> 0
						lAD := .T.
						cMsg := STR0144 //"O Fornecedor deste titulo possui "
						Do Case 
							Case nBusca = 1 // Adiantamento
								cMsg += STR0145 //"Adiantamento."
							Case nBusca = 2 // Devolucao
								cMsg += STR0146 //"Devolucao."
						End Case
						cMsg += chr(13)+chr(10)
						cMsg += STR0147 //"Deseja mesmo assim baixa-lo ?"
						If isBlind()
							If lF080VLAD
								If (ExecBlock("F080VLAD",.F.,.F.))
									SE2->E2_OK := cMarca
									lVldTit:=.T.
								Endif
							Endif
						Else
							If MsgYesNo( cMsg )
								SE2->E2_OK := cMarca
								lVldTit:=.T.
							Endif						
						Endif
					Else
						SE2->E2_OK := cMarca 
						lVldTit:=.T.				
					Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe Adiantamento de INSS      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf GetNewPar("MV_VLTITAD",.F.) .And. SE2->E2_TIPO $ MVINSS
					nBusca := 0
					If SE2->(FieldPos("E2_TITPAI")) > 0
						If !Empty(SE2->E2_TITPAI)
							If F090LocINA( SE2->E2_TITPAI )
								If !isBlind()
									If MsgYesNo( "Existem titulos de INSS retido em pagamentos antecipados ainda pendentes de compensação para este fornecedor, efetua a baixa mesmo assim?" )
										SE2->E2_OK := cMarca
										lVldTit:=.T.
									Endif
								Else
									SE2->E2_OK := "  "
									lVldTit:=.F.
								Endif
							EndIf
						Endif
					Endif
				Else
					SE2->E2_OK := cMarca 
					lVldTit:=.T.							
				Endif
	   			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Caso tenha integracao SIGAPFS e seja um titulo com natureza juridica sem rateio finalizado ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Fa080Juri()  
					SE2->E2_OK := "  "
					cMarca	  := "  "					
					Help(" ",1,"F080JURI",, STR0170,1,0) // "Nao permite baixar titulos com rateio juridico incompleto"
					Return .F.
				EndIf
		   		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Caso tenha integracao Documentos  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				IF AliasIndic("FRD") .AND. (SE2->(FieldPos("E2_TEMDOCS")) > 0) .AND. FindFunction( "CN062ValDocs" ) .And. lFinVDoc
					If !CN062ValDocs("04",.F.,.F.,lTodos,@lPrimeiro)
						SE2->E2_OK := "  "
						lVldTit:=.F.
					EndIf
				EndIf
			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ PONTO DE ENTRADA F080BXLT                                     ³
				//³ Verifica se titulo pode ser marcado para baixa ou nÆo. Caso	  ³
				//³ tenha sido alterada a marca‡Æo do titulo, ExecBlock dever     ³
				//³ retornar .F., para nÆo haver altera‡Æo dos acumuladores de    ³
				//³ valores e numero de titulos.                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				IF (ExistBlock("F080BXLT")) .and. !Empty(E2_OK)
					lBxTit := ExecBlock("F080BXLT",.F.,.F.)
				Endif    
	   
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ PONTO DE ENTRADA F080BXVL                                  ³
				//³Ponto de entrada que permite ao usuário determinar se um    ³
				//³título deve ou não ser selecionado, de acordo com as regras ³
				//³estabelecidas no ponto de entrada.  O PE F080BXLT não       ³
				//³controlava a marcação dos títulos, sendo necessário criar   ³
				//³este novo PE por questão de legado. Retorno .F. impede sel. ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (ExistBlock("F080BXVL")) .and. !Empty(E2_OK)
					lBxTitVL := ExecBlock("F080BXVL",.F.,.F.)
					If ValType(lBxTitVL) == "L" .AND. !lBxTitVL
						If SE2->E2_OK == cMarca
							RecLock("SE2",.F.)
							SE2->E2_OK := "  "
							MsUnlock()
						Endif    
					Else         
						lBxTitVL := .T.
					Endif
				Endif						
	
				If lBxTit .AND. lVldTit .AND. lBxTitVL
					//Calculo da Moeda caso o titulo possua taxa cadastrada
					nTxMoeda	 := If(SE2->E2_MOEDA > 1,If(SE2->E2_TXMOEDA > 0 .and. Empty(SE2->E2_DTVARIA), SE2->E2_TXMOEDA,RecMoeda(dBaixa,SE2->E2_MOEDA)),0)
					nValor += xMoeda((SE2->E2_SALDO+SE2->E2_SDACRES-SE2->E2_SDDECRE),SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda)
					nQtdtit++
				Endif
			Endif		
		
		Endif	
	EndIf
	If nOpc1 == 1 .And. dBaixa < SE2->E2_EMISSAO 
		 If nCont <> 1
		    Help( " ", 1, "DATAERRP",,STR0195,1,0 ) 
		 Endif   
	   SE2->E2_OK := "  "
	   nCont := 1
	Endif	
	If lTodos
		SE2->(dbSkip())
	Else
		Exit
	EndIf
Enddo
oValor:Refresh()
oQtda:Refresh()
oMark:oBrowse:Refresh(.t.)
SE2->(dbGoto(nReg))
Return Nil


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ fa080BcoCx ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 17/03/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Correcao de n§. do cheque para Banco = "CX"					³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fa080BcoCx() 												³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa080BcoCx()
Local lRet := .T.

If cBanco $ Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1]) .Or.  cBanco $ GetMv("MV_CARTEIR")

	cCheque := Space(15)
	If Type("oCheque")=="O"
		oCheque:Refresh()
	Endif
Endif
If lfa080Bco == NIL
	lFa080Bco := ExistBlock("FA080BCO")
Endif
If lFa080Bco
	lRet := ExecBlock("FA080BCO", .F., .F., {cBanco,cAgencia,cConta})
Endif	
Return lRet
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080BDev ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 02/06/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Limpa conteudo de Bco/Age/Cta/N.Chque se baixa DEVOLUCAO   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa080bDev()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080BDev(lValida)
LOCAL cChave_EF
LOCAL aArea := GetArea()
LOCAL aAreaSef := SEF->(GetArea())
Local lRet := .T.
DEFAULT lValida := .T.

If !MovBcoBx(cMotBx, .T.)
	cBanco	 := CriaVar("E1_PORTADO")
	cAgencia := CriaVar("E1_AGEDEP")
	cConta	 := CriaVar("E1_CONTA")
	cCheque  := CriaVar("E1_NUMBCO")
	If Type('lF080Auto') =='U' .or. ! lF080Auto .And. Type("oBanco") == "O" .and. Type("oCheque")=="O"
		oBanco:Refresh()
		oAgencia:Refresh()
		oConta:Refresh()
		oCheque:Refresh()
   Endif
Else
   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se tem cheque relacionado ao Titulo, vasculha SEF c/ sequencia em  ³
	//³ branco (Gerado pelo Chq s/ Titulo) e carrega Bco/Ag/Conta e N§Chq  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SEF")
	dbSetOrder(3)
	If SE2->E2_IMPCHEQ=="S" .and. SEF->(dbseek(xFilial("SEF")+SE2->E2_PREFIXO+SE2->E2_NUM+;
			SE2->E2_PARCELA+SE2->E2_TIPO))
	
		cChave_EF := xFilial("SEF")+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO
		DO WHILE (cChave_EF == SEF->EF_FILIAL + SEF->EF_PREFIXO+SEF->EF_TITULO;
				+SEF->EF_PARCELA+SEF->EF_TIPO) .and. !(SEF->(EOF()))
			IF empty(SEF->EF_SEQUENC) .and. SE2->(E2_FORNECE+E2_LOJA) == SEF->(EF_FORNECE+EF_LOJA)
				cBanco  :=SEF->EF_BANCO
				cAgencia:=SEF->EF_AGENCIA
				cConta  :=SEF->EF_CONTA
				cCheque :=SEF->EF_NUM
				If Type('lF080Auto') =='U' .or. ! lF080Auto .And. Type("oBanco") == "O" .and. Type("oCheque")=="O"
					oBanco:Refresh()
					oAgencia:Refresh()
					oConta:Refresh()
					oCheque:Refresh()
			   Endif
				EXIT
			Endif
			SEF->(DbSkip())
		ENDDO
	EndIf
	Sef->(RestArea(aAreaSef))
	RestArea(aArea)
Endif             

lRet:=Fa080ValCh(lValida)

If TrazCodMot(cMotBx) == "DEB"  .and. lRet
		cCheque 	:= Space(10)
		If Type('lF080Auto') =='U' .or. ! lF080Auto .And. Type("oCheque") == "O" .and. Type("oCheque")=="O"
			oCheque:Refresh()
		EndIF
Endif

Return (lRet)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F080BMtBx³ Autor ³ Andrea V. Santiago    ³ Data ³ 29/06/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Ponto de Entrada para validar o motivo da baixa digitada.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F080MtBx()
Local lRet      := .T.
Local lF080MtBx := Existblock("F080MTBX")

If	lF080MtBx
	lRet := ExecBlock("F080MTBX",.F.,.F.)
Endif

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa080REFRE³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 27/08/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Da Refresh() nos objetos                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa080Refresh()											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION FA080Refre(nCampo)
DEFAULT nCampo := 0
IF SE2->E2_MOEDA > 1
	oVlEstrang:Refresh()
   If Type('lF080Auto') =='U' .or. ! lF080Auto
		IIf( cPaisloc <> "CHI",oCm:Refresh(),.T.)
   EndIF
ENDIF
If nCampo == 1 // Valor do Pagto.
	If (SE2->E2_IMPCHEQ == "S" .or. lChqPre) .And. Round(nValPgto,2) != Round((nValMoeda+nMulta+nJuros-nDescont+nAcresc-nDecresc-nPis-nCoFins-nCsll-nIrrf-nIss),2)
		Help(" ",1,"JACHQSTIT")
		nValPgto := nOldValPgto		
		Return .F.
	Endif
Endif

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Sel080baix³ Autor ³ Andreia dos Santos    ³ Data ³ 03/11/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Seleciona Baixas a serem canceladas                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³Sel080Baixa()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Gen‚rico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sel080Baixa(cTipoDoc,cPrefixo, cNum, cParcela,cTipo,nTotComp,lBaixaAbat,cFornece,;
						cLoja,lBxCEC,lFltrOrdPg,lRetHelp,nTotImpost,lAglImp,lConsCMP,lPegaPCC,;
						nTotaIRPF,cIdentee,lBxLiq)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³           ..:: Paises Localizados ::..                    ³
//³                                                           ³
//³ A variavel lFltrOrdPg servira para definir se a           ³
//³ Ordem de Pago podera ser baixada ou nao por esta rotina.  ³
//³	lFltrOrdPg = Filtra Orden de Pago						  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

LOCAL __k
LOCAL cTipoBaixa
LOCAL nRecAtu
LOCAL cSequencia
LOCAL lEstornada := .f.
LOCAL aBaixa := {}
LOCAL cNumero
LOCAL lInssBx		:=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )
LOCAL nX := 0

DEFAULT lFltrOrdPg	:= .F.
DEFAULT lRetHelp	:= .F.
DEFAULT nTotImpost	:= 0
DEFAULT nTotaIRPF	:= 0
DEFAULT lAglImp		:= .F.
DEFAULT lConsCMP	:= .F.
DEFAULT lPegaPCC	:= .F.
DEFAULT cIdentee	:= ""
DEFAULT lBxLiq		:= .F.		

If cPaisLoc == "MEX"
	DEFAULT aBorra := {}
EndIf

lBxCec := IIF(lBxCec == NIL,.F.,lBxCec)

FOR __k := 1 TO Len(cTipoDoc) Step 4

	cTipoBaixa := AllTrim(Substr(cTipodoc,__k,3 ) )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Procura pela baixas dependendo do Tipodoc passado como parametro      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE5")
	SE5->(dbSetOrder(2))
	SE5->(dbSeek(xFilial("SE5")+cTipoBaixa+cPrefixo+cNum+cParcela+cTipo))
	While !SE5->(Eof()) .and. SE5->E5_FILIAL==xFilial("SE5") .and. ;
			SE5->E5_TIPODOC+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO==cTipoBaixa+cPrefixo+cNum+cParcela+cTipo

		IF cPaisloc == "MEX" .and. FUNNAME() == "MATA101N" .and. lF080Auto
			for nX := 1 To len(aBorra)
				if aBorra[nX] <> ALLTRIM( SUBSTR( SE5->E5_HISTOR , 6, TAMSX3("F1_DOC")[1] ) )
					dbSkip()
					Loop
				endif
			next
		endif

		If SE5->E5_MOTBX $ "FAT#DSD" .or. (SE5->E5_MOTBX $ "STP" .and. FunName() <> "FINA050" .and. !lF080Auto)
			dbSkip()
			Loop
		Endif

		If lInssBx .And. SE5->E5_MOTBX $ "INS"
			dbSkip()
			Loop
		Endif
		
		If SE5->E5_MOTBX $"PCC,IRF,ISS"

			IF SE5->E5_SITUACAO != "C"
				If SE5->E5_MOTBX == "PCC"
					nTotImpost += SE5->E5_VALOR
				Else
					nTotaIRPF  += SE5->E5_VALOR
				EndIf						
			Endif
			If !lPegaPCC
				dbSkip()
				Loop
			Endif	
		Else
			//Baixa que reteve IRRF
			IF SE5->E5_SITUACAO != "C" .and. ( SE5->(FieldPos("E5_PRETIRF"))>0  .AND. SE5->E5_PRETIRF $ " /4")
				nTotaIRPF  += SE5->E5_VRETIRF
			Endif
		Endif

		If lFltrOrdPg .And. SE5->(FieldPos('E5_ORDREC'))>0 .And. !Empty( SE5->E5_ORDREC )
			lRetHelp := .T.
			dbSkip()
			Loop
		Endif         
		
		If (SE5->(FieldPos("E5_AGLIMP"))) > 0 .And. !Empty(SE5->E5_AGLIMP) .And. SE5->E5_TIPO $ MVTAXA+"/"+MVTXA
			lAglImp := .T.
			dbSkip()
			Loop
		EndIf		

		If SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se as baixas sao de adiantamento (NORmal,DEVolucao,DACao)  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cTipoBaixa =="VL" .or. cTipoBaixa =="BA"
				lBaixaAbat := .t.
			EndIf
			IF (SE5->E5_SITUACAO == "C"  .or. SE5->E5_RECPAG != "R") .And. IIf(cpaisloc$"BRA|MEX",.T.,Empty(SE5->E5_ORDREC))
				//Se evita la entrada a baixa de PA cuando se trata de baja de anticipos de entrada.
				if FunName() <> "MATA101N" .AND. SE2->E2_TIPO <> MVPAGANT
					//Permite cancelar a baixa de PA pela baixa automática quando a mesma gerou como BA e totalizador
					If !( AllTrim( Upper( SE5->E5_ARQCNAB ) ) $ "|FINA090|FINA091|" .And. !Empty( SE5->E5_DOCUMEN ) .And. cTipoBaixa == "BA" )
						SE5->(dbSkip())
						Loop
					EndIf
				endif
			EndIF
		Else
			IF (SE5->E5_SITUACAO == "C" .or. SE5->E5_RECPAG != "P") .And. IIf(cpaisloc$"BRA|MEX",.T.,Empty(SE5->E5_ORDREC))
				SE5->(dbSkip())
				Loop
			EndIF
		Endif

		IF SE5->E5_CLIFOR != cFornece .OR. SE5->E5_LOJA != cLoja
			SE5->(dbSkip())
			Loop
		EndIF

        IF SE5->E5_MOTBX == "LIQ" .and. !Empty(SE5->E5_DOCUMEN)
			lBxLiq	:= .T.
			SE5->(dbSkip())
			Loop
		EndIF

		If cTipoBaixa == "BA" .and. ( SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG) .AND. !EMPTY(SE5->E5_DOCUMEN) .And. IIf(cpaisloc=="BRA",.T.,Empty(SE5->E5_ORDREC))
			//Permite cancelar a baixa de PA pela baixa automática quando a mesma gerou como BA e totalizador
			If !( AllTrim( Upper( SE5->E5_ARQCNAB ) ) $ "|FINA090|FINA091|" ) 
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Incrementa o valor compensado quando for baixa de compensacao e  ³
				//³o titulo for PA ou NDF.                                          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nTotComp += SE5->E5_VALOR
				dbskip()
				loop
			EndIf
		EndIf

		nRecAtu := SE5->(recno())
		AADD(aRecBorra,{nRecAtu,"M"})

		cSequencia := SE5->E5_SEQ
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se existe uma baixa cancelada para esta baixa efetuada       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SE5->(dbSeek(cFilial+"ES"+cPrefixo+cNum+cParcela+cTipo))
		While !SE5->(Eof()) .and. SE5->E5_FILIAL==cFilial .and. ;
				SE5->E5_TIPODOC+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO=="ES"+cPrefixo+cNum+cParcela+cTipo

			If SE5->E5_MOTBX == "FAT"  .or. ( SE5->E5_MOTBX $ "STP" .and. FunName() <> "FINA050" )
				dbSkip()
				Loop
			Endif

			IF SE5->E5_CLIFOR != cFornece .OR. SE5->E5_LOJA != cLoja
				SE5->(dbSkip())
				Loop
			EndIF

			if SE5->E5_SEQ == cSequencia
				lEstornada := .T.
				Exit
			EndIf
			SE5->( dbSkip() )
		EndDo
		SE5->(dbGoTo(nRecAtu))
		If lEstornada
			lEstornada := .f.
			SE5->(dbSkip())
			Loop
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Aten‡„o, o array aBaixaSE5 ‚ o elemento fundamental para que ³
		//³a baixa funcione a contento. Se for necess rio alter -lo,deve³
		//³ser feito com a MAXIMA ATENCAO, pois as variaveis tratadas na³
		//³funcao est„o com posi‡”es fixas dentro do array              ³
		//³Mem¢ria de Calculo do array em quest„o.                      ³
		//³                                                             ³
		//³Informa‡„o        Posicao     Tamanho  					    ³
		//³                                                             ³
		//³Prefixo            01           03  					        ³
		//³Numero             02           12           				³
		//³Parcela            03           01						    ³
		//³Tipo               04           03					        ³
		//³Cliente/Fornec     05           06					        ³
		//³Loja               06           02					        ³
		//³Data da baixa      07           08					        ³
		//³Valor              08           15					        ³
		//³Sequencia          09           02					        ³
		//³Data Dispon.       10           08					        ³
		//³Banco              11           03					        ³
		//³Agencia            12           05					        ³
		//³Conta              13           10					        ³
		//³Dt. Disponibil.    14           08				            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (cTipoBAixa =="CP" .or. (SE5->E5_MOTBX == "CEC" .And. !Empty(cIdentee))) .and. !lConsCMP
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Incrementa o valor compensado quando for baixa de compensacao e  ³
			//³for o titulo principal.		                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTotComp += SE5->E5_VALOR
			If SE5->E5_MOTBX == "CEC" .And. !Empty(cIdentee)
				lBxCEC := .T.
			Endif
		Else
			If FwIsInCallStack("Fa450Can") .and. !Empty(cCompCan) .and. SE5->E5_IDENTEE <> cCompCan
				SE5->(dbSkip())
				Loop
			Else
			
				cNumero := SE5->E5_NUMERO+Iif(Len(SE5->E5_NUMERO)==TamSx3("E5_NUMERO")[1],Space(Len(SE5->E5_NUMERO)),"")
				
				Aadd(aBaixa,SE5->E5_PREFIXO+" "+cNumero       +;
					" "+SE5->E5_PARCELA+" "+E5_TIPO+" "+E5_CLIFOR +;
					" "+E5_LOJA+" "+Dtoc(E5_DATA)        +;
					" "+Transf(E5_VALOR,"@E 9999,999,999.99")+"   "+E5_SEQ  )
	
				Aadd(aBaixaSE5,{ SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO	,;
					SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_DATA				,;
					SE5->E5_VALOR,SE5->E5_SEQ,SE5->E5_DTDISPO				,;
					SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DTDISPO ,;
					SE5->E5_VRETPIS,SE5->E5_VRETCOF,SE5->E5_VRETCSL,SE5->E5_PRETPIS,;					
					SE5->E5_PRETCOF,SE5->E5_PRETCSL,SE5->E5_TIPODOC,SE5->E5_VRETIRF,SE5->E5_PRETIRF,;
					SE5->E5_VLDESCO, SE5->E5_VLJUROS, SE5->E5_VLMULTA,;
					IIf (SE5->(FieldPos("E5_VRETINS"))>0, SE5->E5_VRETINS,0),IIf (SE5->(FieldPos("E5_PRETINS"))>0,SE5->E5_PRETINS, 0)}) 		
			EndIf
		EndIf
		SE5->(dbSkip())
	EndDo
Next __k

Return( aBaixa )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA080Cont ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 05/11/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida Bco/Agen/Cta e titulos c/cheque gerado anteriormente ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FA080Cont(ExpA1)                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA080Cont()
LOCAL lRet:=.T.

//Baixa de titulo com cheque j  gerado
If Empty(cBanco+cAgencia+cConta) .and. SE2->E2_IMPCHEQ == "S"
	lRet := .T.
Else
	lRet := CarregaSa6(cBanco,cAgencia,cConta,,,.T.)
Endif
Return lRet

Static Function Get080Mark()
Local cMarca

cMarca :=GetMark()
While cMarca == "xx"
	cMarca := Getmark()
Enddo
Return cMarca
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Fa080SetMd³ Autor ³ Fernando Machima      ³ Data ³ 09/01/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Mostra a tela de taxas de moeda    						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³Fa080SetMd()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³FINA080                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa080SetMd()

Local nCentMd1	:= MsDecimais(1)
Local oDlg, nLenMoedas	:= Len(aTxMoedas)
Local nOpc := 0

aBkpMoedas := aClone(aTxMoedas)

If nLenMoedas > 1
	DEFINE MSDIALOG oDlg From 200,0 TO 362,230 TITLE OemToAnsi(STR0116) PIXEL
	@ 005,005  To 062,110 OF oDlg PIXEL
	@ 012,010 SAY  aTxMoedas[2][1]  Of oDlg PIXEL
	@ 010,060 MSGET aTxMoedas[2][2] PICTURE aTxMoedas[1][3] VALID aTxMoedas[2][2]>0 Of oDlg PIXEL  HASBUTTON
	If nLenMoedas > 2
		@ 024,010 SAY  aTxMoedas[3][1]  Of oDlg PIXEL
		@ 022,060 MSGET aTxMoedas[3][2] PICTURE aTxMoedas[2][3] VALID aTxMoedas[3][2]>0 Of oDlg PIXEL HASBUTTON
		If nLenMoedas > 3
			@ 036,010 SAY  aTxMoedas[4][1]  Of oDlg PIXEL
			@ 034,060 MSGET aTxMoedas[4][2] PICTURE aTxMoedas[3][3] VALID aTxMoedas[4][2]>0 Of oDlg PIXEL  HASBUTTON
			If nLenMoedas > 4
				@ 048,010 SAY  aTxMoedas[5][1]  Of oDlg PIXEL
				@ 046,060 MSGET aTxMoedas[5][2] PICTURE aTxMoedas[4][3] VALID aTxMoedas[5][2]>0 Of oDlg PIXEL  HASBUTTON
			Endif
		Endif
	Endif
	DEFINE SButton FROM 064,80 TYPE 1 Action (nOpc:=1, oDlg:End() ) ENABLE OF oDlg  PIXEL

	ACTIVATE MSDialog oDlg CENTERED

	If nOpc <> 1  // nao confirmou, volta o backup das taxas
		aTxMoedas := aClone( aBkpMoedas)	
	EndIf
	nDifCambio	:= ( Round( (SE2->E2_VALOR * aTxMoedas[SE2->E2_MOEDA][2]), nCentMd1 ) - Round( SE2->E2_VLCRUZ, nCentMd1 ) )

Endif

Return( aTxMoedas[SE2->E2_MOEDA][2] )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³VerCpoSPB ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 22/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica existencia dos campos de SPB                 	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ VerCpoSPB()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function VerCpoSPB()

Local lRet := .T.
Local nK

dbSelectArea("SE2")
IF !(	SE2->(FieldPos("E2_CODBAR"))	  > 0 .and. SE2->(FieldPos("E2_OKSPB"))	> 0 .and.;
		SE2->(FieldPos("E2_CLEARIN")) > 0 .and. SE2->(FieldPos("E2_TPPGTO"))> 0 .and.;
		SE2->(FieldPos("E2_HORASPB")) > 0 .and. SE2->(FieldPos("E2_EVTSPB"))> 0 )
	lRet := .F.
Endif
If lRet
	dbSelectArea("SX5")
	For nK := 0 to 9
		cTabela := "X"+Alltrim(STR(nK))
		If !DbSeek(cFilial+cTabela)
			lRet := .F.
			Exit
		Endif
	Next
Endif
IF !File("SIGAADV.SPB")
	nHdlMot := MSFCreate("SigaAdv.SPB",0)
	IF nHdlMot == -1
		HELP(" ",1,"MOT_ERROR")
		Final("Erro F_"+str(ferror(),2)+" em SIGAADV.SPB")
	Endif
	fClose(nHdlMot)
Endif

Return lRet


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³F080SPB   ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 22/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Abre tela para digitação dos dados de SPB                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ F080SPB(ExpL1,ExpC1,ExpC2,ExpC3,ExpC4,ExpC5)               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 := Utiliza SPB ou nao                                ³±±
±±³          ³ ExpC1 := Clearing                                          ³±±
±±³          ³ ExpC2 := Tipo de Pagamento (Tabela 59)                     ³±±
±±³          ³ ExpC3 := Stored a ser disparada                            ³±±
±±³          ³ ExpC4 := Hora do agendamento da operacao              	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F080SPB(lSPB,cClearing,cTipoPgto,cStored,cHora)
Local nOpca := 0
Local oClearing
Local aClearing := {"TED","CIP"}
Local oTpPagto

DEFAULT cClearing := "TED"
lSPB := VerCpoSPB()

If lSPB
	If TrazCodMot(cMotBx) $ "SPB"
		//	tela dos dados complementares para SPB
		While .T.
			DEFINE MSDIALOG oDlgs FROM	22,9 TO 115,400 TITLE STR0122 PIXEL //"Dados SPB"

			@ 020, 014 COMBOBOX oClearing VAR cClearing ITEMS aClearing SIZE 30,50 OF oDlgs PIXEL
			@ 020, 050 MSGET oTpPagto VAR cTipoPgto	F3 "X9" Picture "@!" Valid ExistCpo("SX5", + "X9" + cTipoPgto) SIZE 30, 11 OF oDlgs PIXEL
			@ 020, 084 MSGET cHora	Picture "99:99" Valid !Empty(cHora) .and. VldHoraSPB(cHora) SIZE 30, 11 OF oDlgs PIXEL

			@ 010, 014 SAY STR0123 SIZE 20, 7 OF oDlgs PIXEL  //"Clearing"
			@ 010, 050 SAY STR0124 SIZE 50, 7 OF oDlgs PIXEL  //"Tipo Pgto"
			@ 010, 084 SAY STR0125 SIZE 49, 7 OF oDlgs PIXEL  //"Hora Agendamento"

			@ 004, 007 TO 036, 150 OF oDlgs PIXEL
   	
			DEFINE SBUTTON FROM 07, 155 TYPE 1 ACTION (nOpca:=1,IF(F080VldSPB(cClearing,cTipoPgto,@cStored,cHora),oDlgs:End(),nOpca:=2)) ENABLE OF oDlgs
			DEFINE SBUTTON FROM 21, 155 TYPE 2 ACTION (nOpca:=0,oDlgs:End()) ENABLE OF oDlgs

			ACTIVATE MSDIALOG oDlgs CENTERED		  
			If nOpca == 0
				lSPB := .F.
			ElseIf nOpca == 2
				nOpca := 0
				Loop
			Endif
			Exit
		Enddo
	Else
		lSPB := .F.
	Endif
Endif
Return .T.


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³F080BxSPB ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 22/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida e executa emissao de dadodos para SPB                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ F080BxSPB(ExpL1,ExpC1,ExpC2,ExpC3,ExpC4,ExpC5)             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 := Utiliza SPB ou nao                                ³±±
±±³          ³ ExpC1 := Clearing                                          ³±±
±±³          ³ ExpC2 := Tipo de Pagamento (Tabela 59)                     ³±±
±±³          ³ ExpC3 := Stored a ser disparada                            ³±±
±±³          ³ ExpC4 := Hora do agendamento da operacao              	  ³±±
±±³          ³ ExpC4 := Codigo de Barras                             	  ³±±
±±³          ³ ExpN1 := Numero Evento SPB                            	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F080BxSPB(cClearing,cTipoPgto,cStored,cHora,cCodbar,nEventoSpb)
Local lRet := .T.
Local nValBaixa := nValPgto-(nJuros+nMulta-nDescont)
Local aSPB := {}
Local aDadosSpb := {}

IF STR(nValBaixa,17,2) != STR(Round(NoRound(xMoeda(SE2->E2_VALOR-nTotAbat,SE2->E2_MOEDA,nMoedaBco,dBaixa,3),3),2),17,2)
	Help(" ",1,"FA070INV")
	lRet := .F.
Endif

aDadosSpb := {}

If lRet
	cCodBar	:= SE2->E2_CODBAR+Space(44-Len(SE2->E2_CODBAR))
	AADD(aSPB,{cClearing,cTipoPgto,cStored,cHora,cCodBar})
	// Execblock para iniciar Stored Procedure
	IF ExistBlock("FA080SPB")
		aDadosSPB := ExecBlock("FA080SPB",.f.,.f.,aSPB)
		cCodBar := aDadosSpb[1]
		nEventoSPB := aDadosSpb[2]
		If nEventoSPB == 0	//Erro no SPB. Não permite a baixa
			lRet := .F.
		Endif		
	Endif
Endif	

Return lRet


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³TrazCodSPB³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 23/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Retorna o codigo da Stored a ser utilizada                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³TrazCodSPB(ExpC1)		                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1 - Codigo do SPB (Clearing+Tipo Pgto)   				  ³±±    
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function TrazCodSPB( cCodSPB )
LOCAL nPos
LOCAL aCodSPB := ReadCodSPB()
nPos := Ascan(aCodSPB, {|x| Substr(x,1,5) = Upper(cCodSPB) })
If nPos > 0
	cStored := Upper(Substr(aCodSPB[nPos],6,4))
Else
	cStored := Space(4)
EndIf
Return cStored

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ReadCodSPB³ Autor ³ Mauricio Pequim Jr	³ Data ³ 22/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Leitura do arquivo SIGAADV.SPB para carregar array aMotBx c/³±±
±±³			 ³o Codigo da mensagem do SPB a ser utilizado             	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ReadCodSpb()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno	 ³ Array aCodSpb											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ReadCodSPB()
Local nHdlCod := 0
Local nBytes:=0
Local nTamArq
Local xBuffer
Local aCodSpb:={}

If !FILE("SIGAADV.SPB")
	nHdlCod := fCreate("SigaAdv.SPB")
	If nHdlCod == -1
		HELP(" ",1,"SPB_ERROR")
		Final("Erro F_"+str(ferror(),2)+" em SIGAADV.SPB")
	EndIf
	fClose(nHdlCod)
EndIf

nHdlCod := FOPEN("SIGAADV.SPB",64)

If nHdlCod <0
	HELP(" ",1,"SIGAADV.SPB")
	Final("SIGAADV.SPB")
EndIf
nTamArq:=FSEEK(nHdlCod,0,2)	// VerIfica tamanho do arquivo
FSEEK(nHdlCod,0,0)			// Volta para inicio do arquivo

While nBytes<nTamArq
	
	xBuffer:=Space(11)
	FREAD(nHdlCod,@xBuffer,11)
	
	AADD(aCodSpb,Upper(SubStr(xBuffer,1,9)))
	nBytes+=11
Enddo

Fclose(nHdlCod)

Return aCodSpb

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ValidSPB  ³ Autor ³ Mauricio Pequim Jr	³ Data ³ 22/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida os dados do SPB no momento da baixa                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ValidaSPB(ExpC1,ExpC2,ExpC3,ExpN1)						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ ExpC1 = Codigo do Clearing SPB							  ³±±
±±³       	 ³ ExpC2 = Tipo de Pagamento (Tabela 59)					  ³±±
±±³       	 ³ ExpC3 = Mensagem do piloto SPB a ser utilizada			  ³±±
±±³          ³ ExpN1 = Hora do Agendamento								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F080VldSPB(cClearing,cTipoPgto,cStored,cHora)
Local lRet := .T.

If	!VldHoraSPB(cHora) .or. Empty(cTipoPgto)
	lRet := .F.
Endif
If lRet
	cStored := TrazCodSPB(cClearing+cTipoPgto)
	If Empty(cStored)
		MSGSTOP("Operacao nao cadastrada na Tabela de SPB.")
		lRet := .F.
	Endif
Endif
Return lRet 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³VldHoraSPB³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 24.09.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Consiste se a hora digitada ‚ v lida.					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ VldHoraSPB(ExpC1) 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Hora no formato 99:99 						      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function VldHoraSPB(cHora)

Local lRet		:= .F.
Local cHoras	:= Substr(cHora,1,2)
Local cMinutos := Substr(cHora,4,2)

If cHoras >= "00" .And. cHoras < "24" .And. cMinutos >= "00" .And. cMinutos < "60"
	lRet := .T.
EndIf
If ( !lRet)
	Help(" ",1,"VLDHORA")
EndIf

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Fa080ValEs³ Autor ³ Claudio D. de Souza   ³ Data ³ 17.09.03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao do valor recebido em moeda estrangeira			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Fa080ValEstrang(	nValEstrang,nTxMoeda,nValPgto,dBaixa, 	  ³±±
±±³			 ³ 					oValPgto,oTxMoeda,nJuros,nMulta,nDescont, ³±±
±±³			 ³ 					nOtrga,nImpSubst,nEstOriginal)		      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Hora no formato 99:99 						      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080  												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function Fa080ValEstrang(nValEstrang,nTxMoeda,nValPgto,dBaixa,oValPgto,oTxMoeda,;
											nJuros,nMulta,nDescont,nOtrga,nImpSubst,nEstOriginal)
Local nValPgOld 	:= nValPgto
Local nTxMdaOr		:= 0
Local nTxCorre	:= 0
Local nCentMd1 		:= MsDecimais(1)
Local nTxMoedOld := nTxMoeda 

If cPaisLoc<>"BRA"
	nTxMoeda:=Iif(nMoedaBco>0,aTxMoedas[nMoedaBco][2],1)
	nTxMdaOr:=aTxMoedas[SE2->E2_MOEDA][2]
EndIf
If nTxMoeda > 0
	// Converte o valor em moeda estrangeira para identificar o valor total do pagto. 
	If cPaisLoc <> "BRA"
		nValPgto := Round(NoRound(xMoeda(nValEstrang,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMdaOr,nTxMoeda),nCentMd1+1),nCentMd1)
	Else
		nValPgto := Round(NoRound(xMoeda(nValEstrang,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1),nCentMd1)
	EndIf	

	//Problemas de arredondamento
	If ABS(nValPgOld - nValPgto) == ABS(0.01)
		nValpgto := nValPgOld
	Endif
		
	// Verifica a taxa utilizada
	If SE2->E2_MOEDA <> nMoedaBco
		nTxMoeda := Round(NoRound(nValPgto / nValEstrang,5),TamSX3("M2_MOEDA"+AllTrim(Str(SE2->E2_MOEDA)))[2])
	EndIf	
	
	// Somente atualiza os objetos caso nao seja rotina automatica
	If ValType(oTxMoeda) == "O"
		// Atualiza os objetos
		If cPaisLoc=="BRA"
			oTxMoeda:Refresh()
		EndIf
		oValPgto:Refresh()
	EndIf
	
	If SE2->E2_MOEDA > 1 .And. nTxMoedOld <> nTxMoeda .And. FunName() $ "FINA080|FINA750|FINA703" //Vld para não permitir alt da taxa acordada, a partir da ediç do Vlr estrang
		nTxMoeda := nTxMoedOld 	
	EndIf	

	// Calcula a correcao monetaria
	nTxCorre := If(Empty(SE2->E2_DTVARIA) .And. Empty(nTxMoeda),SE2->E2_TXMOEDA,If(nTxMoeda > 0, nTxMoeda,RecMoeda(dBaixa,SE2->E2_MOEDA)))
 	nEstOriginal := nValEstrang- Round(NoRound(xMoeda(nJuros+nMulta-nDescont+nOtrga+nImpSubst,nMoedaBco,SE2->E2_MOEDA,,nCentMd1+1,,nTxMoeda),nCentMd1+1),nCentMd1)
	FA080CORR(nEstOriginal,nTxCorre)
Endif	

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AltVencImp³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 27.02.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Altera data de vencimento dos titulos de impostos quando da³±±
±±³          ³ baixa do titulo principal.								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ AltVencImp()		 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Hora no formato 99:99 						      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
/*/
Function AltVencImp(dDtBaixa)

Local aArea		 := GetArea()
Local dVencRea	 := CTOD("//")
Local cChaveIrf := ""
Local cChavePIS := ""	
Local cChaveCOF := ""
Local cChaveCSL := ""
Local nRegSe2	 := SE2->(RecNo())
Local cUniao	 := PadR(GetMv("MV_UNIAO"),6)
Local cCodRetIr := SE2->(If(FieldPos("E2_CODRET")>0,E2_CODRET,""))
Local cTipoFor := ""
Local lIRProg := IIf(SA2->(FieldPos("A2_IRPROG")) # 0, IIf(!Empty(SA2->A2_IRPROG), SA2->A2_IRPROG, "2"), "2")
Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT
Local lBdVcImp	:= SuperGetMV("MV_BDVCIMP",.T.,.F.)

DEFAULT dDtBaixa := dDataBase
If Select("__SE2") == 0
   ChkFile("SE2",.F.,"__SE2")
Else
   DbSelectArea("__SE2")
EndIf

cAlias := "__SE2"

//Permite ou nao a alteracao dos vencimentos dos impostos.
If !(SuperGetMv("MV_ATVCIMP",.F.,.F.))
	RestArea(aArea)
	dbGoto(nRegSe2)
	Return .T.
Endif

If ( cPaisLoc == "BRA" )
	cChaveIrf := If(SE2->E2_IRRF > 0, SE2->E2_PREFIXO +;
		 				SE2->E2_NUM + SE2->E2_PARCIR +;
		 				Iif(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG,MVTXA,MVTAXA), "")
	
	cChavePis	:= If(SE2->E2_PIS > 0, SE2->E2_PREFIXO +;
	 					SE2->E2_NUM + SE2->E2_PARCPIS +;
	 					Iif(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG,MVTXA,MVTAXA), "")
	
	cChaveCOF	:= If(SE2->E2_COFINS > 0, SE2->E2_PREFIXO +;
		 				SE2->E2_NUM + SE2->E2_PARCCOF +;
	 					Iif(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG,MVTXA,MVTAXA), "")
	
	cChaveCSL	:= If(SE2->E2_CSLL > 0, SE2->E2_PREFIXO +;
		 				SE2->E2_NUM + SE2->E2_PARCSLL +;
	 					Iif(SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG,MVTXA,MVTAXA), "")
Endif 					
cTipoFor := IIf(SA2->A2_TIPO=="J" .AND. lIRProg == "1","F",SA2->A2_TIPO)
dbSelectArea(cAlias)
dbSetOrder(1)	
dVencRea := F050VImp("IRRF",SE2->E2_EMISSAO,SE2->E2_EMIS1,dDtBaixa,cCodRetIr,cTipoFor) // Calcula o vencimento do imposto
If !Empty(cChaveIrf) .and. MsSeek(xFilial("SE2")+cChaveIrf+cUniao) .AND. (!lIRPFBaixa .Or. (lBdVcImp .And. lBdImp))
	If E2_SALDO > 0
		Reclock(cAlias)
		E2_VENCREA 	:= dVencrea
		E2_VENCTO 	:= dVencrea
		MsUnlock()
	Endif
Endif
SE2->(dbGoto(nRegSe2))
dVencRea := F050VImp("PIS",SE2->E2_EMISSAO,SE2->E2_EMIS1,dDtBaixa) // Calcula o vencimento do imposto
//Atualiza data de vencimento do titulo de PIS
If !Empty(cChavePis) .and. MsSeek(xFilial("SE2")+cChavePis+cUniao)
	If E2_SALDO > 0
		Reclock(cAlias)
		E2_VENCREA 	:= dVencrea
		E2_VENCTO 	:= dVencrea
		MsUnlock()
	Endif
Endif
//Atualiza data de vencimento do titulo de Cofins
If !Empty(cChaveCof) .and. MsSeek(xFilial("SE2")+cChaveCof+cUniao)
	If E2_SALDO > 0
		Reclock(cAlias)
		E2_VENCREA 	:= dVencrea
		E2_VENCTO 	:= dVencrea
		MsUnlock()
	Endif
Endif
//Atualiza data de vencimento do titulo de Cofins
If !Empty(cChaveCsl) .and. MsSeek(xFilial("SE2")+cChaveCsl+cUniao)
	If E2_SALDO > 0
		Reclock(cAlias)
		E2_VENCREA 	:= dVencrea
		E2_VENCTO 	:= dVencrea
		MsUnlock()
	Endif
Endif
RestArea(aArea)
dbGoto(nRegSe2)
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³MoedaBco  ³ Autor ³ Cristiano Denardi  ³ Data ³ 07.05.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Busca a moeda no cadastro do banco.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cBco    = Codigo do Banco 						       ³±±
±±³          ³ cAg     = Codigo da Agencia					           ³±±
±±³          ³ cCC     = Codigo da Conta 							   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Return    ³ nMd -> Numero da moeda do banco                         ³±±
±±³          ³        0 - erro na busca ou nao encontrou               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080 (paises localizados)							   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
/*/
Function MoedaBco( cBco, cAg, cCC )

Local aArea	:= GetArea()
Local nMd	:= 0	// Moeda usada pelo Banco
Local lPar	:= .T.	// Validacao os parametros passados a funcao

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Validacao das variaveis usadas na funcao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Do Case
	Case ( cBco   == Nil ) .Or. Empty(cBco  )
		lPar := .F.    
	Case ( cAg    == Nil ) .Or. Empty(cAg   )
		lPar := .F.
	Case ( cCC    == Nil ) .Or. Empty(cCC   )
		lPar := .F.     
EndCase                 

If lPar
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Busca a Moeda do Banco Informado ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SA6")
	DbSetOrder(1) // A6_FILIAL+A6_COD+A6_AGENCIA+A6_NUMCON
	DbSeek( xFilial("SA6")+cBco+cAg+cCC )
	If Found()
		If cPaisLoc <> "CHI"
			nMd := SA6->A6_MOEDA
		Else
			nMd := Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,SA6->A6_MOEDAP),1)	
		EndIf	
	Endif
Endif

RestArea(aArea)
Return( nMd )
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³F080Impost³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 05/11/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida Bco/Agen/Cta e titulos c/cheque gerado anteriormente ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FA080Cont(ExpA1)                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F080Impost(nRegSe2,lCancel,nJuros,nMulta,nDescont,nValPgto)

Local aArea	:= GetArea()
Local aAreaSA2	:= SA2->(GetArea())
Local nBaseImp := 0
Local cForUniao := ""
Local cLojUniao := ""
Local nValImp := 0                           
Local cPrefNum := If( cPaisLoc=="BRA", SE2->(E2_PREFIXO+E2_NUM), "" )
Local cParcPis := If( cPaisLoc=="BRA", SE2->E2_PARCPIS, "" )
Local cParcCof := If( cPaisLoc=="BRA", SE2->E2_PARCCOF, "" )
Local cParcCsl := If( cPaisLoc=="BRA", SE2->E2_PARCSLL, "" )
Local nX := 0
Local cChaveImp := ""
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )               
Local lMVImpAcr	:= SuperGetMv("MV_IMPACR",.t.,"2") == "2"
Local lMVImpDcr	:= SuperGetMv("MV_IMPDCR",.t.,"2") == "2"
Local lJurMulDes	:= SuperGetMv("MV_IMPBAIX",.t.,"2") == "2"
Local lVlrAcImp	:= FindFunction("VlrAcImp")
Local nVlrAcImp	:= 0

Default lCancel := .F.

If ( cPaisLoc == "BRA" )
	//Se o usuario fez opcao por nao calcular impostos na baixa
	If lJurMulDes .And. lMVImpAcr .And. lMVImpDcr 
		Return .T.
	Endif
	
	DbSelectArea("SA2")
	DbSetOrder(1)
	MsSeek(xFilial("SA2")+GetMv("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMv("MV_UNIAO")))+"00")
	cForUniao	:= SA2->A2_COD
	cLojUniao	:= SA2->A2_LOJA
	
	dbSelectArea("SE2")
	dbSetOrder(1)	
	
	//Abro o SE2 com outro alias pois pode estar filtrado pela 
	//Baixa por lote
	If Select("__SE2") == 0
	   ChkFile("SE2",.F.,"__SE2")
	Else
	   DbSelectArea("__SE2")
	EndIf
	dbSetOrder(1)
	dbGoto(nRegSE2)
	
	nBaseImp	:= __SE2->(E2_VALOR+E2_IRRF+E2_ISS+E2_SEST+E2_PIS+E2_COFINS+E2_CSLL)
	
	nBaseImp	+= Iif(!lInssBx,__SE2->E2_INSS,0)
	
	//Calculo o valor do imposto sobre os valores de juros e descontos
	If !lJurMulDes
		If nDescont > 0 .and. nValPgto == 0  //Baixa por desconto
			nValPisBx := ( (nJuros + nMulta - nDescont) * __SE2->E2_PIS ) / __SE2->E2_VALOR
			nValCofBx := ( (nJuros + nMulta - nDescont) * __SE2->E2_COFINS ) / __SE2->E2_VALOR
			nValCslBx := ( (nJuros + nMulta - nDescont) * __SE2->E2_CSLL ) / __SE2->E2_VALOR
		Else 
			nValPisBx := ( (nJuros + nMulta - nDescont) * __SE2->E2_PIS ) / nBaseImp
			nValCofBx := ( (nJuros + nMulta - nDescont) * __SE2->E2_COFINS ) / nBaseImp
			nValCslBx := ( (nJuros + nMulta - nDescont) * __SE2->E2_CSLL ) / nBaseImp
		Endif
	ElseIf !lMVImpDcr .Or. !lMVImpAcr
		nVlrAcImp	:= Iif(lVlrAcImp, VlrAcImp( nJuros + nMulta, nDescont, .f.),0 )
		If nDescont > 0 .and. nValPgto == 0  //Baixa por desconto
			nValPisBx := ( nVlrAcImp * __SE2->E2_PIS ) / __SE2->E2_VALOR
			nValCofBx := ( nVlrAcImp * __SE2->E2_COFINS ) / __SE2->E2_VALOR
			nValCslBx := ( nVlrAcImp * __SE2->E2_CSLL ) / __SE2->E2_VALOR
		Else 
			nValPisBx := ( nVlrAcImp * __SE2->E2_PIS ) / nBaseImp
			nValCofBx := ( nVlrAcImp * __SE2->E2_COFINS ) / nBaseImp
			nValCslBx := ( nVlrAcImp * __SE2->E2_CSLL ) / nBaseImp
		Endif
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Analise dos codigos das naturezas envolvidas                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1 to 3 
		Do Case
			Case nX == 1	//Pis
				cNatureza	:= GetMv("MV_PISNAT",.F.,"PIS")
				cValor		:= "nValPisBx"
				cChaveImp	:= IIf(ABS(nValPisBx) > 0, cPrefNum+cParcPis+"TX "+cForUniao+cLojUniao, "")
			Case nX == 2	//Cofins
				cNatureza	:= GetMv("MV_COFINS",.F.,"COF")
				cValor		:= "nValCofBx"
				cChaveImp	:= IIf(ABS(nValCofBx) > 0, cPrefNum+cParcCof+"TX "+cForUniao+cLojUniao, "")
			Case nX == 3	//Csll
				cNatureza	:= GetMv("MV_CSLL",.F.,"CSL")
				cValor		:= "nValCslBx"
				cChaveImp	:= IIf(ABS(nValCslBx) > 0, cPrefNum+cParcCsl+"TX "+cForUniao+cLojUniao, "")
		EndCase	
	
		nValImp := &(cValor)
	
		If ABS(nValimp) > 0
			If MsSeek(xFilial("SE2")+cChaveImp)
				RecLock("__SE2")
				If lCancel
					If nValImp > 0 .and. E2_SALDO > 0
						E2_ACRESC -= nValImp
						E2_SDACRES -= nValImp
					Else
						E2_DECRESC -= ABS(nValImp)
						E2_SDDECRE -= ABS(nValImp)
					Endif
				Else	
					If nValImp > 0 .and. E2_SALDO > 0
						E2_ACRESC += nValImp
						E2_SDACRES += nValImp
					Else
						E2_DECRESC += ABS(nValImp)
						E2_SDDECRE += ABS(nValImp)
					Endif
				Endif
				If E2_ACRESC < 0
					E2_ACRESC := 0
				ENDIF
				If E2_DECRESC < 0
					E2_DECRESC := 0
				ENDIF
				If E2_SDACRES < 0
					E2_SDACRES := 0
				ENDIF
				If E2_SDDECRE < 0
					E2_SDDECRE := 0
				ENDIF
				MsUnlock()
			Endif
		Endif
	Next
	
	RestArea(aAreaSA2)
	RestArea(aArea)
	SE2->(dbGoto(nRegSE2))
Endif
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³F080TotMes³ Autor ³Mauricio Pequim Jr     ³ Data ³19/10/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica o total de notas do Fornecedor que vencem no mesmo ³±±
±±³          ³mes.                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpD1 - Data de referencia                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F080TotMes(dReferencia,lCalcRet,lCalcPA,lSE2,lAltData,lCpoValor) 

Local aAreaSE2	:= SE2->( GetArea() ) 
Local aRecnos	:= {}      
Local dDataIni	:= FirstDay( dReferencia )   
Local dDataFim	:= LastDay( dReferencia ) 
Local nVlMinImp	:= GetNewPar("MV_VL10925",5000)
Local nValorPg	:= 0
Local nValTit	:= 0
Local nVlrTit	:= 0
Local lSest		:= SE2->(FieldPos("E2_SEST"))	> 0  //Verifica campo de SEST
Local cModRetPIS := GetNewPar( "MV_RT10925", "1" ) 
Local lContrRet	:= !Empty( SE2->( FieldPos( "E2_VRETPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE2->( FieldPos( "E2_VRETCSL" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETPIS" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_PRETCOF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETCSL" ) ) )

//Considero juros multa ou desconto na base do imposto.
// 1 = Considera valores juros multa ou desconto                    
// 2 = Nao considera valores juros multa ou desconto
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lAltValor	:= STR(nValPgto,17,2) != STR(nOldValPgto,17,2) .or. (IsInCallStack('FINA450') .and. IsInCallStack('MSVLDGAUTO'))
Local lAltJuros	:= IIF(IsInCallStack('FA080TIT'),STR(nJuros,17,2)   != STR(nOldJuros  ,17,2) .Or.;
												 STR(nMulta,17,2)   != STR(nOldMulta  ,17,2) .Or.;
												 STR(nDescont,17,2) != STR(nOldDescont,17,2), .F.)
												 
Local lAltJurLt	:= IIF(IsInCallStack('FA080Lot'),STR(nJuros,17,2)   != STR(nOldJuros  ,17,2) .Or.;
												 STR(nMulta,17,2)   != STR(nOldMulta  ,17,2) .Or.;
												 STR(nDescont,17,2) != STR(nOldDescont,17,2), .F.)
												 
												 												 
//Controla o Pis Cofins e Csll na baixa
Local lPCCBaixa	:= SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

Local nValOutImp := 0

Local cModTot	:= GetNewPar( "MV_MT10925", "1" ) 

Local lBaseSE2	:= SuperGetMv("MV_BS10925",.T.,"1") == "1"  .and. ;
						(	!Empty( SE1->( FieldPos( "E1_BASEPIS" ) ) ) .And.;
							!Empty( SE1->( FieldPos( "E1_BASECOF" ) ) ) .And. ; 
							!Empty( SE1->( FieldPos( "E1_BASECSL" ) ) ) .And. ; 
							!Empty( SE2->( FieldPos( "E2_BASEPIS" ) ) ) .And.;
							!Empty( SE2->( FieldPos( "E2_BASECOF" ) ) ) .And. ; 
							!Empty( SE2->( FieldPos( "E2_BASECSL" ) ) )	)

Local nProp		:= 1
Local nProp2	:= 1
Local nBaseRet	:= 0  //Base de retencao
Local nSE2Reg	:= SE2->(RECNO())
Local lFa080PCC	:= ExistBlock("FA080PCC")

//1-Cria NCC/NDF referente a diferenca de impostos entre emitidos (SE2) e retidos (SE5)
//2-Nao Cria NCC/NDF, ou seja, controla a diferenca num proximo titulo
//3-Nao Controla
Local cNccRet	:= SuperGetMv("MV_NCCRET",.F.,"1")

Local nVlMinIrf	:= 0

Local cChaveTit	:= SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)

Local nX 		:= 0 
Local lTodasFil	:= ExistBlock("MT103FRT")  
Local lConFil	:=   SuperGetMv("MV_CONSFIL",.F.,.F.)
Local aFil10925	:= {}
Local cFilAtu	:= IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL )
Local aArea		:= GetArea()
Local cVencPub		:= SuperGetMV("MV_VENPUB", .F., "M")
Local aFor10925	:= {}
Local lVerForLj	:= ExistBlock("F080LOJA")
Local cQuery	:= "" 	
Local nLoop		:= 0
Local aValorBx	:= {}
Local lAltBxVal	:= .F.

// Considera baixas que geram ou nao movimento bancario.
// 1 = Somente os motivos que geram movimento bancario
// 2 = Considera todos os motivos de baixa.
Local lMotBxMBco := (SuperGetMv("MV_MB10925",.t.,"2") == "1")
Local lCalcIssBx :=	.F. 
                                                                                                                                					
Local lAplVlMin	:= .T.
Local aDadosImp	:= Array(5)    
Local aTitBsImp	:= {}
Local lGravou	:= .F.
Local lLojaAtu	:= ( GetNewPar( "MV_LJ10925", "1" ) == "1" )   
Local nTamTit	:= TamSX3("E5_PREFIXO")[1]+TamSX3("E5_NUMERO")[1]+TamSX3("E5_PARCELA")[1]+TamSX3("E5_TIPO")[1]
Local nTamTit2	:= TamSX3("E5_PREFIXO")[1]+TamSX3("E5_NUMERO")[1]+TamSX3("E5_PARCELA")[1]
Local lImp10925	:= ExistBlock("FA080IMP")
Local lAchouPa	:= .F.
Local lValPgto	:= SuperGetMv("MV_BP10925",.T.,"1") == "2" //1- Valor bruto da baixa parcial / 2- Valor da baixa parcial menos os impostos
Local nValProp	:= 0
Local nTotAdto	:= 0		
Local lBaixaAbat := .F.
Local lBxCec	:= .F.
Local lNotBax	:= .F.
Local nTotImpost := 0
Local lAglImp	:= .F.
Local aBaixa	:= {}
Local nY
Local cChaveBx	:= ""
Local lDigitado	:= .F.
Local aTitulos	:= {}
Local lImpInFat	:= .F.	
Local nImpRetEmi := 0
Local lCpoVlMin	:= !Empty( SE2->( FieldPos( "E2_APLVLMN" ) ) )
Local lSE2DtBor	:= !Empty( SE2->( FieldPos( "E2_DTBORDE" ) ) )
Local cTitAtual	:= SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
Local lPaBruto	:= GetNewPar("MV_PABRUTO","2") == "1"  //Indica se o PA terá o valor dos impostos descontados do seu valor
Local nValAbat	:= 0
Local nImpPaBrt   := 0 //Imposto do PA Bruto
Local nKco			:= 0
Local aRecSE2 := {}
Local nRecSE2 := 0
Local nT := 0
Local lVerSfq := .F.
Local lVerifPCC := !Empty( SE2->( FieldPos( "E2_FORNPAI" ) ) ) .and. !Empty( SE2->( FieldPos( "E2_PROCPCC"   ) ) )
Local nTamForn :=  0
Local lGrvIRE2 := .F.
Local nINSSAnts := 0
Local nIRAnts   := 0
Local lTBxOTits := .F.
Local nBaseOrig  := 0
Local nBaixaParc := 0
Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT   
Local lPrImPA := !Empty( SE2->( FieldPos( "E2_PRINSS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRISS" ) ) ) .And. ;
				 !lPaBruto .And. SuperGetMv("MV_PAPRIME",.T.,"2") == "1"  
Local cFormClcPCC := GetMV("MV_RCPCCBX",.T.,"1")
Local nInss := 0
#IFDEF TOP
	Local aStruct   := {} 
	Local aCampos   := {} 
	Local cAliasQry := ""  
	Local cSepNeg   := If("|"$MV_CPNEG,"|",",")
	Local cSepPag   := If("|"$MVPAGANT,"|",",")
	Local cSepProv  := If("|"$MVPROVIS,"|",",") 
	Local cSepTxa   := If("|"$MVTXA,"|",",")
	Local cSepTx	 := If("|"$MVTAXA,"|",",")
	Local cAliasSE2 := ""
#ELSE
	Local cIndexSE5
	Local nIndexSe5
	Local nLenNumBor := TamSx3("E2_NUMBOR")[1]
#ENDIF 

Local nTotCsl   	:= 0 // Totais do PCC de todos os titulos do mesmo mes.
Local nTotPis   	:= 0
Local nTotCof   	:= 0
Local	aDocumen		:=	{}
Local	nIssPa		:=	nPccPa	:=	nIrPa	:=	nVrPa	:=	0	
Local nJ				:=	0
Local cChaveSe2	:=	""  
Local	cDocumen		:=	""
Local aAreaSe5		:= GetArea()	
Local	nPccBx		:=	0  
Local nSE5Reg		:= 0
Local lPropPA 		:= SuperGetMv("MV_COMPCP",,.F.) //Verifica se vai proporcionalizar quando PA>NF e PA liquido. 
Local aNf			:= {}
Local lverVrAR		:= .T.
//Chamado SDFPWW
Local cAglutPCC  := SuperGetMV("MV_PCCAGFR",,"1")
Local cAglutFil  := SuperGetMV("MV_PCCAGFL",,"1")
Local aAreaSM0   := {}
Local aAreaSA2   := {}
Local cCGCSM0    := ""
Local cCGCFor    := ""
Local cForTipo   := ""
Local cEmpAtu    := ""  
Local lTitBor	 := .F. //No array aDadosRet tenho dados de titulos que possuam bordero de pagamento (FINA241).
Local lNfComp	 := .F. //Existe titulo a pagar que possuem compensacao. 	            
Local nIssComp	 := 0   //Valor do ISS da NF referente a compensacao.
Local nPropIss	 := 0  //Proporcionalizar o ISS caso seja na emissao e o titulo possua compensacao.
Local cFunName	 := Alltrim(funname())
Local lAltdesc 	 := iIF(cFunName=="FINA080" .or. Isincallstack("FINA080"),nOldDescont != nDescont,.F.)
Local lAltMulta	 := iIF(cFunName=="FINA080" .or. Isincallstack("FINA080"),nOldMulta != nMulta,.F.)
Local lFIN080PCC := Existblock("FIN080PCC")
//Criado o array aDadosBor para armazenar o valores de PCC que foram calculados na baixa parcial de um titulo em bordero
//para que possa subtrair este valor de PCC calculado do valor total a ser retido do titulo, pois estava somando o valor a ser retido mais o valor 
//calculado do PCC na baixa parcial
//[1] - Valor PIS parcial [2] - Valor COFINS parcial  [3] - Valor CSLL parcial
Local aDadosBor :={0,0,0}
Local lTemDadosBor := .F.
Local lSomouIss	:= .F.      
Local cFiliais := ""
Local cFilBusca := ""
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )                              

Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0) 
Local nLimInss 	:= GetMv("MV_LIMINSS",.F.,0)
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 		:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao. 

Local lAltPgto		:=	.F.
Local dDataAtu := dReferencia
Local dBaixaIni := dReferencia
Local dBaixaFim := dReferencia
Local nK := 0  
Local cDbMs		:= UPPER(TcGetDb())
Local lMVImpAcr	:= SuperGetMv("MV_IMPACR",.t.,"2") == "2"
Local lMVImpDcr	:= SuperGetMv("MV_IMPDCR",.t.,"2") == "2"
Local cMVImpDcr	:= SuperGetMv("MV_IMPDCR",.t.,"2")
Local lVlrAcImp	:= FindFunction("VlrAcImp")

If Type("lAplMinP") != "L"
	lAplMinP := .F.	
	If SA2->( FieldPos( "A2_MINPUB" ) ) > 0 .And. SA2->A2_MINPUB == "2"
		lAplMinP := .T.
	EndIF
EndIF
            
If Type("lEmpPub") == "U"
	lEmpPub := lIsEmpPub .And. IsEmpPub() .And. lIRPFBaixa .And. lAplMinP
EndIf 

If lPCCBaixa .and. dReferencia >= dLastPcc .And. !lEmpPub
	nVlMinImp	:= 0
EndIf

             
aFill(aDadosImp,0)

PRIVATE aBaixaSE5 := {}

Default lCalcRet := .F.
Default lCalcPA  := .F.
Default lSE2  := .T.   //Variavel para controle do uso do alias alternativo __SE2 para alguns posicionamentos.
Default lAltData := .F.
Default lCpoValor := .F.

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If cFunName == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
	lCalcIssBx := .F.
Else
 	lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) 
EndIf

If Type("cTpDesc") == "U"
	cTpDesc:="I"
Endif

nInss 	:= SE2->E2_INSS
nIss     := If(Type("nIss") != "N",0,nIss)
nValComp := If(Type("nValComp") != "N",0,nValComp)
nValLiq  := If(Type("nValLiq") != "N",0,nValLiq)
dBaixa	:= If(Type("dBaixa") != "D",dDataBase,dBaixa)
nTotAbat  := If(Type("nTotAbat") != "N",SumAbatPag( SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_FORNECE, SE2->E2_MOEDA, "S", dBaixa, SE2->E2_LOJA ),nTotAbat)

nTamForn := If(lVerifPCC,TAMSX3("E2_FORNPAI")[1],0) 
lBxLote := IIf(Type("lBxLote")=="U",.F.,lBxLote)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ POR MAIS ESTRANHO QUE PARE€A, ESTA FUNCAO DEVE SER CHAMADA AQUI! ³
//³                                                                  ³
//³ A fun‡„o SomaAbat reabre o SE2 com outro nome pela ChkFile para  ³
//³ efeito de performance. Se o alias auxiliar para a SumAbat() n„o  ³
//³ estiver aberto antes da IndRegua, ocorre Erro de & na ChkFile,   ³
//³ pois o Filtro do SE2 uptrapassa 255 Caracteres.                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SomaAbat("","","","P")

//Verificar ou nao o limite de 5000 para Pis cofins Csll
// 1 = Verifica o valor minimo de retencao
// 2 = Nao verifica o valor minimo de retencao
If !Empty( SE2->( FieldPos( "E2_APLVLMN" ) ) ) .and. SE2->E2_APLVLMN == "2"
	lAplVlMin := .F.
Endif	

If lEmpPub .And. lIRPFBaixa 
	If SuperGetMV("MV_IN4815", .F., "S") == "S"
		dDataAtu := dReferencia 
		For nK:=1 To 7
			If Dow(dDataAtu ) == 7
				Exit
			EndIf 
			dDataAtu++
		Next nK
		dBaixaIni := dDataAtu-7
		dBaixaFim := dDataAtu
	EndIf
	If lIRPFBaixa .And. lPCCBaixa
		If cVencPub == "D"
			dBaixaIni := dBaixaFim := dDebtIni := dDebtFim :=  dBaixa 
		ElseIf cVencPub == "M"
			dBaixaIni := dDebtIni := FirstDay(dBaixa)  
			dBaixaFim := dDebtFim := LastDay(dBaixa)   
		EndIF
	EndIF
EndIF
 

nDiferImp := 0

//Garanto o tamanho dos arrays de retencao
If Len(aDadosRef) < 7
	aDadosRef := Array(7)
	AFill( aDadosRef, 0 ) 
Endif
If Len(adadosRet) < 7
	aDadosRet := Array(7)
	AFill( aDadosRet, 0 ) 
Endif	        

If Type("aRecnosSE2") == "U"
	aRecnosSE2 := {}
Endif

aValorBx := Array(3)
AFill( aValorBx, 0 ) 

If cAglutPCC == "2" .Or. cAglutPCC == "3"
	If lVerForLj
		Help( ,, 'HELP',, STR0181 , 1, 0) //'Parâmetro MV_PCCAGFR deve ser "1=Não Aglutina" para utilizar o ponto de entrada "F080LOJA"'
		Return .T.
	EndIf
EndIf
If (cAglutFil == "2" .Or. cAglutFil == "3") .And. lTodasFil
	Help( ,, 'HELP',, STR0182 , 1, 0) //'Parâmetro MV_PCCAGFL deve ser "1=Não Aglutina" para utilizar o ponto de entrada "MT103FRT"'
	Return .T.
EndIf

If !lPccBaixa
	Return .T.
Endif

//Natureza nao retem imposto
If cModTot == "2" //Considera apenas titulos com retencao de PCC
	SED->(dbSetOrder(1))
	If lCalcPa
		cNatur := M->E2_NATUREZ
	Else
		cNatur := SE2->E2_NATUREZ	
	Endif
	SED->(MsSeek(xFilial("SED")+cNatur))
	If !(SED->ED_CALCPIS == "S" .and. SA2->A2_RECPIS  == "2") .and.;
		!(SED->ED_CALCCSL == "S" .and. SA2->A2_RECCSLL == "2") .and.;
		!(SED->ED_CALCCOF == "S" .and. SA2->A2_RECCOFI == "2")
		Return .T.
	Endif
Endif
		
//Titulo ja teve retencao na emissao
If !lCalcPA .And. (!(SE2->E2_PRETPIS $ "1#3#7") .OR. !(SE2->E2_PRETCOF $ "1#3#7") .OR. !(SE2->E2_PRETCSL $ "1#3#7"))
	Return .T.
Endif

// Verificar se eh PA para não gerar recalculo de impostos.
If !lCalcPA .And. (SE2->E2_TIPO $ MVPAGANT)
	Return .T.
Endif
        
// Faz verificacao das baixas do titulo.
// Consiste se o motivo gera ou nao movimento bancario.
If lMotBxMBco .And. !lCalcPA .And. !Fa080MovBc() 
	nValPgto += nPis+nCofins+nCsll+nIrrf+nIss
	nOldValPgto := nValPgto
	nPis := 0
	nCofins := 0
	nCsll := 0
	nIrrf := 0
	Return .T.	
Endif

//Se o valor liquidado for diferente do valor da baixa total, foi um valor digitado
If nValLiq > 0 .and. (nValLiq+nTotAbat) != SE2->E2_SALDO .and. !lMotBxMbco 
	lDigitado := .T.
	If !lAltValor  .AND. ((nValLiq+nTotAbat) == nValOrig)
		Return .T.	
	Endif
Endif

//Se a validação nao partiu do campo de valor
If !lDigitado .and. !lAltValor .and. !lAltJuros .and. ( Type('lF080Auto') =='U' .or. !lF080Auto)  .And. !lAltJurLt
	nValPgto += nPis+nCofins+nCsll
	If (lIRPFBaixa .and. !lCpoValor)
		nValPgto += nIrrf	
	EndIf 
	If lCalcIssBx
		nValPgto += nIss	
	EndIf
	nOldValPgto := nValPgto
ElseIf (lIRPFBaixa .and. !lCpoValor .and. !lAltJuros .And. !lAltJurLt)
	nValPgto += nIrrf
	If lCalcIssBx .And. nOldValPgto == nValPgto
		nValPgto += nIss	
	EndIf
Endif

lAltPgto	:=	.F.
//Se baixa parcial que contem decrescimo ou acrescimo devo subtrair ou acrescentar o valor. 
If FunName()=="FINA080" .And. !IsInCallStack("Fa080Lot")
	If lAltValor .And. nValPgto <> nValOrig // baixa parcial
	   If SE2->E2_VALOR == SE2->E2_SALDO .And. (nDecresc + nAcresc) > 0 .And. !Empty(SE2->E2_CODRET)  //primeira baixa 
	      nValPgto := nValPgto - nDecresc + nAcresc 
	      lAltPgto	:=	.T.
	   Endif
	Endif
Endif


nTotCsl   := 0 // Totais do PCC de todos os titulos do mesmo mes.
nTotPis   := 0
nTotCof   := 0

If lCalcRet .and. lAplVlMin

   
		aFil10925 := {}
		aAreaSA2  := SA2->(GetArea())
		SA2->(DbSetOrder(1))
		If !lCalcPA
			SA2->(MsSeek(xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA)))
		Else
			SA2->(MsSeek(xFilial("SA2")+M->(E2_FORNECE+E2_LOJA)))
		EndIf
		aAreaSM0 := SM0->(GetArea())
		If !Empty(cCGCFor := SA2->A2_CGC)
			cForTipo := SA2->A2_TIPO
			SA2->(DbSetOrder(3))
			cEmpAtu  := SM0->M0_CODIGO
			cCGCSM0  := SM0->M0_CGC
			SM0->(DbSetOrder(1))
			SM0->(MsSeek(cEmpAnt))
		Else
			aFil10925 := { cFilant }
		EndIf
 		
		//Se parametro "MV_PCCAGFR" existe com conteudo diferente de 1
		If cAglutFil == "2" .Or. cAglutFil == "3"
			Do While !SM0->(Eof()) .And. SM0->M0_CODIGO == cEmpAtu
				//Verifica se a filial tem o mesmo CGC/Raiz de CGC
				If (cAglutFil == "2" .And. cCGCSM0 == SM0->M0_CGC) .Or. (cAglutFil == "3" .And. Left(cCGCSM0,8) == Left(SM0->M0_CGC,8))
					//Verifica se na filial existe cliente de mesmo CGC/Raiz de CGC
					cFilBusca := IF(lFwCodFil, FWGETCODFILIAL,SM0->M0_CODFIL)
					If (cAglutPCC != "2" .And. cAglutPCC != "3") .Or. (SA2->(MsSeek(xFilial("SA2",cFilBusca)+Left(cCGCFor,Iif(cForTipo != "F" .And. cAglutPCC == "3",8,14)))) .And. cForTipo == SA2->A2_TIPO)
						AAdd(aFil10925,cFilBusca)
					EndIf
				EndIf
				SM0->(DbSkip())
			EndDo
		
	//Verifico todas as filiais apenas quando SA2 compartilhado
	ElseIf lTodasFil
		aFil10925 := ExecBlock( "MT103FRT", .F., .F. ) 
	Else
		 If !Empty (FwFilial("SE2")) .And. lConfil
	        aFil10925 := FAFIL10925()
	     Else
	        aFil10925 := { cFilAnt }
	     Endif
	Endif 
	
	For nKco := 1 to Len(aFil10925)	
		cFiliais += "'"+xFilial("SE5", aFil10925[nKco])+"'"
		If nKco < Len(aFil10925)
			cFiliais += ","
		EndIf
	Next nKco		
	
	SM0->(RestArea(aAreaSM0))
	SA2->(RestArea(aAreaSA2))
//Retorna array com os codigos de cliente/loja para verificacao da retencao
//(Raiz do CGC)

	If lVerForLj .And. cAglutPCC != "2" .And. cAglutPCC != "3"
		aFor10925 := ExecBlock("F080LOJA",.F.,.F.)
	Endif
	
	AFill( aDadosRef, 0 ) 
	AFill( aDadosRet, 0 )  
	aRecnosSE2 := {}
	nValComp := 0
	lTitBor	:=	.F.

	dbSelectArea("SE5")
	AFill( aDadosBor, 0 )
	lSomouIss	:= .F.
	For nKco := 1 to Len(aFil10925)
		
		If !Empty(cCGCFor) .And. ( cAglutPCC == "2" .Or. cAglutPCC == "3" )
			aAreaSA2 := SA2->(GetArea())
			SA2->(DbSetOrder(3))
			SA2->(MsSeek(xFilial("SA2")+Left(cCGCFor,8)))
			aFor10925 := {}
			Do While !SA2->(Eof()) .And. xFilial("SA2")+Left(cCGCFor,8) == SA2->A2_FILIAL+Left(SA2->A2_CGC,8)
				//Mesmo tipo de Fornecedor e Novo no vetor
				If cForTipo == SA2->A2_TIPO .And. AScan(aFor10925,{|x| x[1]+x[2] == SA2->(A2_COD+A2_LOJA) }) == 0
					//Nao pode ser pessoa fisica e aglutina por Raiz de CNPJ
					If cForTipo != "F" .And. cAglutPCC == "3" .And. Left(SA2->A2_CGC,8) == Left(cCGCFor,8)
						SA2->(AAdd(aFor10925,{A2_COD,A2_LOJA}))
					//Pessoa Fisica ou aglutina por CPF/CNPJ identico
					ElseIf ( cForTipo == "F" .Or. cAglutPCC == "2" ) .And. SA2->A2_CGC == cCGCFor
						SA2->(AAdd(aFor10925,{A2_COD,A2_LOJA}))
					EndIf
				EndIf
				SA2->(DbSkip())
			EndDo
			SA2->(RestArea(aAreaSA2))
		EndIf
	Next nKco	
		
		#IFDEF TOP 
		        
			aCampos := { "E5_VALOR","E5_VRETPIS","E5_VRETCOF","E5_VRETCSL","E5_VLJUROS","E5_VLMULTA","E5_VLDESCO"}    	

			If lCalcIssBx 
				aadd(aCampos,"E5_VRETISS")
			Endif				
			
			If lIRPFBaixa 
				aadd(aCampos,"E5_PRETIRF")
			Endif
			
			If lInssBx // Inss Baixa 
				aadd(aCampos,"E5_PRETINS")
				aadd(aCampos,"E5_VRETINS")				
			Endif
			aStruct := SE5->( dbStruct() ) 	
		
			SE5->( dbCommit() ) 
		   
		  	cAliasQry := GetNextAlias()
		
			cQuery := "SELECT E5_PREFIXO,E5_NUMERO,E5_PARCELA,E5_TIPO,E5_CLIFOR,E5_LOJA,"
			cQuery += "E5_SEQ,E5_VALOR,E5_VRETPIS,E5_VRETCOF,E5_VRETCSL,E5_DATA,E5_VLJUROS,"
			cQuery += "E5_VLMULTA,E5_VLDESCO,E5_PRETPIS,E5_PRETCOF,E5_PRETCSL,E5_MOTBX,"
			cQuery += "E5_DOCUMEN,E5_FORNADT,E5_LOJAADT,E5_RECPAG,E5_FILORIG, "
	
			If lCalcIssBx  
				cQuery += "E5_VRETISS,"
			Endif

			If !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) )
				cQuery += "E5_PRETIRF, E5_VRETIRF,"
			Endif

			If !Empty( SE5->( FieldPos( "E5_VRETINS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) ) .And. lInssBx
				cQuery += "E5_PRETINS, E5_VRETINS,"
			Endif
			cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
			cQuery += RetSqlName( "SE5" ) + " SE5 " 
			cQuery += "WHERE " 
			
			cQuery += "E5_FILIAL IN ("
			cQuery += cFiliais
			cQuery += ") AND "		

			If Len(aFor10925) > 0  //Verificar determinados fornecedores (raiz do CNPJ)
				cQuery += "( " 	
				For nLoop := 1 to Len(aFor10925) 
					cQuery += "(E5_CLIFOR ='"   + aFor10925[nLoop,1]  + "' AND " 	
					cQuery += "E5_LOJA='"       + aFor10925[nLoop,2]  + "') OR "
				Next			
				//Retiro o ultimo OR
				cQuery := Left( cQuery, Len( cQuery ) - 4 ) 
				cQuery += ") AND " 	
			Else  //Apenas o Fornecedor Atual
				If !lCalcPA
					cQuery += "E5_CLIFOR='"		+ SE2->E2_FORNECE			+ "' AND " 	
					If lLojaAtu  //Considero apenas a loja atual
						cQuery += "E5_LOJA='"		+ SE2->E2_LOJA				+ "' AND "
					EndIf
				Else                                                            
					cQuery += "E5_CLIFOR='"		+ M->E2_FORNECE			+ "' AND " 	
					If lLojaAtu  //Considero apenas a loja atual					
						cQuery += "E5_LOJA='"		+ M->E2_LOJA				+ "' AND "
					EndIf
				Endif
			Endif
			If lEmpPub .And. lIRPFBaixa 
				cQuery += "E5_DATA>= '"		+ DToS( dBaixaIni )      + "' AND "		
				cQuery += "E5_DATA<= '"		+ DToS( dBaixaFim )      + "' AND " 
			Else
				cQuery += "E5_DATA>= '"		+ DToS( dDataIni )      + "' AND "		
				cQuery += "E5_DATA<= '"		+ DToS( dDataFim )      + "' AND " 
			EndIf
			cQuery += "E5_TIPO NOT IN " + FormatIn(MVABATIM,"|") + " AND "
			cQuery += "E5_TIPO NOT IN " + FormatIn(MV_CPNEG,cSepNeg)  + " AND "
			cQuery += "E5_TIPO NOT IN " + FormatIn(MVPROVIS,cSepProv) + " AND "
			cQuery += "E5_RECPAG = 'P' AND "
			cQuery += "(E5_MOTBX NOT IN ('FAT','IRF','PCC','LIQ','STP','DSD') OR (E5_MOTBX NOT IN ('FAT','IRF','LIQ','STP') AND E5_MOTBX='PCC' AND (E5_PRETPIS='4' OR E5_PRETCOF='4' OR E5_PRETCSL='4')) "
			cQuery += "OR (E5_MOTBX='PCC' AND  E5_TIPO IN " + FormatIn(MVPAGANT,cSepPag) + " ) ) AND "
			cQuery += "E5_SITUACA <> 'C' AND "	
	
			//Apenas titulos que tem retencao de PIS,Cofins e CSLL
			If cModTot == "2"
				cQuery += " ((E5_VRETPIS > 0 OR E5_VRETCOF > 0 OR E5_VRETCSL > 0) OR (E5_MOTBX = 'CMP')) AND "
		   Endif
			
			cQuery += "D_E_L_E_T_=' '"                                             
			cQuery += "AND NOT EXISTS ( "
			cQuery += "SELECT A.E5_NUMERO "
			cQuery += "FROM "+RetSqlName("SE5")+" A "
			cQuery += "WHERE A.E5_FILIAL IN ("
			cQuery += cFiliais
			cQuery += ") AND "	
			cQuery +=		"A.E5_PREFIXO=SE5.E5_PREFIXO AND "
			cQuery +=		"A.E5_NUMERO=SE5.E5_NUMERO AND "
			cQuery +=		"A.E5_PARCELA=SE5.E5_PARCELA AND "
			cQuery +=		"A.E5_TIPO=SE5.E5_TIPO AND "
			cQuery +=		"A.E5_CLIFOR=SE5.E5_CLIFOR AND "
			cQuery +=		"A.E5_LOJA=SE5.E5_LOJA AND "
			cQuery +=		"A.E5_SEQ=SE5.E5_SEQ AND "
			cQuery +=		"A.E5_TIPODOC='ES' AND "
			cQuery +=		"A.E5_RECPAG<>'P' AND "
			cQuery +=		"A.D_E_L_E_T_<>'*')"
			
			If !lEmpPub
				cQuery +=	" AND ( CASE WHEN E5_MOTBX = 'CMP' AND E5_TIPO = '"+MVPAGANT+"' THEN  "
				cQuery +=	" 				(SELECT COUNT(*) AS REG "
				cQuery +=	" 					FROM "+RetSqlName("SE2")+" MES "
				cQuery +=	" 					WHERE MES.E2_FILIAL = SE5.E5_FILIAL AND MES.E2_PREFIXO = E5_PREFIXO "
				cQuery +=	" 						AND MES.E2_NUM=SE5.E5_NUMERO AND MES.E2_PARCELA=SE5.E5_PARCELA "
				cQuery +=	" 						AND MES.E2_TIPO=SE5.E5_TIPO AND MES.E2_FORNECE=SE5.E5_CLIFOR "
				cQuery +=	" 						AND MES.E2_LOJA=SE5.E5_LOJA AND MES.D_E_L_E_T_ <>'*' "
				cQuery +=	" 						AND MES.E2_TIPO = '"+MVPAGANT+"' "
				
				cQuery +=	" 						AND SUBSTRING(E5_DATA, 7, 2) = SUBSTRING(MES.E2_EMISSAO, 7, 2) "
				cQuery +=	" 						AND SUBSTRING(E5_DATA, 5, 2) = SUBSTRING(MES.E2_EMISSAO, 5, 2) "
				cQuery +=	" 						AND SUBSTRING(E5_DATA, 1, 4) = SUBSTRING(MES.E2_EMISSAO, 1, 4) "
								
				cQuery +=	"							) "
				cQuery +=	" 				WHEN E5_MOTBX = 'CMP' AND E5_TIPO <> '"+MVPAGANT+"' THEN "
				cQuery +=	" 				 (SELECT COUNT(*) AS REG "
				cQuery +=	" 					FROM "+RetSqlName("SE2")+" MES "
				cQuery +=	" 					WHERE MES.E2_FILIAL = SE5.E5_FILIAL "
				cQuery +=	" 						AND MES.D_E_L_E_T_ <> '*' AND "
				cQuery +=	" 						(MES.E2_PREFIXO||MES.E2_NUM||MES.E2_PARCELA||MES.E2_TIPO||MES.E2_FORNECE||MES.E2_LOJA) = E5_DOCUMEN "
				cQuery +=	" 						AND MES.E2_TIPO = '"+MVPAGANT+"' "
			
				cQuery +=	" 						AND SUBSTRING(E5_DATA, 7, 2) = SUBSTRING(MES.E2_EMISSAO, 7, 2) "
				cQuery +=	" 						AND SUBSTRING(E5_DATA, 5, 2) = SUBSTRING(MES.E2_EMISSAO, 5, 2) "
				cQuery +=	" 						AND SUBSTRING(E5_DATA, 1, 4) = SUBSTRING(MES.E2_EMISSAO, 1, 4) "				
				
				cQuery +=	"							) "
					
				cQuery +=	"			WHEN E5_MOTBX <> 'CMP' THEN 1 
				cQuery +=	" 	END )  > 0 "			
			EndIf
			
   			If lFIN080PCC
	   			cQuery += ExecBlock("FIN080PCC", .F. , .F. , cQuery)
			Endif
			cQuery += " ORDER BY RECNOSE5"
			cQuery := ChangeQuery( cQuery ) 
			
			dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .F., .T. )
			
			For nLoop := 1 To Len( aStruct ) 
				If !Empty( AScan( aCampos, AllTrim( aStruct[nLoop,1] ) ) ) 
					TcSetField( cAliasQry, aStruct[nLoop,1], aStruct[nLoop,2],aStruct[nLoop,3],aStruct[nLoop,4])
				EndIf 			
			Next
			
			While !( cAliasQRY )->( Eof()) 

				cFilAnt := ( cAliasQRY )->E5_FILORIG
				nImpRetEmi := 0
				SE5->(DbGoto(  ( cAliasQRY )->RECNOSE5  )) 

				// Consiste se o motivo gera ou nao movimento bancario.
				If lMotBxMBco              
					If !Fa080MovBc((cAliasQRY)->E5_MOTBX)
						(cAliasQRY)->(DbSkip())
						Loop
					Endif
				Endif

				//Verificar ou nao o limite de 5000 para Pis cofins Csll
				// 1 = Verifica o valor minimo de retencao
				// 2 = Nao verifica o valor minimo de retencao (estes nao serao considerados na soma dos 5000)
				If !Empty( SE2->( FieldPos( "E2_APLVLMN" ) ) ) .and. SE2->E2_APLVLMN == "2"
					(cAliasQRY)->(DbSkip())
					Loop
				Endif	  

				//Verifico se as compensacoes foram realizados com PA ou NDF e que nao retem PCC
        	 	If !F241CmpPcc(cAliasQRY,cChaveTit)
					(cAliasQRY)->(DbSkip())
					Loop
				Endif   
				
				//Desconsidera os registros da SE5 com PRET* = 5 (da compensacao)
				If (cAliasQRY)->E5_PRETPIS $ "5|6" .Or. (cAliasQRY)->E5_PRETCOF == "5|6" .OR. (cAliasQRY)->E5_PRETCSL == "5|6"
					(cAliasQRY)->(DbSkip())
					Loop
				EndIf

				nProp := 1			
				nProp2 := 1
				nBasePcc := 0
				nValOutImp := 0
				If lSE2 .and. !lBxLote
					cAliasSE2 := "SE2"
				Else
					cAliasSE2 := "__SE2"					
				Endif					

				If ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL > 0
					(cAliasSE2)->(dbSetOrder(1))
					IF !((cAliasSE2)->(MsSeek(IIf(Empty(SE5->E5_FILORIG),xFilial("SE2"),FWxFilial("SE2",SE5->E5_FILORIG))+(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))))
						(cAliasQRY)->(DbSkip())
						Loop
					Endif	 										
               
					//Se for PA, verifica se houve baixa parcial para carregar varivael
					//nProp2 com o percentual proporcional para recalcular os impostos.
				   If (cAliasSE2)->E2_TIPO $ MVPAGANT
						If (cAliasSE2)->E2_VALOR - (cAliasSE2)->E2_SALDO > 0
							nProp2 := (((cAliasSE2)->E2_VALOR - (cAliasSE2)->E2_SALDO) / (cAliasSE2)->E2_VALOR)
						Endif
					Endif
      			
					If 'NOTFAT' $ (cAliasSE2)->E2_FATURA
						If ((cAliasSE2)->E2_INSS > 0 .and. !lInssBx) .or. ((cAliasSE2)->E2_IRRF > 0 .and. !lIRPFBaixa) .or.  ((cAliasSE2)->E2_ISS > 0 .and. !lCalcIssBx)
						nValOutImp := f080OutImp(nValPgto)
						lImpInFat := .T.	
						EndIf	
					Else
						If !lInssBx
							nValOutImp += (cAliasSE2)->E2_INSS
						Endif
						
						If !lIRPFBaixa						
							nValOutImp += (cAliasSE2)->E2_IRRF
						EndIf
						
						If !lCalcIssBx
							nValOutImp += (cAliasSE2)->E2_ISS
						EndIf
					Endif
					
					nVlrTit := (cAliasSE2)->(E2_VALOR)+ nValOutImp

					If lSest
						nVlrTit += (cAliasSE2)->E2_SEST
					Endif					

					nImpRetEmi := nVlrTit - (cAliasSE2)->(E2_VALOR)
                    
					If lBaseSE2
						nBasePCC := (cAliasSE2)->(E2_BASEPIS) 						
					Endif

					//aTitulos
					//[1] Chave do titulo
					//[2]	Valor Baixado bruto
					//[3]	PCC Retido
					//[4]	PCC Retido em baixa intermediaria (sera somado para compor a proporcao na ultima baixa)
															
					//Array para somar os valores de titulo e valores baixados
					If (nX := Ascan(aTitulos,{|x| x[1] == (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)})) == 0
						aadd(aTitulos,{(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA),nVlrTit,0,0})
						nX := Len(aTitulos)
						aTitulos[nX,2] := nVlrTit		//Somo as bases
					Endif

					nValProp := (cAliasQRY)->(E5_VALOR)+If(!lJurMulDes,Iif(lVlrAcImp .And. lMVImpDcr, (cAliasQRY)->(E5_VLDESCO),0) - ;
						Iif(lVlrAcImp .And. ( lMVImpAcr .Or. (!lMVImpAcr .And. cTpDesc == "I")), (cAliasQRY)->(E5_VLJUROS+E5_VLMULTA),0),0) 
					cDocumen	:=	""	//Trata baixa de titulos que tenham sido compensados totalmente com um PA.	
					aAreaSe5	:= GetArea("SE5")
					nPccBx	:=	0     
					If lPccBaixa
						nSE5Reg	:=	SE5->(Recno())
						DbSelectArea("SE5")
						SE5->(DbSetOrder(7))
						cChaveSe5	:= (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA_+E5_TIPO+E5_CLIFOR+E5_LOJA)					
						
						If SE5->(Dbseek(xFilial("SE5")+cChaveSe5))  .and. SE5->E5_MOTBX == "CMP"
							//somente considera E5_DOCUMEN se for compensação, pois este campo pode ser preenchido no bordero
							cDocumen	:=	SE5->E5_DOCUMEN                                                					
						Endif
										
						While !EOF() .And. SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) = cChaveSe5  .And.;
								 SE5->E5_FILIAL = xFilial("SE5") .And. !Empty(cDocumen)						      
							      If SE5->E5_SITUACA <> "C" .And. SE5->E5_MOTBX $ "PCC" .And. Alltrim(SE5->E5_DOCUMEN) == Alltrim(cDocumen) .And.;
							      	(SE5->E5_PRETPIS == " #4" .Or. SE5->E5_PRETCOF == " #4" .Or. SE5->E5_PRETCSL == " #4")
								      nPccBx	+=	SE5->E5_VALOR
								   Endif
							      SE5->(Dbskip())	
						Enddo	  

						RestArea(aAreaSe5)			
						SE5->(dbGoto(nSE5Reg))											
						//Baixa pelo valor liquido da baixa digitada devo somar os impostos quando retidos
						//(MV_BP10925 = 1)
						If !lValPgto .and. nPccBX>0 //indica que houve baixa parcial em mês anterior 
							If !Empty( ( cAliasQRY )->E5_PRETPIS ) 
						      nPccBx	+=	( cAliasQRY )->E5_VRETPIS
							Endif
							If !Empty( ( cAliasQRY )->E5_PRETCOF )
								nPccBx	+=	( cAliasQRY )->E5_VRETCOF
							Endif
							If !Empty( ( cAliasQRY )->E5_PRETCSL )
								nPccBx	+=	( cAliasQRY )->E5_VRETCSL  
							Endif      
							If lCalcIssBx
								nPccBx	+=	( cAliasQRY )->E5_VRETISS  
							EndIf
						EndIf 
						If GetMv("MV_BP10925")= "1"
							If Empty( ( cAliasQRY )->E5_PRETPIS ) .And. Empty( ( cAliasQRY )->E5_PRETCOF ) .And. Empty( ( cAliasQRY )->E5_PRETCSL ) 
								nValProp	+= nPccBx
							Elseif ((cAliasQRY)->E5_PRETPIS$"1/2" .OR. (cAliasQRY)->E5_PRETCOF$"1/2" .OR. (cAliasQRY)->E5_PRETCSL$"1/2") .and. nPccBx > 0							
								nValProp	+= (nPccBx-( cAliasQRY )->E5_VRETPIS-( cAliasQRY )->E5_VRETCOF-( cAliasQRY )->E5_VRETCSL)
							EndIf	
						EndIf
					
					Endif	
					If !lSE2 .or. lBxLote
						//quando a baixa é por lote, este utiliza o alias __SE2, o mesmo utilizando na funcao SumAbatPag
						// desposicionando-o. Guardado o recno
						nRecSE2 := (cAliasSE2)->(Recno())
					EndIf
					nValAbat := SumAbatPag(	(cAliasSE2)->E2_PREFIXO,(cAliasSE2)->E2_NUM,(cAliasSE2)->E2_PARCELA,;
													(cAliasSE2)->E2_FORNECE,(cAliasSE2)->E2_MOEDA,"V",(cAliasQRY)->E5_DATA,;
													(cAliasSE2)->E2_LOJA )

					If !lSE2 .or. lBxLote
						(cAliasSE2)->(DBGoto(nRecSE2))
						nRecSE2 := 0
					EndIf

					If nValProp + nValAbat == (cAliasSE2)->E2_VALOR
						nValProp += nValAbat
					Endif

               If lInssBx .And. !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //Inss Baixa											
						If Empty( (cAliasQRY)->E5_PRETINS ) .And.; //Titulo de PCC pendente de retencao
								 (( cAliasQRY )->E5_PRETPIS $ "1" .Or. ( cAliasQRY )->E5_PRETCOF $ "1" .Or. ( cAliasQRY )->E5_PRETCSL $ "1") .And.;
								  lPccBaixa
								If (cAliasQRY)->E5_VRETINS	 > 0 .And. Empty((cAliasSE2)->E2_NUMBOR)
									nValProp += (cAliasQRY)->E5_VRETINS										 
								ElseIf (cAliasSE2)->E2_VRETINS > 0 .And. !Empty((cAliasSE2)->E2_NUMBOR) .And. (cAliasSE2)->E2_PRETINS = "4"
									nValProp += (cAliasSE2)->E2_VRETINS										 								
								Endif	
						
								If lIRPFBaixa
									If (cAliasSE2)->E2_VRETIRF > 0 .And. !Empty((cAliasSE2)->E2_NUMBOR) .And. Empty((cAliasSE2)->E2_PRETIRF) .And.;
										(cAliasSE2)->E2_SALDO == 0	
										nValProp += (cAliasSE2)->E2_VRETIRF
									Endif
								Endif							
						Endif						
					Endif					
               //Apenas para titulos diferentes do titulo que esta sendo baixado ou baixas parciais pelo valor líquido
					If (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) != cChaveTit .Or. (/*lAltValor .And. */lValPgto)					
						//Somo o valor do ISS caso seja retido na baixa

						//Somo o valor do IR caso seja retido na baixa                   
						If lIRPFBaixa
							//Soma o valor do imposto somente quando houver retenção no movimento
							If lCalcIssBx .And. ((cAliasQRY)->(E5_PRETIRF)  $ " " .And. (cAliasSE2)->E2_SALDO = 0)
								nValProp += (cAliasQRY)->(E5_VRETISS)
							Endif
							If lNewIrBx
								If ((cAliasQRY)->(E5_PRETIRF)  $ "3|4" .and. (cAliasSE2)->E2_SALDO = 0) .Or. ((cAliasQRY)->(E5_PRETIRF) $ " " .And. (cAliasSE2)->E2_SALDO = 0 .AND. (cAliasSE2)->E2_VALLIQ ==(cAliasQRY)->(E5_VALOR) ) .Or.;
									((cAliasQRY)->E5_PRETIRF  == " " .And. lValPgto .and. !((cAliasQry)->E5_TIPO $ MVPAGANT)) //IsInCallStack("FA080Lot")) 
										If !((cAliasQry)->E5_TIPO $ MVPAGANT) .Or. ( (cAliasQry)->E5_TIPO $ MVPAGANT .and. !lPaBruto)
											nValProp += (cAliasQRY)->E5_VRETIRF
										EndIf	
								Elseif((cAliasQRY)->(E5_PRETIRF) $ " " .And. (cAliasSE2)->E2_SALDO = 0)  
									 aTitulos[nX,3]+= (cAliasQRY)->E5_VRETIRF
								EndIf
							Else
								If lValPgto .And. SA2->A2_TIPO == "F"// Testar com PJ
									nValProp += (cAliasQRY)->E5_VRETIRF
								EndIf
							EndIf
						Endif
					Endif				

					aTitulos[nX,3]+= nValProp

					//Baixa pelo valor bruto digitado nao devo somar os impostos exceto na baixa final (saldo = 0)
					//(MV_BP10925 = 1)
					If !lValPgto .and. (Empty( ( cAliasQRY )->E5_PRETPIS ) .Or. Empty( ( cAliasQRY )->E5_PRETCOF ) .Or. Empty( ( cAliasQRY )->E5_PRETCSL )) .AND.;
						((cAliasSE2)->E2_VALOR ==(cAliasQRY)->(E5_VALOR + E5_VRETPIS+E5_VRETCOF+E5_VRETCSL) + nImpRetEmi)  // INDICA A BAIXA TOTAL DO TITULO
						If (aTitulos[nX,2] == nImpRetEmi+ aTitulos[nX,3]+(cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)) .OR.;
								(cAliasQry)->E5_TIPO $ MVPAGANT
							nValProp += aTitulos[nX,4]+(cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
						Else
							aTitulos[nX,4]+= (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)

							If lIRPFBaixa							
								aTitulos[nX,4]+= (cAliasQRY)->E5_VRETIRF
								//Diminuo o valor do IR do valor proporcional pois esta nao eh a ultima baixa do titulo
								//ou teve apenas baixa proporcional.
								//Desta forma nao se compromete o calculo do PCC
								If	( (cAliasQRY)->E5_PRETIRF  == " " .And. IsInCallStack("FA080Lot") ) .And. ;
									(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) != cChaveTit .Or. (lAltValor .And. lValPgto)
									nValProp -= (cAliasQRY)->E5_VRETIRF
								Endif
							Endif	

						Endif
						
						If nPccBx==0 
							aTitulos[nX,3]+= (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL) 
						Endif
						
					//Baixa pelo valor liquido da baixa digitada devo somar os impostos quando retidos
					//(MV_BP10925 = 2) ou MV_BP10925 = 1 e O TITULO ESTIVER BAIXADO TOTAL ATRAEVES DE SEGUNDA BAIXA
					ElseIF (lValPgto .AND. (( cAliasQRY )->E5_PRETPIS $ " |7" .Or. ( cAliasQRY )->E5_PRETCOF $ " |7" .Or. ( cAliasQRY )->E5_PRETCSL $ " |7"));
								 .OR. (Empty((cAliasSE2)->E2_FATURA)  .And. (cAliasSE2)->E2_SALDO==0 .AND. !lValPgto .AND.;
								  (Empty( ( cAliasQRY )->E5_PRETPIS ) .Or. Empty( ( cAliasQRY )->E5_PRETCOF ) .Or. Empty( ( cAliasQRY )->E5_PRETCSL ))) 

						If   !(lValPgto .And. lPropPA .And. lPrImPa .And. !Empty((cAliasQRY)->E5_DOCUMEN) .And.(MVPAGANT $(cAliasSE2)->E2_TIPO)) ;
								.and. !(Empty((cAliasQRY)->E5_DOCUMEN) .and. MVPAGANT $(cAliasSE2)->E2_TIPO)      
							If lCalcIssBx								
								If lIRPFBaixa .And. (((cAliasQRY)->(E5_PRETIRF)  $ " " .And. (cAliasSE2)->E2_SALDO = 0)) .And.;
									((cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) != cChaveTit .Or. (lValPgto))
									//Neste caso o ISS foi somado anteriormente.
									nValProp       += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)							
									aTitulos[nX,3] += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)		
								Else		
									lSomouIss	:= .T.
									nValProp       += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL+Iif(SA2->A2_TIPO == "J",E5_VRETISS,0))							
									aTitulos[nX,3] += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL+Iif(SA2->A2_TIPO == "J",E5_VRETISS,0))
									
									If (SE2->E2_ISS - (cAliasQry)->E5_VRETISS) > 0 .And. !lValPgto
										nValProp += SE2->E2_ISS - (cAliasQry)->E5_VRETISS
										aTitulos[nX,3] += SE2->E2_ISS - (cAliasQry)->E5_VRETISS
									EndIf
								Endif	
							Else
								nValProp       += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
								aTitulos[nX,3] += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
							EndIf
						Endif
															
						If nPccBx>0 .and. !lValPgto
							nValProp += nImpRetEmi
					   Endif
				 	Else 
				
					  	If (nValProp+nImpRetEmi+IIF( lCalcIssBx, (cAliasQRY)->E5_VRETISS, 0)) == aTitulos[nX,2] 
					  		If lCalcIssBx
					  			lSomouIss	:= .T.
								nValProp       += (cAliasQRY)->E5_VRETISS							
								aTitulos[nX,3] += (cAliasQRY)->E5_VRETISS
							EndIf
					    ElseIf (nValProp+nImpRetEmi) <> aTitulos[nX,2] 
					   		//If nValProp <>(cAliasQRY)->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA+E5_VRETIRF)
							If nValProp <>(cAliasQRY)->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)					   		
					 	   		nValProp += nImpRetEmi 
					 	  	EndIf
				    	Endif   
				    
					EndIf													

					//Somo o valor dos impostos retidos na emissao para proporcionalizar corretamente
					If (aTitulos[nX,2] == aTitulos[nX,3] + nImpRetEmi )			
					  
							nPropIss	:=	0 //Caso o titulo possua uma compensacao e o ISS for na emissao devo proporcionalizar para realizar a soma.
							If (!Empty(cDocumen) .And. MVPAGANT $ cDocumen).And. !lCalcIssBx .And. !((cAliasSE2)->E2_TIPO $ MVPAGANT)
								nPropIss		:=	(((cAliasSE2)->E2_ISS * nValProp) / (cAliasSE2)->	E2_VALOR) / 100
								nImpRetEmi	:=	nImpRetEmi - (cAliasSE2)->E2_ISS	 + ((cAliasSE2)->E2_ISS	 * nPropIss)
							Endif														
				 
						nValProp += nImpRetEmi
					Endif

					If lCalcIssBx .And. lValPgto .And. !lSomouIss
						nValProp += (cAliasQRY)->E5_VRETISS
						aTitulos[nX,3] += (cAliasQRY)->E5_VRETISS
					EndIf
					If (cAliasQRY)->E5_VALOR == 0 
						//para baixas que tiveram o valor zerado recompoe o valor do IR e INSS, ISS retido na emissao
						//para obter corretamente o valor da baixa parcial em relacao ao valor total
						If !lIRPFBaixa 
							nValProp += (cAliasSE2)->E2_VRETIRF
						EndIf
						If (cAliasSE2)->(E2_INSS) > 0 .And. !lInssBx
							nValProp += (cAliasSE2)->(E2_INSS)
						EndIf
						If !lCalcIssBx
							nValProp += (cAliasSE2)->(E2_ISS)
						ElseIf !lValPgto
							nValProp += (cAliasSE2)->(E2_ISS)-(cAliasQRY)->E5_VRETISS
						EndIf	
						
					EndIf		
					If MVPAGANT $(cAliasSE2)->E2_TIPO .And. lCalcIssBx .and. lValPgto
						nVlrTit += (cAliasSE2)->E2_ISS
					EndIf
															
					lNfComp	:=	.F.
					nIssComp	:=	0
					If !lCalcIssBx .And. (!Empty(cDocumen) .And. MVPAGANT $ cDocumen) .And. !(MVPAGANT $(cAliasSE2)->E2_TIPO) 
      					lNfComp	 :=	.T.
						nIssComp := (cAliasSE2)->E2_ISS                  
					Endif
				    If (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cChaveTit										
						nProp := nValProp/nVlrTit										
					Else
						lTBxOTits := .T.
						If !lGrvIRE2
							nINSSAnts += (cAliasSE2)->(E2_INSS) 
							If !lIRPFBaixa
								nIRAnts   += If(SE2->(FieldPos("E2_VRETIRF")) > 0,(cAliasSE2)->E2_VRETIRF,0)
							Endif
						Endif
					
						nProp := nValProp /nVlrTit							
					
					EndIf					
					
					IF ( cAliasQRY )->E5_MOTBX == "PCC" .And. (cAliasSE2)->E2_SALDO > 0 //Se veio do borderô e está com o saldo maior que zero (aberto)
						nProp := 1
					Endif

					//Titulos que contenham bordero e já foram baixados.
					IF ( cAliasQRY )->E5_MOTBX == "PCC" .And. (cAliasSE2)->E2_SALDO == 0 .And. !Empty((cAliasSE2)->E2_NUMBOR) //Se veio do borderô e está com o saldo maior que zero (aberto)
						nProp := 1					
					Endif
					
					If nBasePcc > 0
						nVlrTit := nBasePcc * nProp
					Endif

					//Incrementa a base de calculo para gerar os titulos se nao for
					//compensação entre carteiras e baixa de impostos via bordero
					//O registro de compensacao do PA nao deve integrar a base (este eh feito com o registro do
					//titulo principal
					If !(cAliasQRY)->E5_MOTBX $ "PCC#IRF#CEC"  .or. ;
						!((cAliasQRY)->E5_MOTBX $ "CMP" .AND. (cAliasQRY)->E5_TIPO $ MVPAGANT)
						If nBasePcc == 0
							nVlrTit := nVlrTit * nProp
						Endif						
						aDadosRef[1] += nVlrTit * nProp2					
					EndIf
				Else				
					If !(cAliasQRY)->E5_MOTBX $ "PCC#IRF#CEC" .and. ;
						!((cAliasQRY)->E5_MOTBX $ "CMP" .and. SUBSTR((cAliasQRY)->E5_DOCUMEN,nTamTit2+1,3) $ MV_CPNEG) .and. ; //Desconsiderar compensacoes com NDF
						!((cAliasQRY)->E5_MOTBX $ "CMP" .AND. (cAliasQRY)->E5_TIPO $ MVPAGANT)
						aDadosRef[1] += (cAliasQRY)->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)					
					EndIf
				Endif

				//Incrementa a base de calculo para gerar os titulos          
				If (cAliasQRY)->E5_MOTBX == "PCC" 
					aDadosRef[1] += nVlrTit - (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL) 
				EndIf 
				
				//Guardo os valores compensados entre carteiras para recompor a base de calculo
				If (cAliasQRY)->E5_MOTBX == "CEC" .And. (cAliasQRY)->E5_RECPAG == "P" .And.;
					(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cChaveTit .and. SuperGetMV( "MV_CC10925" , , 1) <> 2           
					nValComp += (cAliasQRY)->E5_VALOR
				EndIf
				
				//Recalcula o valor do titulo principal para adicionar no campo
				// com os valores de titulos retidos
				If AliasIndic("SFQ")
					aAreaQry := GetArea()
					SFQ->(dbSetOrder(1))
					cChaveSE5 := (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)
					If SFQ->(MsSeek(xFilial("SFQ")+cAliasSE2+cChaveSE5))
						While SFQ->(!Eof()) .and. SFQ->FQ_FILIAL == xFilial("SFQ") .And.;
								SFQ->(FQ_PREFORI+FQ_NUMORI+FQ_PARCORI+FQ_TIPOORI+FQ_CFORI+FQ_LOJAORI) == cChaveSE5
							cChaveSFQ := SFQ->(FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES)
							(cAliasSE2)->(dbSetOrder(1))
							If (cAliasSE2)->(MsSeek(xFilial(cAliasSE2)+cChaveSFQ))
								aDadosRef[1] += (cAliasSE2)->E2_VALOR 
							EndIf							
							SFQ->(dbSkip())        	
						EndDo
					EndIf							
					RestArea(aAreaQry)
				EndIf

				If lSE2 .and. !lBxLote
					cAliasSE2 := "SE2"
				Else
					cAliasSE2 := "__SE2"
				Endif					

				
				If (cAliasQRY)->E5_MOTBX == "CMP" .OR. ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL  > 0

					(cAliasSE2)->(dbSetOrder(1))
					IF !((cAliasSE2)->(MsSeek(xFilial("SE2")+(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))))
						(cAliasQRY)->(DbSkip())
						Loop
					Endif	 										
				
					//aTitulos
					//[1] Chave do titulo
					//[2]	Valor Baixado bruto
					//[3]	PCC Retido
					//[4]	PCC Retido em baixa intermediaria (sera somado para compor a proporcao na ultima baixa)
															
					If (cAliasQRY)->E5_MOTBX == "CMP" .AND. !(cAliasQRY)->E5_TIPO $ MVPAGANT

						nVlrTit := (cAliasSE2)->(E2_VALOR+E2_IRRF+E2_ISS)
	
						nVlrTit += Iif(!lInssBx,(cAliasSE2)->E2_INSS,0)
	
						If lSest
							nVlrTit += (cAliasSE2)->E2_SEST
						Endif					
	
						If lCalcIssBx  
							nVlrTit -= (cAliasSE2)->E2_ISS
						Endif
	
						//Array para somar os valores de titulo e valores baixados
						If (nX := Ascan(aTitulos,{|x| x[1] == (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)})) == 0
							aadd(aTitulos,{(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA),nVlrTit,0,0})
							nX := Len(aTitulos)
							aTitulos[nX,2] := nVlrTit		//Somo as bases
						Endif
						aTitulos[nX,3]+= (cAliasQRY)->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)
					EndIf

					If (Ascan(aTitBsImp,{|x| x == (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)})) = 0
						
						If !((cAliasQRY)->E5_MOTBX $ "CMP#FAT#LIQ#STP")
							//Armazeno os valores calculados por titulo.
						   		If (cAliasSE2)->E2_PIS > 0
									aDadosImp[1] += (cAliasSE2)->E2_PIS * nProp
									lGravou := .T.
								EndIf	
				
								If (cAliasSE2)->E2_COFINS > 0
									aDadosImp[2] += (cAliasSE2)->E2_COFINS * nProp
									lGravou := .T.							
								EndIf	
			
								If (cAliasSE2)->E2_CSLL > 0
									aDadosImp[3] += (cAliasSE2)->E2_CSLL * nProp
									lGravou := .T.							
								EndIf	
								
								If !Empty((cAliasSE2)->E2_NUMBOR) .and. (cAliasSE2)->E2_SALDO > 0
									If (cAliasSE2)->E2_PRETPIS $ "1#2#4"
										aDadosBor[1] +=  (cAliasSE2)->E2_PIS * nProp
										lTemDadosBor := .T.
									EndIf

									If (cAliasSE2)->E2_PRETCOF $ "1#2#4"
										aDadosBor[2] +=  (cAliasSE2)->E2_COFINS * nProp
										lTemDadosBor := .T.
									EndIf									

									If (cAliasSE2)->E2_PRETCSL $ "1#2#4"
										aDadosBor[3] +=  (cAliasSE2)->E2_CSLL * nProp
										lTemDadosBor := .T.
									EndIf									
									
								EndIf	
						EndIf
						
						//Somo valores dos impostos de IRRF/ISS/INSS dos titulos que foram compensados
						//por PA que não reteve impostos, para recompor a base de calculo
						If (cAliasSE2)->(E2_IRRF+E2_ISS+E2_INSS) > 0 .AND. !(cAliasQRY)->E5_TIPO $ MVPAGANT .And.;
							(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) != cChaveTit
							aAreaSE5 := (cAliasQRY)->(GetArea())
							dbSelectArea("SE5")
							dbSetOrder(7)
							If MsSeek(xFilial("SE5")+SUBSTR((cAliasQRY)->E5_DOCUMEN,1,nTamTit)+(cAliasQRY)->E5_FORNADT+;
								(cAliasQRY)->E5_LOJAADT)
								If	(SE5->E5_PRETPIS == "1" .Or. SE5->E5_PRETCOF == "1" .Or. SE5->E5_PRETCSL == "1")									
									aDadosImp[4] += (cAliasSE2)->E2_ISS									
									aDadosImp[4] += Iif(!lInssBx,(cAliasSE2)->E2_INSS,0)									
									If lIRPFBaixa //Somar o valor do IR que nao reteve somente em caso de ir na baixa.
										aDadosImp[4] += (cAliasSE2)->(E2_IRRF)
									EndIf
									lGravou := .T.							
								EndIf
							EndIf
							RestArea(aAreaSE5)
						EndIf	
						
						//Somo valores dos impostos de IRRF/ISS/INSS dos titulos do tipo PA (Pagto Adiantado) 
						//que foram compensados, para recompor a base de calculo(nBaseImp) do PIS/COF/CSL 
						
						If (cAliasSE2)->(If(lIRPFBaixa,0,E2_IRRF)+E2_ISS+If(lPrImPA .Or. lInssBx,0,E2_INSS)) > 0 .AND. (cAliasQRY)->E5_TIPO $ MVPAGANT .And.;
							SUBSTR((cAliasQRY)->E5_DOCUMEN,1,nTamTit)+(cAliasQRY)->(E5_FORNADT+E5_LOJAADT) == cChaveTit
							aAreaSE5 := (cAliasQRY)->(GetArea())
							dbSelectArea("SE5")
							dbSetOrder(7)
							If MsSeek(xFilial("SE5")+(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))
								If AliasIndic("SFQ")
									SFQ->(dbSetOrder(2))
									cChaveSE5 := SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)
									If SFQ->(MsSeek(xFilial("SFQ")+"SE5"+cChaveSE5))
										lAchouPa := .T.
									EndIf							
								EndIf
								If	(SE5->E5_PRETPIS $ "1# " .Or. SE5->E5_PRETCOF $ "1# " .Or. SE5->E5_PRETCSL $ "1# ") .And.;
									!lAchouPa									
									aDadosImp[5] += (cAliasSE2)->(E2_IRRF+E2_ISS)									
									aDadosImp[5] += Iif(!lInssBx,(cAliasSE2)->E2_INSS,0)									
									lGravou := .T.							
									AAdd( aRecnos, ( cAliasQRY )->RECNOSE5 ) 
								EndIf
							EndIf
							RestArea(aAreaSE5)
						EndIf	
						
						If lGravou
							AADD(aTitBsImp,(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ))
							lGravou := .F.
						Endif		  
					Endif
				EndIf				
					
				nImpostos := 0						

				// QUANDO FOR RETIDO NELE MESMO OU RETIDO EM BORDERO, DESCONSIDERO ESSE VALOR PARA SABER QUAL O TOTAL DE PCC QUE REALMENTE DEVO
				If ( cAliasQRY )->E5_PRETPIS $ " #3#4" .or. (( cAliasQRY )->E5_PRETPIS $ "2" .and. ((cAliasQRY)->E5_TIPO $ MVPAGANT .or. F080RetPA("SE5",(cAliasQRY)->E5_PREFIXO, (cAliasQRY)->E5_NUMERO,(cAliasQRY)->E5_PARCELA,(cAliasQRY)->E5_TIPO,(cAliasQRY)->E5_CLIFOR,(cAliasQRY)->E5_LOJA )) )
					aDadosRef[1] += (cAliasQRY)->E5_VRETPIS * nProp2
					nImpostos += (cAliasQRY)->E5_VRETPIS * nProp2
					//Armazeno os valores calculados por titulo, retirando os valores retidos
					If ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL > 0 .And.;
						!((cAliasQRY)->E5_MOTBX $ "CMP#FAT#LIQ#STP") 
						aDadosImp[1] -= (cAliasQRY)->E5_VRETPIS * nProp2
						lVerSFQ := .T.
					Endif					
				EndIf 								
		
				If ( cAliasQRY )->E5_PRETCOF $ " #3#4" .or. (( cAliasQRY )->E5_PRETPIS $ "2" .and. ((cAliasQRY)->E5_TIPO $ MVPAGANT .or. F080RetPA("SE5",(cAliasQRY)->E5_PREFIXO, (cAliasQRY)->E5_NUMERO,(cAliasQRY)->E5_PARCELA,(cAliasQRY)->E5_TIPO,(cAliasQRY)->E5_CLIFOR,(cAliasQRY)->E5_LOJA )) )
					aDadosRef[1] += ( cAliasQRY )->E5_VRETCOF * nProp2
					nImpostos += (cAliasQRY)->E5_VRETCOF * nProp2
					//Armazeno os valores calculados por titulo, retirando os valores retidos
					If ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL  > 0 .And.;
						!((cAliasQRY)->E5_MOTBX $ "CMP#FAT#LIQ#STP")
						aDadosImp[2] -= (cAliasQRY)->E5_VRETCOF * nProp2
						lVerSFQ := .T.
					Endif					
				EndIf 								
		
				If ( cAliasQRY )->E5_PRETCSL $ " #3#4" .or. (( cAliasQRY )->E5_PRETPIS $ "2" .and. ((cAliasQRY)->E5_TIPO $ MVPAGANT .or. F080RetPA("SE5",(cAliasQRY)->E5_PREFIXO, (cAliasQRY)->E5_NUMERO,(cAliasQRY)->E5_PARCELA,(cAliasQRY)->E5_TIPO,(cAliasQRY)->E5_CLIFOR,(cAliasQRY)->E5_LOJA )) )
					aDadosRef[1] += ( cAliasQRY )->E5_VRETCSL * nProp2 
					nImpostos += (cAliasQRY)->E5_VRETCSL * nProp2
					//Armazeno os valores calculados por titulo, retirando os valores retidos
					If ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL  > 0 .And.;
						!((cAliasQRY)->E5_MOTBX $ "CMP#FAT#LIQ#STP")
						aDadosImp[3] -= (cAliasQRY)->E5_VRETCSL * nProp2
						lVerSFQ := .T.
					Endif					
				EndIf 								
				
				If !lGrvIRE2     //se jah gravou o conteudo do E2, para nao gravar várias vezes no caso de várias baixas parciais
					   If !lIRPFBaixa 
							aDadosRef[1] += If(SE2->(FieldPos("E2_VRETIRF")) > 0,(cAliasSE2)->E2_VRETIRF,0)
						Endif
						aDadosRef[1] += Iif(!lInssBx,(cAliasSE2)->E2_INSS,0)										
					lGrvIRE2 := .T.
				EndIf
				
				//Verificação de pendencias de PCC 
				//Exemplo:
				//Titulo A teve o imposto retido no titulo B em bordero.
				//Ambos foram baixados
				//Ao verificar esta baixa, o valor do imposto calculado era menor que o imposto retido no titulo B
				//Neste caso o imposto do titulo A seria sempre deduzido nos borderos posteriores 				
				If lVerSfq .and. (aDadosBor[1] + aDadosBor[2] + aDadosBor[3]) == 0
					aRecSE2 := FImpExcTit("SE2",( cAliasQRY )->E5_PREFIXO,( cAliasQRY )->E5_NUMERO,( cAliasQRY )->E5_PARCELA,( cAliasQRY )->E5_TIPO,( cAliasQRY )->E5_CLIFOR,( cAliasQRY )->E5_LOJA, ,( cAliasQRY )->E5_SEQ)
					nRecSE2 := 	__SE2->(RECNO())
					For nT := 1 to Len(aRecSE2)
						__SE2->(MSGoto(aRecSE2[nT]))	
						aDadosImp[1] += __SE2->E2_PIS
						aDadosImp[2] += __SE2->E2_COFINS
						aDadosImp[3] += __SE2->E2_CSLL
					Next
					__SE2->(MSGoto(nRecSE2))	
					lVerSfq := .F.
				Endif
				
                If !SE2->(Eof()) .And. (cAliasSE2)->E2_SALDO == 0 .and. lPCCBaixa .and. Empty(( cAliasQRY )->E5_PRETPIS) .and. Empty(( cAliasQRY )->E5_PRETCOF) .and. Empty(( cAliasQRY )->E5_PRETCSL);
                	 .and. !(( cAliasQRY )->E5_MOTBX == "CMP" .and. ( cAliasQRY )->E5_TIPO == MVPAGANT) 
                	// Ajusta os PRET (impostos retidos nele mesmo)      
                	RecLock("SE2",.F.)
                	SE2->E2_PRETPIS := "3"
                	SE2->E2_PRETCOF := "3"                	
                	SE2->E2_PRETCSL := "3"                	
                	MsUnlock()
                	If aDadosImp[1] # 0 .or. aDadosImp[2] # 0 .or. aDadosImp[3] # 0 .or. aDadosImp[4] # 0 .or. aDadosImp[5] # 0
                	    If cNCCRet == "1"        	
                       		aFill(aDadosImp,0) // Não pode haver PCC a ser retido ainda se a baixa do título já tiver sido total !
                     	Endif
                	Endif
                Endif
                 
				//Guardo o valor dos impostos descontados para que seja recomposta a base de calculo
				If (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cChaveTit
					//Caso o sistema gravar como valor de pagamento na baixa parcial, o valor da baixa menos os impostos
					//calculados, não ha a necessidade de recompor a base de calculo
					If !lValPgto
						aDadosRef[7] += nImpostos
					EndIf
				Endif
				//PRET == "1" -> pendente de retenção	
				If ( cAliasQRY )->E5_PRETPIS == "1" .Or. ( cAliasQry )->E5_PRETCOF == "1" .Or. ( cAliasQry )->E5_PRETCSL == "1" //.Or.;
					//(lPccBaixa .And. ((cAliasQRY)->E5_PRETPIS == "2" .Or. (cAliasQry)->E5_PRETCOF == "2" .Or. (cAliasQry)->E5_PRETCSL == "2") ) 				 
					
					If ( cAliasQRY )->E5_PRETPIS == "1" 
						aDadosRef[2] += ( cAliasQRY )->E5_VRETPIS * nProp2
						nTotPis      += ( cAliasQRY )->E5_VRETPIS * nProp2
					EndIf	
		
					If ( cAliasQRY )->E5_PRETCOF == "1" 
						aDadosRef[3] += ( cAliasQRY )->E5_VRETCOF * nProp2
					  	nTotCof      += ( cAliasQRY )->E5_VRETCOF * nProp2 
					EndIf	
							
					If ( cAliasQRY )->E5_PRETCSL == "1" 
						aDadosRef[4] += ( cAliasQRY )->E5_VRETCSL * nProp2
						nTotCsl	    += ( cAliasQRY )->E5_VRETCSL * nProp2        
					EndIf 		

					AAdd( aRecnos, ( cAliasQRY )->RECNOSE5 ) 
			
				// Acumula os valores das baixas realizadas parcialmente
				// para ser utilizada na analise de possiveis problemas 
				// de arredondamento que ocorrem na baixa total.
				Else

					If Empty((cAliasQRY)->E5_PRETPIS)
						aValorBx[1] += ( cAliasQRY )->E5_VRETPIS
					EndIf	
		
					If Empty((cAliasQRY)->E5_PRETCOF)
						aValorBx[2] += ( cAliasQRY )->E5_VRETCOF
					EndIf	
							
					If Empty((cAliasQRY)->E5_PRETCSL)
						aValorBx[3] += ( cAliasQRY )->E5_VRETCSL
					EndIf 	
	
				Endif
                 
				( cAliasQRY )->( dbSkip()) 
				
		   EndDo 
		   
			// Fecha a area de trabalho da query 
		   ( cAliasQRY )->( dbCloseArea() ) 
		   dbSelectArea( "SE2" ) 
			
        
			//Titulos em bordero que tem retencao de PCC pendente
			//Exemplo:
			//3 titulos de 4000 com calculo de PCC
			//Coloque o primeiro titulo em bordero e ao baixar o segundo, o imposto devera
			//ser calculado por 8000 (soma dois titulos)
			//Se baixar ou gerar bordero para o terceiro, este devera reter apenas sobre a sua base
			If lSE2DtBor	

				aStruct := SE2->( dbStruct() ) 	
			
				SE2->( dbCommit() ) 
			   
			  	cAliasQry := GetNextAlias()
			
				cQuery := "SELECT E2_PREFIXO,E2_NUM,E2_PARCELA,E2_TIPO,E2_FORNECE,E2_LOJA,"
				cQuery += "E2_VALOR,E2_VRETPIS,E2_VRETCOF,E2_VRETCSL,E2_PRETPIS,E2_PRETCOF,E2_PRETCSL,"
				cQuery += "E2_NUMBOR,E2_PIS,E2_COFINS,E2_CSLL,E2_IRRF,E2_ISS,E2_INSS, E2_SALDO, "
		
				If lSE2DtBor	
					cQuery += "E2_DTBORDE,"		
				Endif
				If lCpoVlMin         
					cQuery += "E2_APLVLMN,"		
				Endif

				If lSest	
					cQuery += "E2_SEST,"		
				Endif

				If lVerifPCC
					cQuery += "E2_ORIGEM, E2_NUMTIT,E2_FORNPAI,"
				Endif

				If lBaseSE2
					cQuery += "E2_BASEPIS,"		
				Endif

				cQuery += "	R_E_C_N_O_ RECNOSE2 FROM "
				cQuery += RetSqlName( "SE2" ) + " SE2A " 
				cQuery += "WHERE " 

				cQuery += "E2_FILIAL IN ("
				cQuery += cFiliais
				cQuery += ") AND "		
				 

				If Len(aFor10925) > 0  //Verificar determinados fornecedores (raiz do CNPJ)
					cQuery += "( " 	
					For nLoop := 1 to Len(aFor10925) 
						cQuery += "(E2_FORNECE ='"   + aFor10925[nLoop,1]  + "' AND " 	
						cQuery += "E2_LOJA='"       + aFor10925[nLoop,2]  + "') OR "
					Next			
					//Retiro o ultimo OR
					cQuery := Left( cQuery, Len( cQuery ) - 4 ) 
					cQuery += ") AND " 	
				Else  //Apenas Fornecedor e Loja atuais
					cQuery += "E2_FORNECE ='"     + SE2->E2_FORNECE        + "' AND " 	
					If lLojaAtu  //Considero apenas a loja atual
						cQuery += "E2_LOJA='"        + SE2->E2_LOJA           + "' AND "
					Endif
				Endif

				cQuery += "(E2_DTBORDE >= '" + DToS( dDataIni )					+ "' AND "		
				cQuery += "E2_DTBORDE <= '" + DToS( dDataFim )					+ "') AND " 
				cQuery += "E2_TIPO NOT IN " + FormatIn(MVABATIM,"|")			+ " AND "
				cQuery += "E2_TIPO NOT IN " + FormatIn(MV_CPNEG,cSepNeg)		+ " AND "
				cQuery += "E2_TIPO NOT IN " + FormatIn(MVPROVIS,cSepProv)	+ " AND "
				cQuery += "E2_TIPO NOT IN " + FormatIn(MVPAGANT,cSepPag)		+ " AND "
				cQuery += "(E2_SALDO>0 OR E2_NUMBOR <> '"+SPACE(LEN(E2_NUMBOR))+"') AND "
				cQuery += "E2_NUMBOR <> '"+SPACE(LEN(E2_NUMBOR))+"' AND " 	

				cQuery += " (E2_PIS > 0 OR E2_COFINS > 0 OR E2_CSLL > 0 ) AND "
				
				//Verificar ou nao o limite de 5000 para Pis cofins Csll
				// 1 = Verifica o valor minimo de retencao
				// 2 = Nao verifica o valor minimo de retencao (NAO SERAO CONSIDERADOS PARA A SOMA DOS 5000)
				If lCpoVlMin
					cQuery += " E2_APLVLMN <> '2' AND "
				Endif	  
		
				If !lVerifPCC
					cQuery += "D_E_L_E_T_=' '"                                             					
				Else
					cQuery += " SE2A.D_E_L_E_T_ = ' ' "
					cQuery += " UNION "
	
					cQuery += "SELECT E2_PREFIXO,E2_NUM,E2_PARCELA,E2_TIPO,E2_FORNECE,E2_LOJA,"
					cQuery += "E2_VALOR,E2_VRETPIS,E2_VRETCOF,E2_VRETCSL,E2_PRETPIS,E2_PRETCOF,E2_PRETCSL,"
					cQuery += "E2_NUMBOR,E2_PIS,E2_COFINS,E2_CSLL,E2_IRRF,E2_ISS,E2_INSS,E2_SALDO, "
			
					If lSE2DtBor	
						cQuery += "E2_DTBORDE,"		
					Endif
					If lCpoVlMin         
						cQuery += "E2_APLVLMN,"		
					Endif
					If lSest	
						cQuery += "E2_SEST,"		
					Endif
					If lVerifPCC
						cQuery += "E2_ORIGEM, E2_NUMTIT,E2_FORNPAI,"
					Endif

					If lBaseSE2
						cQuery += "E2_BASEPIS,"		
					Endif
					
					cQuery += "	R_E_C_N_O_ RECNOSE2 FROM "
					cQuery += RetSqlName( "SE2" ) + " SE2B " 
					cQuery += "WHERE " 

					cQuery += "E2_FILIAL IN ("
					cQuery += cFiliais
					cQuery += ") AND "					
					 
					If Len(aFor10925) > 0  //Verificar determinados fornecedores (raiz do CNPJ)
						cQuery += "( " 	
						For nLoop := 1 to Len(aFor10925) 
							cQuery += "(E2_FORNPAI ='"   + PADR(aFor10925[nLoop,1]+ aFor10925[nLoop,2],nTamForn) + "') OR "
						Next			
						//Retiro o ultimo OR
						cQuery := Left( cQuery, Len( cQuery ) - 4 ) 
						cQuery += ") AND " 	
					Else  //Apenas Fornecedor e Loja atuais
						cQuery += "E2_FORNPAI ='"   + PADR(SE2->(E2_FORNECE+E2_LOJA),nTamForn) + "' AND "
					Endif
					cQuery += " E2_EMISSAO BETWEEN '"+Dtos( dDataIni) +"' AND '"+Dtos( dDataFim) +"' AND "
					cQuery += " E2_ORIGEM LIKE 'FINA374%' AND "
					cQuery += " (E2_TIPO IN " + FormatIn(MVTXA,cSepTxa)  + " OR "
					cQuery += " E2_TIPO IN " + FormatIn(MVTAXA,cSepTx) + ") AND "
					cQuery += " SE2B.D_E_L_E_T_ = ' ' "
				   
				Endif 
					   										
				cQuery := ChangeQuery( cQuery ) 
				
				dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .F., .T. )
				
				For nLoop := 1 To Len( aStruct ) 
					If !Empty( AScan( aCampos, AllTrim( aStruct[nLoop,1] ) ) ) 
						TcSetField( cAliasQry, aStruct[nLoop,1], aStruct[nLoop,2],aStruct[nLoop,3],aStruct[nLoop,4])
					EndIf 			
				Next nLoop 
				
				While !( cAliasQRY )->( Eof()) 
					
					//VERIFICA VALORES APURADOS VIA FINA374
					If ( cAliasQRY )->E2_TIPO $ MVTXA .AND. "FINA374" $ ( cAliasQRY )->E2_ORIGEM  
						aDadosImp[1]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='PIS',( cAliasQRY )->E2_VALOR,0)
						aDadosImp[2]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='COF',( cAliasQRY )->E2_VALOR,0)
						aDadosImp[3]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='CSL',( cAliasQRY )->E2_VALOR,0)
						aDadosREF[2]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='PIS',( cAliasQRY )->E2_VALOR,0)
						aDadosREF[3]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='COF',( cAliasQRY )->E2_VALOR,0)
						aDadosREF[4]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='CSL',( cAliasQRY )->E2_VALOR,0)
					ElseIf ( cAliasQRY )->E2_TIPO $ MVTAXA .AND. "FINA374" $ ( cAliasQRY )->E2_ORIGEM  
						aDadosImp[1]  	-=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='PIS',( cAliasQRY )->E2_VALOR,0)
						aDadosImp[2]  	-=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='COF',( cAliasQRY )->E2_VALOR,0)
						aDadosImp[3]  	-=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='CSL',( cAliasQRY )->E2_VALOR,0)
					Else
						//Caso o titulo que esteja sendo baixado estiver em bordero e for selecionado para verificacao
						//da base do PCC, descarto neste momento. Assim o mesmo sera considerado apenas uma vez, no calculo 
						//final. Anteriormente era considerado neste ponto (por estar em bordero) e no calculo da base, fazendo 
						//atingir base de retencao de forma equivocada. 					
						If cTitAtual == ( cAliasQRY )->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA) .and. ;
								!Empty(( cAliasQRY )->(E2_NUMBOR))
							( cAliasQRY )->( dbSkip()) 
						Endif
						
						If ( cAliasQRY )->(E2_SALDO) == 0   //adicionado a validação de borderô para  
							( cAliasQRY )->( dbSkip())
							Loop
						Endif
	
						nVlrTit := ( cAliasQRY )->E2_VALOR
						
						If !lInssBx
							nVlrTit += ( cAliasQRY )->E2_INSS
						Endif
						
						If !lIRPFBaixa
							nVlrTit += ( cAliasQRY )->E2_IRRF
						EndIf
		
		   				If !lCalcIssBx
							nVlrTit += ( cAliasQRY )->E2_ISS
						EndIf
						
					If lSest
						nVlrTit += ( cAliasQRY )->E2_SEST
					Endif			
	
					If lBaseSE2 .and. ( cAliasQRY )->E2_BASEPIS > 0
						nVlrTit := ( cAliasQRY )->E2_BASEPIS
					Endif			

					aDadosRef[1] += nVlrTit          
					
					lTitBor	:=	.T.

					//Armazeno os valores calculados por titulo.
						If (cAliasQRY)->E2_PRETPIS $ "1#2#4"
							aDadosImp[1] += (cAliasQRY)->E2_PIS
							aDadosRef[2] += (cAliasQRY)->E2_PIS
						Endif
	
						If (cAliasQRY)->E2_PRETCOF $ "1#2#4"
							aDadosImp[2] += (cAliasQRY)->E2_COFINS
							aDadosRef[3] += (cAliasQRY)->E2_COFINS
						Endif
	
						If (cAliasQRY)->E2_PRETCSL $ "1#2#4"
							aDadosImp[3] += (cAliasQRY)->E2_CSLL
							aDadosRef[4] += (cAliasQRY)->E2_CSLL
		   		   		Endif   
						If !lTemDadosBor .and. (cAliasQRY)->E2_SALDO > 0
							If (cAliasQRY)->E2_PRETPIS $ "2|4"
								aDadosBor[1] +=  (cAliasQRY)->E2_PIS
							EndIf

							If (cAliasQRY)->E2_PRETCOF $ "2|4"
								aDadosBor[2] +=  (cAliasQRY)->E2_COFINS
							EndIf									

							If (cAliasQRY)->E2_PRETCSL $ "2|4"
								aDadosBor[3] +=  (cAliasQRY)->E2_CSLL

							EndIf									
							
						EndIf			   		   		
					//Guardo registros para acertar a pendencia de retencao
					If ((cAliasQRY)->E2_PRETPIS = '1' .OR. (cAliasQRY)->E2_PRETCOF = '1' .OR. (cAliasQRY)->E2_PRETCSL = '1' )
						AAdd( aRecnosSE2, (cAliasQRY)->RECNOSE2) 
					Endif	

					Endif	
					( cAliasQRY )->( dbSkip()) 

				EndDo 
				//subtrai o valor ja retido do bordero somente no final, senao ira substrair mais de 1x o mesmo valor 
				If aDadosBor[1] + aDadosBor[2] + aDadosBor[3] > 0
					aDadosImp[1] -= aDadosBor[1]
					aDadosRef[2] -= aDadosBor[1]
					
					aDadosImp[2] -= aDadosBor[2]
					aDadosRef[3] -= aDadosBor[2]	
					
					aDadosImp[3] -= aDadosBor[3]
					aDadosRef[4] -= aDadosBor[3] 
				EndIf
				   
				// Fecha a area de trabalho da query 
				( cAliasQRY )->( dbCloseArea() ) 
				dbSelectArea( "SE2" ) 
				dbSetOrder(1)

		    Endif    
		
		#ELSE 				//CODEBASE
		
		For nKco := 1 to Len(aFil10925)
	
			dbSelectArea("SE5")
			cFilAnt := aFil10925[nKco]
			AFill( aDadosBor, 0 )
			lSomouIss	:= .F.
				
			ChkFile("SE5",.F.,"NEWSE5")
			cIndexSE5 := CriaTrab(,.f.)
				
			cQuery := "E5_FILIAL='"      + xFilial( "SE5" )     + "' .AND. "
			If Len(aFor10925) > 0  //Verificar determinados fornecedores (raiz do CNPJ)
				cQuery += "( " 	
				For nLoop := 1 to Len(aFor10925) 
					cQuery += "(E5_CLIFOR ='"   + aFor10925[nLoop,1]  + "' .AND. " 	
					cQuery += "E5_LOJA='"       + aFor10925[nLoop,2]  + "') .OR."
				Next			
				cQuery := Left( cQuery, Len( cQuery ) - 5 ) 
				cQuery += ") .AND. " 	
			Else  //Apenas Fornecedor atual
				If !lCalcPA
					cQuery += "E5_CLIFOR='"     + SE2->E2_FORNECE        + "' .AND. " 	
					If lLojaAtu  //Considero apenas a loja atual
						cQuery += "E5_LOJA='"        + SE2->E2_LOJA           + "' .AND. "
					EndIf
				Else
					cQuery += "E5_CLIFOR='"     + M->E2_FORNECE        + "' .AND. " 	
					If lLojaAtu  //Considero apenas a loja atual
						cQuery += "E5_LOJA='"        + M->E2_LOJA           + "' .AND. "			
					EndIf
				Endif
			Endif
			cQuery += "DTOS(E5_DATA)>='" + DToS( dDataIni ) + "' .AND. "		
			cQuery += "DTOS(E5_DATA)<='" + DToS( dDataFim ) + "' .AND. "
			cQuery += "E5_RECPAG == 'P' .AND. "
			cQuery += "E5_MOTBX <> 'FAT' .AND. "	
			cQuery += "E5_MOTBX <> 'STP' .AND. "
			cQuery += "E5_SITUACA <> 'C' .AND. "
			//Apenas titulos que tem retencao de PIS,Cofins e CSLL
			If cModTot == "2"
				cQuery += " ((E5_VRETPIS > 0 .OR. E5_VRETCOF > 0 .OR. E5_VRETCSL > 0 ) .OR. (E5_MOTBX = 'CMP')) .AND. "			
		   	Endif
                    
			cQuery += "!(E5_TIPO $ '"+MVABATIM + "/" + MV_CPNEG + "/" + MVPROVIS + "')"
			
			IndRegua("SE5",cIndexSE5,"DTOS(E5_DATA)",, cQuery ,"")
			nIndexSE5 :=RetIndex("SE5")+1
			dbSetIndex(cIndexSE5+OrdBagExt())
			dbSetorder(nIndexSe5)
			SE5->( dbSetOrder( nIndexSE5 ) )
			SE5->( dbSeek( DTOS( dDataIni ), .T. ) ) 
			
			While !SE5->( Eof() ) .And. SE5->E5_DATA >= dDataIni .And. SE5->E5_DATA <= dDataFim 
								
				nImpRetEmi := 0

				//Verifica se tem baixa cancelada
				If TemBxCanc(SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ))
					SE5->( dbskip())
					loop
				EndIf
				
				// Consiste se o motivo gera ou nao movimento bancario.
				If lMotBxMBco              
					If !Fa080MovBc(SE5->E5_MOTBX)
						SE5->(DbSkip())
						Loop
					Endif
				Endif
	
				//Verificar ou nao o limite de 5000 para Pis cofins Csll
				// 1 = Verifica o valor minimo de retencao
				// 2 = Nao verifica o valor minimo de retencao (estes nao serao considerados na soma dos 5000)
				If !Empty( SE2->( FieldPos( "E2_APLVLMN" ) ) ) .and. SE2->E2_APLVLMN == "2"
					SE5->(DbSkip())
					Loop
				Endif	  

				//Verifico se as compensacoes foram realizados com PA ou NDF e que nao retem PCC
				If !F241CmpPcc("SE5",cChaveTit)
					SE5->(DbSkip())
					Loop
				Endif         		

				nProp := 1			
				nProp2 := 1			
				If lBaseSE2 .and. SE5->(E5_VRETPIS + E5_VRETCOF + E5_VRETCSL) > 0
					SE2->(dbSetOrder(1))
					IF !(SE2->(MsSeek(xFilial("SE2")+SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))))
						SE5->(DbSkip())
						Loop
					Endif	 										


					//Se for PA, verifica se houve baixa parcial para carregar varivael
					//nProp2 com o percentual proporcional para recalcular os impostos.
					If SE2->E2_TIPO $ MVPAGANT
						If SE2->E2_VALOR - SE2->E2_SALDO > 0
							nProp2 := ((SE2->E2_VALOR - SE2->E2_SALDO) / SE2->E2_VALOR)
						Endif
					Endif

					nVlrTit := SE2->E2_VALOR

					If !lInssBx
						nVlrTit += SE2->E2_INSS
					Endif

					If lSest
						nVlrTit += SE2->E2_SEST
					Endif					

					If !lCalcIssBx
						nVlrTit += SE2->E2_ISS
					EndIf
                    
					If !lIRPFBaixa
						nVlrTit += SE2->E2_IRRF
					EndIf
					
					nImpRetEmi := nVlrTit - SE2->E2_VALOR

					//aTitulos
					//[1] Chave do titulo
					//[2]	Valor Baixado bruto
					//[3]	PCC Retido
					//[4]	PCC Retido em baixa intermediaria (sera somado para compor a proporcao na ultima baixa)

					//Array para somar os valores de titulo e valores baixados
					If (nX := Ascan(aTitulos,{|x| x[1] == SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)})) == 0
						aadd(aTitulos,{SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA),nVlrTit,0,0})
						nX := Len(aTitulos)
						aTitulos[nX,2] := nVlrTit		//Somo as bases
					Endif

					nValProp := SE5->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)
					nValAbat := SumAbatPag(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_FORNECE,SE2->E2_MOEDA,"V",SE5->E5_DATA,SE2->E2_LOJA)
					If nValProp + nValAbat == SE2->E2_VALOR
						nValProp += nValAbat
					Endif

					If lCalcIssBx  
						nValProp += SE5->(E5_VRETISS)
					Endif					

					//Somo o valor dos impostos retidos na emissao para proporcionalizar corretamente
					If (aTitulos[nX,2] == aTitulos[nX,3]+SE5->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)+ nImpRetEmi )
						nValProp += nImpRetEmi
					Endif

					aTitulos[nX,3]+= nValProp

					//Baixa pelo valor bruto digitado nao devo somar os impostos exceto na baixa final (saldo = 0)
					//(MV_BP10925 = 1)
					If !lValPgto .and. (Empty( SE5->E5_PRETPIS ) .Or. Empty( SE5->E5_PRETCOF ) .Or. Empty( SE5->E5_PRETCSL ))
						If aTitulos[nX,2] == nImpRetEmi + aTitulos[nX,3] + SE5->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
							nValProp += aTitulos[nX,4]+SE5->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
						Else
							aTitulos[nX,4]+= SE5->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
						Endif
						aTitulos[nX,3]+= SE5->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)


					//Baixa pelo valor liquido da baixa digitada devo somar os impostos quando retidos
					//(MV_BP10925 = 2)
					ElseIF Empty( SE5->E5_PRETPIS ) .Or. Empty( SE5->E5_PRETCOF ) .Or. Empty( SE5->E5_PRETCSL )
						nValProp += SE5->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
					EndIf						

					nProp := nValProp /nVlrTit

					IF SE5->E5_MOTBX =="PCC"
						nProp := 1
					Endif

					//Incrementa a base de calculo para gerar os titulos se nao for
					//compensação entre carteiras e baixa de impostos via bordero
					If !SE5->E5_MOTBX $ "PCC#IRF#CEC"
						nVlrTit := nVlrTit * nProp
						aDadosRef[1] += nVlrTit * nProp2					
					EndIf
				Else				                                                     
					If !SE5->E5_MOTBX $ "PCC#IRF#CEC" .and. ;
						!(SE5->E5_MOTBX $ "CMP" .and. SUBSTR(SE5->E5_DOCUMEN,nTamTit2+1,3) $ MV_CPNEG) //Desconsiderar compensacoes com NDF
						aDadosRef[1] += SE5->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)
					EndIf
				Endif

				//Incrementa a base de calculo para gerar os titulos          
				If SE5->E5_MOTBX == "PCC" 
					aDadosRef[1] += nVlrTit - SE5->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL) 
				EndIf
				
				//Guardo os valores compensados entre carteiras para recompor a base de calculo
				If SE5->E5_MOTBX == "CEC" .And. SE5->E5_RECPAG == "P" .And.;
					SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cChaveTit
					nValComp += SE5->E5_VALOR
				EndIf

				//Recalcula o valor do titulo principal para adicionar no campo
				// com os valores de titulos retidos
				If AliasIndic("SFQ")
					aAreaQry := GetArea()
					SFQ->(dbSetOrder(1))
					cChaveSE5 := SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)
					If SFQ->(MsSeek(xFilial("SFQ")+"SE2"+cChaveSE5))
						While SFQ->(!Eof()) .and. SFQ->FQ_FILIAL == xFilial("SFQ") .And.;
								SFQ->(FQ_PREFORI+FQ_NUMORI+FQ_PARCORI+FQ_TIPOORI+FQ_CFORI+FQ_LOJAORI) == cChaveSE5
							cChaveSFQ := SFQ->(FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES)
							SE2->(dbSetOrder(1))
							If SE2->(MsSeek(xFilial("SE2")+cChaveSFQ))
								aDadosRef[1] += SE2->E2_VALOR 
							EndIf							
							SFQ->(dbSkip())        	
						EndDo
					EndIf							
					RestArea(aAreaQry)
				EndIf

				If SE5->E5_MOTBX == "CMP" .OR. SE5->(E5_VRETPIS + E5_VRETCOF + E5_VRETCSL) > 0
					
					SE2->(dbSetOrder(1))
					SE2->(MsSeek(xFilial("SE2")+SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)))
               
					//aTitulos
					//[1] Chave do titulo
					//[2]	Valor Baixado bruto
					//[3]	PCC Retido
					//[4]	PCC Retido em baixa intermediaria (sera somado para compor a proporcao na ultima baixa)
															
					If SE5->E5_MOTBX == "CMP" .AND. !SE5->E5_TIPO $ MVPAGANT

						nVlrTit := SE2->E2_VALOR
	
						If !lInssBx
							nVlrTit += SE2->E2_INSS
						Endif
	
						If lSest
							nVlrTit += SE2->E2_SEST
						Endif					
	
						If !lCalcIssBx
							nVlrTit += SE2->E2_ISS
						Endif
	                    
	 					If !lIRPFBaixa
							nVlrTit += SE2->E2_IRRF
						EndIf
						//Array para somar os valores de titulo e valores baixados
						If (nX := Ascan(aTitulos,{|x| x[1] == SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)})) == 0
							aadd(aTitulos,{SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA),nVlrTit,0,0})
							nX := Len(aTitulos)
							aTitulos[nX,2] := nVlrTit		//Somo as bases
						Endif
						aTitulos[nX,3]+= SE5->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)
					EndIf

					If (Ascan(aTitBsImp,{|x| x == SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)})) = 0
						
						If !(SE5->E5_MOTBX $ "CMP#FAT#STP")

							//Armazeno os valores calculados por titulo.
							If !SE5->E5_TIPO $ MVPAGANT 
								If SE2->E2_PIS > 0
									aDadosImp[1] += SE2->E2_PIS * nProp
									lGravou := .T.
								EndIf	
				
								If SE2->E2_COFINS > 0
									aDadosImp[2] += SE2->E2_COFINS * nProp
									lGravou := .T.							
								EndIf	
			
								If SE2->E2_CSLL > 0
									aDadosImp[3] += SE2->E2_CSLL * nProp
									lGravou := .T.							
								EndIf	
							Else //Se for PA com imposto pendente
								If SE2->E2_PIS > 0 .and. SE5->E5_PRETPIS == '1'
									aDadosImp[1] += SE2->E2_PIS * nProp
									lGravou := .T.
								EndIf	  

								If SE2->E2_COFINS > 0 .and. SE5->E5_PRETCOF == '1'
									aDadosImp[2] += SE2->E2_COFINS * nProp
									lGravou := .T.
								EndIf	  

								If SE2->E2_CSLL > 0 .and. SE5->E5_PRETCSL == '1'
									aDadosImp[3] += SE2->E2_CSLL * nProp
									lGravou := .T.
								EndIf	  
							EndIf
						EndIf	       
						
						//Somo valores dos impostos de IRRF/ISS/INSS dos titulos que foram compensados
						//por PA que não reteve impostos, para recompor a base de calculo
						If SE2->(E2_IRRF+E2_ISS+E2_INSS) > 0 .AND. !SE5->E5_TIPO $ MVPAGANT .And.;
							SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)!= cChaveTit
							aAreaSE5 := SE5->(GetArea())                                 
							//Seleciono SE5 sem Indregua (NEWSE5)
							dbSelectArea("NEWSE5")
							dbSetOrder(7)
							If MsSeek(xFilial("SE5")+SUBSTR(SE5->E5_DOCUMEN,1,nTamTit)+SE5->E5_FORNADT+SE5->E5_LOJAADT)							  
								If	NEWSE5->E5_PRETPIS == "1" .Or. NEWSE5->E5_PRETCOF == "1" .Or. NEWSE5->E5_PRETCSL == "1" 
									aDadosImp[4] += SE2->(E2_IRRF+E2_ISS)									
									aDadosImp[4] += Iif(!lInssBx,SE2->E2_INSS,0)									
									lGravou := .T.							
								EndIf
							EndIf                    
							RestArea(aAreaSE5)
						EndIf							
						
						//Somo valores dos impostos de IRRF/ISS/INSS dos titulos do tipo PA (Pagto Adiantado) 
						//que foram compensados, para recompor a base de calculo(nBaseImp) do PIS/COF/CSL
						If SE2->(E2_IRRF+E2_ISS+E2_INSS) > 0 .AND. SE5->E5_TIPO $ MVPAGANT .And.;
							SUBSTR(SE5->E5_DOCUMEN,1,nTamTit)+SE5->(E5_FORNADT+E5_LOJAADT) == cChaveTit							  
							aAreaSE5 := SE5->(GetArea())
							//Seleciono SE5 sem Indregua (NEWSE5)
							dbSelectArea("NEWSE5")
							dbSetOrder(7)
							If MsSeek(xFilial("SE5")+SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))
								If AliasIndic("SFQ")
									SFQ->(dbSetOrder(2))
									cChaveSE5 := NEWSE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)
									If SFQ->(MsSeek(xFilial("SFQ")+"SE5"+cChaveSE5))
										lAchouPa := .T.
									EndIf							
								EndIf
								If	NEWSE5->E5_PRETPIS $ "1# " .Or. NEWSE5->E5_PRETCOF $ "1# " .Or. NEWSE5->E5_PRETCSL $ "1# " 
									aDadosImp[5] += SE2->(E2_IRRF+E2_ISS+E2_INSS)
									lGravou := .T.						
									AAdd( aRecnos, SE5->( RECNO() ) )	
								EndIf
							EndIf
							RestArea(aAreaSE5)
						EndIf							

						If lGravou
							AADD(aTitBsImp,SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ))
							lGravou := .F.
						Endif
					Endif				
				EndIf      
				
				nImpostos := 0  

				If SE5->E5_PRETCOF $ " #3#4"
					aDadosRef[1] += SE5->E5_VRETPIS * nProp2                                
					nImpostos += SE5->E5_VRETPIS * nProp2                                   
					//Armazeno os valores calculados por titulo, retirando os valores retidos
					If SE5->(E5_VRETPIS + E5_VRETCOF + E5_VRETCSL) > 0 .And.;
						!(SE5->E5_MOTBX $ "CMP#FAT#STP") .And. !SE5->E5_TIPO $ MVPAGANT  
						aDadosImp[1] -= SE5->E5_VRETPIS * nProp2
						lVerSFQ := .T.
					Endif
				EndIf 								

				If SE5->E5_PRETCOF $ " #3#4"
					aDadosRef[1] += SE5->E5_VRETCOF * nProp2
					nImpostos += SE5->E5_VRETCOF * nProp2
					//Armazeno os valores calculados por titulo, retirando os valores retidos
					If SE5->(E5_VRETPIS + E5_VRETCOF + E5_VRETCSL) > 0 .And.;
						!(SE5->E5_MOTBX $ "CMP#FAT#STP") .And. !SE5->E5_TIPO $ MVPAGANT  					
						aDadosImp[2] -= SE5->E5_VRETCOF * nProp2
						lVerSFQ := .T.
					Endif					
				EndIf 								
	
				If SE5->E5_PRETCSL  $ " #3#4"
					aDadosRef[1] += SE5->E5_VRETCSL * nProp2
					nImpostos += SE5->E5_VRETCSL * nProp2
					//Armazeno os valores calculados por titulo, retirando os valores retidos
					If SE5->(E5_VRETPIS + E5_VRETCOF + E5_VRETCSL) > 0 .And.;
						!(SE5->E5_MOTBX $ "CMP#FAT#STP") .And. !SE5->E5_TIPO $ MVPAGANT  
						aDadosImp[3] -= SE5->E5_VRETCSL * nProp2
						lVerSFQ := .T.
					Endif					
				EndIf 								

				If lCalcIssBx  
					aDadosRef[1] += SE5->E5_VRETISS
				Endif
				//Verificação de pendencias de PCC 
				//Exemplo:
				//Titulo A teve o imposto retido no titulo B em bordero.
				//Ambos foram baixados
				//Ao verificar esta baixa, o valor do imposto calculado era menor que o imposto retido no titulo B
				//Neste caso o imposto do titulo A seria sempre deduzido nos borderos posteriores 				
				If lVerSfq 
					aRecSE2 := FImpExcTit("SE2",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA)
					nRecSE2 := 	__SE2->(RECNO())					
					For nT := 1 to Len(aRecSE2)
						__SE2->(MSGoto(aRecSE2[nT]))	
						aDadosImp[1] += __SE2->E2_PIS
						aDadosImp[2] += __SE2->E2_COFINS
						aDadosImp[3] += __SE2->E2_CSLL
					Next
					__SE2->(MSGoto(nRecSE2))	
					lVerSfq := .F.
				Endif

	
				//Guardo o valor dos impostos descontados para que seja recomposta a base de calculo
				If SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cChaveTit
					//Caso o sistema gravar como valor de pagamento na baixa parcial, o valor da baixa menos os impostos
					//calculados, não ha a necessidade de recompor a base de calculo
					If !lValPgto
						aDadosRef[7] += nImpostos
					EndIf
				Endif
	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿	
				//³ Adiciona ao array apenas os titulos que calcularam retencao         ³  
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						
				If	SE5->E5_PRETPIS == "1" .Or. SE5->E5_PRETCOF == "1" .Or. SE5->E5_PRETCSL == "1" 
					      
					If SE5->E5_PRETPIS == "1"
						aDadosRef[2] += SE5->E5_VRETPIS * nProp2
					EndIf	
	
					If SE5->E5_PRETCOF == "1"
						aDadosRef[3] += SE5->E5_VRETCOF * nProp2
					EndIf	
						
					If SE5->E5_PRETCSL == "1"
						aDadosRef[4] += SE5->E5_VRETCSL * nProp2       
					EndIf 						
                    
					AAdd( aRecnos, SE5->( RECNO() ) )			

				// Acumula os valores das baixas realizadas parcialmente
				// para ser utilizada na analise de possiveis problemas 
				// de arredondamento que ocorrem na baixa total.
				ElseIf  Empty(SE5->E5_PRETPIS) .Or. Empty(SE5->E5_PRETCOF) .Or. Empty(SE5->E5_PRETCSL)

					If Empty(SE5->E5_PRETPIS)
						aValorBx[1] += SE5->E5_VRETPIS
					EndIf	
		
					If Empty(SE5->E5_PRETCOF)
						aValorBx[2] += SE5->E5_VRETCOF
					EndIf	
							
					If Empty(SE5->E5_PRETCSL)
						aValorBx[3] += SE5->E5_VRETCSL
					EndIf 	

				EndIf	

				SE5->( dbSkip() ) 								
						 
			EndDo          
			NEWSE5->(dbCloseArea())			
			dbSelectArea("SE5")
			dbClearFil()
			RetIndex( "SE5" )
			If !Empty(cIndexSE5)
				FErase (cIndexSE5+OrdBagExt())
			Endif
			dbSetOrder(1) 
			
			lTitBor	:= .F.

			//Titulos em bordero que tem retencao de PCC pendente
			//Exemplo:
			//3 titulos de 4000 com calculo de PCC
			//Coloque o primeiro titulo em bordero e ao baixar o segundo, o imposto devera
			//ser calculado por 8000 (soma dois titulos)
			//Se baixar ou gerar bordero para o terceiro
			If lSE2DtBor				

				dbSelectArea("SE2")
				dbSetOrder(1)
				cQuery := "E2_FILIAL='"      + xFilial( "SE2" )     + "' .AND. "
				
				If Len(aFor10925) > 0  //Verificar determinados fornecedores (raiz do CNPJ)
					cQuery += "( " 	
					If lVerifPCC
						cQuery += "( " 					
					Endif
					For nLoop := 1 to Len(aFor10925) 
						cQuery += "(E2_FORNECE ='"   + aFor10925[nLoop,1]  + "' .AND. " 	
						cQuery += "E2_LOJA='"       + aFor10925[nLoop,2]  + "') .OR."
					Next			
					// Retiro o ultimo OR
					cQuery := Left( cQuery, Len( cQuery ) - 5 ) 
					cQuery += ") .AND. " 	
				Else  //Apenas Fornecedor e Loja atuais
					If lVerifPCC
						cQuery += "( " 					
					Endif
					cQuery += "E2_FORNECE ='"     + SE2->E2_FORNECE        + "' .AND. " 	
					cQuery += "E2_LOJA='"        + SE2->E2_LOJA           + "' .AND. "
				Endif
				
				//Verifico o parametro e se o campo existe na base
				cQuery += "(DTOS(E2_DTBORDE)>='" + DToS( dDataIni ) + "' .AND. "		
				cQuery += "DTOS(E2_DTBORDE)<= '" + DToS( dDataFim ) + "') " 
				cQuery += ".AND. !(E2_TIPO $ '"+MVABATIM + "/" + MV_CPNEG + "/" + MVPROVIS + "/" + MVPAGANT+"') .AND."
				cQuery += "(E2_SALDO>0 .OR. E2_NUMBOR <> '"+SPACE(nLenNumBor)+"') .AND. "
				cQuery += "(E2_SALDO>0 .OR. E2_NUMBOR <> '"+SPACE(nLenNumBor)+"') .AND. "
				cQuery += "E2_NUMBOR <> '"+SPACE(nLenNumBor)+"' .AND. " 	
				cQuery += " (E2_PIS > 0 .OR. E2_COFINS > 0 .OR. E2_CSLL > 0 ) .AND. "

				//Verificar ou nao o limite de 5000 para Pis cofins Csll
				// 1 = Verifica o valor minimo de retencao
				// 2 = Nao verifica o valor minimo de retencao (NAO SERAO CONSIDERADOS PARA A SOMA DOS 5000)
				If lCpoVlMin
					cQuery += " E2_APLVLMN <> '2' "
				Endif	  

				If lVerifPCC
					cQuery += ") .OR. ( " 					
					If Len(aFor10925) > 0  //Verificar determinados fornecedores (raiz do CNPJ)
						cQuery += "( " 	
						For nLoop := 1 to Len(aFor10925) 
							cQuery += "(E2_FORNPAI ='"   + PADR(aFor10925[nLoop,1]+ aFor10925[nLoop,2],nTamForn) + "') .OR. "
						Next			
						//Retiro o ultimo OR
						cQuery := Left( cQuery, Len( cQuery ) - 4 ) 
						cQuery += ") .AND. " 	
					Else  //Apenas Fornecedor e Loja atuais
						cQuery += "E2_FORNPAI ='"   + PADR(SE2->(E2_FORNECE+E2_LOJA),nTamForn) + "'.AND."
					Endif
					cQuery += " DTOS(E2_EMISSAO)>='"+Dtos( dDataIni) +"' .AND. "
					cQuery += "  DTOS(E2_EMISSAO)<='"+Dtos( dDataFim) +"' .AND. "
					cQuery += " 'FINA374' $ E2_ORIGEM .AND. "
					cQuery += " E2_TIPO $ '" + MVTXA  +"/"+MVTAXA + "')"
				Endif

				cAliasQRY := "TRBSE2"				
				ChkFile("SE2",.F.,cAliasQRY)
				cIndexSe2	:= CriaTrab(nil,.f.)
				IndRegua(cAliasQRY,cIndexSe2,"DTOS(E2_VENCREA)",,cQuery,"")
				nIndexSe2 := RetIndex("SE2",cAliasQRY)
				dbSetIndex(cIndexSe2+OrdBagExt())
				(cAliasQRY)->(dbSetOrder(nIndexSe2+1))
				(cAliasQRY)->(dbGoTop()) 
				
				While !( cAliasQRY )->( Eof()) 
					
					//VERIFICA VALORES APURADOS VIA FINA374
					If ( cAliasQRY )->E2_TIPO $ MVTXA .AND. "FINA374" $ ( cAliasQRY )->E2_ORIGEM  
						aDadosImp[1]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='PIS',( cAliasQRY )->E2_VALOR,0)
						aDadosImp[2]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='COF',( cAliasQRY )->E2_VALOR,0)
						aDadosImp[3]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='CSL',( cAliasQRY )->E2_VALOR,0)
						aDadosREF[2]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='PIS',( cAliasQRY )->E2_VALOR,0)
						aDadosREF[3]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='COF',( cAliasQRY )->E2_VALOR,0)
						aDadosREF[4]  	+=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='CSL',( cAliasQRY )->E2_VALOR,0)
					ElseIf ( cAliasQRY )->E2_TIPO $ MVTAXA .AND. "FINA374" $ ( cAliasQRY )->E2_ORIGEM  
						aDadosImp[1]  	-=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='PIS',( cAliasQRY )->E2_VALOR,0)
						aDadosImp[2]  	-=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='COF',( cAliasQRY )->E2_VALOR,0)
						aDadosImp[3]  	-=  If(SUBSTR(( cAliasQRY )->E2_NUMTIT,8,3)=='CSL',( cAliasQRY )->E2_VALOR,0)
					Else
						//Caso o titulo que esteja sendo baixado estiver em bordero e for selecionado para verificacao
						//da base do PCC, descarto neste momento. Assim o mesmo sera considerado apenas uma vez, no calculo 
						//final. Anteriormente era considerado neste ponto (por estar em bordero) e no calculo da base, fazendo 
						//atingir base de retencao de forma equivocada. 					
						If cTitAtual == ( cAliasQRY )->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA) .and. ;
								!Empty(( cAliasQRY )->(E2_NUMBOR))
							( cAliasQRY )->( dbSkip()) 
						Endif
	
						If ( cAliasQRY )->(E2_SALDO) == 0
							( cAliasQRY )->( dbSkip())
							Loop
						Endif
	
						nVlrTit := ( cAliasQRY )->E2_VALOR
		
						If !lInssBx
							nVlrTit += ( cAliasQRY )->E2_INSS
						Endif
		
						If lSest
							nVlrTit += ( cAliasQRY )->E2_SEST
						Endif					
			
						If !lCalcIssBx
							nVlrTit += ( cAliasQRY )->E2_ISS
						Endif			
	                    
						If !lIRPFBaixa
							nVlrTit += ( cAliasQRY )->E2_IRRF
						EndIf
						
						lTitBor	:= .T.
						
						aDadosRef[1] += nVlrTit
	
						//Armazeno os valores calculados por titulo.
						If (cAliasQRY)->E2_PRETPIS == '1'
							aDadosImp[1] += (cAliasQRY)->E2_PIS
							aDadosRef[2] += (cAliasQRY)->E2_PIS
						Endif
		
						If (cAliasQRY)->E2_PRETCOF == '1'
							aDadosImp[2] += (cAliasQRY)->E2_COFINS
							aDadosRef[3] += (cAliasQRY)->E2_COFINS							
						Endif
		
						If (cAliasQRY)->E2_PRETCSL == '1'
							aDadosImp[3] += (cAliasQRY)->E2_CSLL
							aDadosRef[4] += (cAliasQRY)->E2_CSLL							
		   				Endif

						//Guardo registros para acertar a pendencia de retencao
						If ((cAliasQRY)->E2_PRETPIS = '1' .OR. (cAliasQRY)->E2_PRETCOF = '1' .OR. (cAliasQRY)->E2_PRETCSL = '1' )
							AAdd( aRecnosSE2, (cAliasQRY)->(RECNO())) 
						Endif	
					Endif
					( cAliasQRY )->( dbSkip()) 
			
				EndDo 

				// Fecha a area de trabalho da query 
				( cAliasQRY )->( dbCloseArea() ) 
				dbSelectArea( "SE2" ) 
				dbSetOrder(1)				
			Endif

		Next nKco
		#ENDIF    


aDadosRef[ 6 ] := AClone( aRecnos )            

Endif
cFilAnt := cFilAtu
RestArea(aArea)
aDadosRet := aClone(aDadosRef)

//Calculo do Pis, Cofins e Csll
If !lCalcPA //Se nao for inclusao de PA
	SE2->(dbGoto(nSE2Reg))
	SED->(dbSetOrder(1))
	SED->(MsSeek(xFilial("SED")+SE2->E2_NATUREZ))
	SA2->(dbSetOrder(1))
	SA2->(MsSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
	
	If !lCalcIssBx .And. lPABruto //ISS na emissao e PaBruto = 1
		aDocumen	:=	{}	//Trata baixa de titulos que tenham sido compensados totalmente com um PA.	
		If lIRPFBaixa .And. lPCCBaixa  
			aAreaSe2	:= GetArea("SE2")
			nJ			:=	nIssPa	:=	nPccPa	:=	nIrPa	:=	0
			aNf		:=	{}
			DbSelectArea("SE5")
			SE5->(DbSetOrder(7))

			cChaveSe2	:= SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA_+E2_TIPO+E2_FORNECE+E2_LOJA)
			SE5->(Dbseek(xFilial("SE5")+cChaveSe2))
			While !EOF() .And. SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) = cChaveSe2  .And. SE5->E5_FILIAL = xFilial("SE5")
			      
			      If TemBxCanc(SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)) .Or. Empty(SE5->E5_DOCUMEN)
				   	SE5->(Dbskip())	
				   	Loop
				   Endif
				   
				   If Ascan(aNf,SE5->(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)) == 0 
				      Aadd(aNf,SE5->(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)) 				   		   
			      Endif
			      
			      If Ascan(aDocumen,SE5->E5_DOCUMEN) == 0 
				      Aadd(aDocumen,SE5->E5_DOCUMEN)
			      Endif
			      SE5->(Dbskip())	
			Enddo	  
			For nJ:=1 to Len(aDocumen) 
				If SE2->(Dbseek(xFilial("SE2")+aDocumen[nJ])) 
					If Len(aNF)>1 .And. (SE2->E2_SALDO > 0 .Or. Empty(SE2->E2_BAIXA))
					   nIssPa	:=	nPccPa	:=	nIrPa	:=	nVrPa	:=	0
					Else
					   nIssPa	+=	SE2->E2_ISS
					   nPccPa	+= SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL)
					   nIrPa		+= If(SE2->E2_VRETIRF>0,SE2->E2_VRETIRF,SE2->E2_IRRF)
					   nVrPa		+= SE2->E2_VALOR
					Endif   
				Endif
		  Next	
		  RestArea(aAreaSe2)			
		  SE2->(dbGoto(nSE2Reg))		
		Endif			
	Endif	
	//Se considera valores de multa juros desconto ou se a validação partiu do campo de valor
	If lJurMulDes .OR. lAltValor
		nBaseImp := nValPgto + nValComp
		//Verificar se o valor do pagamento eh realmente diferente do valor do saldo do titulo, para confirma oper. de baixa parcial
		If VALTYPE(__ReadVar)=="C" .and. __ReadVar$"nMulta#nDescont#nJuros#nValPgto".and.lJurMulDes
			// *************************************************************
			// Bloco novo utilizado somente para o calculo do campo Multa *
			// *************************************************************
			If SE2->E2_SALDO  - nValPgto <= 0 .and. !lAltValor
				//nBaseImp := nValPgto - (nDescont+nTotAbat+nDecresc) + (nJuros+nMulta+nAcresc)
				nBaseImp := nValPgto - (nDescont-nTotAbat-nDecresc) + Iif(!lAltPgto,(nJuros+nMulta+nAcresc),-(nJuros+nMulta+nAcresc))
			EndIf							
		Else
			// *******************************************************
			// Bloco Antigo não tirado para evitar incopatibilidade *
			// *******************************************************
			lAltValor := Str(nValPgto-nDescont-nTotAbat+nJuros+nMulta+nAcresc-nDecresc,17,2) # Str(nOldValPgto,17,2)
			If lAltValor .and. lJurMulDes
				//Caso seja uma baixa parcial, alterar a base de calculo do PCC, para acrescentar os impostos
				nBaseImp := nValPgto+nDescont-nJuros-nMulta-nAcresc+nDecresc
			Endif
		EndIf
	ElseIf !lMVImpAcr .Or. !lMVImpDcr
		If !lAltdesc .and. !lAltMulta .and. !lAltJuros .And. !lAltJurLt           // NESTE PONTO FICA NVLPAGTO E BASEIMP = 7760
			nBaseImp := nValPgto+Iif(cMVImpDcr == '1' .Or. (cMVImpDcr == '3' .And. cTpDesc == 'I'),(nDescont+nDecresc),0)+nTotAbat-Iif(lMVImpAcr,nJuros+nMulta+nAcresc, 0)
		Else
			If cFunName=="FINA080" .or. Isincallstack("FINA080")
				nBaseImp := nValPgto+nTotAbat
			Else
				nBaseImp := nValPgto+nTotAbat-Iif(lMVImpAcr,nJuros+nMulta+nAcresc, 0)+Iif(cMVImpDcr == '1' .Or. (cMVImpDcr == '3' .And. cTpDesc == 'I'),(nDecresc),0)
			Endif
		EndIf
	Else	
		If !lAltdesc .and. !lAltMulta .and. !lAltJuros .And. !lAltJurLt           // NESTE PONTO FICA NVLPAGTO E BASEIMP = 7760
			nBaseImp := nValPgto+nDescont+nTotAbat-nJuros-nMulta-nAcresc+nDecresc
		Else
			If cFunName=="FINA080" .or. Isincallstack("FINA080")
				nBaseImp := nValPgto+nTotAbat
			Else
				nBaseImp := nValPgto+nTotAbat-nJuros-nMulta-nAcresc+nDecresc
			Endif
		EndIf
	Endif
	
	lImpInFat := .F.	

	If 'NOTFAT' $ SE2->E2_FATURA
		nValOutImp := f080OutImp(nValPgto)
		lImpInFat := .T.	
	Else
		nValOutImp := Iif(!lInssBx,SE2->E2_INSS,0)		
	Endif

	If !lImpInFat	
		If lSest
			nValOutImp += SE2->E2_SEST
		Endif
		
		If !lCalcIssBx
			nValOutImp += SE2->E2_ISS 
		Endif                                            
		
		If !lIRPFBaixa
			nValOutImp += SE2->E2_IRRF
		EndIf
					
	Endif

	//Verificação para diferenciar se for baixa parcial
	lAltBxVal := STR(SE2->E2_VALOR,17,2) != STR(SE2->E2_SALDO,17,2)

	nTotDif := (nDescont + nTotAbat + nDecresc) - (nJuros + nMulta + nAcresc)
	If (FwIsInCallStack("fa450cmp") .And. SE2->E2_SALDO == SE2->E2_VALOR)
		nValOutImp := 0
	EndIf

	If (!lAltValor .Or. (lAltValor .And. nValPgto + nTotDif == SE2->E2_SALDO)) .And. (!lAltData .Or. nValPgto == SE2->E2_SALDO)
		If Len(aDocumen) > 0 .And. lPABruto .And. Len(aNf) == 1
			nBaseImp += Iif(nVrPa >= SE2->E2_VALOR ,nValOutImp ,0)
   		Else
	   		If 'NOTFAT' $ SE2->E2_FATURA .and. !(lCalcIssBx .and. lIRPFBaixa)
				nBaseImp += nValOutImp + Iif(!lPropPa,If(!lValPgto,aDadosRet[7],0) + aDadosImp[4] - aDadosImp[5],0) + nValComp
			ElseIf !('NOTFAT' $ SE2->E2_FATURA)
				nBaseImp += nValOutImp + If(!lValPgto,aDadosRet[7],0) + Iif(!lPropPa,aDadosImp[4] - aDadosImp[5],0) + nValComp
			EndIf
			If lNfComp
				nBaseImp -=	 Iif(nIssComp>0,nIssComp,0)
			Endif
		Endif

		//Se o titulo tiver impostos e foi gerado por uma fatura e nao teve baixa parcial
		If lImpInFat .and. SE2->E2_BASEPIS > 0 .and. SE2->E2_SALDO == SE2->E2_VALOR
			nBaseImp := SE2->E2_BASEPIS
			lImpInFat := .F.
		Endif

	Endif

	//Se for pa bruto e tiver baixado o valor dos impostos de um PA do titulo,
	//busco o valor no SE5 para recompor a base.
	If lPABruto .And. Len(aDocumen) > 0
		nImpPaBrt   := PABrtComp()
		nBaseImp    += nImpPaBrt
	EndIf

	//Caso o titulo possua o valor de base dos impostos preenchidos, considero
	//esse valor com base para calculo, desprezando o valor da nota fiscal
    If SE2->E2_MOEDA == 1 
    	If 'NOTFAT' $ SE2->E2_FATURA .and. !(lCalcIssBx .or. lIRPFBaixa)
			nValTit := SE2->E2_VALOR + nValOutImp		//valor bruto do titulo reconstituido (valor + outros impostos)
		ElseIf !('NOTFAT' $ SE2->E2_FATURA)
			nValTit := SE2->E2_VALOR + nValOutImp		//valor bruto do titulo reconstituido (valor + outros impostos)
		Elseif 'NOTFAT' $ SE2->E2_FATURA .and. (lCalcIssBx .or. lIRPFBaixa)
			nValTit := SE2->E2_BASEPIS
		EndIf
	Else
		nValTit := SE2->E2_VLCRUZ + nValOutImp		//valor bruto do titulo reconstituido (valor + outros impostos)	
	Endif

	If SE2->E2_BASEPIS > 0
		nProp := SE2->E2_BASEPIS/nValtit				//Proporcao entre a base e o valor bruto do titulo
		nValTit := SE2->E2_BASEPIS		
		If !( (lAltdesc .or. lAltMulta) .and. (lJurMulDes)) .and.;
		 	(	!lAltValor .And. !lAltData .And. ;
		 	(nValPgto <> SE2->E2_SALDO-nDescont-nTotAbat) .And.;
		 	(nValPgto <> SE2->(E2_SALDO-E2_DECRESC-nTotAbat)) .And.;
			!(cFunName == "FINA450" .And. Type("lF080Auto")<>"U" .And. lF080Auto .And. lPCCBaixa)) //se nValPgto e SE2->E2_SALDO são iguais, significa que está fazendo a baixa do resíduo do título
													  		  				//então n pode considerar o valor total incluso no E2_BASEPIS, mas sim o valor proporcional
			nBaseImp := SE2->E2_BASEPIS				          //Base liquida para calculo dos impostos			
		ElseIf !lAltValor .And. (nBaseImp == SE2->E2_SALDO+nValOutImp .or.;
			IIf((SE2->E2_BAIXA <> CTOD("  /  /  ") .and. SE2->(E2_IRRF+If(!lInssBx,E2_INSS,0)+E2_ISS) > 0) .or. lImpInFat , ;
				nBaseImp == SE2->E2_SALDO+nValOutImp,.F.))
			nBaseImp 	:= nBaseImp + If(lNfComp,SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL),0)			
						
			If lIRPFBaixa .And. (lValPgto .Or. lAltBxVal) 
				If (lValPgto .And. aDadosImp[4]> 0) 		
					nBaseImp += SE2->E2_VRETIRF
				Endif	
			Endif                            
			If lCalcIssBx 
				If (lValPgto .And. aDadosImp[4]> 0) 	
					nBaseImp += SE2->E2_VRETISS
				Endif	
			Endif					         
			
			If lInssBx .And. lAltBxVal .And. nBaseImp < SE2->E2_SALDO //Não devo somar na baixa total ou baixa restante do titulo.
				If !(lInsPub .And. SE2->E2_TIPO $ MVPAGANT+"/INA") //PA de Inss Baixa Empresa Publica
					nBaseImp += SE2->E2_VRETINS
				Endif	
			Endif			         
			
			//Titulos que possuem bordero, com valores minimos de retenção e não estao baixados.
			If SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL) == 0 .And. !Empty(SE2->E2_NUMBOR) .And. ;
					SE2->E2_PRETPIS = "1" .And. SE2->E2_PRETCOF = "1" .And. SE2->E2_PRETCSL = "1" .And. lInssBx
					
				If lIRPFBaixa .And. (lValPgto .Or. lAltBxVal) 
					If (lValPgto .And. aDadosImp[4]== 0) 			
						nBaseImp += SE2->E2_VRETIRF
					Endif	
				Endif                           				
			
				If lCalcIssBx  
					If (lValPgto .And. aDadosImp[4]== 0) 			
						nBaseImp += SE2->E2_VRETISS
					Endif	
				Endif		
				
				nBaseImp += SE2->E2_VRETINS
			//ElseIf SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL) == 0 .And. Empty(SE2->E2_NUMBOR) .And. ;
			//		SE2->E2_PRETPIS = "1" .And. SE2->E2_PRETCOF = "1" .And. SE2->E2_PRETCSL = "1" .And. nBaseImp<nValTit
			//		nBaseImp := nValTit	   		
			Endif						
			
			nBaseImp := nBaseImp  * If(lJurMulDes,1,nProp)
			
		Else
			nBaseImp	:= nBaseImp
		EndIf		
		If lPABruto .And. lValPgto
			nBaseImp += nImpPaBrt
		EndIf
	Else                                                                                       
		nProp := 1
		If !lAltValor .and. !lJurMulDes
			nBaseImp := nValTit 				//Base liquida para calculo dos impostos
			//Se for pa bruto e tiver baixado o valor dos impostos de um PA do titulo,
			//busco o valor no SE5 para recompor a base.
			If lPABruto .And. lValPgto
				nBaseImp += nImpPaBrt
			EndIf	
		Else
			If !lAltValor .and. lJurMulDes .and. nBaseImp == SE2->E2_SALDO		
				nBaseImp 	:= nBaseImp + If(!lValPgto,SE2->(E2_VRETPIS+E2_VRETCOF+E2_VRETCSL),0)
			Else
				nBaseImp	:= nBaseImp			
			EndIf
		EndIf
	Endif	

	If lAltValor
		nBaseOrig := nValTit 	
	Else
		nBaseOrig := nBaseImp
	Endif

	//Procura pelas baixas deste titulo caso seja baixa parcial e esteja baixando em mes diferente
	If lAltBxVal .and. lAltValor
		aBaixa := Sel080Baixa("VL /BA /CP /",SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,@nTotAdto,@lBaixaAbat,SE2->E2_FORNECE,SE2->E2_LOJA,@lBxCec,.F.,@lNotBax,@nTotImpost,@lAglImp,.T.)
		For nY := 1 to Len(aBaixaSE5)
			If (!lJurMulDes .And. !aBaixaSE5[nY][4] $ MVPAGANT) .Or. (lJurMulDes .And. aBaixaSE5[nY][21] == "CP") 
				nBaixaParc += ((aBaixaSE5[nY][8] * Iif(aBaixaSE5[nY][21] != "CP", nProp,1)) + If(lValPgto, If(!(aBaixaSE5[nY][18] $ '1#5#2') ,aBaixaSE5[nY][15],0)+If(!(aBaixaSE5[nY][19] $ '1#5#2'),aBaixaSE5[nY][16],0)+If(!(aBaixaSE5[nY][20] $ '1#5#2'),aBaixaSE5[nY][17],0),0))
			EndIf
		Next
	EndIf
		
	If lAltValor
		If !lJurMulDes 
			nBaseOrig -= nBaixaParc
		EndIf	
		If (Type('lF080Auto') <> "U" .and. lF080Auto) .and. (Type("l450")<>"U" .and. !l450)
			nBaseImp := nPgtoAuto
		Endif
		nBaseImp := nBaseImp * nProp 
	Else
		nBaseImp := (nBaseImp - nBaixaParc) * Iif(lJurMulDes,nProp,1) 
	Endif
	
	nBaseImp := Iif(nBaseImp > nBaseOrig .And. !lJurMulDes, nBaseOrig, nBaseImp)
	                                
	If (!lAltValor .And. lAltData .And. nValPgto <> SE2->E2_SALDO) .And. !lImpInFat  
		nBaseImp += nValOutImp	
	Endif
	
	//Base diferenciada para calculo dos impostos
	nBaseRet := nBaseImp += nValComp	

	//Se for fatura, a base de impostos deve considerar o somatorio dos outros impostos
	//para verificacao do valor acima de 5000.
	//Isto já eh feito normalmente para os titulos nao gerados por fatura
	If lImpInFat
		If !('NOTFAT' $ SE2->E2_FATURA) .or. ('NOTFAT' $ SE2->E2_FATURA .and. !(lCalcIssBx .or. lIRPFBaixa))
			nBaseRet += nValOutImp
		EndIf
	Endif   
	
	If Len(aDocumen) > 0 .And. lPABruto
		If !lCalcIssBx .And. nIssPa > 0 .And. Len(aNf) == 1
			If nIssPa > SE2->E2_ISS 
				nBaseImp -= nIssPa  			
			 	nBaseImp += (nIssPa-SE2->E2_ISS)  				
			ElseiF nIssPa < SE2->E2_ISS
				nBaseImp += (SE2->E2_ISS-nIssPa)  				
			Endif						 	
		Endif
		nBaseImp += If(lIRPFBaixa,nIrPa,0)
		nBaseImp += If(lPccBaixa,nPccPa,0)		
	Endif

	//PIS
	If SE2->E2_PIS > 0
		If cFormClcPCC == "1" // Recalcula sempre o imposto
			nPis := Round(( nBaseImp * SE2->E2_PIS ) / nValTit ,2)
			//Verifico possiveis problemas de arredondamento
			If ABS(SE2->E2_PIS - (aDadosRet[2] + aValorBx[1] + nPis)) == 0.01
				nPis += (SE2->E2_PIS - (aDadosRet[2] + aValorBx[1] + nPis)	)
			EndIf		                                                     									
			If (aDadosImp[1] <> 0 .And. If(!lTitBor .And. !lNfComp,ROUND(aDadosImp[1],2) <> ROUND(aDadosRet[2],2) .And. SE2->E2_SALDO > 0,SE2->E2_SALDO > 0) .And.;
			   (!lJurMulDes .Or. (lJurMulDes .and. SE2->E2_SALDO == SE2->E2_VALOR))) .Or.;
			   (!lJurMulDes .and. SE2->E2_SALDO <> SE2->E2_VALOR .And. aValorBx[1] > 0) .And. !lAltValor .And. Len(aDocumen) = 0
	         //Necessario que este elemento aDadosImp[1] seja arredondado pq o nPis foi arredondado anteriormente senao calcula valor incorreto. 
				nPis += Iif(lNfComp,Round(aDadosRet[2],2),Iif(aDadosImp[1]>0,Iif(lJurMulDes,Round(aDadosImp[1],2),NoRound(aDadosImp[1],2)),0))
				If nPis < 0
					nPis := 0
				EndIf	
			EndIf
		ElseIf cFormClcPCC == "2" .and. SE2->E2_VALOR == SE2->E2_SALDO // Considera valor do título a pagar
			nPis := SE2->E2_PIS
		EndIf
	EndIf

   // COFINS
	If SE2->E2_COFINS > 0
		If cFormClcPCC == "1" // Recalcula sempre o imposto
			nCofins := Round(( nBaseImp * SE2->E2_COFINS ) / nValTit ,2)
			//Verifico possiveis problemas de arredondamento
			If ABS(SE2->E2_COFINS - (aDadosRet[3] + aValorBx[2] + nCofins)) == 0.01
				nCofins += SE2->E2_COFINS - (aDadosRet[3] + aValorBx[2] + nCofins)		
			EndIf		
			If (aDadosImp[2] <> 0 .And. If(!lTitBor .And. !lNfComp,ROUND(aDadosImp[2],2) <> ROUND(aDadosRet[3],2) .And. SE2->E2_SALDO > 0,SE2->E2_SALDO > 0) .And. ;
			   (!lJurMulDes .or. (lJurMulDes .and. SE2->E2_SALDO == SE2->E2_VALOR))) .Or.;
			   (!lJurMulDes .and. SE2->E2_SALDO <> SE2->E2_VALOR .And. aValorBx[2] > 0) .And. !lAltValor .And. Len(aDocumen) = 0
	         //Necessario que este elemento aDadosImp[2] seja arredondado pq o nCofins foi arredondado anteriormente senao calcula valor incorreto. 
				nCofins += Iif(lNfComp,Round(aDadosRet[3],2),Iif(Round(aDadosImp[2],2)>0,Round(aDadosImp[2],2),0))
				If nCofins < 0
					nCofins := 0
				EndIf	
			EndIf
		ElseIf cFormClcPCC == "2" .and. SE2->E2_VALOR == SE2->E2_SALDO // Considera valor do título a pagar
			nCofins := SE2->E2_COFINS
		EndIf
	EndIf

	// CSLL
	If SE2->E2_CSLL > 0
		If cFormClcPCC == "1" // Recalcula sempre o imposto  
			//Verifico possiveis problemas de arredondamento
			nCsll := Round(( nBaseImp * SE2->E2_CSLL ) / nValTit ,2) 
			If ABS(SE2->E2_CSLL - (aDadosRet[4] + aValorBx[3] + nCsll)) == 0.01
				nCsll += SE2->E2_CSLL - (aDadosRet[4] + aValorBx[3] + nCsll)		
			EndIf
			If (aDadosImp[3] <> 0 .And. If(!lTitBor .And. !lNfComp,ROUND(aDadosImp[3],2) <> ROUND(aDadosRet[4],2) .And. SE2->E2_SALDO > 0,SE2->E2_SALDO > 0)  .And.;
			   (!lJurMulDes .or. (lJurMulDes .and. SE2->E2_SALDO == SE2->E2_VALOR))) .Or.;
			   (!lJurMulDes .and. SE2->E2_SALDO <> SE2->E2_VALOR .And. aValorBx[3] > 0)  .And. !lAltValor .And. Len(aDocumen) = 0
	         //Necessario que este elemento aDadosImp[3] seja arredondado pq o nCsll foi arredondado anteriormente senao calcula valor incorreto. 	
				nCsll += Iif(lNfComp,Round(aDadosRet[4],2),Iif(aDadosImp[3] > 0,Round(aDadosImp[3],2),0))
				If nCsll < 0
					nCsll := 0
				EndIf	
			EndIf
		ElseIf cFormClcPCC == "2" .and. SE2->E2_VALOR == SE2->E2_SALDO // Considera valor do título a pagar
			nCsll := SE2->E2_CSLL		
		EndIf		
	EndIf
Else
	SED->(dbSetOrder(1))
	SED->(MsSeek(xFilial("SED")+M->E2_NATUREZ))
	SA2->(dbSetOrder(1))
	SA2->(MsSeek(xFilial("SA2")+M->E2_FORNECE+M->E2_LOJA))

	//Se considera valores de multa juros desconto ou se a validação partiu do campo de valor
	If lJurMulDes .or. lAltValor 
		nBaseImp := nValPgto
	Else	
		If (Type("nDescont") = "U")
			nDescont := 0		
		Endif
		If (Type("nJuros") = "U")
			nJuros := 0		
		Endif
		If (Type("nMulta") = "U")
			nMulta := 0		
		Endif
		If (Type("nAcresc") = "U")
			nAcresc := 0		
		Endif									
		If (Type("nDecresc") = "U")
			nDecresc := 0		
		Endif
		
		nBaseImp := nValPgto+Iif(cMvImpDcr == '1' .Or. (cMvImpDcr == '3' .And. cTpDesc = 'I'),nDescont+nDecresc,0)+nTotAbat-Iif(lMvImpAcr,nJuros+nMulta+nAcresc,0)				
	Endif

	lImpInFat := .F.	

	If 'NOTFAT' $ M->E2_FATURA
		nValOutImp := f080OutImp(nValPgto)
		lImpInFat := .T.	
	Else
		nValOutImp := M->(E2_IRRF+E2_ISS)		
		nValOutImp += Iif(!lInssBx,M->E2_INSS,0)		
	Endif

	If !lImpInFat	
		If lSest
			nValOutImp += M->E2_SEST
		Endif
		
		If !lCalcIssBx
			nValOutImp += M->E2_ISS 
		Endif
		
		If !lIRPFBaixa
			nValOutImp += M->E2_IRRF
		EndIf			
	Endif

	If M->E2_BASEPIS > 0
		nValTit := M->E2_BASEPIS
	Else
		nValTit := M->E2_VALOR + nValOutImp			
	Endif

	If !M->E2_TIPO $ MVPAGANT		
		nBaseImp := nBaseImp - nValOutImp
	Endif

	If !lAltValor
		nBaseImp += nValOutImp + aDadosRef[7]
	Endif
	
	//Verificação para diferenciar se for baixa parcial
	lAltBxVal := STR(SE2->E2_VALOR,17,2) != STR(SE2->E2_SALDO,17,2) 
	
	//Base diferenciada para calculo dos impostos
	nBaseRet := nBaseImp
	If lBaseSe2
		If M->E2_BASEPIS > 0
			nBaseRet := (M->E2_BASEPIS * nBaseImp) / nValTit
		Endif 
	Endif			
	//Se for fatura, a base de impostos deve considerar o somatorio dos outros impostos
	//para verificacao do valor acima de 5000.
	//Isto já eh feito normalmente para os titulos nao gerados por fatura
	If lImpInFat
		nBaseRet += nValOutImp
	Endif

	//PIS
	If M->E2_PIS > 0
		nPis := ( nBaseImp * M->E2_PIS ) / nValTit
		If !lAltValor .And. cNCCRet == "2" .And. NoRound(aDadosImp[1],2) <> NoRound(aDadosRet[2],2) .And.	SE2->E2_SALDO > 0
			nPis += If (aDadosImp[1] > 0, aDadosImp[1], 0)
			If nPis < 0
				nPis := 0
			EndIf
		EndIf
	EndIf

   // COFINS
	If M->E2_COFINS > 0
		nCofins := ( nBaseImp * M->E2_COFINS ) / nValTit
		If !lAltValor .And. cNCCRet == "2" .And. NoRound(aDadosImp[2],2) <> NoRound(aDadosRet[3],2) .And. SE2->E2_SALDO > 0 
			nCofins += If (aDadosImp[2] > 0, aDadosImp[2], 0)
			If nCofins < 0
				nCofins := 0
			EndIf
		EndIf
	EndIf

	// CSLL
	If M->E2_CSLL > 0
		nCsll := ( nBaseImp * M->E2_CSLL ) / nValTit
		If !lAltValor .And. cNCCRet == "2" .And. NoRound(aDadosImp[3],2) <> NoRound(aDadosRet[4],2) .And. SE2->E2_SALDO > 0 
			nCsll += If (aDadosImp[3] > 0, aDadosImp[3], 0)
			If nCsll < 0
				nCsll := 0
			EndIf
		EndIf
	EndIf

Endif	

If lFa080PCC
	ExecBlock("FA080PCC",.F.,.F.,{nPis, nCofins, nCsll, nIrrf, nValTit})
Endif
//se estiver fazendo uma baixa parcial
If aDadosRet[1] > 0
	//se estiver considerando baixas de outros titulos
	//tem que tirar o INSS e IR referente aos titulos que estao considerando (anteriores)
	If lTBxOTits
		aDadosRet[1] -= (nINSSAnts + nIRAnts)
	ElseIF SE2->E2_SALDO > nValPgto  
	//se não estiver considerando baixas de outros titulos
	//tem que tirar o INSS e IR referente ao titulo atual
		aDadosRet[1] -= SE2->E2_IRRF
		If !lInssBx
			aDadosRet[1] -= SE2->E2_INSS
		Endif	
	EndIf
EndIf

//Verifico o valor a reter
If lContrRet
   //Nao retem Pis,Cofins,CSLL
	If cModRetPis == "3"  //Nao retem PIS
		nVlRetPis := nPis
		nVlRetCof := nCofins
		nVlRetCsl := nCsll
		nPis := 0
		nCofins := 0
		nCsll := 0
	Else
		//Calculo do Sistema
		IF cModRetPis == "1"
			If aDadosRet[1]+ (nBaseRet) <= nVlMinImp .and. lAplVlMin
				nVlRetPis := nPis
				nVlRetCof := nCofins
				nVlRetCsl := nCsll
				nPis := 0
				nCofins := 0
				nCsll := 0
				aDadosRet[2] := 0 
				aDadosRet[3] := 0 
				aDadosRet[4] := 0
			Endif			
		Endif

		If nPis+nCofins+nCsll+nIrrf+ aDadosRet[2]+ aDadosRet[3]+ aDadosRet[4] > 0
			If nPis+nCofins+nCsll+aDadosRet[2]+ aDadosRet[3]+ aDadosRet[4] > 0
			   //Para esse caso, os valores já vêm somados das linhas 11678, 11696 e 11714(Fonte 226 de 9/set). 
			   // Por isso nao deve fazer a soma novamente				
				If !(ROUND(aDadosImp[3],2) <> ROUND(aDadosRet[4],2) .And. SE2->E2_SALDO > 0  .And.;
				   (!lJurMulDes .or. (lJurMulDes .and. SE2->E2_SALDO == SE2->E2_VALOR)))  .And. ;
				   (Empty(cDocumen) .Or. (!Empty(cDocumen) .And. lPropPA .And. lPrImPA )) .And.;
				    nPccBx >= 0 .And. !lTemDadosBor
                                        
					nVlRetPis := nPis
					nVlRetCof := nCofins
					nVlRetCsl := nCsll
					
					nTotPis += SE2->E2_PIS
					nTotCsl += SE2->E2_CSLL
					nTotCof += SE2->E2_COFINS
										
					//Em caso de titulo parcelado e com impostos no mesmo valor era calculado somente sobre o valor de uma parcela.
					//nPis    := nVlRetPis + Iif(aDadosRet[2] <> SE2->E2_PIS, aDadosRet[2], 0)
					//nCofins := nVlRetCof + Iif(aDadosRet[3] <> SE2->E2_COFINS, aDadosRet[3], 0)
					//nCsll   := nVlRetCsl + Iif(aDadosRet[4] <> SE2->E2_CSLL, aDadosRet[4], 0)										
					nPis    := nVlRetPis + Iif(nTotPis <> SE2->E2_PIS,aDadosRet[2], 0)
					nCofins := nVlRetCof + Iif(nTotCof <> SE2->E2_COFINS,aDadosRet[3], 0)
					nCsll   := nVlRetCsl + Iif(nTotCsl <> SE2->E2_CSLL,aDadosRet[4], 0)					
					   
				EndIf
			Endif
			nValorPg := nValPgto - nPis - nCofins - nCsll - nIrrf - nIss

			If nValorPg < 0
				aOutImp := {}
				aAdd(aOutImp, {"PIS", nPis })
				aAdd(aOutImp, {"COF", nCofins })
				aAdd(aOutImp, {"CSL", nCsll })
				If lIrpfBaixa
					aAdd(aOutImp, {"IRF", nIrrf })
				EndIf
				If lInssBx
					aAdd(aOutImp, {"INS", nInss })
				EndIf
				If lCalcIssBx
					aAdd(aOutImp, {"ISS", nIss })
				EndIf
				aDadosPar := verVrAR(nValPgto, aOutImp )
				nPis	:= aDadosPar[1]
				nCofins := aDadosPar[2]
				nCsll	:= aDadosPar[3] 
				lverVrAR := .F.
			EndIf
	
			If nValorPg < 0 .And. lverVrAR
				nValorPg += nPis + nCofins + nCsll // deixa descontado valor de IR e ISS para realizar a proporcao somente para o PCC
			
				nTotARet := nPis + nCofins + nCsll + nIrrf + nIss
						
				nDiferImp := nValorPg - nTotARet
					
				If nDiferImp < 0                                                           
					nFatorRed := 1 - ( Abs( nDiferImp ) / nTotARet ) 
					nPis  := NoRound( nPis * nFatorRed, 2 ) 
					nCofins := NoRound( nCofins * nFatorRed, 2 ) 
					If (nValorPg - ( nPis + nCofins + nIrrf )) > 0 						
						nCsll := nValorPg - ( nPis + nCofins + nIrrf )
					EndIf
				Endif		
			EndIf 
		Else
			//Natureza nao calculou Pis/Cofins/Csll
			aDadosRet[1] := 0
		Endif
	Endif
Endif	

SE2->( RestArea( aAreaSE2 ) ) 

//Ponto de entrada para manipular os valores de impostos(nPis, nCofins, nCsll)
If lImp10925
	ExecBlock("FA080IMP",.F.,.F.)
EndIf

// tratamento que substitui o calculo de PCC quando houve retenção com proporcionalização
If lPrImPA .and. SE2->E2_VALOR> SE2->E2_SALDO .AND. (SE2->E2_PRETPIS =="7" .OR. SE2->E2_PRETCOF =="7" .OR. SE2->E2_PRETCSL =="7").and. SE2->E2_BASEPIS> nVlMinImp
	 nPis:= SE2->E2_PIS - SE2->E2_VRETPIS
	 nCofins:= SE2->E2_COFINS - SE2->E2_VRETCOF
	 nCsll := SE2->E2_CSLL - SE2->E2_VRETCSL       
	 
EndIf
If lverVrAR .And. (!lAltValor .or. lAltData .or. lValPgto)
	nValPgto -= nPis+nCofins+nCsll+nIrrf+nIss
	If nValPgto == 0 //O valor dos impostos foi igual ao valor da baixa
		If nPis > 0.01
			nValPgto := 0.01
			nPis -= 0.01
		EndIf
	EndIf
Endif

nOldValPgto := nValPgto
nOldPIS		:= nPis
nOldCofins	:= nCofins
nOldCSLL	:= nCsll
nOldIrrf	:= nIrrf


Return .T.


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FGerCredRt³Autor  ³ Mauricio Pequim Jr    ³ Data ³20.10.04  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Gera titulo de Credito para fornecedor no caso de retencao  ³±±
±±³			 ³seja menor do que zero         							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³FGerCredRt()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Valor do Titulo                                    ³±±
±±³			 ³ ExpN2 = Moeda do Titulo                                    ³±±
±±³			 ³ ExpC1 = Sequencia de baixa                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FGerCredRt(nValtot,nMoeda,cSeq)

Local aArea		:= GetArea()
Local cParcela	:= ""
Local nTamParc	:= 0
Local cPrefOri	:= ""
Local cNumOri	:= ""
Local cParcOri	:= ""
Local cTipoOri	:= ""
Local cCfOri	:= ""
Local cLojaOri	:= ""
Local cNatOri	:= ""
Local nCentMd1	:= MsDecimais(1)
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/ )

DEFAULT nMoeda   := 1                     

If FindFunction("ALIASINDIC")
	If AliasIndic("SFQ") 

		cArqSA := "SA2"
		cArqSE := "SE2"
		
		cPrefOri   := SE2->E2_PREFIXO
		cNumOri    := SE2->E2_NUM
		cParcOri   := SE2->E2_PARCELA
		cTipoOri   := SE2->E2_TIPO
		cCfOri     := SE2->E2_FORNECE
		cLojaOri   := SE2->E2_LOJA
		cNatOri    := SE2->E2_NATUREZ
		
		DbSelectArea("SA2") 	 // Posiciona o arquivo de cliente/fornecedor
		dbSetOrder(1)
		DbSeek(cFilial+cCfOri+cLojaOri)
		
		dbSelectArea("SE2")
		dbSetOrder(1)
	
		cParcela := SE2->E2_PARCELA
		nTamParc := Len(SE2->E2_PARCELA)
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Busca a parcela de acordo com o titulo                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		While MSSeek(xFilial("SE2")+cPrefOri+cNumOri+cParcela+left(MV_CPNEG,3)+cCfOri+cLojaOri)
			cParcela := Soma1(cParcela,nTamParc)
		EndDo             
	
		RecLock(cArqSE,.T.)
		SE2->E2_NOMFOR  := SA2->A2_NREDUZ
		SE2->E2_EMIS1   := dDataBase
		SE2->E2_BAIXA   := CtoD("  /  /  ")
		SE2->E2_SALDO   := nValTot
		SE2->E2_FILIAL  := cFilial
		SE2->E2_PREFIXO := cPrefOri
		SE2->E2_NUM     := cNumOri
		SE2->E2_PARCELA := cParcela
		SE2->E2_NATUREZ := cNatOri
		SE2->E2_TIPO    := left(MV_CPNEG,3)
		SE2->E2_VALOR   := nValTot
		SE2->E2_EMISSAO := dDataBase
		SE2->E2_VALOR   := nValTot
		SE2->E2_VENCTO  := dDataBase
		SE2->E2_VENCREA := dDatabase
		SE2->E2_VENCORI := dDatabase
		SE2->E2_FORNECE := cCfOri
		SE2->E2_LOJA    := cLojaOri
		SE2->E2_NOMFOR  := SA2->A2_NREDUZ
		SE2->E2_MOEDA   := nMoeda
		SE2->E2_VLCRUZ  := Round(NoRound(xMoeda(SE2->E2_VALOR,nMoeda,nMoedaBco,SE2->E2_EMISSAO,nCentMd1+1),nCentMd1+1),nCentMd1)
		SE2->E2_ORIGEM  := "MATA460"
		If !lUsaFlag
			SE2->E2_LA      := "S"
		Endif
		SE2->E2_SEQBX	 := cSeq		

		DbSelectArea( "SA2" )
		RecLock("SA2")
		SA2->A2_SALDUP  := A2_SALDUP - Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,nMoedaBco,SE2->E2_EMISSAO,nCentMd1+1),nCentMd1+1),nCentMd1)
		SA2->A2_SALDUPM := A2_SALDUPM - Round(NoRound(xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,Val(GetMv("MV_MCUSTO")),SE2->E2_EMISSAO,nCentMd1+1),nCentMd1+1),nCentMd1)
		
		If SA2->A2_SALDUPM > SA2->A2_MSALDO
			SA2->A2_MSALDO := SA2->A2_SALDUPM
		EndIf
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava no arquivo de amarracao o titulo x NCC ou NDF                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
		dbSelectArea("SFQ")
		RecLock("SFQ",.T.)
		SFQ->FQ_FILIAL  := xFilial("SFQ")
		SFQ->FQ_ENTORI  := "SE5"
		SFQ->FQ_PREFORI := cPrefOri
		SFQ->FQ_NUMORI  := cNumOri
		SFQ->FQ_PARCORI := cParcOri
		SFQ->FQ_TIPOORI := cTipoOri										
		SFQ->FQ_CFORI   := cCfOri
		SFQ->FQ_LOJAORI := cLojaOri
		SFQ->FQ_SEQORI  := cSeq
			
		SFQ->FQ_ENTDES  := cArqSE
		SFQ->FQ_PREFDES := SE2->E2_PREFIXO
		SFQ->FQ_NUMDES  := SE2->E2_NUM
		SFQ->FQ_PARCDES := SE2->E2_PARCELA                             
		SFQ->FQ_TIPODES := SE2->E2_TIPO
		SFQ->FQ_CFDES   := SE2->E2_FORNECE
		SFQ->FQ_LOJADES := SE2->E2_LOJA
		SFQ->FQ_SEQDES  := ""

		//Grava a filial de destino caso o campo exista
		If !Empty( SFQ->( FieldPos( "FQ_FILDES" ) ) ) 
			SFQ->FQ_FILDES := SE2->E2_FILIAL 
		EndIf 											
		MsUnlock()
	Endif
Endif					
RestArea(aArea)
Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FImpDelTit³ Autor ³ Eduardo Riera         ³ Data ³11.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Funcao que traz os registros do titulo aglutinador           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do registro  do titulo principal                ³±±
±±³          ³       SE1                                                   ³±±
±±³          ³       SE2                                                   ³±±
±±³Parametros³ExpC2: Prefixo                                               ³±±
±±³Parametros³ExpC3: Numero                                                ³±±
±±³Parametros³ExpC4: Parcela                                               ³±±
±±³Parametros³ExpC5: Tipo                                                  ³±±
±±³Parametros³ExpC6: Cliente                                               ³±±
±±³Parametros³ExpC7: Loja                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo trazer os registros relacionau-³±±
±±³          ³dos ao titulo aglutinador                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Geral                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FImpDelTit(cAlias,cPrefixo,cNumero,cParcela,cTipo,cCliFor,cLoja,cSeq)

Local aRecnos  := {}                              
Local aArea    := GetArea()
Local aAreaSE5 := SE5->(GetArea())
Local lMultFil:= .F. 

//--- Tratamento Gestao Corporativa
Local lGestao   := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
//
Local cFilFwSE5 := IIF( lGestao .And. FindFunction("FwFilial"), FwFilial("SE5") , xFilial("SE5") )

#IFDEF TOP
	Local lQuery    := .F.
	Local cQuery    := ""     
	Local cAliasSFQ := ""
	Local lAddRec := .T.
#ENDIF	

If FindFunction("ALIASINDIC") 

	If AliasIndic("SFQ")

		lMultFil:= !Empty(SFQ->(FieldPos("FQ_FILDES")))	

		#IFDEF TOP
	
			cAliasSFQ := "SFQQUERY"
			
			lQuery := .T.
	
			cQuery := "SELECT SE5.R_E_C_N_O_ RECTIT,E5_FILIAL " 

			If lMultFil
				cQuery += ",FQ_FILDES"
			Endif

			cQuery += " FROM " 
			cQuery += RetSqlName("SE5") + " SE5, "
			cQuery += RetSqlName("SFQ") + " SFQ "
			cQuery += " WHERE "                      
			
			If !lMultFil
				cQuery += "E5_FILIAL  = '"+xFilial("SE5")+"' AND "
			Endif

			cQuery += "E5_PREFIXO = FQ_PREFDES AND "
			cQuery += "E5_NUMERO  = FQ_NUMDES  AND "
			cQuery += "E5_PARCELA = FQ_PARCDES AND "
			cQuery += "E5_TIPO    = FQ_TIPODES AND "	
			cQuery += "E5_CLIFOR  = FQ_CFDES   AND "						
			cQuery += "E5_LOJA    = FQ_LOJADES AND " 
			If SE5->E5_RECPAG=="R" .and. !(FwIsInCallStack("FA330Desc")) 						 
				cQuery += "E5_SEQ 	 = FQ_SEQORI  AND "			
			Else
				cQuery += "E5_SEQ 	 = FQ_SEQDES  AND "						
			Endif
			cQuery += "SE5.D_E_L_E_T_ = ' '    AND "
			
			cQuery += "FQ_FILIAL  = '"+xFilial("SFQ")+"' AND "
			cQuery += "FQ_ENTORI  = '"+ cAlias+   "' AND "			
			cQuery += "FQ_PREFORI = '"+ cPrefixo+ "' AND "
			cQuery += "FQ_NUMORI  = '"+ cNumero+  "' AND "
			cQuery += "FQ_PARCORI = '"+ cParcela+ "' AND "
			cQuery += "FQ_TIPOORI = '"+ cTipo+ "'    AND "	
			cQuery += "FQ_CFORI   = '"+ cCliFor+ "'  AND "						
			cQuery += "FQ_LOJAORI = '"+ cLoja+ "'    AND "						
			cQuery += "FQ_SEQORI  = '"+ cSeq + "' AND "
			cQuery += "SFQ.D_E_L_E_T_ = ' ' "
			
			cQuery := ChangeQuery(cQuery)
	    	
	 		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSFQ,.T.,.T.)
		

			While (cAliasSFQ)->(!Eof())
				lAddRec := .T.
			
				If lMultFil 
					If !Empty( cFilFwSE5 )     // !Empty(xFilial("SE5")) 
						If Empty((cAliasSFQ)->FQ_FILDES)
							lAddRec := (xFilial("SE5") == (cAliasSFQ)->E5_FILIAL)
						Else	
							lAddRec := ((cAliasSFQ)->E5_FILIAL == (cAliasSFQ)->FQ_FILDES)
						Endif                                 
					Else
						lAddRec := (xFilial("SE5") == (cAliasSFQ)->E5_FILIAL)
					Endif
				Endif
			
				If lAddRec			
					Aadd(aRecnos,(cAliasSFQ)->RECTIT)			
				Endif	
				
				(cAliasSFQ)->(dbSkip())

			EndDo
	
			If lQuery
				dbSelectArea(cAliasSFQ)
				dbCloseArea()
				dbSelectArea("SFQ")
			EndIf					
	
			
		#ELSE
			SFQ->(dbSetOrder(1))
			If SFQ->(MsSeek(xFilial("SFQ")+cAlias+cPrefixo+cNumero+cParcela+cTipo+cClifor+cLoja))
			    While SFQ->(!Eof()) .And. SFQ->FQ_FILIAL == xFilial("SFQ") .And.;
			    							SFQ->FQ_ENTORI == cAlias    .And. ;
			    							SFQ->FQ_PREFORI == cPrefixo .And.;
			    							SFQ->FQ_NUMORI  == cNumero  .And.;
			    							SFQ->FQ_PARCORI == cParcela .And. ;
			    							SFQ->FQ_TIPOORI == cTipo    .And. ;
			    							SFQ->FQ_CFORI   == cCliFor  .And.;
											SFQ->FQ_LOJAORI == cloja
		
					If lMultFil
					    If !Empty( cFilFwSE5 )     // !Empty(xFilial("SE5")) 
							If Empty(SFQ->FQ_FILDES)					
								cFilPesq := xFilial("SE5")
							Else 
								cFilPesq := SFQ->FQ_FILDES
							Endif	                       
						Else
							cFilPesq := xFilial("SE5")
						Endif		
									
					Else
						cFilPesq := xFilial(cAlias)					
					Endif		

					If SFQ->FQ_SEQORI == cSeq
						(cAlias)->(dbSetOrder(7))
						If (cAlias)->(MsSeek(cFilPesq+SFQ->FQ_PREFDES+SFQ->FQ_NUMDES+SFQ->FQ_PARCDES+SFQ->FQ_TIPODES+SFQ->FQ_CFDES+SFQ->FQ_LOJADES+SFQ->FQ_SEQDES))
							Aadd(aRecnos,(cAlias)->(Recno()))
						Endif	
					Endif			
					SFQ->(dbSkip())        	
				EndDo		
			Endif		
		#ENDIF	
	Endif	
Endif

RestArea(aAreaSE5)
RestArea(aArea)

Return(aRecnos)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FImpDelSFQ³ Autor ³ Eduardo Riera         ³ Data ³11.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Funcao que exclui os registro s de relacionamento de titulos ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do registro  do titulo principal                ³±±
±±³          ³       SE5                                                   ³±±
±±³Parametros³ExpC2: Prefixo                                               ³±±
±±³Parametros³ExpC3: Numero                                                ³±±
±±³Parametros³ExpC4: Parcela                                               ³±±
±±³Parametros³ExpC5: Tipo                                                  ³±±
±±³Parametros³ExpC6: Cliente                                               ³±±
±±³Parametros³ExpC7: Loja                                                  ³±±
±±³Parametros³ExpC8: Sequencia da Baixa                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo trazer os registros relacionau-³±±
±±³          ³dos ao titulo aglutinador                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Geral                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FImpDelSFQ(cAlias,cPrefixo,cNumero,cParcela,cTipo,cCliFor,cLoja,cSeq)
Local aArea 		:= GetArea()
Local aAreaSe1		:= SE1->(GetArea())		
Local aAreaSe5		:= SE5->(GetArea())		
Local aAreaSe2		:=	SE2->(GetArea())
Local lImpGer061	:=	.F. //Registros gerados na rotina FINA061 nao devem ser excluidos.
Local cAliasQry 	:= ""  
Local cQuery		:=	""   
Local aTitSe5		:=	{}                                                                   
Local nI				:= 0
Local cSequencia 	:=	""
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )

If AliasIndic("SFQ")
	SFQ->(dbSetOrder(1))
	If SFQ->(MsSeek(xFilial("SFQ")+cAlias+cPrefixo+cNumero+cParcela+cTipo+cClifor+cLoja))
    	While SFQ->(!Eof()) .And. SFQ->FQ_FILIAL == xFilial("SFQ") .And.;
    							SFQ->FQ_ENTORI == cAlias    .And. ;
    							SFQ->FQ_PREFORI == cPrefixo .And.;
    							SFQ->FQ_NUMORI  == cNumero  .And.;
    							SFQ->FQ_PARCORI == cParcela .And. ;
    							SFQ->FQ_TIPOORI == cTipo    .And. ;
    							SFQ->FQ_CFORI   == cCliFor  .And.;
								SFQ->FQ_LOJAORI == cLoja

			If IsInCallStack("FA070CAN") 		
				SE1->(DbSetOrder(1))
				If SE1->(MsSeek(xFilial("SE1")+SFQ->FQ_PREFDES+SFQ->FQ_NUMDES+SFQ->FQ_PARCDES+SFQ->FQ_TIPODES))                                  
					While SE1->(!EOF()) .And. SE1->E1_FILIAL+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO == ;
						(xFilial("SE1")+ SFQ->FQ_PREFDES + SFQ->FQ_NUMDES + SFQ->FQ_PARCDES + SFQ->FQ_TIPODES)
						If SE1->E1_TIPO $ "PIS/COF/CSL"  .And. SE1->E1_ORIGEM = "FINA061"																	
							lImpGer061	:=	.T.
	            	Endif            	
	            	SE1->(Dbskip())
					Enddo										
				Endif	

				If SE1->(MsSeek(xFilial("SE1")+SFQ->FQ_PREFDES+SFQ->FQ_NUMDES+SFQ->FQ_PARCDES+SFQ->FQ_TIPODES)) 					
					If  !Empty(SE1->E1_NUMBOR) .And. !lImpGer061 			   
						Reclock("SE1",.F.)
						SE1->E1_SABTPIS	:= 0
		            SE1->E1_SABTCOF	:= 0
		            SE1->E1_SABTCSL	:= 0
						MsUnlock()
					Endif					
					       
					#IFDEF TOP 		        					
					  	cAliasQry := GetNextAlias()							      
					  	
						cQuery := "SELECT E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, E5_HISTOR,  "
						cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
						cQuery += RetSqlName( "SE5" ) + " SE5 " 
						cQuery += "WHERE " 
						cQuery += "E5_FILIAL='"    + xFilial("SE5")  +  "' AND " 			
						cQuery += "E5_PREFIXO='"	+ SE1->E1_PREFIXO + "' AND " 			
						cQuery += "E5_NUMERO='"		+ SE1->E1_NUM + "' AND " 	
						cQuery += "E5_PARCELA='"	+ SE1->E1_PARCELA + "' AND " 			
						cQuery += "E5_TIPO='"		+ SE1->E1_TIPO + "' AND " 	
						cQuery += "E5_CLIFOR='"		+ SE1->E1_CLIENTE	+ "' AND " 	
						cQuery += "E5_LOJA='"		+ SE1->E1_LOJA		+ "' AND "						 		
						cQuery += "E5_HISTOR = '" +  'Bx. Bord. Ac.'  + "' AND  "			                     
						cQuery += "E5_PRETPIS = '2' AND E5_PRETCOF = '2' AND E5_PRETCSL = '2' AND "		
						cQuery += "D_E_L_E_T_=' '"                                             				
					
						cQuery 		:= ChangeQuery(cQuery)                 
						dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)				
									
						If !( cAliasQRY )->( Eof()) 
							While !( cAliasQRY )->( Eof()) 										
									SE5->( dbGoto(  ( cAliasQRY )->RECNOSE5 ) )										
								  	Reclock("SE5",.F.)
									dbDelete()
									MsUnlock()   										
					     			( cAliasQRY )->(Dbskip())       							
							Enddo                                           
						Endif			
						( cAliasQRY )->(DbCloseArea())						
					#ENDIF 														                                       
				
					#IFDEF TOP 		        					
					  	cAliasQry := GetNextAlias()							      					  	
						cQuery := "SELECT E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, E5_HISTOR,  "
						cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
						cQuery += RetSqlName( "SE5" ) + " SE5 " 
						cQuery += "WHERE " 
						cQuery += "E5_FILIAL='"    + xFilial("SE5")  +  "' AND " 			
						cQuery += "E5_PREFIXO='"	+ SE1->E1_PREFIXO + "' AND " 			
						cQuery += "E5_NUMERO='"		+ SE1->E1_NUM + "' AND " 	
						cQuery += "E5_PARCELA='"	+ SE1->E1_PARCELA + "' AND " 			
						cQuery += "E5_TIPO='"		+ SE1->E1_TIPO + "' AND " 	
						cQuery += "E5_CLIFOR='"		+ SE1->E1_CLIENTE	+ "' AND " 	
						cQuery += "E5_LOJA='"		+ SE1->E1_LOJA		+ "' AND "						 		
						cQuery += "E5_PRETPIS = '9' AND E5_PRETCOF = '9' AND E5_PRETCSL = '9' AND "		
						cQuery += "D_E_L_E_T_=' '"                                             				
					
						cQuery 		:= ChangeQuery(cQuery)                 
						dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)				
									
						If !( cAliasQRY )->( Eof()) 
							While !( cAliasQRY )->( Eof()) 										
									SE5->( dbGoto(  ( cAliasQRY )->RECNOSE5 ) )										
								  	
								  	Reclock("SE5",.F.) 								  	
			  						SE5->E5_PRETPIS 	:= "8"
									SE5->E5_PRETCOF 	:= "8"
									SE5->E5_PRETCSL 	:= "8"										
									MsUnlock()   										
					     			
					     			( cAliasQRY )->(Dbskip())       							
							Enddo                                           
						Endif			
						( cAliasQRY )->(DbCloseArea())						
					#ENDIF 										
				Endif					
			Endif						
			
			If SFQ->FQ_TPIMP == "INS" .And. lInssBx .And. Alltrim(SFQ->FQ_ENTORI) == "SE5"
				SE2->(DbSetOrder(1))
				If SE2->(DbSeek(SFQ->(FQ_FILDES+FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES)))
					RecLock("SE2",.F.)			
					SE2->E2_PRETINS := "1"
					MsUnlock()															
				EndIf 

				SE5->(DbSetOrder(7))
				If SE5->(DbSeek(xFilial("SE5")+SFQ->(FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES)))
					RecLock("SE5",.F.)
					SE5->E5_PRETINS := "1"
					MsUnlock()															
				EndIf
				RecLock("SFQ",.F.)
				SFQ->(dbDelete())
				MsUnlock()
			ElseIf !IsInCallStack("F241DelIN") 								
				If	SFQ->FQ_SEQORI == cSeq
					RecLock("SFQ",.F.)
					SFQ->(dbDelete())
					MsUnlock()
				Endif											
			EndIf
			SFQ->(dbSkip())        	
		EndDo		
	Endif	
Endif		

If IsInCallStack("FA070CAN") //Para titulos que foram baixados e possuam bordero.
	SFQ->(dbSetOrder(2))
	If SFQ->(MsSeek(xFilial("SFQ")+cAlias+cPrefixo+cNumero+cParcela+cTipo+cClifor+cLoja))
		If SE1->(MsSeek(xFilial("SE1")+SFQ->FQ_PREFDES+SFQ->FQ_NUMDES+SFQ->FQ_PARCDES+SFQ->FQ_TIPODES)) .And. !Empty(SE1->E1_NUMBOR)
			#IFDEF TOP 		        								
			  	cAliasQry := GetNextAlias()							      
					  	
				cQuery := "SELECT E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, E5_HISTOR,  "
				cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
				cQuery += RetSqlName( "SE5" ) + " SE5 " 
				cQuery += "WHERE " 
				cQuery += "E5_FILIAL='"    + xFilial("SE5")  +  "' AND " 			
				cQuery += "E5_PREFIXO='"	+ SE1->E1_PREFIXO + "' AND " 			
				cQuery += "E5_NUMERO='"		+ SE1->E1_NUM + "' AND " 	
				cQuery += "E5_PARCELA='"	+ SE1->E1_PARCELA + "' AND " 			
				cQuery += "E5_TIPO='"		+ SE1->E1_TIPO + "' AND " 	
				cQuery += "E5_CLIFOR='"		+ SE1->E1_CLIENTE	+ "' AND " 	
				cQuery += "E5_LOJA='"		+ SE1->E1_LOJA		+ "' AND "						 		
				cQuery += "E5_HISTOR = '" +  'FINA061-Ref. Baixa'  + "' AND  "			                     
				cQuery += "E5_PRETPIS = '2' AND E5_PRETCOF = '2' AND E5_PRETCSL = '2' AND " 
				cQuery += "E5_VALOR = 0  AND  "			                     				
						
				cQuery += "D_E_L_E_T_=' '"                                             				
					
				cQuery 		:= ChangeQuery(cQuery)                 
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)				
									
				If !( cAliasQRY )->( Eof()) 
					While !( cAliasQRY )->( Eof()) 										
							SE5->( dbGoto(  ( cAliasQRY )->RECNOSE5 ) )										
						  	
						  	Aadd(aTitSe5,{SE5->E5_BANCO,;
					  							SE5->E5_AGENCIA,;
				  								SE5->E5_CONTA,;  
										  		SE5->E5_DATA,;  
												SE5->E5_DTDISPO,;
												SE5->E5_MOEDA,;
												SE5->E5_TXMOEDA,;
												SE5->E5_VALOR,;
												SE5->E5_VRETPIS,;
												SE5->E5_VRETCOF,;
												SE5->E5_VRETCSL,;
												SE5->E5_NATUREZ,;
												SE5->E5_RECPAG,;
												SE5->E5_TIPO,;
												SE5->E5_LA,;
												SE5->E5_TIPODOC,;
												SE5->E5_HISTOR,;
												SE5->E5_TIPODOC,;
												SE5->E5_LOTE,;
												SE5->E5_BENEF,;
												SE5->E5_DTDIGIT,;
												SE5->E5_MOTBX,;
												SE5->E5_SERREC,;
												SE5->E5_ORDREC,;
												SE5->E5_FILORIG})
						  	
						  	Reclock("SE5",.F.)
							dbDelete()
							MsUnlock()   										
			     			( cAliasQRY )->(Dbskip())       							
					Enddo                                           
				Endif			
				( cAliasQRY )->(DbCloseArea())						
			#ENDIF 										
		
		Endif
		
		If SE1->(MsSeek(xFilial("SE1")+SFQ->FQ_PREFORI+SFQ->FQ_NUMORI+SFQ->FQ_PARCORI+SFQ->FQ_TIPOORI)) 	
			For nI:= 1 To Len(aTitSe5)
				cSequencia 	:= FaNxtSeqBx("SE1")  // Sequencia da baixa do adiantamento + 1							
				RecLock("SE5",.T.)
				SE5->E5_FILIAL	  	:= xFilial("SE5")
				SE5->E5_BANCO	  	:= aTitSe5[nI,1]
				SE5->E5_AGENCIA  	:= aTitSe5[nI,2]
				SE5->E5_CONTA	  	:= aTitSe5[nI,3]
				SE5->E5_DATA 	  	:= aTitSe5[nI,4]
				SE5->E5_DTDISPO 	:= aTitSe5[nI,5] 
				SE5->E5_MOEDA  	:= aTitSe5[nI,6]
				SE5->E5_TXMOEDA	:= aTitSe5[nI,7]											
				SE5->E5_VALOR 		:= aTitSe5[nI,8] 
				SE5->E5_VRETPIS 	:= aTitSe5[nI,9] 
				SE5->E5_VRETCOF 	:= aTitSe5[nI,10] 
				SE5->E5_VRETCSL 	:= aTitSe5[nI,11] 
				SE5->E5_NATUREZ	:= aTitSe5[nI,12] 
				SE5->E5_RECPAG		:= aTitSe5[nI,13] 
				SE5->E5_TIPO 		:= aTitSe5[nI,14] 
				SE5->E5_LA			:= aTitSe5[nI,15] 
				SE5->E5_TIPODOC	:= aTitSe5[nI,16] 
				SE5->E5_HISTOR		:= aTitSe5[nI,17] 
				SE5->E5_TIPODOC	:= aTitSe5[nI,18] 
				SE5->E5_LOTE		:= aTitSe5[nI,19] 
				SE5->E5_BENEF		:= aTitSe5[nI,20] 
				SE5->E5_DTDIGIT	:= aTitSe5[nI,21] 
				SE5->E5_MOTBX		:= aTitSe5[nI,22] 
				SE5->E5_SERREC		:= aTitSe5[nI,23] 
				SE5->E5_ORDREC		:= aTitSe5[nI,24] 
				SE5->E5_FILORIG	:= aTitSe5[nI,25] 
	
				SE5->E5_PRETPIS 	:= "8"
				SE5->E5_PRETCOF 	:= "8"
				SE5->E5_PRETCSL 	:= "8"										
				SE5->E5_PREFIXO 	:= SE1->E1_PREFIXO
				SE5->E5_NUMERO		:= SE1->E1_NUM
				SE5->E5_PARCELA	:= SE1->E1_PARCELA
				SE5->E5_CLIFOR		:= SE1->E1_CLIENTE
				SE5->E5_CLIENTE	:= SE1->E1_CLIENTE
				SE5->E5_LOJA		:= SE1->E1_LOJA
				SE5->E5_SEQ			:= cSequencia
				MsUnlock()   			  
			Next			                                            			
		Endif	   	                                                                     
		RecLock("SFQ",.F.)
		SFQ->(dbDelete())
		MsUnlock()										                                       						
	Endif	
Endif
RestArea(aArea)
SE1->(RestArea(aAreaSe1))
SE5->(RestArea(aAreaSe5))                   
SE2->(RestArea(aAreaSe2))

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FDelTxBx  ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 20/10/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Deleta titulos de imposto Pis Cofins Csll gerados na baixa. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FDelTxBx(cPrefixo,cNumero,cParcela,cTipo,cCliFor,cLoja,cSeq,cParcPis,cParcCof,cParcCsl)

Local aArea	:= SE2->(GetArea())
Local cForUniao := ""
Local cLojUniao := ""
Local cChaveImp := ""
Local cNatPis 	:= GetMv("MV_PISNAT",.F.,"PIS")
Local cNatCof	:= GetMv("MV_COFINS",.F.,"COF")
Local cNatCsl	:= GetMv("MV_CSLL",.F.,"CSL")
Local nRegSe2	:= SE2->(RECNO())
Local lF241Nat := ExistBlock("F241NAT")
Local nX              
Local cLojaUni:= Replicate("0",Len(SA2->A2_LOJA))

Local cNaturs := ""
Local cNatIrf	:= &(GetMv("MV_IRF"))
Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT

Local lTitPai := !Empty( SE2->( FieldPos( "E2_TITPAI" ) ) )
Local cTitPai := If(lTitPai,Pad(cPrefixo+cNumero+cParcela+cTipo+cCliFor+cLoja,TamSx3("E2_TITPAI")[1]),"") 
// ****************************
// Utilizado para integração *
// com SIGAPCO               *
// ****************************
Local aRecPCO := {}
Local lAtuSldNat := FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )                
Local lExistFJU := AliasIndic("FJU") .and. FindFunction("FinGrvEx")
Local nRecBkp := 0
Local nRegSA2 := SA2->(Recno())
If ( cPaisLoc == "BRA" )
	// Nao permitir a exclusao do titulo caso a baixa 
	// cancelada seja a do Tx (imposto).
	If !(cTipo $ MVTXA+"/"+MVTAXA)
		DbSelectArea("SA2")
		DbSetOrder(1)
		MsSeek(xFilial("SA2")+GetMv("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMv("MV_UNIAO")))+cLojaUni)
		cForUniao	:= SA2->A2_COD
		cLojUniao	:= SA2->A2_LOJA
		
		dbSelectArea("SE2")
		dbSetOrder(1)	
		
		//Abro o SE2 com outro alias pois pode estar filtrado pela 
		//Baixa por lote
		If Select("__SE2") == 0
		   ChkFile("SE2",.F.,"__SE2")
		Else
		   DbSelectArea("__SE2")
		EndIf
		dbSetOrder(6)
		dbGoto(nRegSE2)
		
		//Apago os titulos de impostos	
		cChaveImp	:= cForUniao+cLojUniao+cPrefixo+cNumero
		If lIRPFBaixa
			cNaturs := cNatPis+"/"+cNatCof+"/"+cNatCsl+"/"+cNatIrf+"/"
		Else
			cNaturs := cNatPis+"/"+cNatCof+"/"+cNatCsl+"/"
		Endif
		//Ponto de entrada onde serao retornados os codigos de natureza utilizados
		//alternativamente pára os titulos de Pis, Cofins e Csll
		If lF241Nat
			cNaturs += ExecBlock("F241NAT",.F.,.F.)
		Endif

		//Apaga registros de Pis, Cofins e Csll gerados por essa baixa
		If MsSeek(xFilial("SE2")+cChaveImp)
			While !__SE2->(Eof()) .And. __SE2->(E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM)== cChaveImp
				If __SE2->E2_TIPO $ MVTXA+"/"+MVTAXA
	              //Se nao existir E2_TITPAI, valida da forma antiga
					//Se E2_TITPAI vazio (titulos antigos), valida da forma antiga
					//Se E2_TITPAI preenchido, pre-valida com a chave do titulo principal
					If !lTitPai .OR. (lTitPai .AND. If(!Empty(__SE2->(E2_TITPAI)),__SE2->(E2_TITPAI) == cTitPai,.T.))
						If	Alltrim(__SE2->E2_NATUREZ) $ cNaturs .and. ;
							STR(__SE2->E2_SALDO,17,2) == STR(__SE2->E2_VALOR,17,2) .and. ;
							__SE2->E2_SEQBX == cSeq 
							// **********************************************
							// Grava recnos para a integração com SIGAPCO  *
							// **********************************************
							aAdd( aRecPCO , __SE2->(recno()) )
		
							If lExistFJU 
								nRecBkp := SE2->(RECNO())
								SE2->(DBGoto( __SE2->(RECNO()) ) ) 
								FinGrvEx("P")
								SE2->(DBGoto( nRecBkp ) )
							Endif		
							RecLock("__SE2")
							If lAtuSldNat
								AtuSldNat(__SE2->E2_NATUREZ, __SE2->E2_VENCREA, __SE2->E2_MOEDA, "2", "P", __SE2->E2_VALOR, __SE2->E2_VLCRUZ, "-",,FunName(),"__SE2",__SE2->(Recno()),0)
							Endif
							dbDelete()
							MsUnlock()
						ElseIf lTitPai .and. Alltrim(__SE2->E2_NATUREZ) $ cNaturs .and. ;
							STR(__SE2->E2_SALDO,17,2) <> STR(__SE2->E2_VALOR,17,2) .and. ;
							__SE2->E2_SEQBX == cSeq
		
							RecLock("__SE2")					    
						    __SE2->E2_TITPAI := ""	
							MsUnlock()					    
						Endif
					EndIf
				EndIf
				__SE2->(dbSkip())
			Enddo
		Endif			
		
		//Apaga registros de NCC gerados por essa baixa (Pis, Cofins, Csll)
		dbSetOrder(1)
		cChaveImp	:= cPrefixo+cNumero+cParcela+MV_CPNEG+cCliFor+cLoja
		If MsSeek(xFilial("SE2")+cChaveImp)
			While !Eof() .and. E2_FILIAL == xFilial("SE2") .and. ;
				cChaveImp == __SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
				If __SE2->E2_SEQBX == cSeq .and. STR(__SE2->E2_SALDO,17,2) == STR(__SE2->E2_VALOR,17,2)
					If lExistFJU 
						nRecBkp := SE2->(RECNO())
						SE2->(DBGoto( __SE2->(RECNO()) ) ) 
						FinGrvEx("P")
						SE2->(DBGoto( nRecBkp ) )
					Endif				
					RecLock("__SE2")
					dbDelete()
					MsUnlock()
				Endif
				dbSkip()
			Enddo
		Endif	

		// **********************************************
		// Grava recnos para a integração com SIGAPCO  *
		// **********************************************
		For nX := 1 to len(aRecPCO)
		
		DbSelectArea("SE2")
		DbGoto(aRecPCO[nX])
			If aRecPCO[nX]== SE2->(Recno())
				If ALLTRIM(SE2->E2_NATUREZ)==AllTrim(GetMv("MV_PISNAT"))

					PCODetLan("000002","10","FINA050",.T.)

				ElseIf ALLTRIM(SE2->E2_NATUREZ)==AllTrim(GetMv("MV_COFINS"))

					PCODetLan("000002","11","FINA050",.T.)

				ElseIf ALLTRIM(SE2->E2_NATUREZ)==AllTrim(GetMv("MV_CSLL"))

					PCODetLan("000002","12","FINA050",.T.)

				EndIf
			EndIf
		Next
	
		RestArea(aArea)
		dbGoto(nRegSE2)
		SA2->(dbGoto(nRegSA2))
	Endif
Endif
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FDelTxInss  ³ Autor ³ Andrea V. Santiago³ Data ³ 30/04/14  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Deleta titulos do imposto Inss gerados na baixa.            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FDelTxInss(cPrefixo,cNumero,cParcela,cTipo,cCliFor,cLoja,cSeq,lAltVr)

Local aArea		:= SE2->(GetArea())
Local cChaveImp	:= ""
Local cNatInss	:= GetMv("MVINSS",.F.,"INS")
Local nRegSe2		:= SE2->(RECNO())
Local nX      	:=	0       
Local lInssBx 	:=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )                
Local lAtuSldNat := FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")
Local cTpTit		:=	""
Local nMinINS1 	:= SuperGetMv("MV_MININSS",.F.,0) 
Local nLimInss 	:= GetMv("MV_LIMINSS",.F.,0)
Local nMinINS2 	:= SuperGetMv("MV_VLRETIN",.F.,0) 
Local lInsPub 		:=	SuperGetMv("MV_INSPUB",,.F.) .And. nMinINS1 == 0 .And.;
								nLimInss == 0 .And. nMinINS2 == 0 //Inss Baixa com empresa publica. Neste caso os valores do inss não tem valor minimo ou maximo de retencao.
Local lF080NATINS := ExistBlock("F080NATINS") 	
Local cNatuIns := ""							 

If lInssBx
	cTpTit	:=	MVINSS
Else
	If cTipo $ MVPAGANT
		cTpTit	:=	"INA"
	Else	
		cTpTit	:=	MVINSS		
	Endif
Endif
	
If ( cPaisLoc == "BRA" ) .And. lInssBx	
		
		dbSelectArea("SE2")
		dbSetOrder(1)		
		
		If Select("__SE2") == 0 //Abro o SE2 com outro alias pois pode estar filtrado pela	Baixa por lote
		   ChkFile("SE2",.F.,"__SE2")
		Else
		   DbSelectArea("__SE2")
		   dbSetOrder(1)
		EndIf
		
		cChaveImp	:= xFilial("SE2")+cPrefixo+cNumero//+cParcInss+IF(cTipo$MVPAGANT,"INA",MVINSS)			  
		
		If IsInCallStack("FINA340") .And. lInssBx .And. lInsPub
			__SE2->( dbSetOrder(1))				
		Endif
		
		If MsSeek(cChaveImp)				     
		
			While !Eof( ) .And. __SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM) == xFilial("SE2")+cPrefixo+cNumero
				
				If lF080NATINS .And. !__SE2->E2_TIPO $ MVNOTAFIS
					cNatuIns := ExecBlock("F080NATINS",.F.,.F.)  	
				EndIf
			

				If AllTrim(__SE2->E2_NATUREZ) = Iif(lF080NATINS .And. !__SE2->E2_TIPO $ MVNOTAFIS, AllTrim(cNatuIns), AllTrim(&(GetMv("MV_INSS"))))  .And. __SE2->E2_SALDO != 0 .And.;
						__SE2->E2_TIPO == cTpTit //(cTipo$MVPAGANT,"INA",MVINSS)											
					
					If IsInCallStack("FINA340") .And. lInssBx .And. lInsPub//Inss Baixa Empresa Publica					
						If Alltrim(__SE2->E2_ORIGEM) == "FINA340"
							PCODetLan("000002","07","FINA050",.T.) //Apaga o lancamento do INSS gerado no PCO
							If lAtuSldNat //Atualiza o saldo.
								AtuSldNat(__SE2->E2_NATUREZ, __SE2->E2_VENCREA, __SE2->E2_MOEDA, "2", "P", __SE2->E2_VALOR, __SE2->E2_VLCRUZ, "-",,FunName(),"__SE2",__SE2->(Recno()),0)					
							Endif	
							RecLock( "__SE2" ,.F.,.T.)
							__SE2->(DbDelete( ))
						Else
							__SE2->(dbSkip())
							Loop
						Endif							
					Else					
						If __SE2->E2_SEQBX == cSeq //Baixa que gerou o titulo referente ao imposto.							
							PCODetLan("000002","07","FINA050",.T.) //Apaga o lancamento do INSS gerado no PCO
							If lAtuSldNat //Atualiza o saldo.
								AtuSldNat(__SE2->E2_NATUREZ, __SE2->E2_VENCREA, __SE2->E2_MOEDA, "2", "P", __SE2->E2_VALOR, __SE2->E2_VLCRUZ, "-",,FunName(),"__SE2",__SE2->(Recno()),0)					
							Endif	
							RecLock( "__SE2" ,.F.,.T.)
							__SE2->(DbDelete( ))						
						Else//Baixa que não corresponde ao titulo do imposto gerado.
							lAltVr	:=	.F.
						Endif
					Endif	
				EndIf								
				__SE2->(dbSkip())
			Enddo
		Endif
		
		SE2->(RestArea(aArea))
		SE2->(DbGoto(nRegSE2))	
Endif
Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fa080MovBc³ Autor ³Nilton Pereira         ³ Data ³31/05/05  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para verificar o nao se o motivo de baixa gerou     ³±±
±±³          ³ movimento bancario                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Tratamento da lei 10925                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080MovBc(cMotInfo)

// Considera baixas que geram ou nao movimento bancario.
// 1 = Somente os motivos que geram movimento bancario
// 2 = Considera todos os motivos de baixa.
Local lMotBxMBco  := (SuperGetMv("MV_MB10925",.t.,"2") == "1")
Local lMovBco  := .F.     
Local cMotBx1	:= Iif(Type("cMotBx")=="U", "", cMotBx) //validação criada para rotina de Compens. Receber onde esta variavel nao existira

Default cMotInfo := ""

// Consiste se o motivo gera ou nao movimento bancario.
If lMotBxMBco              
	If Empty(cMotInfo) 
		//Se movimenta banco (motivo completo)
		If MovBcoBx(cMotBx1,.T.) 
			lMovBco := .T. 
		Endif
	Else
		//Se movimenta banco (motivo resumido)      
		If MovBcoBx(cMotInfo,.F.) 
			lMovBco := .T. 
		Endif
	Endif
Endif

Return lMovBco


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fa080ValCh³ Autor ³Paulo Augusto          ³ Data ³21/07/05  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para verificar a existencia de cheque sobre titulo  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
                       
Function Fa080ValCh(lValida)	
Local lRet:=.T.
DEFAULT lValida := .T.

If  lValida .And. (!(MovBcoBx(cMotBx,.T.)) .Or. !(ChqMotBx(cMotBx))) .And. SE2->E2_IMPCHEQ=="S"
	Help(" ",1,"CH_BAIXA",	OemToAnsi(STR0029),OemToAnsi(STR0148),1,0)
	lRet:=.F.
EndIf

Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³F080IssBx ³ Autor ³Mauricio Pequim Jr     ³ Data ³19/10/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calculo do ISS pela baixa                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F080IssBx( lJaSubtPCC ) 

Local aAreaSE2  := SE2->( GetArea() ) 
Local nValTit := 0
Local lSest := SE2->(FieldPos("E2_SEST"))	> 0  //Verifica campo de SEST
Local lAltValor := STR(nValPgto,17,2) != STR(nOldValPgto,17,2)
Local nValOutImp := 0
Local nSE2Reg := SE2->(RECNO())
Local nBaseImp   := 0
Local lRndIss := SuperGetMv("MV_RNDISS",.F.,.F.)
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) 
Local lValPgto := SuperGetMv("MV_BP10925",.T.,"1") == "2"
//Considero juros multa ou desconto na base do imposto.
// 1 = Considera valores juros multa ou desconto                    
// 2 = Nao considera valores juros multa ou desconto
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")

Local lIRPFBaixa := IIf(!Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
		              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
								!Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
								!Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
								!SE2->E2_TIPO $ MVPAGANT

Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. ;
				(!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
		 		 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )
				 
Local lAltJuros	:= IIF( IsInCallStack('FA080TIT') .Or. IsInCallStack('FA080TITW') ,;
												 STR(nJuros,17,2)   != STR(nOldJuros  ,17,2) .Or.;
												 STR(nMulta,17,2)   != STR(nOldMulta  ,17,2) .Or.;
												 STR(nDescont,17,2) != STR(nOldDescont,17,2), .F.)
												 				 
Local lInssBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // Controla INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )                
Local lVlrAcImp	:= FindFunction("VlrAcImp")
Local lMVImpAcr	:= SuperGetMV("MV_IMPACR",,"2") == "1" 
Local cMvImpDcr	:= SuperGetMV("MV_IMPDCR",,"2")

//Base de impostos diferenciada                                                                                 
//Local lBaseImp	 := If(FindFunction('F050BSIMP'),F050BSIMP(2),.F.)	//Verifica a existência dos campos

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
	lCalcIssBx := .F.
EndIf

Default lJaSubtPCC := .F.

If Type("cTpDesc") == "U"
	cTpDesc:="I"
Endif

If lCalcIssBx .AND. SE2->E2_TRETISS == "2"

	SE2->(dbGoto(nSE2Reg))
	SED->(dbSetOrder(1))
	SED->(MsSeek(xFilial("SED")+SE2->E2_NATUREZ))
	SA2->(dbSetOrder(1))
	SA2->(MsSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
	
	//Se considera valores de multa juros desconto ou se a validação partiu do campo de valor
	If !lJurMulDes 
		nBaseImp := nValPgto + Iif(lVlrAcImp .And. lMVImpAcr, VlrAcImp(nJuros+nMulta+nAcresc,), 0) - Iif(lVlrAcImp .And. (cMvImpDcr == '1' .Or. (cMvImpDcr == '3' .And. cTpDesc == 'I')), VlrAcImp(,nDescont+nDecresc),0) + nTotAbat
	Else	
		nBaseImp := nValPgto-nDescont-nTotAbat+nJuros+nMulta+nAcresc-nDecresc
	Endif
		
	nValOutImp := SE2->E2_IRRF
		
	If !lInssBx
		nValOutImp += SE2->E2_INSS
	Endif
		
	If lSest
		nValOutImp += SE2->E2_SEST
	Endif
	
	If !lPccBaixa 
		nValOutImp += SE2->(E2_PIS+E2_COFINS+E2_CSLL)		
	Endif
	
	If lIrpfBaixa
		nValOutImp -= SE2->E2_IRRF
	Endif	

	nValTit := SE2->E2_VALOR + nValOutImp
				
	If !lAltValor 
		nBaseImp += nValOutImp
	Endif
	             
	If nValPgto-nPis-nCoFins-nCsll-nIrrf- Iif(nIss > 0, nIss, SE2->(E2_ISS - E2_VRETISS)) <> SE2->E2_SALDO .and. SE2->E2_ISS > 0 .AND. (nIss == 0 .Or. lJurMulDes .or. lAltValor) .and. SE2->E2_ISS <> FVRetISSBx()
		If nOldValPgto == nValPgto .And. !lValPgto
			nBaseImp += FVRetISSBx()	
		EndIf	

		If lRndIss 
		   nIss := Round(( nBaseImp * SE2->E2_ISS ) / nValTit ,2)
	   Else	
		   nIss := NoRound(( nBaseImp * SE2->E2_ISS ) / nValTit ,2)
	   Endif	
		
		/*
		 * Se o valor do ISS não for maior que o valor que dispensa a retenção, o imposto não recolhido
		 */
		If nIss <= GETMV("MV_VRETISS",.T.,25.00)
			nIss := 0
		EndIf
	Else
		nIss := SE2->E2_ISS - FVRetISSBx()
	Endif

Endif	

SE2->( RestArea( aAreaSE2 ) ) 

If !lAltValor .And. !lAltJuros 
	If !lIRPFBaixa 
		nValPgto -= nPis+nCofins+nCsll+nIrrf+nIss
		nOldValPgto := nValPgto	
		lJaSubtPCC := .T.	
	EndIf
Endif

Return .T.


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F080VldRec³ Autor ³ Paulo Augusto         ³ Data ³ 04/04/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se o valor pago eh menor que o valor da soma       ³±±
±±³          ³de Juros, Multa,acrescimo  e Desconto                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³F080VldRec(oValRec)					                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080 								  					  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F080VldRec()

Local lRet   := .T.
Local cBxPag:= GetNewPar("MV_VLBXPAG","3")

If cBxPag == "1"
	lRet := .T.
Else

	If nValPgto < (nMulta+nJuros+nAcresc) - nDescont
		If cBxPag == "2"
			If MsgYesNo(OemToAnsi(STR0156 )+CHR(10)+CHR(13)+OemToAnsi(STR0157 ) )    // "Atencao ! O valor pago e menor que a soma dos valores de juros, multa, acrescimo e desconto."  ## "Deseja confirmar a baixa?" 
				lRet := .T.
			Else
				lRet := .F.
			EndIf
		ElseIf cBxPag == "3"
			MsgAlert(OemToAnsi(STR0156 )+CHR(10)+CHR(13)+OemToAnsi(STR0158 ))  // "Atencao ! O valor pago e menor que a soma dos valores de juros, multa, acrescimo e desconto." ## "Favor modificar os valores."
			lRet := .F.	
		EndIf
	Else
		lRet := .T.
	EndIf
Endif	

Return lRet





/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F080OutImp³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 30/05/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Retorna valor de outros impostos para titulo gerado por 	  ³±±
±±³          ³de Juros, Multa,acrescimo  e Desconto                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³F080OutImp(nValTFt)							              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080 												  	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F080OutImp(nValTFt)

Local aArea			:= GetArea()
Local lSest			:= SE2->(FieldPos("E2_SEST"))	> 0  //Verifica campo de SEST
Local	nTotTit		:= 0
Local	nTotImp		:= 0
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) 
#IFDEF TOP
	Local cQuery		:= "" 	

	//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
	//nao deve processar ISS E IR
	If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
		lCalcIssBx := .F.
	EndIf

	dbSelectArea("SE2")
	dbSetOrder(9)  //Fornece+Loja+PrefFat+NumFat

	cQuery := "SELECT Sum(E2_VALOR) TOTTIT, Sum(E2_IRRF) TOTIRF , Sum(E2_INSS) TOTINS "

	If lSest
		cQuery += ", Sum(E2_SEST) TOTSES "
	Endif			

	If !lCalcIssBx
		cQuery += ", Sum(E2_ISS) TOTISS "
	Endif			

	cQuery += "FROM " + RetSQLname("SE2") + " SE2 WHERE " 
	cQuery += "E2_FILIAL = '"	+ xFilial("SE2")	+ "' And "
	cQuery += "E2_FORNECE = '"	+ SE2->E2_FORNECE	+ "' And "
	cQuery += "E2_LOJA = '" 	+ SE2->E2_LOJA   	+ "' And "
	cQuery += "E2_FATPREF = '"	+ SE2->E2_PREFIXO	+ "' And "
	cQuery += "E2_FATURA = '"   + SE2->E2_NUM 	+ "' And "
	cQuery += "D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "TRBOUT", .F., .T.)

	TCSetField('TRBOUT', "TOTTIT", "N",17,2)
	TCSetField('TRBOUT', "TOTIRF", "N",17,2)
	TCSetField('TRBOUT', "TOTINS", "N",17,2)
	If lSest
		TCSetField('TRBOUT', "TOTSES", "N",17,2)
	Endif	
	If !lCalcIssBx
		TCSetField('TRBOUT', "TOTISS", "N",17,2)
	Endif
	
	dbSelectArea("TRBOUT")
	nTotTit	:= TRBOUT->TOTTIT
	nTotImp	:= TRBOUT->(TOTIRF+TOTINS)

	If lSest
		nTotImp	+= TRBOUT->(TOTSES)
	Endif	

	If !lCalcIssBx
		nTotImp	+= TRBOUT->(TOTISS)
	Endif

	dbCloseArea()

#ELSE
	//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
	//nao deve processar ISS E IR
	If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
		lCalcIssBx := .F.
	EndIf

	// Seleciono SE2 com outro alias para efetuar a varredura dos impostos
	If Select("__SE2") == 0
		ChkFile("SE2",.F.,"__SE2")
	Else
		DbSelectArea("__SE2")
	EndIf
	dbSetOrder(9)  //Fornece+Loja+PrefFat+NumFat
	cTitulo := xFilial("SE2")+SE2->(E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM)
	If __SE2->(MsSeek(cTitulo))
		While !(__SE2->(EOF())) .and.	xFilial("SE2")+__SE2->(E2_FORNECE+E2_LOJA+E2_FATPREF+E2_FATURA) == ;
													cTitulo
													
			nTotTit	:= __SE2->E2_VLCRUZ
			
			nTotImp	:= __SE2->E2_IRRF
		
			If !lInssBx
				nTotImp	+= __SE2->E2_INSS
			Endif
		
			If lSest
				nTotImp	+= __SE2->E2_SEST
			Endif	
		
			If !lCalcIssBx
				nTotImp	+= __SE2->E2_ISS
			Endif
			
			__SE2->(DBSKIP())
		Enddo	
	Endif
#ENDIF

RestArea(aArea)

Return nTotImp


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³21/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/     
Static Function MenuDef()
Local lR5     := GetRpoRelease("R5")                     			  //Indica se o release e 11.5
Local aRotina := { { OemToAnsi(STR0001), "AxPesqui" , 0 , 1,,.F.},; //"Pesquisar"
	{ OemToAnsi(STR0002), "AxVisual" , 0 , 2},; //"Visualizar"
	{ OemToAnsi(STR0003), "FA080Tit" , 0 , 4},; //"Baixar"
	{ OemToAnsi(STR0004), "FA080Lot" , 0 , 4},; //"Lote"
	{ OemToAnsi(STR0005), "FA080Can" , 0 , 5},; //"Canc Baixa"
	{ OemToAnsi(STR0115), "FA080Can" , 0 , 5,53},;	//"Excluir Baixa"
	{ OemToAnsi(STR0127),"FA040Legenda", 0 , 6, ,.F.} } //"Le&genda"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica no parametro se gera um Contas a Pagar ³
//³ quando existir taxa na admistradora do cartao,  ³
//³ para habilitar menu de baixa por adminstradora  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If(lR5 .AND. SuperGetMV("MV_LJGERTX",,.F.) .AND. FindFunction("LJXBxAdmFi"))
	aAdd( aRotina,	{ STR0176, "LJXBxAdmFi" , 0 , 4 }) //"Baixa Adm/Fin."
Endif
	
Return(aRotina)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA080T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 26.03.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA080T(aParam)   	
	cRotinaExec := "FINA080"
	ReCreateBrow("SE2",FinWindow)      		
	FinA080(,aParam[1],.T.)
	ReCreateBrow("SE2",FinWindow)      	
	dbSelectArea("SE2")
	
	INCLUI := .F.
	ALTERA := .F.

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA080T   ³ Autor ³ Adrianne Furtado     ³ Data ³ 11.06.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gravação da variavel para validacao se houve alteracao no  ³±±
±±³          ³ motivo de baixa.                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function f080DMotBx(cMotBx)
Public cOldMotBx := cMotBx
Return .T.

/*----------------------------------------------------
Gera bordero no momento da Baixa 
----------------------------------------------------*/

Function FaActBord(cNumBor,cPort240,cAgen240,cConta240,dDataBord,cModPgto,cTipoPag)

LOCAL aMoedas := { "01-"+GetMv("MV_MOEDA1"),"02-"+GetMv("MV_MOEDA2"),"03-"+GetMv("MV_MOEDA3"),"04-"+GetMv("MV_MOEDA4"),"05-"+GetMv("MV_MOEDA5") }
Local cTit,cForne,cLoja,cContrato,nOpc
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

Local lContrRet := !Empty( SE2->( FieldPos( "E2_VRETPIS" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_VRETCOF" ) ) ) .And. ; 
				 !Empty( SE2->( FieldPos( "E2_VRETCSL" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETPIS" ) ) ) .And. ;
				 !Empty( SE2->( FieldPos( "E2_PRETCOF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETCSL" ) ) )

Local lSE2DtBor := !Empty( SE2->( FieldPos( "E2_DTBORDE" ) ) )
Local lRet := .T.
LOCAL cMoeda240,cVar
Local nOpcK := 0
Local oDlg
Local lDadosDig := .F.

If lRet .And. SE2->E2_TIPO $ MVPROVIS
	Help(" ",1,"FA590PROV")
	lRet := .F.
Endif
	
If lRet .And. SE2->E2_TIPO $ MVENVBCOR
	Help(" ",1,"F590ENVBCO")
	lRet := .F.
Endif	

If lRet .and. !Empty(SE2->E2_NUMBOR)
	lRet := .F.
Endif	


If lRet
	While .T.
		cTit  := SE2->E2_PREFIXO+"-"+SE2->E2_NUM+"-"+SE2->E2_PARCELA+"-"+SE2->E2_TIPO
		cForne:= SE2->E2_FORNECE
		cLoja := SE2->E2_LOJA
		cContrato:=  "" 
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tela e Gets do bordero - Windows                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cMoeda240 := aMoedas[SE2->E2_MOEDA]
		cVar := aMoedas[SE2->E2_MOEDA]
		nOpcK := 0
		DEFINE MSDIALOG oDlg FROM  15,6 TO 249,404 TITLE "Bordero" PIXEL  //"Border“s de Pagamentos"
				@ 00, 01 TO 29, 197 OF oDlg  PIXEL
				@ 33, 01 TO 63, 197 OF oDlg  PIXEL
				@ 67, 01 TO 97, 197 OF oDlg  PIXEL
			
				@ 06, 009 SAY "Bordero" 	SIZE 23, 7 OF oDlg PIXEL  //"N£mero"
				@ 40, 009 SAY "Banco"		SIZE 23, 7 OF oDlg PIXEL  //"Banco"    
				@ 40, 045 SAY "Agencia"		SIZE 32, 7 OF oDlg PIXEL  //"Agˆncia"
				@ 40, 085 SAY "Conta"		SIZE 32, 7 OF oDlg PIXEL  //"Conta"
				@ 73, 009 SAY "Moeda"		SIZE 23, 7 OF oDlg PIXEL  //"Moeda"
				@ 73, 063 SAY "Modelo"		SIZE 22, 7 OF oDlg PIXEL  //"Modelo"
				@ 73, 097 SAY "Tipo Pagto"	SIZE 32, 7 OF oDlg PIXEL  //"Tipo Pagto"
				@ 73, 135 SAY "Data do Bordero"	SIZE 50, 7 OF oDlg PIXEL  //Data do Bordero
			
				//Linha 1
				@ 15, 009 MSGET cNumBor         		SIZE 32, 10 OF oDlg PIXEL ;
																Picture "@!" Valid !Empty(cNumBor) .and. ; 
																FaDadosBrd(cNumBor,@cPort240,@cAgen240,@cConta240,@dDataBord,@cModPgto,@cTipoPag,@lDadosDig)

				@ 49, 009 MSGET cPort240        		SIZE 30, 10 OF oDlg PIXEL Picture "@!"  ;
																F3 "SA6";
																Valid CarregaSA6(@cPort240,,,.t.) HASBUTTON
				@ 49, 045 MSGET cAgen240        		SIZE 26, 10 OF oDlg PIXEL Picture "@!"  ;
																Valid CarregaSA6(@cPort240,@cAgen240,,.T.)
				@ 49, 085 MSGET cConta240       		SIZE 62, 10 OF oDlg PIXEL Picture "@!"  ;
																Valid CarregaSA6(@cPort240,@cAgen240,@cConta240,.T.,,.T.)
			
				//Linha 3
				@ 82, 009 MSCOMBOBOX oCbx VAR cMoeda240 ITEMS aMoedas SIZE 46, 50 OF oDlg PIXEL
				@ 82, 063 MSGET cModPgto        		SIZE 25, 10 OF oDlg PIXEL Picture "@!"  Valid ExistCpo("SX5", + "58" + cModPgto) F3 "58" HASBUTTON
				@ 82, 097 MSGET cTipoPag        		SIZE 25, 10 OF oDlg PIXEL Picture "@!"  Valid ExistCpo("SX5", + "59" + cTipoPag) F3 "59" HASBUTTON
				@ 82, 135 MSGET dDataBord        	SIZE 60, 10 OF oDlg PIXEL HASBUTTON VALID dDataBord >= dDataBase
			
				DEFINE SBUTTON FROM 105, 135 TYPE 1 ENABLE OF oDlg ACTION (cVar:=cMoeda240,nOpcK:=1,;
								Iif(F240TudoOk(oDlg),oDlg:End(),nOpcK:=0))
				DEFINE SBUTTON FROM 105, 170 TYPE 2 ENABLE OF oDlg ACTION (nOpcK := 2, oDlg:End())
			
		ACTIVATE MSDIALOG oDlg CENTERED
					
		If nOpcK == 0
			Loop
		Endif
		Exit
	Enddo		

	If nOpcK != 1
		lRet := .F.
	Endif

Endif

Return lRet


/*----------------------------------------------------
Gera bordero no momento da baixa e atualiza os 
registros relacionados
----------------------------------------------------*/
Function FaGrvActBd(cNumBor,cPort240,cAgen240,cConta240,dDataBord,cModPgto,cTipoPag)

Local lSE2DtBor := !Empty( SE2->( FieldPos( "E2_DTBORDE" ) ) )

//Grava registro no bordero SEA
dbSelectArea("SEA")
RecLock("SEA",.T. )
Replace EA_FILIAL  With xFilial("SEA"),;
		EA_PORTADO With cPort240,;
		EA_AGEDEP  With cAgen240,;
		EA_NUMCON  With cConta240,;
		EA_NUMBOR  With cNumBor,;
		EA_PREFIXO With SE2->E2_PREFIXO,;
		EA_NUM     With SE2->E2_NUM,;
		EA_PARCELA With SE2->E2_PARCELA,;
		EA_TIPO    With SE2->E2_TIPO,;
		EA_FORNECE With SE2->E2_FORNECE,;
		EA_LOJA	   With SE2->E2_LOJA,;
		EA_CART    With "P",;
		EA_MODELO  With cModPgto,;
		EA_TIPOPAG With cTipoPag ,;
		EA_FILORIG With SE2->E2_FILIAL
		If lSE2DtBor			
			Replace EA_DATABOR With dDataBord
		Endif
		MsUnlock()
		FKCOMMIT()

//Grava dados no SE2 ref bordero	
dbSelectArea("SE2")
RecLock("SE2")
Replace E2_NUMBOR  With cNumBor
Replace E2_PORTADO With cPort240 
If lSE2DtBor			
	Replace E2_DTBORDE  With dDataBord
Endif
MsUnlock( )
FKCOMMIT()

//Gravadados no SE5 - este ja esta posicionado na volta da FA080GRV
dbSelectArea("SE5")
RecLock("SE5")
Replace E5_DOCUMEN  With cNumBor
MsUnlock( )
FKCOMMIT()

Return


/*----------------------------------------------------
Verifica existencia de bordero e carrega os dados 
basicos do mesmo
----------------------------------------------------*/

Function FaDadosBrd(cNumBor,cPort240,cAgen240,cConta240,dDataBord,cModPgto,cTipoPag,lDadosDig)

Local aAreaSEA := SEA->(GetArea())
Local lSE2DtBor := !Empty( SE2->( FieldPos( "E2_DTBORDE" ) ) )

SEA->(dbSetOrder(2))
If SEA->(MsSeek(xFilial("SEA")+cNumBor+"P"))
	cPort240		:= SEA->EA_PORTADO
	cAgen240		:= SEA->EA_AGEDEP
	cConta240	:= SEA->EA_NUMCON
	cModPgto		:= SEA->EA_MODELO
	cTipoPag		:= SEA->EA_TIPOPAG
	If lSE2DtBor				
		dDataBord := SEA->EA_DATABOR
   Endif
Endif
lDadosDig := .T.

RestArea(aAreaSEA)

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Fa080bAval ³ Autor ³ Marcelo Akama        ³ Data ³ 27/02/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Bloco de marcacao       			          				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa080bAval()		  										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa080bAval(cAliasSE2,cMarca,oValor,oQtda)
Local lRet	:= .T.
//Variaveis utilizadas para validacao da XX4

//as mensagens de baixa somente devem ser enviadas como sincronas
lRet:=FA080Integ(.F.)
               
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se possui movimento de baixa valido						³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SE2->E2_TIPO $ "INA"
	If F090PagINA(SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA))
		HELP(" ",1,"SE2BLOQ")
		lRet := .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha sido gerado pelo SigaEic e do tipo INV e do BRASIL nao podera se baixado se nao for pela rotina automatica ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. Type("lIntegracao")<>"U" .and. lIntegracao .and. cPaisloc = "BRA" .and.  SE2->E2_TIPO = "INV"  .and. UPPER(SE2->E2_ORIGEM) = "SIGAEIC"
		HELP(" ",1,"FAORIEIC")
		Return .F.
	Endif
	                                                                                                                     
	//DFS - 16/03/11 - Deve-se verificar se os títulos foram gerados por módulos Trade-Easy, antes de apresentar a mensagem. 
	// NCF - 25/03/13 - Acrescentado o módulo SIGAESS (Siscoserv)
	If ( Type('lF080Auto') =='U' .or. ! lF080Auto) .and. cPaisloc = "BRA" .AND. UPPER(Alltrim(SE2->E2_ORIGEM)) $ "SIGAEEC/SIGAEFF/SIGAEDC/SIGAECO/SIGAESS" .AND. !(cModulo $ "EEC/EFF/EDC/ECO/ESS")
		HELP(" ",1,"FAORIEEC")
		Return .F.
	Endif
	
	If mv_par04 == 2	// Nao permite baixa se o titulo estiver num bordero.
		If !Empty( SE2->E2_NUMBOR )
			Help(" " , 1 , "FA080NAOBAIXA")
			Return .F. /*Function fA080Tit*/
		Endif
	Endif
	
	// Verifica se o registro nao esta sendo utilizado em outro terminal
	If (cAliasSE2)->(MsRLock())
		FA080Inverte(cMarca,oValor,oQtda,.F.) // Marca o registro e trava
		lRet := .T.
	Else
		IW_MsgBox(STR0166,STR0143,"STOP")  //"Este titulo está sendo utilizado em outro terminal, não pode ser utilizado na fatura"###"Atenção"
		lRet := .F.
	Endif
Endif
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³AjustaSx   ³ Autor ³ Adrianne Furtado     ³ Data ³ 30/03/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajusta SX              			          				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ AjustaSx()		  										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AjustaSx()
LOCAL aHelpPor 	:= {}
LOCAL aHelpEng 	:= {}
LOCAL aHelpSpa 	:= {}

Aadd(aHelpSpa,"Se agrego este título a una factura. "   )
Aadd(aHelpPor,"Este título foi agregado a uma fatura. " )
Aadd(aHelpEng,"This bill was added to an invoice. " )

PutHelp("PTITFATURAD",aHelpPor,aHelpEng,aHelpSpa,.T.)

aHelpPor 	:= {}
aHelpEng 	:= {}
aHelpSpa 	:= {}

Aadd(aHelpPor,"Para retornar o saldo ao titulo somente" )
Aadd(aHelpPor,"cancelando a fatura da qual o mesmo fez" )  
Aadd(aHelpPor,"parte."									)  

Aadd(aHelpSpa,"Para devolver el saldo al titulo, debe"  )
Aadd(aHelpSpa,"anularse la factura de la cual forma  "  )
Aadd(aHelpSpa,"parte."   								)

Aadd(aHelpEng,"To return the balance to the bill only" )
Aadd(aHelpEng,"by cancelling the invoice it belongs to." )

PutHelp("STITFATURAD",aHelpPor,aHelpEng,aHelpSpa,.T.)



aHelpPor 	:= {}
aHelpEng 	:= {}
aHelpSpa 	:= {}
Aadd(aHelpSpa,"No es posible borrar/cancelar la baja del "   )
Aadd(aHelpSpa,"título o dio lugar a una división.")
// Portugues
Aadd(aHelpPor,"Não é possivel a exclusão/cancelamento da baixa"    )
Aadd(aHelpPor,"do titulo que originou um desdobramento."  )
// Ingles
Aadd(aHelpEng,"You cannot delete/cancel the write-off of" )
Aadd(aHelpEng,"the bill that originated a breakdown."       )
PutHelp("PMVNRASDSD",aHelpPor,aHelpEng,aHelpSpa,.F.)


aHelpPor 	:= {}
aHelpEng 	:= {}
aHelpSpa 	:= {}
Aadd(aHelpSpa,"Favor utilizar la rutina de "   )
Aadd(aHelpSpa,"Cancelamiento de Desdobramiento.")
// Portugues
Aadd(aHelpPor,"Favor utilizar a rotina de "    )
Aadd(aHelpPor,"Cancelamento de Desdobramento." )
// Ingles
Aadd(aHelpEng,"Please use the Breakdown  " )
Aadd(aHelpEng,"Cancellation routine."       )
PutHelp("SMVNRASDSD",aHelpPor,aHelpEng,aHelpSpa,.F.)

//Help's para cancelamento de baixa quando houver retenção de impostos na baixa
aHelpPor	:=	{"Não é possível estornar este movimento"," pois este título possui impostos"," calculados na baixa."}
aHelpEsp	:=	{"No sera posible revertir este movimiento"," pues este titulo posee impuestos"," calculada en la baja."}
aHelpEng	:=	{"You cannot return this transaction as"," this bills has taxes calculated"," in the write-off."}
PutHelp("PFINIMPBX",aHelpPor,aHelpEng,aHelpEsp,.F.)

aHelpPor	:=	{"Por favor, para correto procedimento,"," realize o estorno de todas as baixas ","posteriores a esta e refaça as baixas."}
aHelpEsp 	:= {"Por favor, para el correcto procedimiento,"," realice la reversion de todas las bajas"," posteriores esta y rehaga las bajas."}
aHelpEng	:=	{"For proper procedure, reverse all ","write-offs late than this one", " and write-off again."}
PutHelp("SFINIMPBX",aHelpPor,aHelpEng,aHelpEsp,.F.)

Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FVRetISSBx ³ Autor ³ Adrianne Furtado     ³ Data ³ 13/04/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica o total de ISS já retido em baixas parciais       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FVRetISSBx()		  										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FVRetISSBx()
Local aArea 	:= SE5->(GetArea())
Local nVRetISS	:= 0
Local lAchouEst	:= .F.

SE5->(DbSetOrder(7))
If SE5->(DBSeek(xFilial("SE5")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)))
	While SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) ==;
		SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
		If SE5->E5_SITUACA <> 'C' .And. !(SE5->E5_TIPODOC $ 'VL|ES') .and. SE5->E5_ARQCNAB<>"FINA090"
		 	nVRetISS += SE5->E5_VRETISS
		ElseIf SE5->E5_TIPODOC == 'VL' 
			nRegBxVl := SE5->(Recno())
			cChaveVl := SE5->(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)  
		
			//Verifica se houve movimento de estorno
			If SE5->(dbSeek(cChaveVl))
			    While SE5->(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ) == cChaveVl
					If SE5->(E5_TIPODOC) == "ES" 
                    	lAchouEst := .T.
                    	Exit
					Endif                              
					SE5->(DbSkip())
				EndDo
			Endif
			
			SE5->(dbGoTo(nRegBxVl))
			nVRetISS += Iif(lAchouEst, 0, SE5->E5_VRETISS)
			lAchouEst := .F.
		EndIf
		SE5->(DbSkip())
	EndDo
EndIf

RestArea(aArea)
Return nVRetISS

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ f080AltBco   ³ Autor ³ Ana Paula Silva     	³ Data ³ 19/08/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica moeda        para o banco escolhido/alterado          ³±±
±±³          ³ Somente paises localizados                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function f080AltBco(nTxMoeda,oJuros, oMulta, oDescont, oCm)

Local nCentMd1	  := MsDecimais(1)
Local nValPgtoOld := nValPgto
Local nTxCorre	  := 0
Local nTxMdaOr    := 0
Local cNccIr	  := SuperGetMv("MV_NCCIR",.F.,"2")
Local lMoedBco	  := SuperGetMv("MV_MOEDBCO",,.F.)
Local lIRPFBaixa  := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT

Default nTxMoeda := 0
If (cBanco+cAgencia+cConta = SA6->A6_COD+SA6->A6_AGENCIA+SA6->A6_NUMCON)
	nMoedaBco := Max( SA6->A6_MOEDA, 1)                          

	If cPaisLoc <> "BRA"
		nTxMoeda:=Iif(nMoedaBco>0,aTxMoedas[nMoedaBco][2],1)
		nTxMdaOr:=aTxMoedas[SE2->E2_MOEDA][2]
	Endif
	nValEstrOld:=nValEstrang
	nValEstrang := NoRound(xMoeda(nValPgto,nMoedaBco,SE2->E2_MOEDA,dBaixa,nCentMd1+1,,nTxMoeda),nCentMd1+1)
	nValPgto	:= NoRound(xMoeda(nValEstrang,SE2->E2_MOEDA,nMoedaBco,dBaixa,nCentMd1+1,nTxMoeda),nCentMd1+1)

	nValEstrang	:= Round(nValEstrang,nCentMd1)
	nValPgto	:= Round(nValPgto,nCentMd1)
	
	//Problemas de arredondamento
	If ABS(nValEstrOld - nValEstrang) == ABS(0.01)
		nValEstrang := nValEstrOld
	Endif

	If ABS(nValPgtoOld - nValPgto) == ABS(0.01)
		nValPgto := nValPgtoOld
	Endif	
	
	nEstOriginal := nValEstrang-(xMoeda(nJuros+nMulta-nDescont+nOtrga+nImpSubst,nMoedaBco,SE2->E2_MOEDA,,,,nTxMoeda))

	oValPgto:Refresh() 

	If SE2->E2_MOEDA > 1
		oVlEstrang:Refresh() 
	Endif
	
	fa080Juros(nMoedaBco)
	// Calcula a correcao monetaria
	nTxCorre := If(Empty(SE2->E2_DTVARIA) .And. Empty(nTxMoeda),nTxMoeda/*SE2->E2_TXMOEDA*/,If(nTxMoeda > 0,nTxMoeda,RecMoeda(dBaixa,SE2->E2_MOEDA)))
	fa080Corr(nEstOriginal,nTxCorre)
	
	If IsInCallStack("FA080TIT")
	   	If nJuros==0 .And. ( SE2->E2_VALJUR==0 .Or. SE2->E2_PORCJUR==0 ) 
			nJuros:=nOldJuros
		EndIf
	EndIf
	nJuros	:= Round(NoRound(nJuros,5),2)
	If cPaisLoc == "BRA"	
		oJuros:Refresh()
		oMulta:Refresh()
		oDescont:Refresh()
		If SE2->E2_MOEDA > 1
			oCm:Refresh()
		Endif
	Endif
EndIf

If lIRPFBaixa .and. SE2->E2_VALOR < nIrrf .and. cNccIr == "1"
	nValPgto := 0.01
ElseIf lIRPFBaixa .and. SE2->E2_VALOR < nIrrf .and. cNccIr == "2"
	nValPgto := 0
EndIf

If lMoedBco
	Fa080Val(nValPgto,nTxMoeda)
EndIf

Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Fa080IRBx   ³ Autor ³ Adrianne Furtado    	³ Data ³ 01/12/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se o título possui TX de IR Gerado na Baixa e já      ³±±
±±³          ³ baixado.                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa080IrBx()
Local lRet := .F. //informa se o título principal possui TX de IR Gerado na Baixa e já baixado.
Local cPrefixo	:= SE2->E2_PREFIXO
Local cNum		:= SE2->E2_NUM     
Local cParcIR   := SE2->E2_PARCIR
Local aAreaSe2  := SE2->(GetArea())				 
Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, 
//nao deve processar ISS E IR
If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
	lIRPFBaixa := .F.
EndIf
					 
//Se tem IR na baixa.
If lIRPFBaixa
	SE2->(DbSetOrder(1))
	// Se encontrou o titulo filho (titulo de IR) e este sofreu baixa
	// Não permite a exclusao do titulo pai (titulo principal).
	If !Empty(cParcIR) .And. SE2->(Msseek(xFilial("SE2")+cPrefixo+cNum+cParcIR+"TX ")) .And.;
		(SE2->E2_SALDO != SE2->E2_VALOR)
		lRet := .T.
	Endif
EndIf

SE2->(RestArea(aAreaSe2))

Return lRet   

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ F080VldBco   ³ Autor ³ Ana Paula Silva    	³ Data ³ 18/01/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida a seleção do banco agencia e conta				      ³±±
±±³          ³ 			                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F080VldBco(cBco,cAg,cCnta,lVldCnta,lHelp,nFlagCampo)

Local aArea		:= GetArea()
Local lRet 		:= .T.           

DEFAULT lVldCnta   := .T.
DEFAULT lHelp      := .F.
DEFAULT nFlagCampo := 0

dbSelectArea("SA6")
SA6->(dbSetOrder(1))
If Empty(cBco) .OR. Empty(cAg) .OR. (lVldCnta .And. Empty(cCnta)) .OR. ;
	!SA6->(dbSeek(xFilial("SA6") + cBco + cAg + IIf(lVldCnta,cCnta,"")))
	If (!SA6->(Found()) .OR. SA6->A6_COD # cBco) .OR. Empty(cAg) .OR. (lVldCnta .And. Empty(cCnta))
		If SA6->(dbSeek(xFilial("SA6") + cBco +;
			IIf(nFlagCampo >= 2 .And. !Empty(cAg), cAg, "") +;
			IIf(nFlagCampo == 3 .And. !Empty(cCnta), cCnta, "")))
			cAg := SA6->A6_AGENCIA
			cCnta := SA6->A6_NUMCON
		Else
			If lHelp
				Help(" ",1,"FA100BCO")
				lValidou := .T.
			EndIf
			lRet := .F.                                         
		Endif
	Else
		If lHelp
			Help(" ",1,"FA100BCO")
			lValidou := .T.
		EndIf
		lRet := .F.                                         
	Endif
ElseIf !Empty(cBco) .AND. !Empty(cAg) .AND. (!lVldCnta .OR. Empty(cCnta))	//Conta
	If SA6->(Found()) .AND. SA6->(A6_FILIAL+A6_COD+A6_AGENCIA) == xFilial("SA6")+cBco+cAg
		If !Empty(SA6->A6_NUMCON)
			cCnta := SA6->A6_NUMCON
		Else
			If lHelp
				Help(" ",1,"FA100BCO")
				lValidou := .T.
			EndIf
			lRet := .F.		
		Endif
	Endif
EndIf

// Verifica se o banco selecionado pode ser usado para baixa do titulo
If lRet .AND. !Empty( cCnta ) .AND. FindFunction( "FXMultSld" ) .AND. FXMultSld()
	lRet := FXVldBxBco( cBco, cAg, cCnta, SE2->E2_NATUREZ, SE2->E2_MOEDA )
EndIf                  

RestArea(aArea)

Return (lRet)

Function F080AtuValid() //Faz parte da F070VLDBCO

lValidou := .F.

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Fa080Juri   ºAutor  ³Microsiga           º Data ³  12/01/10  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³   Verifica se tem integracao SIGAPFS e é titulo com        º±±
±±º          ³   natureza juridica sem rateio finalizado                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Fa080Juri()   
Local lRet := .T. //informa se o valor do título principal foi completamente rateado 
Local lIntSJURI := SuperGetMv("MV_JURXFIN",.T.,.F.)  
Local aArea := GetArea() 

SED->(DbSeek(cFilial + SE2->E2_NATUREZ))
If lIntSJURI .And. !Empty(SED->ED_GRPNAT) .And. SED->ED_RATOBR == "2"

	DbSelectarea("NVR")
	NVR->(DbSetorder(1))
	If NVR->( dbSeek( xFilial("NVR") + SE2->E2_PREFIXO + SE2->E2_NUM + SE2->E2_PARCELA + SE2->E2_TIPO + SE2->E2_FORNECE + SE2->E2_LOJA ) )
		DbSelectarea("NVS")
		NVS->( dbSetorder(1) )
		NVS->( dbSeek( xFilial("NVS") + NVR->NVR_PROCES )	)
		nSdoJuri := 0
		While NVS->( !EOF() ) .AND. NVS->NVS_PROCES == NVR->NVR_PROCES
			nSdoJuri += NVS->NVS_VALOR
			NVS->( DBSKIP() )
		End
		If nSdoJuri <> SE2->E2_VALOR
			lRet := .F.
		Else
			lRet := .T.
		EndIf
	EndIf
EndIf
RestArea( aArea )
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA080VlCanºAutor  ³Fabricio Romera     º Data ³  06/24/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida motivo de baixa de titulos cancelados.               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FA080VlCan(dDataCan, cMotBx)
Local lRet := .T.

If !GetMv("MV_CTLIPAG")                 
	Return lRet
End If

//Verifica se titulo esta cancelado                                   
If Empty(dDataCan)                                                                  
	Return lRet
End If

//Verifica se motivo de baixa possui movimentacao financeira              
lRet := !MovBcoBx(cMotBx, .T. )

If !lRet
	Help(" ",1,"MOTIVO DE BAIXA", , ;
         STR0175,1,0) //"Título cancelado não permite motivo de baixa com movimentação financeira"
EndIf         

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa080Irrf ºAutor  ³ Acacio Egas       º Data ³  12/14/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função para calculo do IRRF e gravação da varialvel nIrrf. º±±
±±º          ³  Esta funcao deve ser melhorada para ser a TotMes do Irrf. º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA080                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Fa080Irrf(nPgtoIRRF,dBaixa,lCarret,lRecalc,nOldIrrf)

Local cChaveIR   := ""
Local aAreaSE2
Local aAreaSA2
Local lGerTXBord := .T.
Local aCalcIRPF
Local cNccIr		:= SuperGetMv("MV_NCCIR",.F.,"2")
Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
              IIf( ! Empty( SED->( FieldPos( "ED_CALCIRF" ) ) ), Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") = "S", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT
                 
DEFAULT nOldIrrf := 0

If SE2->E2_PRETIRF = '1'

	//Novo calculo de IRRF pela Baixa
	If lNewIrBx
		//Calculo para o  IRRF 
		//o primeiro parametro, neste caso vai zerado pois o calculo 
		//eh feito com base no saldo do titulo 
		nIRRF := FCalcIRBx(0,SA2->A2_TIPO,dBaixa,dDebito)
	Else

		//Se o título estiver em bordero, verifica se gerou título (fina241) ou nao (fina240)
		If !Empty(SE2->E2_NUMBOR)
				
			aAreaSE2 := SE2->(GetArea())
			cChaveIR := SE2->(E2_PREFIXO+E2_NUM+E2_PARCIR)+MVTAXA
			
			aAreaSA2 := SA2->(GetArea()) 
			dbSelectArea("SA2")
			If (dbSeek(xFilial("SA2")+GetMV("MV_UNIAO")))
		   		cChaveIR +=SA2->(A2_COD+A2_LOJA)				
			Endif
			
			dbSelectArea("SE2")
			If SE2->(dbSeek(xFilial("SE2")+cChaveIR)) 
				lGerTXBord := .F.
			Endif            
			
			SE2->(RestArea(aAreaSE2))   
			SA2->(RestArea(aAreaSA2))
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca base de cálculo para o  IRPF ³
		//³caso não tenha sido calculada      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ					
		aCalcIRPF := F241BsIRPF(SE2->(Recno()),"SE2",nPgtoIRRF,lGerTXBord,,,,dBaixa,.T.,lRecalc,,lCarret)
				
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Calcula IRPF e deduz os valores retidos anteriormente³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        If SA2->A2_TIPO == "F"
			nIRRF := Fa050TabIR(aCalcIRPF[1] - aCalcIRPF[4]) - aCalcIRPF[2]
		Else
			nIRRF := FClcIRPJ(SE2->E2_VALOR,.T.,.T.)
		EndIf
		
		nIRRF := IIF(nIRRF <= GetMv("MV_VLRETIR",,0),0,nIRRF)
	Endif		

	If nIRRF # nOldIrrf

		nValPgto += nOldIrrf
		nValPgto -= nIRRF
		nOldValPgto := nValPgto	  
		nOldIrrf := nIrrf

	EndIf		

EndIf

If lIRPFBaixa .and. SE2->E2_VALOR < nIrrf .and. cNccIr == "1"
	nValPgto := 0.01
ElseIf lIRPFBaixa .and. SE2->E2_VALOR < nIrrf .and. cNccIr == "2"
	nValPgto := 0
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA080LIB  ºAutor  ³Andrea Verissimo    º Data ³  01/02/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Ponto de Entrada para a confirmacao da tela de baixa manual º±±
±±º          ³de contas a pagar.                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Modulo Financeiro                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Fa080Lib()
Local lFa080Lib := ExistBlock("FA080LIB")
Local lRetorno  := .T. 
			
If lFa080Lib			
  lRetorno := ExecBlock("FA080LIB",.F.,.F.)
Endif
	
Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³F080Help  ºAutor  ³ Clovis Magenta	º Data ³  22/12/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao centralizado de validação e criação de helps do     º±±
±±º          ³ FINA080.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA080, MATXFUNB                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F080Help()
Local aHelpPor := {}
Local aHelpSpa:= {}
Local aHelpEng:= {}
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()

If Empty(GetHelp("DTINVALSM0"))
	//ÚÄÄÄÄÄÄ¿
	//³HELP'S³
	//ÀÄÄÄÄÄÄÙ
	// Portugues
	aHelpPor := {} ; 	aHelpSpa := {} ; 	aHelpEng := {}
 	Aadd(aHelpPor,"A Data informada não pode ser maior que")
 	Aadd(aHelpPor," a data limite autorizada pelo SIGAMAT ")
 	Aadd(aHelpPor,"utilizado.                   ")
	// Espanhol
 	Aadd(aHelpSpa,"Operación no permitida porque todavía ")
 	Aadd(aHelpSpa,"no se liberó el cheque de dicho pago o")
 	Aadd(aHelpSpa,"el cheque todavía no existe.")
	// Ingles
 	Aadd(aHelpEng,"Transaction not allowed because check ")
 	Aadd(aHelpEng,"for such payment has not been released," )
 	Aadd(aHelpEng,"yet or check does not still exist." )

	PutHelp("PDTINVALSM0",aHelpPor,aHelpEng,aHelpSpa,.F.)
	
	aHelpPor := {} ; 	aHelpSpa := {} ; 	aHelpEng := {}

	//ÚÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Soluction's³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÙ
	// Portugues
 	Aadd(aHelpPor,"Favor informar uma data menor ou  " )
 	Aadd(aHelpPor,"igual ao autorizado no arquivo  " )
 	Aadd(aHelpPor,"SIGAMAT.EMP.                    " )
	// Espanhol
 	Aadd(aHelpSpa,"Genere cheque de anticipo y/o ")
 	Aadd(aHelpSpa,"Verifique liberación del cheque." )
	// Ingles
 	Aadd(aHelpEng,"Generate advance check and/or " )
 	Aadd(aHelpEng,"Verify check release." )

	PutHelp("SDTINVALSM0",aHelpPor,aHelpEng,aHelpSpa,.F.)

Endif

If Empty(GetHelp("NOCHQADT"))
	//ÚÄÄÄÄÄÄ¿
	//³HELP'S³
	//ÀÄÄÄÄÄÄÙ
	// Portugues
	aHelpPor := {} ; 	aHelpSpa := {} ; 	aHelpEng := {}
 	Aadd(aHelpPor,"Operação não permitida, pois ainda não ")
 	Aadd(aHelpPor,"foi liberado o cheque desse pagamento, ")
 	Aadd(aHelpPor,"ou o cheque ainda não existe.")
	// Espanhol
 	Aadd(aHelpSpa,"Operación no permitida porque todavía ")
 	Aadd(aHelpSpa,"no se liberó el cheque de dicho pago o")
 	Aadd(aHelpSpa,"el cheque todavía no existe.")
	// Ingles
 	Aadd(aHelpEng,"Transaction not allowed because check ")
 	Aadd(aHelpEng,"for such payment has not been released," )
 	Aadd(aHelpEng,"yet or check does not still exist." )

	PutHelp("PNOCHQADT",aHelpPor,aHelpEng,aHelpSpa,.F.)
	aHelpPor := {} ; 	aHelpSpa := {} ; 	aHelpEng := {}

	//ÚÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Soluction's³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÙ
	// Portugues
 	Aadd(aHelpPor,"Gere o cheque do adiantamento e/ou" )
 	Aadd(aHelpPor,"Verifique a liberação do cheque." )
	// Espanhol
 	Aadd(aHelpSpa,"Genere cheque de anticipo y/o ")
 	Aadd(aHelpSpa,"Verifique liberación del cheque." )
	// Ingles
 	Aadd(aHelpEng,"Generate advance check and/or " )
 	Aadd(aHelpEng,"Verify check release." )

	PutHelp("SNOCHQADT",aHelpPor,aHelpEng,aHelpSpa,.F.)
	aHelpPor := {} ; 	aHelpSpa := {} ; aHelpEng := {}
	
Endif

if lPrjCni
	If Empty(GetHelp("MOTIBAIXA"))
		//ÚÄÄÄÄÄÄ¿
		//³HELP'S³
		//ÀÄÄÄÄÄÄÙ
		// Portugues
		aHelpPor := {} ; 	aHelpSpa := {} ; 	aHelpEng := {}
	 	Aadd(aHelpPor,"Motivo de baixa inválido para a" )
	 	Aadd(aHelpPor,"natureza selecionada.")
	
		PutHelp("PMOTIBAIXA",aHelpPor,aHelpEng,aHelpSpa,.F.)
		aHelpPor := {} ; 	aHelpSpa := {} ; 	aHelpEng := {}
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Soluction's³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÙ
		// Portugues
	 	Aadd(aHelpPor,"Verifique a opção de movimentação" )
	 	Aadd(aHelpPor,"bancária da natureza." )
	
		PutHelp("SMOTIBAIXA",aHelpPor,aHelpEng,aHelpSpa,.F.)
		aHelpPor := {} ; 	aHelpSpa := {} ; aHelpEng := {}
		
	Endif
EndIf

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FinFatAbatºAutor  ³Marivaldo           º Data ³  03/18/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para somar abatimentos dos titulos que geram a      º±±
±±º          ³ fatura.                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FinFatAbat(cPrefixo,cNum,cFornece,cLoja)
Local nTotIss := 0
Local nTotIns := 0
Local nTotIrf := 0
Local nTotPis := 0
Local nTotCof := 0
Local nTotCsl := 0
Local nTotSes := 0  
Local aAreaSE2 := SE2->(GetArea())
Local aArea	:= GetArea()

#IFNDEF TOP    
	Local _aStru := {}
	Local _cArq 
	Local cAlias	:= "TRB080"
#ENDIF	


#IFDEF TOP    
	cQuery := "SELECT SUM(E2_VRETIRF) E2_VRETIRF,SUM(E2_VRETISS) E2_VRETISS,SUM(E2_VRETPIS) E2_VRETPIS,SUM(E2_VRETCOF) E2_VRETCOF,SUM(E2_VRETCSL) E2_VRETCSL,SUM(E2_INSS) E2_INSS, SUM(E2_SEST) E2_SEST "
	cQuery += "FROM " + RetSqlName("SE2") + " "
	cQuery += "WHERE E2_FATPREF='" + cPrefixo + "' AND E2_FATURA ='" + cNum + "' AND E2_FATFOR = '" + cFornece + "' AND E2_FATLOJ='" + cLoja + "'"
	dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), "TRB", .F., .T. )
	
	nTotIss	:= TRB->E2_VRETISS
	nTotIns	:= TRB->E2_INSS
	nTotIrf	:= TRB->E2_VRETIRF
	nTotPis	:= TRB->E2_VRETPIS
	nTotCof	:= TRB->E2_VRETCOF
	nTotCsl	:= TRB->E2_VRETCSL
	nTotSes	:= TRB->E2_SEST
	TRB->(DbCloseArea())
	

#ELSE

	_aStru := {{"E2_VRETISS"      ,"N" ,14,02},;
              {"E2_INSS"     		,"N" ,14,02},; 
              {"E2_VRETIRF"     ,"N" ,14,02},;
               {"E2_VRETPIS" ,"N" ,14,02},;
                {"E2_VRETCOF"    ,"N" ,14,02},;
                {"E2_VRETCSL"      ,"N" ,14,02},;
                {"E2_SEST"      ,"N" ,14,02}}
	_cArq := CriaTrab(_aStru,.T.)
	dbUseArea(.T.,"DBFCDX",_cArq,cAlias, .F., .T.) 
   	dbSelectArea("SE2") 

	While SE2->(!Eof() )
		IF SE2->E2_FATPREF == cPrefixo .or. SE2->E2_FATURA == cNum .and. SE2->E2_FATFOR == cFornece .AND. SE2->E2_FATLOJ == cLoja
	              
			     DbSelectArea(cAlias)   // Temporario                        
			 	 nTotIss	+= (cAlias)->E2_VRETISS
				 nTotIns	+= (cAlias)->E2_INSS
				 nTotIrf	+= (cAlias)->E2_VRETIRF
				 nTotPis	+= (cAlias)->E2_VRETPIS
				 nTotCof	+= (cAlias)->E2_VRETCOF
				 nTotCsl	+= (cAlias)->E2_VRETCSL
				 nTotSes	+= (cAlias)->E2_SEST
			        
			   dbSelectArea("SE2")
		EndIf
		dbSkip()
	Enddo 
	
	IF SELECT(cAlias)>0
	 (cAlias)->(DbCloseArea())
	Endif
#ENDIF

RestArea(aAreaSE2)
RestArea(aArea)
    
Return {nTotIss,nTotIns,nTotIrf,nTotPis,nTotCof,nTotCsl,nTotSes}
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³INTEGDEF  ºAutor  ³Wilson de Godoi      º Data ³ 08/05/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para a interação com EAI                             º±±
±±º          ³envio e recebimento                                         º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP  Baixa de Contas a Pagar                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Static Function IntegDef( cXml, nType, cTypeMsg)  
		Local aRet := {}  
		aRet:= FINI080( cXml, nType, cTypeMsg )
Return aRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA080VlNatºAutor  ³TOTVS               º Data ³  08/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida natureza que realizam movimentos bancarios.          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FA080VlNat(cMotBx)
Local lRet := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se motivo de baixa possui movimentacao financeira    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MovBcoBx(cMotBx, .T. ) .And. Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_MOVBCO") == "2"
	Help(" ",1,"MOTIBAIXA", , "",1,0) //"Motivo de baixa inválido para a natureza selecionada. Verifique a opção de movimentação bancária da natureza e não prosseguir."
	lRet:=.F.
Elseif !MovBcoBx(cMotBx, .T. ) .And. Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_MOVBCO") == "1"
	Help(" ",1,"MOTIBAIXA", , "",1,0) //"Motivo de baixa inválido para a natureza selecionada. Verifique a opção de movimentação bancária da natureza e não prosseguir."
	lRet:=.F.  
EndIf         


Return lRet



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³F080RepPCCºAutor  ³Clovis Magenta      º Data ³  01/06/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Recompoe base das baixas do mes anterior                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ - dDataMax: Data maxima para verificação de baixas/retencaoº±±
±±º          ³ - cAlias: Alias utilizado na funcao para referencia a SE5  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F080RepPCC(cChaveSe5,cAlias,dDataMax)
Local aArea 	:= GetArea()
Local aAreaSE5	:= SE5->(GetArea())
Local nValPCC	:= 0 
Local lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
				 !Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
				 !Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) ) .And. ;
				 !SE2->E2_TIPO $ MVPAGANT
Local lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" ) 	.And. 	!SE2->E2_TIPO $ MVPAGANT


DEFAULT cAlias	:= "SE5"
DEFAULT cChaveSe5	:= (cAlias)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA_+E5_TIPO+E5_CLIFOR+E5_LOJA)
DEFAULT dDataMax	:= FirstDay(dDatabase)

DbSelectArea("SE5")
SE5->(DbSetOrder(7))
If SE5->(Dbseek(xFilial("SE5")+cChaveSe5))

	While !EOF() .And. SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) = cChaveSe5  .And. ( SE5->E5_FILIAL = xFilial("SE5") )
		If SE5->E5_SITUACA <> "C" .And. SE5->E5_DATA < dDataMax .AND. ;
					(SE5->E5_PRETPIS $ " #4" .Or. SE5->E5_PRETCOF $ " #4" .Or. SE5->E5_PRETCSL $ " #4")

	      nValPCC	+=	SE5->E5_VRETPIS
	      nValPCC	+=	SE5->E5_VRETCOF
	      nValPCC	+=	SE5->E5_VRETCSL 
	      
	      If lIRPFBaixa
		   	nValPCC	+=	SE5->E5_VRETIRF    
		  Endif
		  If lCalcIssBx
			  	 nValPCC	+=	SE5->E5_VRETISS
		  Endif 
		Endif
	   SE5->(Dbskip())
	Enddo

Endif
	
RestArea(aAreaSE5)
RestArea(aArea)

Return nValPCC

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FA080Integ ³ Autor ³Jandir Deodato ³ Data ³ 30.08.12        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida a integdef de baixas a pagar                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA080Integ(lCancel,lMsg)
Local aSave:={}
Local aAreaXX4:={}
Local cExecb
Local lRetExec
Local lRet:=.T.
Local cMSG
Local aRetMsg:={}
Local cUniao	:= SuperGetMV("MV_UNIAO") 
Default lMSg:=.T.
aSave:=GetArea()
dbSelectArea('XX4')
aAreaXX4:=XX4->(GetArea())
If !(alltrim(SE2->E2_TIPO) =="PR") .AND. !(alltrim(SE2->E2_TIPO) $ MVTAXA .AND. alltrim(SE2->E2_FORNECE) $ cUniao)
	If lCancel
		cMSG:='REVERSALOFACCOUNTPAYABLEDOCUMENTDISCHARGE'
	Else
		cMSG:='ACCOUNTPAYABLEDOCUMENTDISCHARGE'
	Endif
	If FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI") .And. FWHasEAI("FINA080",.T.,,.T.) 
	
		XX4->(dbSetOrder(1))
		IF XX4->(DbSeek(Xfilial('XX4')+PADR('FINA080',Len(XX4_ROTINA))+PADR(cMSG,Len(XX4_MODEL))))
			cExecB:= "{ || "+ IIf(Empty(XX4->XX4_EXPFIL),".T.",AllTrim( XX4->XX4_EXPFIL )) +" }"
			cExecB:=&(cExecB)
			lRetExec:=Eval(cExecB)
			If (ValType (lRetExec)=="L" .and. lRetExec .and. !(XX4->XX4_METODO =='1')) 
				If lMSG
					HELP(" ",1,"FA080INTEG",,STR0184,2,0)//O adapter de Baixas a Pagar está configurado como ASSÍNCRONO no configurador. Configure-o como SÍNCRONO."
				Endif
				lRet:=.F.
			Endif
		Endif
		If AllTrim(SE2->E2_ORIGEM)=="FINI055" .and. lRet  .and. !lCancel
			If 	FWHasEAI("FINI070A",.T.,,.T.) .and. FindFunction('FINI070A')
				SE2->(MsUnlock())

					SetRotInteg('FINI070A') 
					MsgRun ( STR0185+" "+rTrim(SE2->E2_NUM)+ " " +STR0186,STR0187,{||aRetMsg:=FinI070A()} )//"Atualizando título" "a valor presente..." "Valor Presente"
					RecLock("SE2",.F.)
					If ValType(aRetMsg[1]) <> "U" .and.  !aRetMsg[1]
						If (valtype(aRetMsg[2]) <> "U" .and. aRetMsg[2] <> Nil .and. !Empty(aRetMsg[2]))
							MsgAlert(STR0188+ CRLF+ aRetMsg[2])//"Foi realizada uma tentativa de atualização do título, e foi retornada a seguinte mensagem:"
						Else
							MsgAlert(STR0189+ " " + rTrim(SE2->E2_NUM)+" ."+STR0190)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração e tente novamente."
						Endif
						lRet :=.F.
					ElseIF Valtype(aRetMSg[1]) =="U"	
							MsgAlert(STR0189+ " " + rTrim(SE2->E2_NUM)+" ."+STR0190)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração e tente novamente."
							lret:=.F.
					Endif		

			Else
				lRet:=.F.
				MsgAlert(STR0191)//"Para realizar as baixas de integrações como TIN, é necessário cadastrar o adapter da rotina FINI070A - UPDATECONTRACTPARCEL."
			Endif
		Endif
	Endif
Endif
RestArea(aAreaXX4)
RestArea(aSAve)        

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ Fa080Desc   ³ Autor ³ Andrea V. Santiago    ³ Data ³ 06/12/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Abre tela para a configuracao do tipo do desconto a ser       ³±±
±±³          ³ enviado no bloco F100 do SPED PIS/COFINS.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa080Desc()                 									  	 	 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gen‚rico 			              										 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa080Desc(lTpDesc,lNatApura)           
Local oDlgDesc, oVlDesc

If cPaisLoc == "BRA" .And. lTpDesc .And. lNatApura	 .And. nDescont > 0	         		                      	
	                       		
	DEFINE MSDIALOG oDlgDesc FROM 10,05 TO 14,45 TITLE "Tipo de Desconto " // "Tipo de Desconto"
                 
   @	6,2 Say "Desconto: " SIZE 31,07 OF oDlgDesc PIXEL		               
	@  5,35  MSCOMBOBOX oVlDesc VAR cTpDesc ITEMS {"C=Condicional","I=Incondicional"} SIZE 70, 47 OF oDlgDesc PIXEL  
		
	DEFINE SBUTTON FROM 5,120 TYPE 1 ACTION oDlgDesc:End() ENABLE OF oDlgDesc
	ACTIVATE MSDIALOG oDlgDesc CENTERED                   	
	   
Endif

Return .T.

/////////////////////////////////////////////
// Função	| F080CanBx()                  //
// Autor		| Pedro Pereira Lima           //
// Data		| 05/09/2013                   //
// Uso		| Valida o cancelamento das    //
//				| baixas efetuadas quando há   //
//				| retenção de impostos na baixa//
/////////////////////////////////////////////
Function F080CanBx(aBaixa,nOpcBx,lPccBx)
Local lRet		:= .T.
Local nTamBx	:= Len(aBaixa)
Local lTemJur := .F.
Local lCalcImp := .F.

Default lPccBx	:= SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty(SE5->(FieldPos("E5_VRETPIS"))) .And. !Empty(SE5->(FieldPos("E5_VRETCOF"))) .And.;
						!Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
						!Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
						!Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )
//Verifica se possui Juros calculado na baixa
DBSelectArea("SE5")
SE5->(DBSetORder(2)) //E5_FILIAL, E5_TIPODOC, E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_DATA, E5_CLIFOR, E5_LOJA, E5_SEQ, R_E_C_N_O_, D_E_L_E_T_ 
If SE5->(DBSeek( xFilial("SE5") + padr("JR", TamSx3("E5_TIPODOC")[1] ) +  SE2->(E2_PREFIXO + E2_NUM + E2_PARCELA + E2_TIPO + DTOS(E2_BAIXA) + E2_FORNECE + E2_LOJA) ))
	lTemJur := .T.
EndIf	
//Verifica  se titulo possui calculo de algum imposto
If SE2->(E2_COFINS + E2_PIS + E2_CSLL + E2_IRRF + E2_ISS) > 0
	lCalcImp := .T.
EndIf	

If Type("lEmpPub") <> "L"
	lEmpPub	:= IIf(lIsEmpPub, IsEmpPub(), .F.)
EndIf

If (nTamBx > 1) .And. (nOpcBx < nTamBx)
	If lPccBx .and. (lCalcImp .OR. lTemJur)
		lRet := .F.
		Help(" ",1,"FINIMPBX")
	EndIf
EndIf

Return lRet

/////////////////////////////////////////////
// Função	| F080RetPA()                         
// Autor	| Karen Honda           
// Data	| 19/09/2014                   
// Uso		| Verifica se a retenção de impostos
//			| em outro título foi feita em uma PA
/////////////////////////////////////////////
Static Function F080RetPA(cAlias,cPrefixo, cNum , cParcela, cTipo, cFornece , cLoja)
Local aAreaSE2 := SE2->(GetArea()) 
Local lAchouRel := .F.
If AliasIndic("SFQ") 
	dbSelectArea("SFQ")
	dbSetOrder(2) //FQ_FILIAL, FQ_ENTDES, FQ_PREFDES, FQ_NUMDES, FQ_PARCDES, FQ_TIPODES, FQ_CFDES, FQ_LOJADES
	If MsSeek(xFilial("SFQ")+cAlias+cPrefixo + cNum + cParcela+  cTipo +  cFornece + cLoja )
		If SFQ->FQ_TIPOORI $ MVPAGANT
			lAchouRel := .T.
		EndIf
	EndIF	
EndIf	
RestArea(aAreaSE2)

Return lAchouRel

/////////////////////////////////////////////
// Função	| F080RetPA()                         
// Autor	| Karen Honda           
// Data	| 19/09/2014                   
// Uso		| Verifica se PA possui movimentacao bancaria
//			| em outro título foi feita em uma PA
/////////////////////////////////////////////
Function F080MovPA(lVerMov,cPrefixo, cNum , cParcela, cTipo, cFornece , cLoja)
Local nRecnoSE5 := 0
Local cQuery := ""
Local cAliasQry := GetNextAlias()

cQuery := "SELECT  R_E_C_N_O_ " 
cQuery += "FROM " + RetSqlName("SE5") 	
cQuery += " WHERE E5_FILIAL = '" + xFilial("SE5") + "' AND "
cQuery += " E5_PREFIXO = '" + cPrefixo +  "' AND "
cQuery += " E5_NUMERO = '" + cNum +  "' AND "
cQuery += " E5_PARCELA = '" + cParcela +  "' AND "
cQuery += " E5_TIPO = '" + cTipo +  "' AND "
cQuery += " E5_CLIFOR = '" + cFornece +  "' AND "
cQuery += " E5_LOJA = '" + cLoja +  "' AND "
If lVerMov
	cQuery += " ((E5_TIPODOC = 'PA' AND E5_MOTBX = 'NOR') OR
	cQuery += "(E5_TIPODOC = 'BA' AND E5_MOTBX = 'NOR' AND E5_NUMCHEQ <> ' ' ) OR "
	//Mov.Bancária do PA na Geração(FINR480) ou Liberação(FINA190) do cheque  
	cQuery += "(E5_TIPODOC = 'CH' AND E5_MOTBX IN('NOR', ' ') AND E5_NUMCHEQ <> ' ' )) AND "
Else
	cQuery += " E5_TIPODOC = 'BA' AND E5_MOTBX = 'PCC' AND "
EndIf
cQuery += " E5_RECPAG = 'P' AND "
cQuery += " E5_SITUACA = ' ' AND "
cQuery += " D_E_L_E_T_ = ' '"
cQuery := ChangeQuery( cQuery ) 
			
dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .F., .T. )

If (cAliasQry)->(!Eof())
	nRecnoSE5 := (cAliasQry)->R_E_C_N_O_
EndIf

(cAliasQry)->(DbCloseArea())
Return nRecnoSE5
            

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Fa080InsBx   ³ Autor ³ Andrea Verissimo    	³ Data ³ 11/12/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se o título possui INSS gerado na Baixa e já     ³±±
±±³          ³ baixado.                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa080InsBx()
Local lRet := .F. //informa se o título principal possui TX de IR Gerado na Baixa e já baixado.
Local cPrefixo	:= SE2->E2_PREFIXO
Local cNum		:= SE2->E2_NUM     
Local cParcIN   := SE2->E2_PARCINS
Local aAreaSe2  := SE2->(GetArea())	
Local lInsBx :=	SuperGetMv("MV_INSBXCP",.F.,"2") == "1"  .And.  ; // INSS na Baixa 
				 		!Empty( SE5->( FieldPos( "E5_VRETINS" ) ) )  .And. !Empty( SE5->( FieldPos( "E5_PRETINS" ) ) )
			 

//se estiver sendo chamado via rotina automática a partir da compensação entre carteiras, nao deve processar INSS.
If Funname() == "FINA450" .and. (Type("lF080Auto")<>"U" .and. lF080Auto)
	lInsBx := .F.
EndIf					 

If lInsBx 
	SE2->(DbSetOrder(1))
	// Se encontrou o titulo filho (titulo de INSS) e este sofreu baixa não permite a exclusao do titulo pai (titulo principal).
	If !Empty(cParcIN) .And. SE2->(Msseek(xFilial("SE2") + cPrefixo + cNum + cParcIN + MVINSS)) .And.;
		(SE2->E2_SALDO != SE2->E2_VALOR)
		lRet := .T.
	Endif
EndIf

SE2->(RestArea(aAreaSe2))

Return lRet   

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ ValCheq      ³ Autor ³ Totvs               	³ Data ³ 14/07/15 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna o valor do cheque gerado                  			    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ValCheq()
Local nValor 		:= 0
Local aArea   	:= GetArea()
Local cQry			:= ""
Local cAliasQry		:= GetNextAlias()     

cQry := " Select EF_VALOR ValCheq "
cQry += " From " + RetSqlName("SEF") + " SEF "
cQry += " Where EF_FILIAL 	= '" + xFilial("SEF") + "' "
cQry += " AND EF_PREFIXO 	= '" + SE2->E2_PREFIXO + "' "
cQry += " AND EF_TITULO 		= '" + SE2->E2_NUM + "' "
cQry += " AND EF_PARCELA 	= '" + SE2->E2_PARCELA + "' "
cQry += " AND EF_TIPO 		= '" + SE2->E2_TIPO + "' "
cQry += " AND EF_NUM  		= '" + SE2->E2_NUMBCO + "' AND "
cQry += " SEF.D_E_L_E_T_ = '' "

cQry := ChangeQuery(cQry)

dbUseArea( .T.,"TOPCONN",TCGENQRY(,,cQry),cAliasQry,.F.,.T. )

nValor := (cAliasQry)->VALCHEQ

(cAliasQry)->(DbCloseArea())

RestArea(aArea)

Return nValor


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Fa080FDarf³ Autor ³ Daniel Ferraz Lacerda ³ Data ³ 16/12/15 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se existe titulo filho (titulo de taxa) e se este	 ³±±
±±³          ³ está em alguma DARF											 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa080FDarf()								         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA080														 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
8*/


Function Fa080FDarf()
Local lRet := .T.
Local aTps := {}
Local aParc := {}
Local nX
Local cPrefixo	:= SE2->E2_PREFIXO
Local cNum		:= SE2->E2_NUM
Local aAreaSe2 := SE2->(GetArea())
//Verifica se os campos utilizados para o imposto CIDE.
Local lCIDE  := SE2->(FieldPos('E2_CIDE')) > 0 .And. SE2->(FieldPos('E2_PARCCID')) > 0 .And.;
				SED->(FieldPos('ED_CALCCID')) > 0 .And. SED->(FieldPos('ED_BASECID')) > 0 .And.;
				SED->(FieldPos('ED_PERCCID')) > 0 .And. SA2->(FieldPos('A2_RECCIDE')) > 0
					 
Local lTitPai := !Empty( SE2->( FieldPos( "E2_TITPAI" ) ) )
Local cTitPai := Alltrim(SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA))
Local lFornLjIss := SE2->(FieldPos('E2_FORNISS')) > 0 .And. SE2->(FieldPos('E2_LOJAISS')) > 0 .And.;
							!Empty(SE2->(E2_FORNISS+E2_LOJAISS))

Local cAliasAtu := "SE2"
lOCAL lDarf := SE2->( FieldPos( "E2_IDDARF" )) > 0
					 

aTps := {"TX ","INS","ISS","SES"}
aParc := {SE2->E2_PARCIR,SE2->E2_PARCINS,SE2->E2_PARCISS,SE2->E2_PARCSES}
If lCIDE
	Aadd(aTps,"CID")
	Aadd(aParc,SE2->E2_PARCCID)
EndIf

Aadd(aParc, SE2->E2_PARCPIS)
Aadd(aParc, SE2->E2_PARCCOF)
Aadd(aParc, SE2->E2_PARCSLL)
Aadd(aTps , "TX ")
Aadd(aTps , "TX ")
Aadd(aTps , "TX ") // aTps deve ter o mesmo tamanho de aParc


SE2->(DbSetOrder(1))

For nX := 1 to Len(aTps)
	If nX == 3 .and. lFornLjIss
		cAliasAtu := Alias()
		dbSelectArea("SE2")
		SE2->(DbSetOrder(1))
		If !Empty(aParc[nx]) .And. SE2->(Msseek(xFilial("SE2")+cPrefixo+cNum+aParc[nX]+aTps[nX]))
			While SE2->(!Eof()) .And. SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO) == ;
												xFilial("SE2")+cPrefixo+cNum+aParc[nX]+aTps[nX]
				//Se nao existir E2_TITPAI, valida da forma antiga
				//Se E2_TITPAI vazio (titulos antigos), valida da forma antiga
				//Se E2_TITPAI preenchido, pre-valida com a chave do titulo principal
				If !lTitPai .OR. (lTitPai .AND. If(!Empty(SE2->E2_TITPAI),Alltrim(SE2->E2_TITPAI) == cTitPai,.T.)) .and. ;
					If(lDarf,!Empty(SE2->E2_IDDARF),.F.)
					lRet := .F.
					Exit
				Endif
				SE2->(dbSkip())
			Enddo
		Endif
		dbSelectArea(cAliasAtu)
		If !lRet
			Exit			
		Endif
											
	ElseIf !Empty(aParc[nx]) .And. SE2->(Msseek(xFilial("SE2")+cPrefixo+cNum+aParc[nX]+aTps[nX])) .And.;
		If(lDarf, !Empty(SE2->E2_IDDARF),.F.)
			lRet := .F.
		Exit
	Endif
Next

SE2->(RestArea(aAreaSe2))

Return lRet
