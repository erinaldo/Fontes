#line 1 "C:\INCLUDE\rwmake.ch"
#line 1 "C:\INCLUDE\stdwin.ch"
#line 14 "rwmake.ch"
#line 17 "c:\users\cst1350.br\desktop\PROJET~1\contabil\ATUALI~1\rcsua002.prw"
Function U_RCSUA002()

Private oLeTxt

SetPrvt("CCOL,aItems2,cBANC0")
aItems2  := {"Cadastro de TITULOS A PAGAR"}
cCOL     := SPACE(1)





oLeTxt := MSDialog():New(200, 1, 360, 360, OemToAnsi(OemToAnsi("Atualizacao dos Titulos a Pagar")),,,,,,,,, .t. ,,,)
 TGroup():New(02,05,080,170,OemToAnsi(),, , , .t. )
 IW_Say(10,018," Este programa ira fazer preenchimento da conta contabil         ",,,,, )
 IW_Say(18,018," no arquivo de contas a pagar                                                   ",,,,, )
 SButton():New(60, 108, 01,{|| (OkLeTxt(),oLeTxt:End())},,)
 SButton():New(60, 138, 02,{|| oLeTxt:End()},,)

oLeTxt:Activate(,,,.T.,, ,)

Return















Static Function OkLeTxt





Private _cString  := "SE2"
Processa({|| ALTERA() },"Aguarde atualizacao do Tabela do contas a pagar...")
DbSelectArea(_cString)

Return(Nil)
















Static Function ALTERA()


PRIVATE _aFALCTA    := {}
Private aOrd 		:= {}
Private cDesc1      := "Este programa lista possiveis inconsistencia na base "
Private cDesc2      := ""
Private cDesc3      := ""
Private lEnd        := .F. 
Private lAbortPrint := .F. 
Private limite      := 80
Private tamanho     := "M"
Private nomeprog    := "RCSUR02"
Private aReturn     := { "Zebrado", 1, "Administracao", 2, 2, 1, "", 1}
Private nLastKey    := 0
Private titulo      := "Critica da Alteracao dos Titulos a Pagar"
Private nLin        := 80
Private Cabec1      := "Titulo  Forn loja - Incosistencia"
Private Cabec2      := ""
Private cbtxt       := Space(10)
Private cbcont      := 00
Private CONTFL      := 01
Private m_pag       := 01
Private imprime     := .T. 
Private wnrel       := "IMPSE2"
Private cPerg       := ""

DbSelectArea(_cString)
DBSetOrder(1)
dBGoTop()
ProcRegua(Reccount())

While !eof()

  	IncProc("Alterando Titulo a Pagar - No.: "+SE2->E2_NUM)

    IF !EMPTY(SE2->E2_CONTA)

     	DBSelectArea(_cString)
    	dBSkip()
        LOOP

    ENDIF

	DBSelectArea("SA2")
	DBSETORDER(1)
	IF DBSEEK(XFILIAL("SA2")+SE2->(E2_FORNECE+E2_LOJA))
	   IF EMPTY(SA2->A2_CONTA)

	       aAdd(_aFALCTA,{SE2->E2_NUM+" "+SA2->A2_COD+"-"+SA2->A2_LOJA+" - Fornecedor possui conta contabil"})

	   ELSE
	      DBSelectArea("SE2")
	      Reclock("SE2", .F. )
	    	SE2->E2_CONTA := SA2->A2_CONTA
	      MsUnlock()
	   ENDIF
	ELSE

  	    aAdd(_aFALCTA,{SE2->E2_NUM+" "+SE2->E2_FORNECE+"-"+SE2->E2_LOJA+" - Fornecedor Nao encontrado"})
	   	dBSelectArea(_cString)
    	dBSkip()
        LOOP
	ENDIF

	dBSelectArea(_cString)
	dBSkip()

Enddo

IF LEN(_aFALCTA) > 0
	wnrel := SetPrint(_cString,NomeProg,cPerg,@titulo,cDesc1,cDesc2,cDesc3, .T. ,aOrd, .T. ,Tamanho,, .T. )

	If nLastKey == 27
		Return
	Endif

	SetDefault(aReturn,_cString)

	If nLastKey == 27
		Return
	Endif

    RptStatus({|| RunReport(Cabec1,Cabec2,Titulo,nLin) },Titulo)

ENDIF

Return
















Static Function RunReport(Cabec1,Cabec2,Titulo,nLin)

Local _nLin := 66
Local _nCont:= 0

FOR _nI:= 1 TO LEN(_aFALCTA)

    If _nLin > 60
		Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho)
		_nLin := 08
    Endif

    PrintOut(_nLin,001,_aFALCTA[_nI][1],)
      _nLin := _nLin+1

next





Set( 20, "SCREEN" )





If aReturn[5]==1
	dbCommitAll()
	Set( 24, "" )
	OurSpool(wnrel)
Endif

MS_FLUSH()

Return()