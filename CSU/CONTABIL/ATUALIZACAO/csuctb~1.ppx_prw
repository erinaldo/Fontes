#line 1 "C:\INCLUDE\rwmake.ch"
#line 1 "C:\INCLUDE\stdwin.ch"
#line 14 "rwmake.ch"
#line 3 "c:\users\cst1350.br\desktop\PROJET~1\contabil\ATUALI~1\CSUCTB~1.PRW"




Function U_CSUCTB01()





DbSelectArea("SX5")
DbSetOrder(1)
DbSeek(xFilial()+"Z1CSUFIN")

If Found() .and.  !Empty(SX5->X5_DESCRI)
	MsgAlert("Esta rotina somente deve ser executada por uma única estação. No momento a mesma já encontra-se em uso. Tente novamente mais tarde !","Atencao!")
	Return
EndIf

If Eof()
	RecLock("SX5", .T. )
	SX5->X5_FILIAL := xFilial()
	SX5->X5_TABELA := "Z1"
	SX5->X5_CHAVE  := "CSUFIN"
	SX5->X5_DESCRI := "*"
	MsUnLock()
EndIf





_cPerg := PADR("ZZ0001" ,LEN(SX1->X1_GRUPO))

dbSelectArea("SX1")
dbSetOrder(1)
dbSeek( _cPerg+"01" )

If Eof()
	RecLock("SX1", .T. )
	SX1->X1_GRUPO    := _cPerg
	SX1->X1_ORDEM    := "01"
	SX1->X1_PERGUNT  := "Arquivo a importar?"
	SX1->X1_VARIAVL  := "mv_ch1"
	SX1->X1_TIPO     := "C"
	SX1->X1_TAMANHO  := 8
	SX1->X1_GSC      := "G"
	SX1->X1_VAR01    := "mv_par01"
	MsUnlock()
EndIf

Pergunte(_cPerg, .F. )



aVerba := {}
aAdd(aVerba,{"DATALAN","C",08,0})
aAdd(aVerba,{"DEBITO", "C",20,0})
aAdd(aVerba,{"CREDITO","C",20,0})
aAdd(aVerba,{"VALOR",  "N",15,2})
aAdd(aVerba,{"HP",     "C",03,0})
aAdd(aVerba,{"HIST",   "C",200,0})



oLeTxt := MSDialog():New(200, 1, 380, 450, OemToAnsi(OemToAnsi("Imp. de Lançamentos Contábeis ref. as Provisões de Contas a Pagar")),,,,,,,,, .t. ,,,)
 TGroup():New(02,10,060,215,OemToAnsi(),, , , .t. )
 IW_Say(10,018," Esta rotina tem como objetivo a importação dos lançamentos contábeis ref.",,,,196,0 )
 IW_Say(18,018," as provisões de Contas a Pagar. Esta importação será efetuada através de ",,,,196,0 )
 IW_Say(26,018," arquivo TXT gerado pelo sistema MÁXIMO. ",,,,196,0 )
 IW_Say(34,018," IMPORTANTE: Após o término da importação em questão, é de suma       ",,,,196,0 )
 IW_Say(42,018," importância a execução do REPROCESSAMENTO CONTÁBIL.             			",,,,196,0 )


 SButton():New(70, 128, 05,{|| Pergunte(_cPerg, .T. )},,)
 SButton():New(70, 158, 01,{|| (Proctit(),oLeTxt:End())},,)
 SButton():New(70, 188, 02,{|| oLeTxt:End()},,)

oLeTxt:Activate(,,,.T.,, ,)


LimpSema()

Return

Static Function Proctit()
Processa({ ||OkLeTxt() } )
Return




Static Function OkLeTxt()



cFile:= "c:\AP6IMPOR\FINPROV\"+Alltrim(Mv_Par01)+".TXT"

If 	Empty(Mv_Par01)
	MsgAlert("Parametros nao preenchidos !!! Verifique !","Atencao!")
	Return
EndIf

If 	Subs(Alltrim(Mv_Par01),1,2) <> SM0->M0_CODIGO
	MsgAlert("Arquivo a importar não corresponde a esta empresa !!! Verifique !","Atencao!")
	Return
EndIf

IF !ConvTxt(@cFile)
	MsgAlert("Arquivo "+cFile+" não encontrado !","Atencao!")
	RETURN
ENDIF



cArqVerba := CriaTrab(aVerba)
dbUseArea( .T. ,,cArqVerba,"TMP", .F.  )

__dbDelim( .F. , (cFile) , "," , { },,,,,.F. )
dbGoTop()



dbSelectArea("TMP")
DbGoTop()







IF Alltrim(TMP->HP) == "0"
	MsgAlert("Arquivo a ser importado está incorreto !!!")
	DBCLOSEAREA("TMP")
	Return
EndIf


cLote   := "009900"
cSbLote := "001"
nLin := 1
dDataLan := CTOD(SUBSTR(TMP->DATALAN,1,2)+"/"+SUBSTR(TMP->DATALAN,3,2)+"/"+SUBSTR(TMP->DATALAN,5,4))


DbSelectArea("CT2")
DbSetOrder(1)
DbSeek( xFilial()+DTOS(dDataLan)+cLote+cSbLote+"999999", .T.  )

DbSkip(-1)

If CT2->CT2_DATA == dDataLan .and.  CT2->CT2_LOTE == cLote .and.  CT2->CT2_SBLOTE == cSbLote
	cDOC := StrZero(Val(CT2->CT2_DOC) + 1,6)
Else
	cDoc := "000001"
EndIf



dbSelectArea("TMP")
DbGoTop()

ProcRegua(TMP->(Reccount()))

aLanc := {}



While !Eof()

	IncProc("Efetuando importação...")

  	IF !Empty(TMP->CREDITO)

		dDataLan := CTOD(SUBSTR(TMP->DATALAN,1,2)+"/"+SUBSTR(TMP->DATALAN,3,2)+"/"+SUBSTR(TMP->DATALAN,5,4))




		cHist := ALLTRIM(TMP->HIST)
		nNum := 0.0
		nNum := Round(Len(cHist)/40,1)



		If Int(nNum) < nNum
			nNum := Int(nNum) + 1
		EndIf





		cSitLan := 0


		DbSkip()

		If !Empty(TMP->CREDITO) .or.  TMP->(Eof())
			cSitLan := "1"
			DbSkip(-1)
		Else

			DbSkip(-1)


			Dbskip(2)
			If !Empty(TMP->CREDITO)
				cSitLan := "2"
			Else
				cSitLan := "3"
			EndIf
			DbSkip(-2)

		EndIf

		If cSitLan == "1"
			aAdd( aLanc,{"3",TMP->VALOR,AllTrim(TMP->CREDITO),TMP->DEBITO,""} )
		ElseIf cSitLan == "2"

			DbSkip()
			cCC := TMP->DATALAN
			DbSkip(-1)
			aAdd( aLanc,{"3",TMP->VALOR,AllTrim(TMP->CREDITO),TMP->DEBITO,cCC} )
			DbSkip()
		ElseIf cSitLan == "3"

			cCDeb := AllTrim(TMP->DEBITO)
			nRegCre := Recno()
		EndIf

	Else

		aAdd( aLanc,{"1",Val(TMP->DEBITO),"",cCDeb,TMP->DATALAN} )

	EndIf

	dbSelectArea("TMP")
    DBSKIP()



	IF !Empty(TMP->CREDITO) .or.  Eof()

		If cSitLan == "3"


			nRegAtu := Recno()
			dbGoto(nRegCre)
			aAdd( aLanc,{"2",TMP->VALOR,AllTrim(TMP->CREDITO),"",""} )
			dbGoto(nRegAtu)

		EndIf






		DBSELECTAREA("CT2")

		For x := 1 to Len(aLanc)

			RecLock("CT2", .T. )
			CT2->CT2_FILIAL := XFILIAL()
			CT2->CT2_LOTE   := cLote
			CT2->CT2_SBLOTE := cSbLote
			CT2->CT2_DOC    := cDoc
			CT2->CT2_DATA   := dDataLan
			CT2->CT2_DC     := aLanc[x][1]
			CT2->CT2_VLR01  := aLanc[x][2]

			dbSelectArea("CT1")


			If !Empty(aLanc[x][3])
				DbSetOrder(2)
				Dbseek (xfilial()+(aLanc[x][3]))
				aLanc[x][3]:=CT1->CT1_CONTA
			Endif

			If !Empty(aLanc[x][4])
				DbSetOrder(2)
				Dbseek (xfilial()+(aLanc[x][4]))
				aLanc[x][4]:=CT1->CT1_CONTA
			Endif

			dbSelectArea("CT2")

			CT2->CT2_CREDIT := IF(aLanc[x][1]$"32",IF(!Empty(aLanc[x][3]),aLanc[x][3],"INFORMAR CONTA"),"")
			CT2->CT2_DEBITO := IF(aLanc[x][1]$"31",IF(!Empty(aLanc[x][4]),aLanc[x][4],"INFORMAR CONTA"),"")
			CT2->CT2_CCD    := aLanc[x][5]
   			CT2->CT2_HIST   := SUBSTR(cHist,1,40)
			CT2->CT2_MOEDLC := "01"
			CT2->CT2_MOEDAS := "11111"
			CT2->CT2_EMPORI := Substr(cNumEmp,1,2)
			CT2->CT2_FILORI := XFILIAL()
			CT2->CT2_TPSALD := "1"
			CT2->CT2_MANUAL := "1"
			CT2->CT2_AGLUT  := "2"
			CT2->CT2_LINHA  := STRZERO(nLin,3)
			CT2->CT2_ROTINA := "CSUCTB01"
			CT2->CT2_SEQHIS := "001"

			MsUnLock()

			nLin := nLin + 1


			If  nNum > 1


				nPos    := 41
				nSqHist := 2

				For y := 1 to (nNum-1)

					RecLock("CT2", .T. )
					CT2->CT2_FILIAL := XFILIAL()
					CT2->CT2_DATA   := dDataLan
					CT2->CT2_DC     := "4"
					CT2->CT2_LOTE   := cLote
					CT2->CT2_DOC    := cDoc
					CT2->CT2_SBLOTE := cSbLote
					CT2->CT2_HIST   := SUBSTR(cHist,nPos,40)
					CT2->CT2_LINHA  := STRZERO(nLIN,3)
					CT2->CT2_MOEDLC := "01"
					CT2->CT2_EMPORI := Substr(cNumEmp,1,2)
					CT2->CT2_FILORI := XFILIAL()
					CT2->CT2_TPSALD := "1"
					CT2->CT2_MANUAL := "1"
					CT2->CT2_AGLUT  := "2"
					CT2->CT2_SEQHIS := STRZERO(nSqHist,3)
					CT2->CT2_ROTINA := "CSUCTB01"

					MsUnlock()

					nPos   := nPos + 40
					nSqHist := nSqHist + 1
					nLin := nLin + 1

				Next

			EndIf

		Next


		aLanc := {}


		DbSelectArea("CT2")
		DbSetOrder(1)
		DbSeek( xFilial()+DTOS(dDataLan)+cLote+cSbLote+"999999", .T.  )

		DbSkip(-1)

		If CT2->CT2_DATA == dDataLan .and.  CT2->CT2_LOTE == cLote .and.  CT2->CT2_SBLOTE == cSbLote
			cDOC := StrZero(Val(CT2->CT2_DOC) + 1,6)
		Else
			cDoc := "000001"
		EndIf

		nLin := 1

	EndIf

	DBSELECTAREA("TMP")

ENDDO

DBCLOSEAREA("TMP")

ALERT("TERMINO DA IMPORTACAO")



Return




Static Function ConvTxt(cTextName)
	PRIVATE lnHandle := 0
	lnHandle := FOPEN(cTextName)

	IF lnHandle < 1
		RETURN .F. 
	ENDIF

	PRIVATE nTamArq := 0
	nTamArq := fSeek(lnHandle,0,2)

    fSeek(lnHandle,0)

	PRIVATE lnRead := 0
	PRIVATE lnHndNew := 0
	PRIVATE lcString := ""
	PRIVATE lcWord 	 := ""
	PRIVATE llEnd := .F. 
	PRIVATE lcNewString := ""

	lnHndNew := FCREATE(cTextName + ".OK")

	cTextName := cTextName + ".OK"

	while lnRead<nTamArq

		lcNewString := ""

		lcString := FREADSTR(lnHandle,1024)

		FOR i = 1 TO LEN(lcString)
			lcWord = SUBSTR(lcString,i,1)

			IF lcWord = '"'
				llEnd := !llEnd
			ENDIF

			IF lcWord = "," .AND.  llEnd
				lcWord := " "
			ENDIF

			lcNewString := lcNewString + lcWord
		NEXT


		lnRead := lnRead + LEN(lcNewString)

		FWRITE(lnHndNew,lcNewString)
	ENDDO

	FCLOSE(lnHandle)
	FCLOSE(lnHndNew)

RETURN .T. 



Static Function LimpSema()

cAlias := Alias()

DbSelectArea("SX5")
DbSetOrder(1)
DbSeek(xFilial()+"Z1CSUFIN")

If Found() .and.  !Empty(SX5->X5_DESCRI)
	RecLock("SX5", .f. )
	SX5->X5_DESCRI := " "
	MsUnLock()
EndIf

DbSelectArea(cAlias)

Return