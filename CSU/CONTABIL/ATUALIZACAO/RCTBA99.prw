#INCLUDE "Protheus.ch"
#INCLUDE "TopConn.ch"       

#DEFINE STR001 "Selecione o diretorio de gravação do arquivo de rateio."
#DEFINE GD_INSERT	1
#DEFINE GD_DELETE	4	
#DEFINE GD_UPDATE	2
#DEFINE c_BR Chr(13)+Chr(10)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RCTBA99   ºAutor  ³Vinícius Gregório   º Data ³  22/12/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Cadastro de Regras de Rateio - Modelo 3                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTBA99()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cAliaZB7		:= GetNextAlias() 
Local cUsrLog		:= __cUserID 
Local cCodRat		:= ""
Local cCodIN		:= "" 
Local cUserfull		:= ALLTRIM(SuperGetMV("MV_XUSRRAT",,""))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.02.17 - Inclusão de legenda.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aCores    := {	{'ZB7_COMPON=="1"'						,'BR_AMARELO'	},;
						{'ZB7_PROCESS=="S"'						,'BR_VERMELHO'	},;	// Tabela já processada
					 	{'ZB7_PROCESS=="N" .and. !U_RCTB99Y()'	,'BR_VERDE'		},;	// Tabela nunca processada e com os itens não preenchidos
					 	{'ZB7_PROCESS=="N" .and. U_RCTB99Y()'	,'BR_AZUL'		}}	// Tabela nunca processada e com os itens preenchidos

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.08.03³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cPerg			:= "CTBA99"
Local aRegs			:= {}

Private cAnoMesD	:= ""
Private cAnoMesA	:= ""					 	
					 	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.25                        ³
//³Alteração para exibir os registro recém³
//³gravados.                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lDefTop		:= .F.
Private cAlias 		:= "ZB7"					 	

Private cFilterZB7	:= ""
Private cCadastro 	:= "Cadastro de Tabelas de Rateio"
Private aRotina 	:= MenuDef()
Private aIndexZB7	:= {}
Private bFiltraBrw	:= {|| FilBrowse(cAlias,@aIndexZB7,@cFilterZB7,.T.) }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Pergunte no início da rotina.          ³
//³Necessário para filtrar a quantidade de³
//³tabelas de rateio que farão parte do   ³
//³filtro de usuário.                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd(aRegs,{cPerg,"01","Competência De"			,"","","mv_ch1","D",08,0,0,"G",""			,"MV_PAR01","","","","", "","","","","","","","","","","","","","","","","","","","","","","","","" })
aAdd(aRegs,{cPerg,"02","Competência Até"		,"","","mv_ch2","D",08,0,0,"G",""			,"MV_PAR02","","","","", "","","","","","","","","","","","","","","","","","","","","","","","","" })
aAdd(aRegs,{cPerg,"03","Tabela Rateio De"		,"","","mv_ch3","C",06,0,0,"G",""			,"MV_PAR03","","","","", "","","","","","","","","","","","","","","","","","","","","ZB7COD","","","","" })
aAdd(aRegs,{cPerg,"04","Tabela Rateio Até"		,"","","mv_ch4","C",06,0,0,"G",""			,"MV_PAR04","","","","", "","","","","","","","","","","","","","","","","","","","","ZB7COD","","","","" })

CriaSx1(aRegs)     
If !Pergunte(cPerg,.T.) 
	Return .F.
Endif

cAnoMesD	:= SubStr(DTOS(MV_PAR01),1,6)
cAnoMesA	:= SubStr(DTOS(MV_PAR02),1,6)

//If cUserfull != cUsrLog
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Permite mais de um administrador para a tela.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(cUsrLog$Alltrim(cUserfull))

   	BeginSql Alias cAliaZB7 
		Select ZB6_CODRAT,ZB7_ANOMES from %table:ZB6% ZB6 (NOLOCK), %table:ZB7% ZB7 (NOLOCK)
		WHERE ZB6_FILIAL = %xFilial:ZB6% AND ZB6_USUARI = %exp:cUsrLog% AND ZB6.%NotDel%
		AND ZB6_CODRAT = ZB7_CODRAT AND ZB6_CODRAT BETWEEN %exp:MV_PAR03% AND %exp:MV_PAR04% 
		AND ZB7_ANOMES BETWEEN %exp:cAnoMesD% AND %exp:cAnoMesA% AND ZB7.%NotDel%  
		                                                                                
	  /*	cQuery:=" SELECT DISTINCT ZB6_CODRAT,ZB7_ANOMES FROM ZB7050,ZB6050 "
	  	cQuery+=" WHERE ZB6_CODRAT = ZB7_CODRAT "
	 	cQuery+=" AND ZB6_USUARI='"+cUsrLog+"' "
	 	cQuery+=" AND ZB6_CODRAT BETWEEN '"+MV_PAR03+"' AND '"+MV_PAR04+"' "
  	    cQuery+=" AND ZB7_ANOMES BETWEEN '"+cAnoMesD+"' AND '"+cAnoMesA+"' "       */
  	    
  	  //  dbUseArea( .T., 'TOPCONN', TcGenQry(,,cQuery), cAliaZB7, .T., .F. ) 	
  	EndSQL	
	    
	(cAliaZB7)->(DbGoTop())
 	While !(cAliaZB7)->(EOF())
    	cCodRat += ALLTRIM((cAliaZB7)->ZB6_CODRAT)
		(cAliaZB7)->(DbSkip())
		If !(cAliaZB7)->(EOF())         
			cCodRat += ";"
		Endif	
	EndDo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³VG - 2011.03.25         ³
	//³Fecha a área de trabalho³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	(cAliaZB7)->(dbCloseArea())                                                      	
	
	cCodIN := FormatIn(ALLTRIM(cCodRat), ";")	
	
	#IFDEF TOP
		lDefTop := !(TcSrvType() == "AS/400" .Or. TcSrvType() == "iSeries")
	#ENDIF
	
	lDefTop	:= .F.//VG - 2011.03.25 - Correção para exibir os registros recém gravados para o usuário.
  //	 cAno:="'"+cAnoMesD+"','"+cAnoMesA+"'"
	chkFile(cAlias) 
	If !lDefTop
		//Executa filtro automaticamente
		cFilterZB7	:= "ZB7_CODRAT $'"+STRTRAN(STRTRAN(STRTRAN(cCodIN,")",""),"(",""),"'","")+"'"
	  //	cFilterZB7	+= " .AND. ZB7_ANOMES $'"+STRTRAN(STRTRAN(STRTRAN(cAno,")",""),"(",""),"'","")+"'"
		If Len(cFilterZB7) > 1950//2000
			Aviso("Aviso","O filtro gerado é muito abrangente e os resultados não podem ser exibidos. Por favor, revise os parâmetros de exibição.",{"OK"},,"Atenção",,"BMPPERG")								
			Return .F.
		Endif
		
		DbSelectArea(cAlias)
		dbSetOrder(1)
		Eval(bFiltraBrw)
	Else
		DbSelectArea(cAlias)
		dbSetOrder(1)
		cFilterZB7	:= "ZB7_CODRAT IN"+cCodIN
	EndIf	

ElseIf (cUsrLog $Alltrim(cUserfull))
	cFilterZB7	:= "ZB7_CODRAT <> ' '" 
	Eval(bFiltraBrw)
	DbSelectArea(cAlias)
	dbSetOrder(1) 
Else                       
	DbSelectArea(cAlias)
	dbSetOrder(1) 	
Endif

//mBrowse( 6,1,22,75,cAlias,,,,,,,,,,,,,/*,Iif(lDefTop,cFilterZB7,Nil)*/)                      
mBrowse( 6,1,22,75,cAlias,,,,,,aCores,,,,,,,,Iif(lDefTop,cFilterZB7,Nil))

//Elimina arquivo temporario criado pelo filtro automatico acima
If !lDefTop
	EndFilBrw(cAlias,aIndexZB7)
Endif  

dbSelectArea(cAlias)
dbSetOrder(1)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RCTB99A   ºAutor  ³Vinícius Gregório   º Data ³  22/12/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina para a manutenção das regras de rateio              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTB99A(cAlias,nRecn,nOpcx)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis                									    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAreaZB7		:= ZB7->(GetArea())
Local nCpo,nCnt   
Local nLoop			:= 0
Local nOpcA 		:= 0
Local lSeek
Local aObjects  	:= {}
Local aSize     	:= MsAdvSize()
Local nI			:= 0
Local nStyle 		:= IIF(nOpcX == 2 .Or. nOpcX == 5,0,GD_INSERT+GD_UPDATE+GD_DELETE)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.22             ³
//³Grupo para as informações de³
//³rodapé.                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local oGrpRod		:= Nil
Local oSayTot		:= Nil
Local oSayRest		:= Nil

Local bOk      		:= {|| If( Obrigatorio( oEncMain:aGets, oEncMain:aTela) .And. U_ZB8TudOk(), ( nOpcA := 1, oDlgMain:End() ), nOpcA := 0 ) }
Local bCancel  		:= {|| nOpcA := 0, oDlgMain:End() }
Local aAlias		:= {}

Local cUltRev		:= ""

Private aHeaderZB8 	:= {}
Private aColsZB8 	:= {}
Private oDlgMain
Private oEncMain
Private oFolder
Private oGetZB8	                

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.22             ³
//³Variável para as informações³
//³de rodapé.                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nTotPerc	:= 0       
Private oGetValTot	:= Nil

Private nRestPerc	:= 0
Private oGetValRest	:= Nil

Private aCampos		:= {}
Private aVisual		:= {}
Private aGets		:= {}
Private aTela		:= {}
Private bCampo		:= { |nCPO| Field( nCPO ) }                             
Private aBotao		:= {}
Private nOpc		:= nOpcx  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.22                         ³
//³Definição da fonte para os totalizadores³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Define Font oBoldIV  Name  "Arial"  Size 07 , -13 BOLD    

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.01.06                               ³
//³Verifica se código de rateio não foi utilizado³
//³anteriormente para permitir ou não a deleção. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcX == 5
	If !VerifDel(ZB7->ZB7_CODRAT)// .and. ZB7->ZB7_PROCES == 'S'//VG - 2011.06.09 - trecho de código removido para impedir que os usuários
		//excluam tabelas já utilizadas em notas fiscais - solicitação feita pelo usuário Mafaldo.
		Aviso("Aviso","O código de rateio já foi utilizado anteriormente e portanto não pode ser removido.",{"OK"},,"Atenção",,"BMPPERG")			
		Return .F.  
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Adicionar a funcionalidade de importação no aBotao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aBotao, {"DBG06" 		, { || RCTB99I()}, "Importar cadastro", "Importar" }) 
AADD(aBotao, {"PMSEXCEL" 	, { || RCTB99E()}, "Exportar cadastro", "Exportar" })
AADD(aBotao, {"EXCLUIR"		, { || RCTB99K()}, "Excluir Todos", "Exc. Todos" })
                                             
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Montar os campos da ZB7 para a MsMGet³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd( aCampos, "ZB7_CODRAT" )
aAdd( aCampos, "ZB7_DESCRI" )
//aAdd( aCampos, "ZB7_ANOMES" )//VG - 2011.01.17 - Alteração para visualizar Mês/Ano
aAdd( aCampos, "ZB7_MESANO" )
aAdd( aCampos, "ZB7_REVISA" )
aAdd( aCampos, "ZB7_ATIVO" )
aAdd( aCampos, "ZB7_CCTRAN" )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.02.21 - Alteração para recolocar as ³
//³entidades contábeis de Unidade de Negócio     ³
//³e Operação.                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd( aCampos, "ZB7_ITTRAN" )
aAdd( aCampos, "ZB7_CLTRAN" )
aAdd( aCampos, "ZB7_PROCES" )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.11                  ³
//³Inclusão do campo com o nome     ³
//³do usuário que cadastrou a tabela³
//³de rateio.                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd( aCampos, "ZB7_USRNAM" )
aAdd( aCampos, "ZB7_USRFNA" )//VG - 2011.03.22
aAdd( aCampos, "NOUSER" )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Define a area dos objetos                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aObjects := {}
AAdd( aObjects,{100,060, .t., .f. })
AAdd( aObjects,{100,100, .t., .t. })

aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
aPosObj := MsObjSize( aInfo, aObjects )

RegToMemory("ZB7",nOpcx == 3)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega o ano/mês³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcX <> 3
	M->ZB7_MESANO	:= Substr(M->ZB7_ANOMES,5,2)+Substr(M->ZB7_ANOMES,1,4)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o aCampos 																³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
dbSelectArea("SX3")
SX3->( dbSetOrder(1) )
SX3->( dbSeek("ZB8") )
aHeaderZB8 := {}
While SX3->( !Eof()) .And. SX3->X3_ARQUIVO $ "ZB8" 
	If X3USO(X3_USADO) .And. cNivel >= X3_NIVEL .and.;                          
		( !Alltrim(SX3->X3_CAMPO) $ "ZB8_FILIAL/ZB8_CODRAT/ZB8_ANOMES/ZB8_REVISA/ZB8_CDEBIT")//VG - 2011.01.17 - remover a conta de débito
//		( !Alltrim(SX3->X3_CAMPO) $ "ZB8_FILIAL/ZB8_CODRAT/ZB8_ANOMES/ZB8_REVISA")
		Aadd(aHeaderZB8,{	AllTrim(X3Titulo()),;
						SX3->X3_CAMPO,;
						SX3->X3_PICTURE,;
						SX3->X3_TAMANHO,;
						SX3->X3_DECIMAL,;
						SX3->X3_VALID,;
						SX3->X3_USADO,;
						SX3->X3_TIPO,;
						SX3->X3_F3,;
						SX3->X3_CONTEXT,;
						SX3->X3_CBOX,;
						SX3->X3_RELACAO,;
						SX3->X3_WHEN,;
						SX3->X3_VISUAL,;
						SX3->X3_VLDUSER,;
						SX3->X3_PICTVAR,;
						SX3->X3_OBRIGAT})
	Endif
	SX3->(dbSkip())
EndDo

MontaAcols(aHeaderZB8,"ZB8",1,"ZB7",M->ZB7_CODRAT+M->ZB7_ANOMES+M->ZB7_REVISA,"ZB8_CODRAT+ZB8_ANOMES+ZB8_REVISA",aColsZB8,nOpcX) 

aSort(aColsZB8,,,{|x,y| val(x[1]) < val(y[1])})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se a última revisão já foi processada³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcX == 4            

	cUltRev	:= U_RZB7ULTR(M->ZB7_CODRAT,M->ZB7_ANOMES,.F.)  

	dbSelectArea("ZB7")
	dbSetOrder(1)
	If dbSeek(xFilial("ZB7")+M->ZB7_CODRAT+M->ZB7_ANOMES+cUltRev,.F.)
	
		If ZB7->ZB7_PROCESS == 'S'
					
			Aviso("Aviso","Será gerada uma nova revisão para a tabela de rateio. Por favor, comunique o administrador das tabelas para ativa-la.",{"OK"},,"Atenção",,"BMPPERG")			
		
			M->ZB7_REVISA	:= SOMA1(cUltRev)		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³VG - 2011.03.18                                  ³
			//³Alteração para gravar como inativa a nova revisão³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			M->ZB7_ATIVO	:= 'I'
			M->ZB7_PROCESS	:= 'N'

		ElseIf ZB7->ZB7_PROCESS <> 'S' .and. ZB7->ZB7_REVISA <> Replicate('0', TAMSX3("ZB7_REVISA")[1] )//VG - 2011.04.29 Se não tiver sido processada e se não for a primeira versão da tabela
		
			Aviso("Aviso","Existe uma revisão gerada para essa tabela de rateio no período que ainda não foi processada. Por favor, entre em contato com o administrador das tabelas para maiores informações.",{"OK"},,"Atenção",,"BMPPERG")
			Return .F.
					
		Endif	
	Endif

Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria a tela de digitacao do usuario³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oDlgMain := MSDIALOG():New(aSize[7],00,aSize[6],aSize[5],cCadastro,,,,,,,,/*oMainWnd*/,.T.)

//oEncMain := MSMGet():New("ZB7", ZB7->(RecNo()),/*If(nOpcx==4,2,nOpcx)*/nOpcX,,,,aCampos,{15,5,97,620},If(nOpcX==4,{"ZB7_ATIVO"/*,"ZB7_CCTRAN"*/,"NOUSER"},aCampos),1,,,,oDlgMain,,,,,,.T.,,,)
//oEncMain := MSMGet():New("ZB7", ZB7->(RecNo()),/*If(nOpcx==4,2,nOpcx)*/nOpcX,,,,aCampos,{15,5,97,620},If(nOpcX==4,{"ZB7_ATIVO"/*,"ZB7_CCTRAN"*/,"NOUSER"},aCampos),1,,,,oDlgMain,,,,,,.T.,,,)    
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.18 - Alteração para que novas revisões    ³
//³sejam geradas como inativas. Para torná-las ativas, é  ³
//³necessário que o usuário administrador utilize a rotina³
//³de habilitação de revisão.                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oEncMain := MSMGet():New("ZB7", ZB7->(RecNo()),/*If(nOpcx==4,2,nOpcx)*/nOpcX,,,,aCampos,{15,5,97,620},If(nOpcX==4,If(M->ZB7_REVISA <> "000",{"NOUSER"},{"ZB7_ATIVO"/*,"ZB7_CCTRAN"*/,"NOUSER"}),aCampos),1,,,,oDlgMain,,,,,,.T.,,,)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.22          ³
//³Inclusão de rodapé com o ³
//³percentual já rateado.   ³                                                                            
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
oGrpRod		:= TGroup():New(253,05,270,620,"",oDlgMain,,,.T.)
oSayTot		:= TSay():New(258,370,{||'Perc. Distribuído:'},oDlgMain,,oBoldIV,,,,.T.,CLR_BLUE,CLR_WHITE,60,20)  
oGetValTot	:= TGet():New(255,433,{|u| if(PCount()>0,nTotPerc:=u,nTotPerc)}, oDlgMain,55,10,PesqPict("ZB8","ZB8_PERCEN"),/*valid*/,,,oBoldIV,,,.T.,,,{||.F.},,,,,,,'nTotPerc')

oSayRest	:= TSay():New(258,520,{||'Falta %:'},oDlgMain,,,,,,.T.,CLR_RED,CLR_WHITE,30,20)  
oGetValRest	:= TGet():New(255,553,{|u| if(PCount()>0,nRestPerc:=u,nRestPerc)}, oDlgMain,55,10,PesqPict("ZB8","ZB8_PERCEN"),/*valid*/,,,,,,.T.,,,{||.F.},,,,,,,'nRestPerc')
                                                        
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ MsNewGetDados															    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                                          
oGetZB8 := MsNewGetDados():New(100,05,250,620,nStyle,"U_ZB8LinOk()","U_ZB8TudOk()","+ZB8_SEQUEN",,,9999,,,,oDlgMain,aHeaderZB8,@aColsZB8)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.22                ³
//³OnChange da GetDados atualiza o³
//³percentual já rateado.         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oGetZB8:bChange	:= {||RCTB99Z()}

ACTIVATE MSDIALOG oDlgMain ON INIT EnchoiceBar(oDlgMain,bOk,bCancel,,aBotao)

If nOpcA == 1 .And. ( nOpcx == 5 .or. nOpcx == 4 .or. nOpcx == 3 )

	Begin Transaction       
	
		If nOpcX == 5 .or. nOpcX == 4

			If nOpcX == 5      
			
				dbSelectArea("ZB7")
				ZB7->( dbSetOrder(1) )//ZB7_FILIAL+ZB7_CODRAT+ZB7_ANOMES+ZB7_REVISA+ZB7_ATIVO
				If dbSeek(xFilial("ZB7")+M->ZB7_CODRAT+M->ZB7_ANOMES+M->ZB7_REVISA+M->ZB7_ATIVO,.F.)
					RecLock("ZB7",.F.)
					ZB7->( dbDelete() )
					MsUnLock()
//					FKCOMMIT()
				Endif
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³VG - 2011.06.06                    ³
				//³Alteração que verifica se existem  ³
				//³registros da tabela de rateio para ³
				//³outras competências. Caso não      ³
				//³exista, remove todas as permissões ³
				//³ligadas à tabela.                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("ZB7")
				ZB7->( dbSetOrder(1) )//ZB7_FILIAL+ZB7_CODRAT+ZB7_ANOMES+ZB7_REVISA+ZB7_ATIVO
				If !dbSeek(xFilial("ZB7")+M->ZB7_CODRAT,.F.)
					dbSelectArea("ZBA")
					dbSetOrder(1)//ZBA_FILIAL+ZBA_CODRAT+ZBA_USUARI
					If dbSeek(xFilial("ZBA")+M->ZB7_CODRAT,.F.)
						Do While !EOF() .and. xFilial("ZBA")+M->ZB7_CODRAT==ZBA->(ZBA_FILIAL+ZBA_CODRAT)
							RecLock("ZBA",.F.)
								ZBA->(dbDelete())							
							MsUnlock()							
							dbSelectArea("ZBA")
							ZBA->(dbSkip())						
						EndDo
					Endif					
				Endif				
				
			Endif    
			
			dbSelectArea("ZB8")
			ZB8->( dbSetOrder(1) )//ZB8_FILIAL+ZB8_CODRAT+ZB8_ANOMES+ZB8_REVISA+ZB8_SEQUEN
			If dbSeek(xFilial("ZB8")+M->ZB7_CODRAT+M->ZB7_ANOMES+M->ZB7_REVISA,.F.)    
				Do While !EOF() .and. xFilial("ZB8")==ZB8->ZB8_FILIAL .and. M->ZB7_CODRAT==ZB8->ZB8_CODRAT ;
					.and. M->ZB7_ANOMES==ZB8->ZB8_ANOMES .and. M->ZB7_REVISA==ZB8->ZB8_REVISA
					
					RecLock("ZB8",.F.)
					ZB8->( dbDelete() )
					MsUnlock()
					 
					dbSelectArea("ZB8")
					dbSkip()
				EndDo			
			Endif			
		
		Endif
		
		If nOpcX == 3 .or. nOpcX ==4
		
			dbSelectArea("ZB7")  
			
			If M->ZB7_REVISA <> ZB7->ZB7_REVISA	
				RecLock("ZB7",.T.)
			Else
				RecLock("ZB7",nOpcX==3)
			Endif
			
			ZB7->ZB7_FILIAL := 	xFilial("ZB7")				
			ZB7->ZB7_CODRAT	:= 	M->ZB7_CODRAT
			ZB7->ZB7_DESCRI	:=	M->ZB7_DESCRI
//			ZB7->ZB7_ANOMES	:=	M->ZB7_ANOMES
			ZB7->ZB7_ANOMES	:=	U_RZB7AnoMes(M->ZB7_MESANO)
			ZB7->ZB7_REVISA	:=	M->ZB7_REVISA
			ZB7->ZB7_ATIVO	:=	M->ZB7_ATIVO
			ZB7->ZB7_CCTRAN	:= 	M->ZB7_CCTRAN
			//VG - 2011.02.21
			ZB7->ZB7_ITTRAN	:= 	M->ZB7_ITTRAN
			ZB7->ZB7_CLTRAN	:= 	M->ZB7_CLTRAN			
			ZB7->ZB7_PROCES	:= 	M->ZB7_PROCES
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³VG - 2011.03.11                  ³
			//³Inclusão do campo com o nome     ³
			//³do usuário que cadastrou a tabela³
			//³de rateio.                       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			ZB7->ZB7_USRNAM	:= M->ZB7_USRNAM  
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³VG - 2011.06.09                        ³
			//³Gravação da data de inclusão da tabela.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nOpcX	== 3
				ZB7->ZB7_DTDIGI	:= dDataBase
			Endif			
			ZB7->ZB7_USRFNA	:= M->ZB7_USRFNA//VG - 2011.03.22
			
			MsUnlock()			
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Gravar os itens da getDados somente se eles forem informados.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(Alltrim(oGetZB8:aCols[1,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")]+;
				oGetZB8:aCols[1,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")]+;
				oGetZB8:aCols[1,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")]))

				For nLoop	:= 1 to Len(oGetZB8:aCols)
				
					If oGetZB8:aCols[nLoop,Len(oGetZB8:aHeader)+1]
						Loop
					Endif

					dbSelectArea("ZB8")
					RecLock("ZB8",.T.)
					ZB8->ZB8_FILIAL 	:= 	xFilial("ZB8")				
					ZB8->ZB8_CODRAT		:= 	M->ZB7_CODRAT
//					ZB8->ZB8_ANOMES		:=	M->ZB7_ANOMES
					ZB8->ZB8_ANOMES		:=	U_RZB7AnoMes(M->ZB7_MESANO)
					ZB8->ZB8_REVISA		:=	M->ZB7_REVISA
					ZB8->ZB8_SEQUEN    	:=	oGetZB8:aCols[nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_SEQUEN")]
					ZB8->ZB8_PERCEN    	:=	oGetZB8:aCols[nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_PERCEN")]
					ZB8->ZB8_CCDBTO    	:=	oGetZB8:aCols[nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")]				
					ZB8->ZB8_ITDBTO    	:=	oGetZB8:aCols[nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")]
					ZB8->ZB8_CLVLDB    	:=	oGetZB8:aCols[nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")]
					MsUnlock()										
			
				Next nLoop
			Endif
		
			If nOpcX==3
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³VG - 2011.01.06                          ³
				//³Em caso de inclusão, insere uma permissão³
				//³de manutenção na tabela de rateio para o ³
				//³usuário que a cadastrou.                 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
				dbSelectArea("ZB6")
				RecLock(Alias(),.T.)
				
				ZB6->ZB6_FILIAL	:= xFilial("ZB6")
				ZB6->ZB6_CODRAT	:= M->ZB7_CODRAT
				ZB6->ZB6_USUARI	:= __cUserId
				
				ZB6->(MsUnlock())				

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³VG - 2011.01.14                   ³
				//³Insere uma permissão de utilização³
				//³da tabela para o usuário que a    ³
				//³cadastrou                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("ZBA")
				RecLock(Alias(),.T.)
				
				ZBA->ZBA_FILIAL	:= xFilial("ZBA")
				ZBA->ZBA_CODRAT	:= M->ZB7_CODRAT
				ZBA->ZBA_DESCRI	:= M->ZB7_DESCRI
				ZBA->ZBA_USUARI	:= __cUserId
				
				ZBA->(MsUnlock())
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³VG - 2011.01.10                           ³
				//³Em caso de inclusão, verifica se ja existe³
				//³o codigo incluido na tabela ZB9, se não   ³
				//³inclui o codigo novo.   			         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
				dbSelectArea("ZB9")
				DbSetOrder(1)
				If !DbSeek(xFilial("ZB9")+M->ZB7_CODRAT)
					RecLock("ZB9",.T.)
					
					ZB9->ZB9_FILIAL	:= xFilial("ZB9")
					ZB9->ZB9_CODRAT	:= M->ZB7_CODRAT
					ZB9->ZB9_DESCRI	:= M->ZB7_DESCRI
					
					ZB9->(MsUnlock())
				Endif					
				
			Endif
		
		Endif		

	End Transaction     
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³VG - 2011.03.25            ³
	//³Atualiza o filtro do browse³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
	EditFiltro()

EndIf


Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funao    ³ ZB8LinOk   ³Autor³Vinícius Gregório      ³ Data ³04/01/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descriao ³ Valida os dados de Agente de Vendas da linha digitada      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ZZZTudOk                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno	 ³ EXPL1 =	Verdadeiro na validacao                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ CSU                              						  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function ZB8LinOk()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local x             := 1 
Local lRet			:= .T.
Local aArea         := ZB7->(GetArea())
Local nLinha		:= oGetZB8:nAt
Local nPercentual	:= 0

If oGetZB8:aCols[nLinha,Len(aHeaderZB8)+1]
	Return lRet
EndIf                

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida se tem alguma coisa preenchida junto com o percentual³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_PERCEN")]==0 .or. ;
	Empty(Alltrim(oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")])) .or.;			
	Empty(Alltrim(oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")])) .or.;
	Empty(Alltrim(oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")])) .and. nOpc <> 5

	Aviso("Aviso","Os seguintes campos são obrigatórios: "+RetTitle("ZB8_PERCEN")+", "+;
		RetTitle("ZB8_CCDBTO")+", "+;
		RetTitle("ZB8_ITDBTO")+" e "+;
		RetTitle("ZB8_CLVLDB")+". Por favor, verifique o preenchimento. ",{"OK"},,"Atenção",,"BMPPERG")	
	lRet	:= .F.
	Return lRet

Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida se existe percentual com valor menor que zero - Tatiana A. Barbosa - OS 2256-11 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_PERCEN")]<0

	Aviso("Aviso","O percentual do rateio não pode ser menor que zero. Por favor, verifique o preenchimento. ",{"OK"},,"Atenção",,"BMPPERG")	
	lRet	:= .F.
	Return lRet

Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida se a combinação está dúplicada³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
For x := 1 To Len(oGetZB8:aCols)

	If !oGetZB8:aCols[x][Len(oGetZB8:aHeader)+1]
		nPercentual	+= oGetZB8:aCols[x,BuscaHeader(oGetZB8:aHeader,"ZB8_PERCEN")]
	Endif
	
	If x != nLinha                                       

		If oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")]+;
			oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")]+;
			oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")];
			 == ;
			oGetZB8:aCols[x,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")]+;
			oGetZB8:aCols[x,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")]+;
			oGetZB8:aCols[x,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")] .and.;
			!oGetZB8:aCols[nLinha,Len(oGetZB8:aHeader)+1] .and.;
			!oGetZB8:aCols[x,Len(oGetZB8:aHeader)+1]			
			
			Aviso("Aviso","A combinação "+;
				"C. de Custo: "+Alltrim(oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")])+","+c_BR+;
				"Un. Negócio: "+Alltrim(oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")])+" e "+;
				"Operação: "+Alltrim(oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")])+c_BR+;
				"está duplicado na lista.",;
				{"OK"},,"Atenção",,"BMPPERG")
	
			lRet := .F.						
			Return lRet
		
		Endif                                                                   
	Endif
	
Next x

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verificar se o valor do percentual está acima de 100%.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*If nPercentual > 100 
	Aviso("Aviso","A somatória do percentual é igual a "+Alltrim(STR(nPercentual))+"%. O somatória dos valores deverá totalizar 100%.",{"OK"},,"Atenção",,"BMPPERG")
	lRet	:= .F.
	Return lRet	     	
EndIf*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Validação do cliente para a combinação das entidades contábeis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !U_VldCTBg( oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")], oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")], oGetZB8:aCols[nLinha,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")], Nil )
	lRet	:= .F.
	Return lRet	     	
EndIf
	
RestArea(aArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funao    ³ ZB8TudOk   ³Autor³Vinícius Gregório      ³ Data ³12/07/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descriao ³ Valida os dados de Agente de Vendas da linha digitada      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ZB8TudOk                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno	 ³ EXPL1 =	Verdadeiro na validacao                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ CSU														  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function ZB8TudOk()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis                                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea			:= GetArea()
Local aAreaZB7		:= ZB7->( GetArea())
Local lReturn		:= .T.
Local nLoop			:= 0
Local nOri			:= 0
Local nPercTot		:= 0

If nOpc == 5 .or. nOpc==2
	Return(lReturn)
Endif	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.02.21 - Valida a combinação  ³
//³de Centro de Custo Transitório, Unidade³
//³de Negócio Transitória Operação Transi-³
//³tória.                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !U_VldCTBg( M->ZB7_ITTRAN, M->ZB7_CCTRAN, M->ZB7_CLTRAN, Nil )           
//	VG - 2011.02.21 - Ignorar essa mensagem pois a função do cliente já exibe um aviso de inconsistência.
//	Aviso("Aviso","A combinação de Centro de Custo Transitório, Unidade de Negócio Transitória e Operação Transitória não é válida."+;
//	"Por favor, utilize outra combinação.",{"OK"},,"Atenção",,"BMPPERG")
	lReturn	:= .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se existem registros duplicados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lReturn 
	
//	If ZB7->(DbSeek(xFilial("ZB7")+M->(ZB7_CODRAT+ZB7_ANOMES+ZB7_REVISA))) .and. nOpc==3
	If ZB7->(DbSeek(xFilial("ZB7")+M->ZB7_CODRAT+U_RZB7AnoMes(M->ZB7_MESANO)+M->ZB7_REVISA)) .and. nOpc==3
		Aviso("Aviso","Já existe um cadastro com o Codigo: "+Alltrim(ZB7_CODRAT)+" -Ano/Mes: "+Alltrim(ZB7_ANOMES)+" e Revisão: "+ALLTRIM(ZB7_REVISA)+;
		". Por favor, utilize outro.",{"OK"},,"Atenção",,"BMPPERG")
		lReturn := .F.		
    Endif      
    
Endif 


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se é a inclusão da tabela de rateio. Se for, ³
//³permite que o usuário cadastre apenas o cabeçalho     ³
//³da tabela ou a tabela inteira.                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lReturn
	If nOpc==3 .and. (Empty(Alltrim(oGetZB8:aCols[1,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")]+;
		oGetZB8:aCols[1,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")]+;
		oGetZB8:aCols[1,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")])))

		Aviso("Aviso","A tabela de rateios será criada sem a definição de seus itens. Ela só poderá ser "+c_BR+;
				"utilizada para contabilização depois que as regras de rateio forem definidas.",{"OK"},,"Atenção",,"BMPPERG")	
		
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Valida cada linha ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nLoop := 1 to Len(oGetZB8:aCols)
			nOri 			:= oGetZB8:nAt
			oGetZB8:nAt 	:= nLoop
			lReturn			:= U_ZB8LinOk()
			If !lReturn
				Exit
			Endif
		Next nLoop

		For nLoop := 1 to Len(oGetZB8:aCols)		
			If !oGetZB8:aCols[nLoop][Len(oGetZB8:aHeader)+1]//VG - 2011.03.18 - Correção somatória da porcentagem ignorando as linhas deletadas.
				nPercTot		+= oGetZB8:aCols[nLoop][BuscaHeader(oGetZB8:aHeader,"ZB8_PERCEN")]
			Endif
		Next nLoop
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se a somatória dos percentuais dos itens³
		//³é igual a 100%                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPercTot <> 100
			Aviso("Aviso","A somatória dos percentuais nos itens é diferente de 100%. Por favor, verifique os valores novamente. Somatória Atual: "+Alltrim(STR(nPercTot)),;
				{"OK"},,"Atenção",,"NOCHECKED")	
			lReturn := .F.
		Endif
		
	Endif
Endif

RestArea(aAreaZB7)
RestArea(aArea)
Return(lReturn)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funao    ³ MontaAcols ³Autor³Vinícius Gregório      ³ Data ³22/12/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descriao ³ Preenche o aCols a partir dos arquivos utilizados nas      ³±±
±±³          ³ amarracoes do cliente                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ EXPA1 = aHeader 										      ³±±
±±³			 ³ EXPC2 = Alias a ser pesquisado						      ³±±
±±³			 ³ EXPN3 = Ordem da chave de pesquisa 						  ³±±
±±³			 ³ EXPC4 = Alias do cabeçalho    							  ³±±
±±³			 ³ EXPC5 = Chave para a pesquisa							  ³±±
±±³			 ³ EXPC6 = Condicao para a busca							  ³±±
±±³			 ³ EXPA7 = Array de retorno     							  ³±±
±±³			 ³ EXPN8 = numero com a opcao do cadastro					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno	 ³ EXPA1 =	Copia do aCols									  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MontaAcols(aHeader,cAliasCol,nOrder,cAliasCab,cChave,cCondicao,aColsRet,nOpcX)
Local nX
Local nDec     := 0
Local nUsado   := Len(aHeader)
Local aArea    := ZB7->( GetArea())

Default aColsRet := {} //Define o tipo da variavel, caso o valor seja nulo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se não for inclusão, carrega o aCols com as informações do banco.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcX <> 3

	dbSelectArea(cAliasCol)
	dbSetorder(nOrder)
	MsSeek(xFilial(cAliasCol)+cChave)
	
	While !Eof() .And. xFilial(cAliasCol)==&(cAliasCol+"_FILIAL") .And. &(cCondicao)==cChave
  
	    Aadd(aColsRet,Array(nUsado+1))
	    
	    For nX := 1 to Len(aHeader) 
	
			If aHeader[nX,10] <> "V"
		        aColsRet[Len(aColsRet),nX] := &(FieldName(FieldPos(cAliasCol+SubStr(AllTrim(aHeader[nX,2]),4))))    
			Else   
				If Empty(aHeader[nX,18]) //Nao possui IniBrowse
					aColsRet[Len(aColsRet),nX] := CriaVar(AllTrim(aHeader[nX,2]),.T.)
				Else
					aColsRet[Len(aColsRet),nX] := &(aHeader[nX,18])
				Endif
		   EndIf 
			    
	    Next nX
		    
		aColsRet[Len(aColsRet),nUsado+1] := .F.    
		
		(cAliasCol)->(dbSkip())                                               
				
	EndDo          
	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria o aCols Vazio, caso nao haja dados para edicao          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(aColsRet)==0
	Aadd(aColsRet,Array(nUsado+1))
	Aeval(aHeader,{|x,y|aColsRet[Len(aColsRet),y]:=If(AllTrim(aHeader[y,2])=="ZB8_SEQUEN","01",CriaVar(AllTrim(aHeader[y,2])))})
	
	aColsRet[Len(aColsRet),nUsado+1] := .F.    
EndIf

RestArea(aArea)
Return(aColsRet)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º                            Oficina1                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºPrograma    ³MenuDef ³Definição das rotinas para o programa                            º±±
±±º            ³        ³                                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºProjeto/PL  ³ Definição de opções para o cadastro de regras de rateio.                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSolicitante ³99.99.99³                                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAutor       ³22.12.10³Vinícius Gregório                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParâmetros  ³Nil                                                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno     ³Nil.                                                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºObservações ³                                                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAlterações  ³ 99.99.99 - Consultor - Descrição da Alteração                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MenuDef()
     
Private aRotina   := {	{ "Pesquisar"		,"PesqBrw"   			 	 	,  	0, 1},;
			            { "Visualizar"		,"U_RCTB99A('ZB7',Recno(),2)"	,	0, 2},;
		            	{ "Incluir"			,"U_RCTB99A('ZB7',Recno(),3)"	,	0, 3},;
						{ "Alterar"			,"U_RCTB99A('ZB7',Recno(),4)"	,	0, 4},;
						{ "Excluir"			,"U_RCTB99A('ZB7',Recno(),5)"	,	0, 5},;
						{ "Copiar"			,"U_RCTB99C"				 	,	0, 2},;
						{ "Cp. Mult."		,"U_RCTBAA2"				 	,	0, 2},;
						{ "Hab.Revis."		,"U_RCTB99R"					, 	0, 2},;
						{ "Legenda"			,"U_RCTB99L"					, 	0, 2}}
						
Return(aRotina)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³BuscaHeader³ Autor ³Jaime Wikanski        ³ Data ³            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Pesquisa a posicao do campo no aheader                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function BuscaHeader(aArrayHeader,cCampo)

Return(AScan(aArrayHeader,{|aDados| AllTrim(Upper(aDados[2])) == Alltrim(Upper(cCampo))}))

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RCTB99VA  ºAutor  ³Vinícius Gregório   º Data ³  23/12/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida o ano e mês informados.                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTB99VA(cAnoRef)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea		:= GetArea()
Local lRetorno	:= .T.
Local cAno		:= ""
Local cMes		:= ""

If Len(Alltrim(cAnoRef)) <> 6
//	Aviso("Aviso","A data de referência deve ser completamente preenchida (Ex.: 2010/12)",{"OK"},,"Atenção",,"BMPPERG")		
	Aviso("Aviso","A data de referência deve ser completamente preenchida (Ex.: 12/2010)",{"OK"},,"Atenção",,"BMPPERG")		
	lRetorno	:= .F.
	Return lRetorno
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica o  ano³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//cAno	:= Substr(cAnoRef,1,4)
cAno	:= Substr(cAnoRef,3,4)

If Empty(cAno)
	Aviso("Aviso","O ano deve ser informado.",{"OK"},,"Atenção",,"BMPPERG")		
	lRetorno	:= .F.
	Return lRetorno
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os meses³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ         
//cMes	:= Substr(cAnoRef,5,2)
cMes	:= Substr(cAnoRef,1,2)

If Empty(cAno)
	Aviso("Aviso","O mês deve ser informado.",{"OK"},,"Atenção",,"BMPPERG")		
	lRetorno	:= .F.
	Return lRetorno
ElseIf Val(cMes) < 0 .or. Val(cMes) > 12
	Aviso("Aviso","Mês informado inválido.",{"OK"},,"Atenção",,"BMPPERG")		
	lRetorno	:= .F.
	Return lRetorno
Endif

RestArea(aArea)
Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RCTB99C   ºAutor  ³Vinícius Gregório   º Data ³  28/12/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Tela para a cópia de um rateio                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTB99C()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aRet 		:= {}
Local aPar 		:= {}
Local cCpyZB7	:= GetNextAlias()  
Local cCpyZB8	:= GetNextAlias()  
Local cCodRat	:= ""
Local cAnoMes	:= ""
Local cRevisa	:= ""
Local cStatus	:= ""

//aAdd(aPar,{1,"Qual o novo período"	,Space(06),"@R 9999/99","","","",0,.F.}) 	// Tipo caractere
aAdd(aPar,{1,"Qual o novo período"	,Space(06),"@R 99/9999","","","",0,.F.}) 	// Tipo caractere

// ParamBox(aParamBox, cTitulo			, aRet	  ,bOk, aButtons, lCentered, nPosx, nPosy, /*oMainDlg*/ , cLoad, lCanSave, lUserSave)
If !ParamBox(aPar,"Parametros do processamento",@aRet, ,, , , , ,"RCTB99C",.F., .F.)
	Return
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida o Mês/Ano informado³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !U_RCTB99VA(aRet[1])
	Return
Endif
	    
cCodRat := ZB7_CODRAT
cAnoMes	:= ZB7_ANOMES
cRevisa := ZB7_REVISA
cStatus := ZB7_ATIVO 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a data eh diferente do cadastro que esta sendo copiado³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ZB7->(DbSeek(xFilial("ZB7")+ZB7_CODRAT+U_RZB7AnoMes(aRet[1])+ZB7_REVISA+"A"))	
//	Aviso("Atenção","A data "+substr(aRet[1],1,4)+"/"+substr(aRet[1],5,2)+" não pode ser a mesma da linha copiada, escolha outra por favor.",{"OK"},,"Atenção",,"BMPPERG")
	Aviso("Atenção","A data "+substr(aRet[1],1,2)+"/"+substr(aRet[1],3,4)+" não pode ser a mesma da linha copiada, escolha outra por favor.",{"OK"},,"Atenção",,"BMPPERG")
	Return
Endif

	BeginSql Alias cCpyZB7
		Select * from %table:ZB7% ZB7
		WHERE ZB7.ZB7_FILIAL = %xFilial:ZB7% 
		AND ZB7.ZB7_CODRAT = %exp:cCodRat% 		
		AND ZB7.ZB7_ANOMES = %exp:cAnoMes% 		
		AND ZB7.ZB7_REVISA = %exp:cRevisa% 
		AND ZB7.ZB7_ATIVO = %exp:cStatus% 
		AND ZB7.%notDel%	
	EndSQL         
  
	(cCpyZB7)->(DbGoTop())	
	
	ZB7->(RecLock("ZB7",.T.))
		
		ZB7->ZB7_FILIAL 	:= xFilial("ZB7")
		ZB7->ZB7_CODRAT 	:= (cCpyZB7)->ZB7_CODRAT
		ZB7->ZB7_DESCRI 	:= (cCpyZB7)->ZB7_DESCRI
//		ZB7->ZB7_ANOMES 	:= aRet[1]
		ZB7->ZB7_ANOMES 	:= U_RZB7AnoMes(aRet[1])
		ZB7->ZB7_REVISA 	:= (cCpyZB7)->ZB7_REVISA
		ZB7->ZB7_ATIVO  	:= "A"
		ZB7->ZB7_CCTRAN  	:= (cCpyZB7)->ZB7_CCTRAN
		ZB7->ZB7_ITTRAN  	:= (cCpyZB7)->ZB7_ITTRAN
		ZB7->ZB7_CLTRAN  	:= (cCpyZB7)->ZB7_CLTRAN
		ZB7->ZB7_PROCES  	:= 'N'
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³VG - 2011.03.11                           ³
		//³Coloca o nome do usuário que está copiando³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ZB7->ZB7_USRNAM  	:= UsrRetName(__cUserId)
		ZB7->ZB7_USRNAM  	:= UsrFullName(__cUserId)//VG - 2011.03.22
	
	ZB7->(MsUnlock())    
	
	BeginSql Alias cCpyZB8
		Select * from %table:ZB8% ZB8
		WHERE ZB8.ZB8_FILIAL = %xFilial:ZB8% 
		AND ZB8.ZB8_CODRAT = %exp:cCodRat% 		
		AND ZB8.ZB8_ANOMES = %exp:cAnoMes% 		
		AND ZB8.ZB8_REVISA = %exp:cRevisa% 
		AND ZB8.%notDel%	
	EndSQL            	
	
	(cCpyZB8)->(DbGoTop())	
	
	While !(cCpyZB8)->(Eof())    
		ZB8->(RecLock("ZB8",.T.))	     
	    
	    	ZB8->ZB8_FILIAL := xFilial("ZB8")
	    	ZB8->ZB8_CODRAT := (cCpyZB8)->ZB8_CODRAT
//	    	ZB8->ZB8_ANOMES := aRet[1]
	    	ZB8->ZB8_ANOMES := U_RZB7AnoMes(aRet[1])
	    	ZB8->ZB8_REVISA := (cCpyZB8)->ZB8_REVISA
	    	ZB8->ZB8_SEQUEN := (cCpyZB8)->ZB8_SEQUEN
	    	ZB8->ZB8_CDEBIT := (cCpyZB8)->ZB8_CDEBIT
	    	ZB8->ZB8_PERCEN := (cCpyZB8)->ZB8_PERCEN
	    	ZB8->ZB8_CCDBTO := (cCpyZB8)->ZB8_CCDBTO
	    	ZB8->ZB8_ITDBTO := (cCpyZB8)->ZB8_ITDBTO
	    	ZB8->ZB8_CLVLDB	:= (cCpyZB8)->ZB8_CLVLDB
		
		ZB8->(MsUnlock())
		(cCpyZB8)->(DbSkip())
	EndDo            

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³VG - 2011.03.25      ³
	//³Reinicializa o filtro³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	EditFiltro()
	

Aviso("Atenção","Tabela de Rateios copiada com sucesso!",{"OK"},,"Atenção",,"BMPPERG")

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RCTB99I   ºAutor  ³Rafael Gama		 º Data ³  05/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Importacao dos itens do excel para o aCols                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RCTB99I()

Local aImport	:= {}
Local nI		:= 0
Local nJ		:= 0
Local nK		:= 0

aImport := U_RCTBMA0() 

If Empty(aImport)
	Return
Endif

If Empty(oGetZB8:aCols[1][3])
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³se o acosl estiver vazio, importa do jeito que esta na planilha³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oGetZB8:aCols := {}	
   	For nI := 1 to Len(aImport)
   		Aadd(oGetZB8:aCols,Array(Len(aHeaderZB8)+1))
		For nK := 1 To Len(aHeaderZB8)
			oGetZB8:aCols[nI][nK]	:= CriaVar(aHeaderZB8[nK,2],.F.)
		Next nK
   	
		For nJ := 1 to Len(oGetZB8:aCols[nI])                  			
	    	oGetZB8:aCols[nI][nJ] := If(VALTYPE(aImport[nI][nJ])=="C",STRTRAN(aImport[nI][nJ],CHR(160),""),aImport[nI][nJ])	
		Next nJ
	Next nI	
Else  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³se o acosl estiver preenchido, importa seguindo a sequencida do acols³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nI := 1 to Len(aImport)	
		Aadd(oGetZB8:aCols,Array(Len(aHeaderZB8)+1))
		For nK := 1 To Len(aHeaderZB8)
			oGetZB8:aCols[Len(oGetZB8:aCols)][nK]	:= CriaVar(aHeaderZB8[nK,2],.F.)
		Next nK
	
		For nJ := 1 to Len(oGetZB8:aCols[nI]) 
			If nJ == 1
				oGetZB8:aCols[Len(oGetZB8:aCols)][nJ] := SOMA1(oGetZB8:aCols[Len(oGetZB8:aCols)-1][nJ])
			Else
		   		oGetZB8:aCols[Len(oGetZB8:aCols)][nJ] := If(VALTYPE(aImport[nI][nJ])=="C",STRTRAN(aImport[nI][nJ],CHR(160),""),aImport[nI][nJ])
		   	Endif	
	    Next nJ
	Next nI	
Endif         

Return 
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ RCTB99E  ºAutor  ³Rafael Gama		 º Data ³  03/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Exportacao dos itens da modelo 3 para excel                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RCTB99E()

Local aItensEx 	:= {} 
Local nI		:= 0
Local nJ		:= 0

aItensEx := aClone(oGetZB8:aCols)
  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faz a varredura do acols para adicionar o espaço em branco(CHR(160)) nos campos  ³
//³ que sao caracteres para o excel reconhecer como caractere						³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*If !Empty(oGetZB8:aCols)
	For nI := 1 to Len(oGetZB8:aCols)		
		For nJ := 1 to Len(oGetZB8:aCols[nI])
	    	If Valtype(oGetZB8:aCols[nI][nJ]) == "C"
	        	aItensEx[nI][nJ] := CHR(160)+Alltrim(oGetZB8:aCols[nI][nJ])
			Endif	
	    Next
	Next
Endif*/


MsgRun("Favor Aguardar.....", "Exportando os Registros para o Excel",{||GeraExcel({{"GETDADOS","CONTAS DE RATEIO",oGetZB8:aHeader,aItensEx}})})

Return      
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³ GeraExcel³ Autor ³  Rafael Gama          ³ Data ³ 04/01/2011 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrição ³Funcao que exporta os valores da tela para o Microsoft Excel  ³±±
±±³          ³no formato .CSV                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parâmetros³ Array contendo os objetos a serem exportados                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nil                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ CSU			                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GeraExcel(aExport)

Local aArea		:= GetArea()
Local cDirDocs	:= MsDocPath() 
Local cPath		:= AllTrim(GetTempPath())
Local aCampos	:= {}
Local ny		:= 0
Local nX        := 0
Local nz		:= 0
Local cBuffer   := ""
Local oExcelApp := Nil
Local nHandle   := 0
Local cArquivo  := SuperGetMV("MV_XNOMPLN",,"tabela_de_rateio")
Local _cArquivo	:= ""
Local aHeader	:= {}
Local aCols		:= {}
Local cAuxTxt
Local aParamBox	:= {}
Local aRet		:= {}
Local lArqLocal := ExistBlock("DIRDOCLOC") 
Local cType			:=	"Arquivos XLS|*.XLS|Todos os Arquivos|*.*"

aTamSX3 := TAMSX3("ZB8_SEQUEN")
Aadd(aCampos, { "SEQUENC"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("ZB8_PERCEN")
Aadd(aCampos, { "PERCENT"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("ZB8_CCDBTO")
Aadd(aCampos, { "CCUSTO"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("ZB8_ITDBTO")
Aadd(aCampos, { "UNNEGOC"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("ZB8_CLVLDB")
Aadd(aCampos, { "OPERACA"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

cArq := CriaTrab(aCampos,.T.)
dbUseArea(.T.,"DBFCDX",cArq,"TMPTRB",.f.)
DbSelectArea("TMPTRB")                                           

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria os indices temporarios								³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aInd	:= {}
Aadd(aInd,{CriaTrab(Nil,.F.),"SEQUENC","Sequencia"})

For nA := 1 to Len(aInd)
	IndRegua("TMPTRB",aInd[nA,1],aInd[nA,2],,,OemToAnsi("Criando Índice Temporário...") )
Next nA
DbClearIndex()

For nA := 1 to Len(aInd)
	dbSetIndex(aInd[nA,1]+OrdBagExt())
Next nA

For nLoop := 1 to Len(aExport[1,4])
	RecLock("TMPTRB",.T.)
	TMPTRB->SEQUENC	:= aExport[1,4,nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_SEQUEN")]
	TMPTRB->PERCENT	:= aExport[1,4,nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_PERCEN")]
	TMPTRB->CCUSTO	:= aExport[1,4,nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_CCDBTO")]
	TMPTRB->UNNEGOC	:= aExport[1,4,nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_ITDBTO")]
	TMPTRB->OPERACA	:= aExport[1,4,nLoop,BuscaHeader(oGetZB8:aHeader,"ZB8_CLVLDB")]
	MsUnlock()
Next nLoop
                                  
//_cArquivo := __RELDIR+cArquivo+".xls"//VG - 2011.02.28 - na homologação o __RELDIR é no C:\ do usuário!!!
_cArquivo := cDirDocs+ "\" +cArquivo+".xls"

Copy to &_cArquivo
dbCloseArea("TMPTRB")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega o Excel com o Arquivo Criado              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//If lArqLocal
//	cArquivo := cPath + "\" + cArquivo
//Else
//	cArquivo := cDirDocs + "\" + cArquivo
//Endif

//cPath  := AllTrim(GetTempPath())
CpyS2T( _cArquivo , cPath, .T. )
If ! ApOleClient( 'MsExcel' )
	MsgStop( "MsExcel nao instalado" )
	Return
EndIf
oExcelApp := MsExcel():New()
oExcelApp:WorkBooks:Open( cPath+cArquivo+".xls" ) // Abre uma planilha
oExcelApp:SetVisible(.T.)

RestArea(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³VerifDel  ºAutor  ³V. Gregório         º Data ³  06/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se não existe nenhum registro de SEV que utiliza  º±±
±±º          ³ esse código de rateio.                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function VerifDel(cCodRat)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lRetorno	:= .T.     
Local cQry		:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta a query³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cQry	:= "SELECT count(*) CONTADOR FROM "+RetSQLName("SEV")+" "+c_BR
cQry	+= "WHERE EV_FILIAL = '"+xFilial("SEV")+"' "+c_BR
cQry	+= "AND EV_XCODRAT = '"+cCodRat+"' "+c_BR
cQry	+= "AND D_E_L_E_T_ <> '*' "+c_BR

If Select("TMPDEL") > 0
	DbSelectArea("TMPDEL")
	DbCloseArea()
Endif
MsAguarde({|| DbUseArea(.T., "TOPCONN", TCGenQry(,,cQry),"TMPDEL", .F., .T.)}, "Verificando se não foi utilizado anteriormente...")

If TMPDEL->CONTADOR > 0
	lRetorno	:= .F.
Endif

Return lRetorno 
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ RCTBMA2  ºAutor  ³Rafael Gama         º Data ³  11/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se a descricao do registro da ZB7 esta igual a    º±±
±±º          ³ outra descricao com o mesmo código de rateio.		      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTBMA2()

Local lRet 		:= .T.  
Local cAliasZB7	:= GetNextAlias()

     
	If Select(cAliasZB7) > 0
		DbSelectArea(cAliasZB7)
		DbCloseArea()
	Endif  

	BeginSql Alias cAliasZB7 
	
		Select Distinct ZB7_CODRAT, ZB7_DESCRI from %table:ZB7% (NOLOCK)
		Where ZB7_FILIAL = %xFilial:ZB7% AND ZB7_CODRAT = %exp:M->ZB7_CODRAT% AND %notDel%	
		
	EndSQL
    
    If !(cAliasZB7)->(Eof())
		If ALLTRIM(M->ZB7_DESCRI) <> ALLTRIM((cAliasZB7)->ZB7_DESCRI)
			Aviso("Aviso","A descrição não pode ser diferente do Rateio "+ALLTRIM(M->ZB7_CODRAT)+".!",{"OK"},,"Atenção",,"BMPPERG")
		    lRet := .F.
		Endif
	Endif				    
	
	DbSelectArea(cAliasZB7)
	DbCloseArea()

Return(lRet)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ RCTBMA3  ºAutor  ³Rafael Gama         º Data ³  11/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se o codigo a cadastrar eh permito para o usuario º±±
±±º          ³ que esta logado.										      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTBMA3()

Local lRet 			:= .T.  
Local cUserfull		:= ALLTRIM(SuperGetMV("MV_XUSRRAT",,""))

If cUserfull <> __cUserID
	ZB6->(Dbsetorder(1))
	If ZB6->(DbSeek(xFilial("ZB6")+M->ZB7_CODRAT))
		If !ZB6->(DbSeek(xFilial("ZB6")+M->ZB7_CODRAT+__cUserID,))
			Aviso("Aviso","Código utilizado anteriormente e o usuáro não tem permissão para inclusão do codigo "+ALLTRIM(M->ZB7_CODRAT)+".",{"OK"},,"Atenção",,"BMPPERG")
			lRet := .F.  
		Endif
	Endif
Endif

Return(lRet)                                     

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RZB7AnoMesºAutor  ³Vinícius Gregório   º Data ³  17/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Inverter o ano e mês para gravar na base de dados.         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RZB7ANOMES(cMesAno)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea		:= GetArea()
Local cRetorno	:= ""

cRetorno	:= Substr(cMesAno,3,4)+Substr(cMesAno,1,2)

RestArea(aArea)
Return cRetorno


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RCTB99L   ºAutor  ³Vinícius Gregório   º Data ³  17/02/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Exibe a legenda do browse                                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTB99L()                
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aLegenda := {}
               
aAdd(aLegenda, {"BR_VERDE"  	,"Tabela pendente de atualização"}) 	
aAdd(aLegenda, {"BR_VERMELHO"	,"Tabela processada"})
aAdd(aLegenda, {"BR_AZUL"		,"Tabela atualizada"})  
aAdd(aLegenda, {"BR_AMARELO"	,"Tabela componente"})//VG - 2011.06.09

BrwLegenda("Tabelas de Rateio","Legenda" ,aLegenda) //"Legenda"        
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ RCTB99Y  ºAutor  ³Vinícius Gregório   º Data ³  17/02/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina para validação de legenda                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTB99Y()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea		:= GetArea()
Local lRetorno	:= .F.

dbSelectArea("ZB8")
dbSetOrder(1)//ZB8_FILIAL+ZB8_CODRAT+ZB8_ANOMES+ZB8_REVISA+ZB8_SEQUEN
If dbSeek(ZB7->ZB7_FILIAL+ZB7->ZB7_CODRAT+ZB7->ZB7_ANOMES+ZB7->ZB7_REVISA,.F.)
	lRetorno	:= .T.
Endif          

dbSelectArea("ZB7")

Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ RCTB99Z  ºAutor  ³Vinícius Gregório   º Data ³  03/03/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Calcular a somatória dos percentuais                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RCTB99Z()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea		:= GetArea()
Local nLoop		:= 0 
Local nPercTot	:= 0

For nLoop := 1 to Len(oGetZB8:aCols)		
	If !oGetZB8:aCols[nLoop][Len(oGetZB8:aHeader)+1]//VG - 2011.03.18 - Correção somatória da porcentagem ignorando as linhas deletadas.
		nPercTot		+= oGetZB8:aCols[nLoop][BuscaHeader(oGetZB8:aHeader,"ZB8_PERCEN")]
	Endif
Next nLoop

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VG - 2011.03.22        ³
//³Atualiza as informações³
//³de totalização.        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTotPerc	:=	nPercTot 
nRestPerc	:= 100-nPercTot
If oGetValTot <> Nil .and. oGetValRest <> Nil
	oGetValTot:Refresh()                     
	oGetValRest:Refresh()
Endif

Return                      

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ RCTB99K  ºAutor  ³Vinícius Gregório   º Data ³  03/03/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina para deletar todos os itens.                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RCTB99K()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                       
Local nLoop	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Marcar todos os registros da GetDados como deletados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nLoop := 1 to Len(oGetZB8:aCols)
	oGetZB8:aCols[nLoop][Len(aHeaderZB8)+1]	:= .T.
Next nLoop

Return 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RCTB99R   ºAutor  ³Vinícius Gregório   º Data ³  18/03/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina para habilitar novas revisões                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CSU                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RCTB99R()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea		:= GetArea()
Local cUserAdm	:= ALLTRIM(SuperGetMV("MV_XRATBLQ",,""))//usuário com prermissão para desbloquear revisões

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o usuário tem permissão para habilitar revisões³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If __cUserId <> cUserAdm
	Aviso("Aviso","Usuário sem permissões para essa operação.",{"OK"},,"Atenção",,"BMPPERG")			
	Return .F.	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se é uma revisão.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ZB7->ZB7_REVISA == "000"
	Aviso("Aviso","O registro selecionado não é uma revisão de tabela de rateio.",{"OK"},,"Atenção",,"BMPPERG")			
	Return .F.	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se está inativa  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ZB7->ZB7_ATIVO <> 'I'
	Aviso("Aviso","A revisão já está ativa.",{"OK"},,"Atenção",,"BMPPERG")			
	Return .F.	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ativa a revisão³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("ZB7")
RecLock("ZB7",.F.)
	ZB7->ZB7_ATIVO := 'A'
MsUnlock()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Pergunta se o usuário deseja estornar ³
//³todas as contabilizações de rateio já ³
//³processadas para aquela tabela.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Aviso("Estorno","Deseja estornar todos os documentos de entradas com rateio já processado para essa tabela no período?",;
	{"Sim","Não"},,"Atenção",,"BMPPERG")==1
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Estorna todas notas contabilizadas para aquela tabela de rateio no período.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ProcEst()	
Endif

RestArea(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ProcEst   ºAutor  ºVinícius Gregório                     º Data º  07/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescrio ³ Processa o estorno das notas rateadas para a tabela de rateio na vigência.   º±±
±±º          ³                                                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³                                                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³CSU        		                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
                                                                    
Static Function ProcEst()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nTotRegs		:= 0
Local cQry			:= ""
Local nX			:= 0
Local nCountReg		:= 1

Local cDataDe 	:=	"01/"+Substr(ZB7->ZB7_ANOMES,5,2)+"/"+Substr(ZB7->ZB7_ANOMES,1,4)
Local cDataAte	:= 	LastDay(CTOD("01/"+Substr(ZB7->ZB7_ANOMES,5,2)+"/"+Substr(ZB7->ZB7_ANOMES,1,4)))
Local cRatDe	:= 	ZB7->ZB7_CODRAT
Local cBranco	:= ""

Local aIndisp	:= {}

Local cUltRev	:= ""
Local cAnoMes	:= ""       

Local nA 			:= 0
Local aCampos 		:= {}
Local aDescCpo		:= {}
Local aTamSX3		:= {}
Local cArq 			:= ""
Private aInd  		:= {}
Private Qry 		:= GetNextAlias()
                         
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta os campos do arquivo temporario para markbrowse ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
Aadd(aCampos, { "TMP_OK"    	,"C",02,0 })                        

aTamSX3 := TAMSX3("F1_FILIAL")
Aadd(aCampos, { "TMP_FILIAL"	,aTamSX3[3],aTamSX3[1],aTamSX3[2]})    

aTamSX3 := TAMSX3("F1_DOC")
Aadd(aCampos, { "TMP_DOC"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("F1_SERIE")
Aadd(aCampos, { "TMP_SERIE"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("F1_FORNECE")
Aadd(aCampos, { "TMP_FORNEC"	,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("F1_LOJA")
Aadd(aCampos, { "TMP_LOJA"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("A2_NREDUZ")
Aadd(aCampos, { "TMP_NREDUZ"	,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("ZB7_CODRAT")
Aadd(aCampos, { "TMP_CODRAT"	,aTamSX3[3],aTamSX3[1],aTamSX3[2]})    

aTamSX3 := TAMSX3("ZB7_DESCRI")
Aadd(aCampos, { "TMP_DESCRI"	,aTamSX3[3],aTamSX3[1],aTamSX3[2]})    

aTamSX3 := TAMSX3("F1_DUPL")
Aadd(aCampos, { "TMP_DUPL"		,aTamSX3[3],aTamSX3[1],aTamSX3[2]})

aTamSX3 := TAMSX3("F1_EMISSAO ")
Aadd(aCampos, { "TMP_EMISSA "	,aTamSX3[3],aTamSX3[1],aTamSX3[2]})    

aTamSX3 := TAMSX3("ED_CODIGO")
Aadd(aCampos, { "TMP_NATURE"	,aTamSX3[3],aTamSX3[1],aTamSX3[2]})    

aTamSX3 := TAMSX3("ED_DESCRIC")
Aadd(aCampos, { "TMP_NATDES"	,aTamSX3[3],aTamSX3[1],aTamSX3[2]})    

Aadd(aCampos, { "TMP_MARCA"    	,"C",01,0 })//VG - campo que irá permitir marcar ou não

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta array com a descricao dos campos a serem exibidos ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCpos := { {"TMP_OK"		,,""},; //"OK" 
	  	   {"TMP_FILIAL"	,,"Filial"},; //"Filial"	 
	  	   {"TMP_DOC"		,,"Documento"},; //"Documento"	 
	  	   {"TMP_SERIE"		,,"Serie"},; //"Serie"
   		   {"TMP_DUPL"		,,"Duplicata"},; //"Duplicata"
   	  	   {"TMP_FORNEC"	,,"Fornecedor"},; //"Forneceodr"
		   {"TMP_LOJA"		,,"Loja"},; //"Loja"
   		   {"TMP_NREDUZ"	,,"Nome"},; //"Nome"
   		   {"TMP_NATURE"	,,"Cod Natureza"},; //"Cod Natureza"
   		   {"TMP_NATDES"	,,"Nome Natureza"},; //"Descricao Natureza"
   		   {"TMP_CODRAT"	,,"Cod. Rateio"},; //"Nome"
   		   {"TMP_DESCRI"	,,"Descr. Rateio"},; //"Nome"
   		   {"TMP_EMISSA"	,,"Emissao"} }  //"Nome" 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria o arquivo temporario								³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cArq := CriaTrab(aCampos,.T.)
dbUseArea(.T.,"DBFCDX",cArq,"TRB",.f.)
DbSelectArea("TRB")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria os indices temporarios								³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aInd	:= {}
Aadd(aInd,{CriaTrab(Nil,.F.),"TMP_FILIAL+TMP_DOC+TMP_SERIE+TMP_FORNEC+TMP_LOJA","Filial+Doc+Serie+Fornece+Loja"})

For nA := 1 to Len(aInd)
	IndRegua("TRB",aInd[nA,1],aInd[nA,2],,,OemToAnsi("Criando Índice Temporário...") )
Next nA
DbClearIndex()

For nA := 1 to Len(aInd)
	dbSetIndex(aInd[nA,1]+OrdBagExt())
Next nA

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Alimenta a variavel utilizada para marcacao           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cMarca := GetMark(,"TRB","TMP_OK")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Query para pegar os Documentos de Entrada³
//³que ainda não foram processados.         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//VG - 2011.03.03 - Removi a filial da query na SF1 a pedido da usuária Mirian. As tabelas SEV e SED são compartilhadas.
//Isso pode atrapalhar consideravelmente a performance dessa consulta na tabela SF1!!!
BeginSql alias Qry

	SELECT F1_FILIAL, F1_DOC,F1_SERIE,F1_FORNECE,F1_LOJA,F1_DUPL,F1_EMISSAO, EV_XCODRAT ZB7_CODRAT, ED_CODIGO, ED_DESCRIC 
	FROM %table:SF1% SF1(NOLOCK),%table:SEV% SEV(NOLOCK), %table:SED% SED(NOLOCK)
	WHERE F1_XPRORAT = '1'
		AND F1_EMISSAO BETWEEN %Exp:cDataDe% AND %Exp:cDataAte%
		AND F1_DTLANC <> '        '
		AND SF1.%notDel%             
    	AND EV_FILIAL = %xfilial:SEV%
	    AND EV_NUM = F1_DOC 
    	AND EV_PREFIXO = F1_PREFIXO      
    	AND EV_CLIFOR = F1_FORNECE
    	AND EV_LOJA = F1_LOJA
    	AND EV_XCODRAT = %Exp:cRatDe%
	    AND SEV.%notDel%   
       	AND ED_FILIAL = %xfilial:SED%
	    AND ED_CODIGO = EV_NATUREZ
   	    AND SED.%notDel%   
	    		
EndSql                              

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a quantidade de registros a processar			³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
(Qry)->( DbEval( {|| nTotRegs++},,{ || !Eof()} ))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Alimenta o arquivo de trabalho                			³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea(Qry)
DbGoTop()
ProcRegua(nTotRegs)
While !Eof()
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Incrementa a regua de processanto            			³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc("Processando registro "+Alltrim(Str(nCountReg))+" de "+Alltrim(Str(nTotRegs))+".")
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava os registros na tabela temporaria      			³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("TRB")
	DbSetOrder(1)
	RecLock("TRB",.T.)
	
	TRB->TMP_FILIAL	:= (QRY)->F1_FILIAL
	TRB->TMP_OK		:= cMarca//Space(02)
	TRB->TMP_DOC	:= (QRY)->F1_DOC
	TRB->TMP_SERIE	:= (QRY)->F1_SERIE
	TRB->TMP_FORNEC	:= (QRY)->F1_FORNECE
	TRB->TMP_LOJA 	:= (QRY)->F1_LOJA
	TRB->TMP_NREDUZ	:= Posicione("SA2",1,xFilial("SA2")+(QRY)->F1_FORNECE+(QRY)->F1_LOJA,"A2_NREDUZ")
	TRB->TMP_CODRAT	:= (QRY)->ZB7_CODRAT
	TRB->TMP_DESCRI	:= Posicione("ZB7",1,xFilial("ZB7")+(QRY)->ZB7_CODRAT,"ZB7_DESCRI")
	TRB->TMP_DUPL	:= (QRY)->F1_DUPL
	TRB->TMP_EMISSA	:= Stod((QRY)->F1_EMISSAO)
	TRB->TMP_NATURE	:= (QRY)->ED_CODIGO
	TRB->TMP_NATDES	:= (QRY)->ED_DESCRIC
	TRB->TMP_MARCA	:= Space(01)
    
	MsUnlock()
	
	nCountReg++
	
	DbSelectArea(QRY)
	DbSkip()
	
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a area do arquivo de execucao da query ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Select(QRY) > 0
	DbSelectArea(QRY)
	DbCloseArea()
Endif        

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Buscar os lançamentos contábeis relativos à nota.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TRB")
dbSetOrder(1)//TMP_FILIAL+TMP_DOC+TMP_SERIE+TMP_FORNEC+TMP_LOJA
dbGoTop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Processa o estorno dos rateios.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_CTBMA4PR(.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Apaga a tabela temporária. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Select("TRB") > 0
	DbSelectArea("TRB")
	DbCloseArea()
	FErase(cArq+GetDbExtension())
	For nA := 1 to Len(aInd)
		FErase(aInd[nA,1]+OrdBagExt())
	Next nA
Endif

Return(Nil)  


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³EditFiltroºAutor  ³Vinícius Gregório   º Data ³  25/03/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function EditFiltro()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaração de variáveis³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cAliaZB7		:= GetNextAlias() 
Local cUsrLog		:= __cUserID 
Local cCodRat		:= ""
Local cCodIN		:= "" 
Local cUserfull		:= ALLTRIM(SuperGetMV("MV_XUSRRAT",,""))

If !lDefTop

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Encerra o filtro anterior.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	EndFilBrw(cAlias,aIndexZB7)
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Remonta o filtro³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !(cUsrLog$Alltrim(cUserfull))

		BeginSql Alias cAliaZB7 
			Select ZB6_CODRAT from %table:ZB6% ZB6 (NOLOCK), %table:ZB7% ZB7 (NOLOCK)
			WHERE ZB6_FILIAL = %xFilial:ZB6% AND ZB6_USUARI = %exp:cUsrLog% AND ZB6.%NotDel%
			AND ZB6_CODRAT = ZB7_CODRAT AND ZB6_CODRAT BETWEEN %exp:MV_PAR03% AND %exp:MV_PAR04% 
			AND ZB7_ANOMES BETWEEN %exp:cAnoMesD% AND %exp:cAnoMesA% AND ZB7.%NotDel%
		EndSQL	
	    
		(cAliaZB7)->(DbGoTop())
	
		While !(cAliaZB7)->(EOF())
    		cCodRat += ALLTRIM((cAliaZB7)->ZB6_CODRAT)
			(cAliaZB7)->(DbSkip())
			If !(cAliaZB7)->(EOF())         
				cCodRat += ";"
			Endif	
		EndDo       
		
		(cAliaZB7)->(dbCloseArea())
	
		cCodIN := FormatIn(ALLTRIM(cCodRat), ";")	
	
//		cFilterZB7	:= "ZB7_CODRAT $ "+cCodIN
		cFilterZB7	:= "ZB7_CODRAT $'"+STRTRAN(STRTRAN(STRTRAN(cCodIN,")",""),"(",""),"'","")+"'"
		
		If Len(cFilterZB7) > 2000
			Aviso("Aviso","O filtro gerado é muito abrangente e os resultados não podem ser exibidos. Por favor, revise os parâmetros de exibição.",{"OK"},,"Atenção",,"BMPPERG")								
			Return .F.
		Endif
		
		DbSelectArea(cAlias)
		dbSetOrder(1)
		Eval(bFiltraBrw)

	ElseIf (cUsrLog $Alltrim(cUserfull))
		cFilterZB7	:= "ZB7_CODRAT <> ' '" 
		Eval(bFiltraBrw)
		DbSelectArea(cAlias)
		dbSetOrder(1) 
	
	Endif
   
Endif

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º Programa    ³ CriaSx1  ³ Verifica e cria um novo grupo de perguntas com base nos      º±±
±±º             ³          ³ parâmetros fornecidos                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Solicitante ³ 23.05.05 ³ Modelagem de Dados                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Autor       ³ 28.04.04 ³ TI0607 - Almir Bandina                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Produção    ³ 99.99.99 ³ Ignorado                                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Parâmetros  ³ ExpA1 = array com o conteúdo do grupo de perguntas (SX1)                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Retorno     ³ Nil                                                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Observações ³                                                                         º±±
±±º             ³                                                                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Alterações  ³ 99/99/99 - Consultor - Descricao da alteração                           º±±
±±º             ³                                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CriaSx1(aRegs)

Local aAreaAtu	:= GetArea()
Local aAreaSX1	:= SX1->(GetArea())
Local nJ		:= 0
Local nY		:= 0

dbSelectArea("SX1")
dbSetOrder(1)

For nY := 1 To Len(aRegs)
	If !MsSeek(Padr(aRegs[nY,1],Len(SX1->X1_GRUPO))+aRegs[nY,2])
		RecLock("SX1",.T.)
		For nJ := 1 To FCount()
			If nJ <= Len(aRegs[nY])
				FieldPut(nJ,aRegs[nY,nJ])
			EndIf
		Next nJ
		MsUnlock()
	EndIf
Next nY

RestArea(aAreaSX1)
RestArea(aAreaAtu)
Return(Nil)