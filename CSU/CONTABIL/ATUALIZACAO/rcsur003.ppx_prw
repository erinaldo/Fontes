#line 1 "C:\INCLUDE\rwmake.ch"
#line 1 "C:\INCLUDE\stdwin.ch"
#line 14 "rwmake.ch"
#line 2 "c:\users\cst1350.br\desktop\PROJET~1\contabil\ATUALI~1\rcsur003.prw"
#line 1 "C:\INCLUDE\TOPCONN.ch"
#line 18 "c:\users\cst1350.br\desktop\PROJET~1\contabil\ATUALI~1\rcsur003.prw"
Function U_RCSUR003()

Processa({|| PROCESINC() },"Aguarde Processamento das Inconsistencia...")
RETURN

STATIC FUNCTION PROCESINC()

LOCAL _cContaSint   := 0
LOCAL _cDescSint    := 0
LOCAL _nVLRCT       := 0
LOCAL _cContSi1     := 0
LOCAL _cDescSi1     := 0
LOCAL _nVLRCT1      := 0
LOCAL _nX           := 0
LOCAL _nR 	        := 0
Local _nPoscon      := 0
Local _cANTCUS      := ""
Local _cAntcon      := ""
Private aOrd 		:= {}
Private cDesc1      := "Este programa lista as possiveis inconsistencia nos centros de custos"
Private cDesc2      := ""
Private cDesc3      := ""
Private lEnd        := .F. 
Private lAbortPrint := .F. 
Private limite      := 80
Private tamanho     := "M"
Private nomeprog    := "RCSUR03"
Private aReturn     := { "Zebrado", 1, "Administracao", 2, 2, 1, "", 1}
Private nLastKey    := 0
Private titulo      := " Rel. de inconsisitencia de Centro de Custo x Conta Contabil"
Private nLin        := 80
Private Cabec1      := "Centro Custo             Conta Contabil           Descricao                                                       Valor"
Private Cabec2      := ""
Private cbtxt       := Space(10)
Private cbcont      := 00
Private CONTFL      := 01
Private m_pag       := 01
Private imprime     := .T. 
Private wnrel       := "IMPSE2"
Private cPerg       := ""
Private _cString    := "CT3"
PRIVATE _aVeterr    := {}
Private _aVetimp    := {}
Private _aVetimp2    := {}
Private _aVetimp3   := {}

_cCDesp             :=  "50100/5015520/50200/50300/50400/50873/50880/50881/50900/50910/50920/50930/50940/51120/51200"
_aCtadespini        := "302"
_aCtadespfin        := "30213"

cQuery := "SELECT  CT3.CT3_CUSTO ,CT3.CT3_CONTA,CT3.CT3_DATA,CT3.CT3_ATUDEB"
cQuery := cQuery + ",CT3.CT3_ATUCRD,CT3.CT3_DEBITO,CT3.CT3_CREDIT"
cQuery := cQuery + " FROM "+retsqlname("CT3")+"  CT3  "
cQuery := cQuery + " WHERE CT3.CT3_CONTA BETWEEN '301' And '302213' "

cQuery := cQuery + " AND CT3.CT3_DATA BETWEEN '20050101' And '20051231'  "
cQuery := cQuery + " AND CT3.D_E_L_E_T_ = ' ' "
cQuery := cQuery + " ORDER BY CT3.CT3_CUSTO,CT3.CT3_CONTA"

IF Select("TMP") > 0
     DbSelectArea("TMP")
     DbCloseArea()
Endif

dbUseArea(.T., "TOPCONN", TCGENQRY(,,cQuery), "TMP" , .F. , .T. )
DbSelectArea("TMP")
DBGOTOP()
while TMP->(!Eof())

    Incproc("Processando Centro de custo "+TMP->CT3_CUSTO)

    IF ALLTRIM(TMP->CT3_CUSTO)$_cCDesp


        IF TMP->CT3_CONTA >= _aCtadespini .AND.  TMP->CT3_CONTA <=_aCtadespfin
           DBSKIP()
           LOOP
        ELSE

           aAdd(_aVeterr,{TMP->CT3_CUSTO,TMP->CT3_CONTA,TMP->CT3_DATA,TMP->CT3_DEBITO,TMP->CT3_CREDIT})

        ENDIF
    ELSE


       IF TMP->CT3_CONTA >= _aCtadespini .AND.  TMP->CT3_CONTA <=_aCtadespfin

          aAdd(_aVeterr,{TMP->CT3_CUSTO,TMP->CT3_CONTA,TMP->CT3_DATA,TMP->CT3_DEBITO,TMP->CT3_CREDIT})

       ELSE
          DBSKIP()
          LOOP
       ENDIF

    ENDIF

    DBSELECTAREA("TMP")
    DBSKIP()

Enddo



FOR _nX:=1 TO LEN(_aVeterr)

      IF  _aVeterr[_nX][1] <> _cANTCUS
           _nVLRCT := 0
           DbSelectArea("CT1")
		   DbSetOrder(1)
           If dbSeek(xFilial("CT1")+_aVeterr[_nX][2])
                _nPosCT1 	:= Recno()
                _cContaPai	:= CT1->CT1_CTASUP
                If dbSeek(xFilial("CT1")+_cContaPai)
           		      _cContaSint 	:= CT1->CT1_CONTA
           		      _cDescSint	:= &("CT1->CT1_DESC"+"01")
           		      If Empty(_cDescSint)
			                  _cDescSint := CT1->CT1_DESC01
           		      Endif
              	EndIf

	            dbGoto(_nPosCT1)
           EndIf

           IF _aVeterr[_nX][4] > 0
                    _nVLRCT := _nVLRCT + _aVeterr[_nX][4]
           ENDIF
           IF _aVeterr[_nX][5] > 0
                   _nVLRCT := _nVLRCT - _aVeterr[_nX][5]
           ENDIF
           aAdd(_aVetimp,{_aVeterr[_nX][1],_cContaSint,_cDescSint,_nVLRCT})
           _cAntcon  := _aVeterr[_nX][2]
           _cAntcus  := _aVeterr[_nX][1]
      ELSE
          IF  _aVeterr[_nX][2] <> _cANTCON
                _nVLRCT := 0
                DbSelectArea("CT1")
				DbSetOrder(1)
                If dbSeek(xFilial("CT1")+_aVeterr[_nX][2])
             	     _nPosCT1 	:= Recno()
            	     _cContaPai	:= CT1->CT1_CTASUP
             	     If dbSeek(xFilial("CT1")+_cContaPai)
            		      _cContaSint 	:= CT1->CT1_CONTA
            		      _cDescSint	:= &("CT1->CT1_DESC"+"01")
            		      If Empty(_cDescSint)
			                  _cDescSint := CT1->CT1_DESC01
             		      Endif
              	     EndIf
	                 dbGoto(_nPosCT1)
                EndIf
                IF _aVeterr[_nX][4] > 0
                     _nVLRCT := _nVLRCT + _aVeterr[_nX][4]
                ENDIF
                IF _aVeterr[_nX][5] > 0
                     _nVLRCT := _nVLRCT - _aVeterr[_nX][5]
                ENDIF
                aAdd(_aVetimp,{_cAntcus,_cContaSint,_cDescSint,_nVLRCT})
                _cAntcon  := _aVeterr[_nX][2]

           ELSE
                IF _aVeterr[_nX][4] > 0
                     _nVLRCT := _nVLRCT + _aVeterr[_nX][4]
                ENDIF
                IF _aVeterr[_nX][5] > 0
                     _nVLRCT := _nVLRCT - _aVeterr[_nX][5]
                ENDIF

                _nPoscon  := Ascan(_aVetimp,{|x| x[1] == _cAntcus .and.  x[2] == _cContaSint    })
                _aVetimp [_nPoscon][4] := _nVLRCT

           ENDIF

      ENDIF

next



IF LEN(_aVetimp) > 0

   aSort(_aVetimp,,,{|x,y| x[2] < y[2] })
   _cANTCTA  := ""
   _nVLRCT   := 0
   _cANTCTA1 := ""
   _nVLRCT1  := 0

   For _nY:= 1 to Len(_aVetimp)


           DbSelectArea("CT1")
		   DbSetOrder(1)
           If dbSeek(xFilial("CT1")+_aVetimp[_nY][2])
                _nPosCT1 	:= Recno()
                _cContaPai	:= CT1->CT1_CTASUP
                If dbSeek(xFilial("CT1")+_cContaPai)
           		      _cContaSint 	:= CT1->CT1_CONTA
           		      _cDescSint	:= &("CT1->CT1_DESC"+"01")
           		      If Empty(_cDescSint)
			                  _cDescSint := CT1->CT1_DESC01
           		      Endif
              	EndIf
                dbGoto(_nPosCT1)
           EndIf

           DbSelectArea("CT1")
		   DbSetOrder(1)
           If dbSeek(xFilial("CT1")+_cContaSint)
                _nPosCT1 	:= Recno()
                _cContaP1	:= CT1->CT1_CTASUP
                If dbSeek(xFilial("CT1")+_cContaP1)
           		      _cContaS1 	:= CT1->CT1_CONTA
           		      _cDescS1	    := &("CT1->CT1_DESC"+"01")
           		      If Empty(_cDescS1)
			                  _cDescS1 := CT1->CT1_DESC01
           		      Endif
              	EndIf
                dbGoto(_nPosCT1)
           EndIf

           IF  _cContaP1 <> _cANTCTA1

               _nVLRCT1 := 0
               _nVLRCT  := _nVLRCT + _aVetimp[_nY][4]
               aAdd(_aVetimp2,{_cContaP1,_cDescS1,0})
               _cANTCTA1  := _cContaP1

               IF  _cContaPai <> _cANTCTA
                   _nVLRCT := 0
                   _nVLRCT := _nVLRCT + _aVetimp[_nY][4]
                   aAdd(_aVetimp2,{_cContaSint,_cDescSint,_nVLRCT})
                   _cANTCTA  := _cContaPai
               ELSE
                  _nPoscon  := Ascan(_aVetimp2,{|x| x[1] == _cContaSint})
                  _nVLRCT := _aVetimp[_nY][4] + _aVetimp2 [_nPoscon][3]
                  _aVetimp2[_nPoscon][3] := _nVLRCT

               Endif

           Else
              IF  _cContaPai <> _cANTCTA

                  _nVLRCT := 0
                  _nVLRCT := _nVLRCT + _aVetimp[_nY][4]
                  aAdd(_aVetimp2,{_cContaSint,_cDescSint,_nVLRCT})
                 _cANTCTA  := _cContaPai

              ELSE
                  _nPoscon  := Ascan(_aVetimp2,{|x| x[1] == _cContaSint})
                  _nVLRCT := _aVetimp[_nY][4] + _aVetimp2 [_nPoscon][3]
                  _aVetimp2[_nPoscon][3] := _nVLRCT

              Endif

	       Endif
	           _nPoscon1  := Ascan(_aVetimp2,{|x| x[1] == _cContaS1})
               _nVLRCT1   := _aVetimp2 [_nPoscon1][3] + _aVetimp[_nY][4]
               _aVetimp2[_nPoscon1][3] := _nVLRCT1



	next

	wnrel := SetPrint(_cString,NomeProg,cPerg,@titulo,cDesc1,cDesc2,cDesc3, .T. ,aOrd, .T. ,Tamanho,, .T. )

	If nLastKey == 27
		Return
	Endif

	SetDefault(aReturn,_cString)

	If nLastKey == 27
		Return
	Endif

    RptStatus({|| RunReport(Cabec1,Cabec2,Titulo,nLin) },Titulo)

ENDIF


Return
















Static Function RunReport(Cabec1,Cabec2,Titulo,nLin)

Local _nLin    := 66
Local _nCont   := 0
Local cbtxt    := SPACE(10)
Local cbcont   := 0
Local _cCtavel := ""
local _nTotcta := 0



_cCtavel := _aVetimp[1][2]

FOR _nI:= 1 TO LEN(_aVetimp)

    If _nLin > 60
		Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho)
		_nLin := 08
    Endif

    IF _aVetimp[_nI][2] <> _cCtavel

       _nLin := _nLin+1
       PrintOut(_nLin,001,"Total Conta: "+_cCtavel,)
       PrintOut(_nLin,100,_nTotcta,"@E 99,999,999,999.99")
       _nTotcta := 0
       _nTotcta := _nTotcta + _aVetimp[_nI][4]
       _cCtavel := _aVetimp[_nI][2]
       _nLin := _nLin + 2

    ELSE
       _nTotcta := _nTotcta + _aVetimp[_nI][4]

    ENDIF

    PrintOut(_nLin,001,_aVetimp[_nI][1],)
    PrintOut(_nLin,025,_aVetimp[_nI][2],)
    PrintOut(_nLin,050,_aVetimp[_nI][3],)
    PrintOut(_nLin,100,_aVetimp[_nI][4],"@E 99,999,999,999.99")
      _nLin := _nLin+1

next
_nLin := _nLin+1
PrintOut(_nLin,001,"Total Conta: "+_cCtavel,)
PrintOut(_nLin,100,_nTotcta,"@E 99,999,999,999.99")

roda(cbcont,cbtxt,"M")

aSort(_aVetimp,,,{|x,y| x[1] < y[1] })

_nLin :=80
Cabec1      := "Conta Contabil           Descricao                                            Custo                Despesa"

FOR _nI:= 1 TO LEN(_aVetimp2)

    If _nLin > 60
		Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho)
		_nLin := 08
    Endif
    IF len(alltrim(_aVetimp2[_nI][1])) == 3
      _nLin := _nLin+1
    Endif

    PrintOut(_nLin,001,_aVetimp2[_nI][1],)
    PrintOut(_nLin,025,_aVetimp2[_nI][2],)
    IF substr(_aVetimp2[_nI][1],1,3) == "301"
        PrintOut(_nLin,70,_aVetimp2[_nI][3],"@E 99,999,999,999.99")
    Else
        PrintOut(_nLin,100,_aVetimp2[_nI][3],"@E 99,999,999,999.99")
    Endif
    _nLin := _nLin+1
    IF len(alltrim(_aVetimp2[_nI][1])) == 3
      _nLin := _nLin+1
    Endif

next


roda(cbcont,cbtxt,"M")




Set( 20, "SCREEN" )





If aReturn[5]==1
	dbCommitAll()
	Set( 24, "" )
	OurSpool(wnrel)
Endif

MS_FLUSH()

Return()